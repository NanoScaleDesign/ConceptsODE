%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, August 6, 2010 2:48:42 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
0 0 1.00000 RG
3.00000 -1.00000 380.490 354.000 rc
newpath
4.00000 350.482 m
12.2282 348.928 l
19.3875 347.562 l
27.4389 346.007 l
35.5437 344.419 l
43.6100 342.813 l
51.0885 341.298 l
58.8320 339.700 l
66.8403 338.012 l
74.8230 336.290 l
83.0342 334.473 l
90.2666 332.829 l
98.4085 330.926 l
106.584 328.952 l
114.462 326.984 l
121.616 325.134 l
130.124 322.850 l
137.331 320.835 l
145.714 318.388 l
153.134 316.120 l
161.276 313.509 l
169.029 310.891 l
177.118 308.004 l
184.546 305.200 l
192.559 301.989 l
200.881 298.425 l
208.126 295.109 l
215.951 291.278 l
224.035 287.012 l
231.943 282.495 l
239.595 277.760 l
248.091 272.022 l
255.725 266.376 l
263.876 259.762 l
271.262 253.175 l
279.336 245.234 l
286.934 236.959 l
294.876 227.357 l
302.640 216.894 l
310.769 204.633 l
318.598 191.376 l
326.604 176.133 l
334.544 159.085 l
341.840 141.485 l
350.202 118.706 l
357.682 95.6432 l
365.656 67.8543 l
369.472 53.2555 l
373.288 37.7392 l
377.389 19.9736 l
381.490 1.00000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
3.00000 -1.00000 380.490 354.000 rc
newpath
4.00000 352.000 m
153.134 318.936 l
161.276 316.696 l
224.035 298.434 l
231.943 295.917 l
302.640 264.718 l
310.769 259.465 l
381.490 203.665 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
351.291 355.000 m
351.291 357.600 l
S
newpath
290.893 355.000 m
290.893 357.600 l
S
newpath
230.494 355.000 m
230.494 357.600 l
S
newpath
170.096 355.000 m
170.096 357.600 l
S
newpath
109.697 355.000 m
109.697 357.600 l
S
newpath
49.2989 355.000 m
49.2989 357.600 l
S
newpath
4.00000 355.000 m
381.490 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
185 375 14 15 rc
newpath
191.250 381.250 m
191.458 381.468 191.614 381.692 191.718 381.921  c
191.802 382.067 191.927 382.463 192.093 383.109  c
192.656 382.281 l
192.802 382.072 192.981 381.877 193.195 381.695  c
193.408 381.513 193.593 381.385 193.750 381.312  c
193.854 381.270 193.968 381.250 194.093 381.250  c
194.270 381.250 194.414 381.299 194.523 381.398  c
194.632 381.497 194.687 381.614 194.687 381.750  c
194.687 381.916 194.656 382.031 194.593 382.093  c
194.479 382.197 194.343 382.250 194.187 382.250  c
194.093 382.250 194.000 382.229 193.906 382.187  c
193.708 382.125 193.572 382.093 193.500 382.093  c
193.395 382.093 193.276 382.151 193.140 382.265  c
192.880 382.484 192.567 382.911 192.203 383.546  c
192.718 385.718 l
192.802 386.052 192.869 386.252 192.921 386.320  c
192.974 386.388 193.031 386.421 193.093 386.421  c
193.177 386.421 193.281 386.375 193.406 386.281  c
193.635 386.083 193.833 385.828 194.000 385.515  c
194.218 385.625 l
193.947 386.125 193.609 386.541 193.203 386.875  c
192.974 387.062 192.776 387.156 192.609 387.156  c
192.369 387.156 192.182 387.020 192.046 386.750  c
191.953 386.583 191.770 385.875 191.500 384.625  c
190.833 385.770 190.302 386.505 189.906 386.828  c
189.645 387.046 189.395 387.156 189.156 387.156  c
188.989 387.156 188.833 387.093 188.687 386.968  c
188.593 386.875 188.546 386.750 188.546 386.593  c
188.546 386.458 188.593 386.343 188.687 386.250  c
188.781 386.156 188.895 386.109 189.031 386.109  c
189.166 386.109 189.307 386.177 189.453 386.312  c
189.567 386.406 189.656 386.453 189.718 386.453  c
189.760 386.453 189.822 386.421 189.906 386.359  c
190.104 386.192 190.375 385.843 190.718 385.312  c
191.062 384.781 191.286 384.395 191.390 384.156  c
191.130 383.125 190.989 382.583 190.968 382.531  c
190.875 382.250 190.750 382.052 190.593 381.937  c
190.437 381.822 190.203 381.765 189.890 381.765  c
189.796 381.765 189.687 381.770 189.562 381.781  c
189.562 381.546 l
191.250 381.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
19.0996 355.000 m
19.0996 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
12 365 7 13 rc
newpath
22.7968 372.437 m
14.2031 372.437 l
14.2031 371.765 l
22.7968 371.765 l
22.7968 372.437 l
h
f
Q
newpath
21.4687 371.750 m
21.4687 370.770 21.6171 369.924 21.9140 369.210  c
22.2109 368.497 22.6041 367.968 23.0937 367.625  c
23.4791 367.354 23.8750 367.218 24.2812 367.218  c
24.9375 367.218 25.5260 367.552 26.0468 368.218  c
26.7031 369.052 27.0312 370.182 27.0312 371.609  c
27.0312 372.609 26.8880 373.458 26.6015 374.156  c
26.3151 374.854 25.9479 375.362 25.5000 375.679  c
25.0520 375.997 24.6250 376.156 24.2187 376.156  c
23.3958 376.156 22.7083 375.671 22.1562 374.703  c
21.6979 373.880 21.4687 372.895 21.4687 371.750  c
h
22.7187 371.906 m
22.7187 373.093 22.8645 374.062 23.1562 374.812  c
23.3958 375.437 23.7552 375.750 24.2343 375.750  c
24.4635 375.750 24.7005 375.648 24.9453 375.445  c
25.1901 375.242 25.3750 374.895 25.5000 374.406  c
25.6979 373.687 25.7968 372.661 25.7968 371.328  c
25.7968 370.349 25.6927 369.531 25.4843 368.875  c
25.3385 368.385 25.1406 368.041 24.8906 367.843  c
24.7239 367.708 24.5156 367.640 24.2656 367.640  c
23.9843 367.640 23.7291 367.765 23.5000 368.015  c
23.1979 368.369 22.9921 368.924 22.8828 369.679  c
22.7734 370.434 22.7187 371.177 22.7187 371.906  c
h
29.1250 374.765 m
29.3229 374.765 29.4895 374.835 29.6250 374.976  c
29.7604 375.117 29.8281 375.281 29.8281 375.468  c
29.8281 375.666 29.7604 375.833 29.6250 375.968  c
29.4895 376.104 29.3229 376.171 29.1250 376.171  c
28.9270 376.171 28.7604 376.104 28.6250 375.968  c
28.4895 375.833 28.4218 375.666 28.4218 375.468  c
28.4218 375.270 28.4895 375.104 28.6250 374.968  c
28.7604 374.833 28.9270 374.765 29.1250 374.765  c
h
36.7031 374.343 m
36.1093 376.000 l
31.0312 376.000 l
31.0312 375.765 l
32.5208 374.401 33.5703 373.286 34.1796 372.421  c
34.7890 371.557 35.0937 370.770 35.0937 370.062  c
35.0937 369.510 34.9270 369.059 34.5937 368.710  c
34.2604 368.362 33.8593 368.187 33.3906 368.187  c
32.9739 368.187 32.5963 368.309 32.2578 368.554  c
31.9192 368.799 31.6718 369.161 31.5156 369.640  c
31.2812 369.640 l
31.3854 368.859 31.6562 368.260 32.0937 367.843  c
32.5312 367.427 33.0781 367.218 33.7343 367.218  c
34.4322 367.218 35.0156 367.442 35.4843 367.890  c
35.9531 368.338 36.1875 368.864 36.1875 369.468  c
36.1875 369.906 36.0833 370.343 35.8750 370.781  c
35.5625 371.468 35.0572 372.192 34.3593 372.953  c
33.3072 374.109 32.6458 374.807 32.3750 375.046  c
34.6250 375.046 l
35.0833 375.046 35.4036 375.028 35.5859 374.992  c
35.7682 374.955 35.9349 374.885 36.0859 374.781  c
36.2369 374.677 36.3645 374.531 36.4687 374.343  c
36.7031 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
79.4981 355.000 m
79.4981 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
81.4687 371.750 m
81.4687 370.770 81.6171 369.924 81.9140 369.210  c
82.2109 368.497 82.6041 367.968 83.0937 367.625  c
83.4791 367.354 83.8750 367.218 84.2812 367.218  c
84.9375 367.218 85.5260 367.552 86.0468 368.218  c
86.7031 369.052 87.0312 370.182 87.0312 371.609  c
87.0312 372.609 86.8880 373.458 86.6015 374.156  c
86.3151 374.854 85.9479 375.362 85.5000 375.679  c
85.0520 375.997 84.6250 376.156 84.2187 376.156  c
83.3958 376.156 82.7083 375.671 82.1562 374.703  c
81.6979 373.880 81.4687 372.895 81.4687 371.750  c
h
82.7187 371.906 m
82.7187 373.093 82.8645 374.062 83.1562 374.812  c
83.3958 375.437 83.7552 375.750 84.2343 375.750  c
84.4635 375.750 84.7005 375.648 84.9453 375.445  c
85.1901 375.242 85.3750 374.895 85.5000 374.406  c
85.6979 373.687 85.7968 372.661 85.7968 371.328  c
85.7968 370.349 85.6927 369.531 85.4843 368.875  c
85.3385 368.385 85.1406 368.041 84.8906 367.843  c
84.7239 367.708 84.5156 367.640 84.2656 367.640  c
83.9843 367.640 83.7291 367.765 83.5000 368.015  c
83.1979 368.369 82.9921 368.924 82.8828 369.679  c
82.7734 370.434 82.7187 371.177 82.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
139.896 355.000 m
139.896 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
137.468 371.750 m
137.468 370.770 137.617 369.924 137.914 369.210  c
138.210 368.497 138.604 367.968 139.093 367.625  c
139.479 367.354 139.875 367.218 140.281 367.218  c
140.937 367.218 141.526 367.552 142.046 368.218  c
142.703 369.052 143.031 370.182 143.031 371.609  c
143.031 372.609 142.888 373.458 142.601 374.156  c
142.315 374.854 141.947 375.362 141.500 375.679  c
141.052 375.997 140.625 376.156 140.218 376.156  c
139.395 376.156 138.708 375.671 138.156 374.703  c
137.697 373.880 137.468 372.895 137.468 371.750  c
h
138.718 371.906 m
138.718 373.093 138.864 374.062 139.156 374.812  c
139.395 375.437 139.755 375.750 140.234 375.750  c
140.463 375.750 140.700 375.648 140.945 375.445  c
141.190 375.242 141.375 374.895 141.500 374.406  c
141.697 373.687 141.796 372.661 141.796 371.328  c
141.796 370.349 141.692 369.531 141.484 368.875  c
141.338 368.385 141.140 368.041 140.890 367.843  c
140.724 367.708 140.515 367.640 140.265 367.640  c
139.984 367.640 139.729 367.765 139.500 368.015  c
139.197 368.369 138.992 368.924 138.882 369.679  c
138.773 370.434 138.718 371.177 138.718 371.906  c
h
145.125 374.765 m
145.322 374.765 145.489 374.835 145.625 374.976  c
145.760 375.117 145.828 375.281 145.828 375.468  c
145.828 375.666 145.760 375.833 145.625 375.968  c
145.489 376.104 145.322 376.171 145.125 376.171  c
144.927 376.171 144.760 376.104 144.625 375.968  c
144.489 375.833 144.421 375.666 144.421 375.468  c
144.421 375.270 144.489 375.104 144.625 374.968  c
144.760 374.833 144.927 374.765 145.125 374.765  c
h
152.703 374.343 m
152.109 376.000 l
147.031 376.000 l
147.031 375.765 l
148.520 374.401 149.570 373.286 150.179 372.421  c
150.789 371.557 151.093 370.770 151.093 370.062  c
151.093 369.510 150.927 369.059 150.593 368.710  c
150.260 368.362 149.859 368.187 149.390 368.187  c
148.974 368.187 148.596 368.309 148.257 368.554  c
147.919 368.799 147.671 369.161 147.515 369.640  c
147.281 369.640 l
147.385 368.859 147.656 368.260 148.093 367.843  c
148.531 367.427 149.078 367.218 149.734 367.218  c
150.432 367.218 151.015 367.442 151.484 367.890  c
151.953 368.338 152.187 368.864 152.187 369.468  c
152.187 369.906 152.083 370.343 151.875 370.781  c
151.562 371.468 151.057 372.192 150.359 372.953  c
149.307 374.109 148.645 374.807 148.375 375.046  c
150.625 375.046 l
151.083 375.046 151.403 375.028 151.585 374.992  c
151.768 374.955 151.934 374.885 152.085 374.781  c
152.237 374.677 152.364 374.531 152.468 374.343  c
152.703 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
200.295 355.000 m
200.295 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
198.468 371.750 m
198.468 370.770 198.617 369.924 198.914 369.210  c
199.210 368.497 199.604 367.968 200.093 367.625  c
200.479 367.354 200.875 367.218 201.281 367.218  c
201.937 367.218 202.526 367.552 203.046 368.218  c
203.703 369.052 204.031 370.182 204.031 371.609  c
204.031 372.609 203.888 373.458 203.601 374.156  c
203.315 374.854 202.947 375.362 202.500 375.679  c
202.052 375.997 201.625 376.156 201.218 376.156  c
200.395 376.156 199.708 375.671 199.156 374.703  c
198.697 373.880 198.468 372.895 198.468 371.750  c
h
199.718 371.906 m
199.718 373.093 199.864 374.062 200.156 374.812  c
200.395 375.437 200.755 375.750 201.234 375.750  c
201.463 375.750 201.700 375.648 201.945 375.445  c
202.190 375.242 202.375 374.895 202.500 374.406  c
202.697 373.687 202.796 372.661 202.796 371.328  c
202.796 370.349 202.692 369.531 202.484 368.875  c
202.338 368.385 202.140 368.041 201.890 367.843  c
201.724 367.708 201.515 367.640 201.265 367.640  c
200.984 367.640 200.729 367.765 200.500 368.015  c
200.197 368.369 199.992 368.924 199.882 369.679  c
199.773 370.434 199.718 371.177 199.718 371.906  c
h
206.125 374.765 m
206.322 374.765 206.489 374.835 206.625 374.976  c
206.760 375.117 206.828 375.281 206.828 375.468  c
206.828 375.666 206.760 375.833 206.625 375.968  c
206.489 376.104 206.322 376.171 206.125 376.171  c
205.927 376.171 205.760 376.104 205.625 375.968  c
205.489 375.833 205.421 375.666 205.421 375.468  c
205.421 375.270 205.489 375.104 205.625 374.968  c
205.760 374.833 205.927 374.765 206.125 374.765  c
h
213.796 372.828 m
213.796 373.734 l
212.640 373.734 l
212.640 376.000 l
211.593 376.000 l
211.593 373.734 l
207.953 373.734 l
207.953 372.921 l
211.953 367.218 l
212.640 367.218 l
212.640 372.828 l
213.796 372.828 l
h
211.593 372.828 m
211.593 368.546 l
208.578 372.828 l
211.593 372.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
260.693 355.000 m
260.693 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
258.468 371.750 m
258.468 370.770 258.617 369.924 258.914 369.210  c
259.210 368.497 259.604 367.968 260.093 367.625  c
260.479 367.354 260.875 367.218 261.281 367.218  c
261.937 367.218 262.526 367.552 263.046 368.218  c
263.703 369.052 264.031 370.182 264.031 371.609  c
264.031 372.609 263.888 373.458 263.601 374.156  c
263.315 374.854 262.947 375.362 262.500 375.679  c
262.052 375.997 261.625 376.156 261.218 376.156  c
260.395 376.156 259.708 375.671 259.156 374.703  c
258.697 373.880 258.468 372.895 258.468 371.750  c
h
259.718 371.906 m
259.718 373.093 259.864 374.062 260.156 374.812  c
260.395 375.437 260.755 375.750 261.234 375.750  c
261.463 375.750 261.700 375.648 261.945 375.445  c
262.190 375.242 262.375 374.895 262.500 374.406  c
262.697 373.687 262.796 372.661 262.796 371.328  c
262.796 370.349 262.692 369.531 262.484 368.875  c
262.338 368.385 262.140 368.041 261.890 367.843  c
261.724 367.708 261.515 367.640 261.265 367.640  c
260.984 367.640 260.729 367.765 260.500 368.015  c
260.197 368.369 259.992 368.924 259.882 369.679  c
259.773 370.434 259.718 371.177 259.718 371.906  c
h
266.125 374.765 m
266.322 374.765 266.489 374.835 266.625 374.976  c
266.760 375.117 266.828 375.281 266.828 375.468  c
266.828 375.666 266.760 375.833 266.625 375.968  c
266.489 376.104 266.322 376.171 266.125 376.171  c
265.927 376.171 265.760 376.104 265.625 375.968  c
265.489 375.833 265.421 375.666 265.421 375.468  c
265.421 375.270 265.489 375.104 265.625 374.968  c
265.760 374.833 265.927 374.765 266.125 374.765  c
h
273.578 367.218 m
273.578 367.453 l
273.015 367.505 272.557 367.614 272.203 367.781  c
271.849 367.947 271.500 368.203 271.156 368.546  c
270.812 368.890 270.528 369.273 270.304 369.695  c
270.080 370.117 269.890 370.614 269.734 371.187  c
270.349 370.770 270.963 370.562 271.578 370.562  c
272.161 370.562 272.669 370.799 273.101 371.273  c
273.533 371.747 273.750 372.359 273.750 373.109  c
273.750 373.828 273.531 374.484 273.093 375.078  c
272.572 375.796 271.880 376.156 271.015 376.156  c
270.421 376.156 269.921 375.958 269.515 375.562  c
268.713 374.812 268.312 373.833 268.312 372.625  c
268.312 371.854 268.466 371.122 268.773 370.429  c
269.080 369.737 269.520 369.119 270.093 368.578  c
270.666 368.036 271.216 367.674 271.742 367.492  c
272.268 367.309 272.755 367.218 273.203 367.218  c
273.578 367.218 l
h
269.625 371.656 m
269.552 372.229 269.515 372.692 269.515 373.046  c
269.515 373.453 269.591 373.893 269.742 374.367  c
269.893 374.841 270.114 375.218 270.406 375.500  c
270.625 375.697 270.890 375.796 271.203 375.796  c
271.567 375.796 271.895 375.622 272.187 375.273  c
272.479 374.924 272.625 374.432 272.625 373.796  c
272.625 373.067 272.479 372.440 272.187 371.914  c
271.895 371.388 271.489 371.125 270.968 371.125  c
270.802 371.125 270.627 371.158 270.445 371.226  c
270.263 371.294 269.989 371.437 269.625 371.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
321.092 355.000 m
321.092 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
319.468 371.750 m
319.468 370.770 319.617 369.924 319.914 369.210  c
320.210 368.497 320.604 367.968 321.093 367.625  c
321.479 367.354 321.875 367.218 322.281 367.218  c
322.937 367.218 323.526 367.552 324.046 368.218  c
324.703 369.052 325.031 370.182 325.031 371.609  c
325.031 372.609 324.888 373.458 324.601 374.156  c
324.315 374.854 323.947 375.362 323.500 375.679  c
323.052 375.997 322.625 376.156 322.218 376.156  c
321.395 376.156 320.708 375.671 320.156 374.703  c
319.697 373.880 319.468 372.895 319.468 371.750  c
h
320.718 371.906 m
320.718 373.093 320.864 374.062 321.156 374.812  c
321.395 375.437 321.755 375.750 322.234 375.750  c
322.463 375.750 322.700 375.648 322.945 375.445  c
323.190 375.242 323.375 374.895 323.500 374.406  c
323.697 373.687 323.796 372.661 323.796 371.328  c
323.796 370.349 323.692 369.531 323.484 368.875  c
323.338 368.385 323.140 368.041 322.890 367.843  c
322.724 367.708 322.515 367.640 322.265 367.640  c
321.984 367.640 321.729 367.765 321.500 368.015  c
321.197 368.369 320.992 368.924 320.882 369.679  c
320.773 370.434 320.718 371.177 320.718 371.906  c
h
327.125 374.765 m
327.322 374.765 327.489 374.835 327.625 374.976  c
327.760 375.117 327.828 375.281 327.828 375.468  c
327.828 375.666 327.760 375.833 327.625 375.968  c
327.489 376.104 327.322 376.171 327.125 376.171  c
326.927 376.171 326.760 376.104 326.625 375.968  c
326.489 375.833 326.421 375.666 326.421 375.468  c
326.421 375.270 326.489 375.104 326.625 374.968  c
326.760 374.833 326.927 374.765 327.125 374.765  c
h
331.250 371.671 m
330.562 371.109 330.119 370.658 329.921 370.320  c
329.724 369.981 329.625 369.630 329.625 369.265  c
329.625 368.703 329.841 368.221 330.273 367.820  c
330.705 367.419 331.281 367.218 332.000 367.218  c
332.697 367.218 333.257 367.406 333.679 367.781  c
334.101 368.156 334.312 368.583 334.312 369.062  c
334.312 369.385 334.197 369.713 333.968 370.046  c
333.739 370.380 333.265 370.776 332.546 371.234  c
333.286 371.807 333.776 372.260 334.015 372.593  c
334.338 373.020 334.500 373.474 334.500 373.953  c
334.500 374.557 334.270 375.075 333.812 375.507  c
333.354 375.940 332.750 376.156 332.000 376.156  c
331.177 376.156 330.536 375.901 330.078 375.390  c
329.713 374.974 329.531 374.520 329.531 374.031  c
329.531 373.656 329.661 373.281 329.921 372.906  c
330.182 372.531 330.625 372.119 331.250 371.671  c
h
332.234 370.984 m
332.744 370.526 333.067 370.164 333.203 369.898  c
333.338 369.632 333.406 369.333 333.406 369.000  c
333.406 368.562 333.281 368.216 333.031 367.960  c
332.781 367.705 332.442 367.578 332.015 367.578  c
331.578 367.578 331.224 367.703 330.953 367.953  c
330.682 368.203 330.546 368.494 330.546 368.828  c
330.546 369.046 330.604 369.268 330.718 369.492  c
330.833 369.716 330.994 369.927 331.203 370.125  c
332.234 370.984 l
h
331.546 371.906 m
331.192 372.197 330.932 372.518 330.765 372.867  c
330.599 373.216 330.515 373.593 330.515 374.000  c
330.515 374.552 330.664 374.992 330.960 375.320  c
331.257 375.648 331.635 375.812 332.093 375.812  c
332.552 375.812 332.919 375.682 333.195 375.421  c
333.471 375.161 333.609 374.849 333.609 374.484  c
333.609 374.182 333.526 373.906 333.359 373.656  c
333.067 373.208 332.463 372.625 331.546 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
381.490 355.000 m
381.490 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.531 368.234 m
382.625 367.218 l
382.828 367.218 l
382.828 374.484 l
382.828 374.963 382.849 375.263 382.890 375.382  c
382.932 375.502 383.015 375.593 383.140 375.656  c
383.265 375.718 383.520 375.755 383.906 375.765  c
383.906 376.000 l
380.671 376.000 l
380.671 375.765 l
381.078 375.755 381.341 375.718 381.460 375.656  c
381.580 375.593 381.664 375.510 381.710 375.406  c
381.757 375.302 381.781 374.994 381.781 374.484  c
381.781 369.843 l
381.781 369.208 381.760 368.802 381.718 368.625  c
381.687 368.489 381.632 368.390 381.554 368.328  c
381.476 368.265 381.380 368.234 381.265 368.234  c
381.109 368.234 380.895 368.302 380.625 368.437  c
380.531 368.234 l
h
387.125 374.765 m
387.322 374.765 387.489 374.835 387.625 374.976  c
387.760 375.117 387.828 375.281 387.828 375.468  c
387.828 375.666 387.760 375.833 387.625 375.968  c
387.489 376.104 387.322 376.171 387.125 376.171  c
386.927 376.171 386.760 376.104 386.625 375.968  c
386.489 375.833 386.421 375.666 386.421 375.468  c
386.421 375.270 386.489 375.104 386.625 374.968  c
386.760 374.833 386.927 374.765 387.125 374.765  c
h
389.218 371.750 m
389.218 370.770 389.367 369.924 389.664 369.210  c
389.960 368.497 390.354 367.968 390.843 367.625  c
391.229 367.354 391.625 367.218 392.031 367.218  c
392.687 367.218 393.276 367.552 393.796 368.218  c
394.453 369.052 394.781 370.182 394.781 371.609  c
394.781 372.609 394.638 373.458 394.351 374.156  c
394.065 374.854 393.697 375.362 393.250 375.679  c
392.802 375.997 392.375 376.156 391.968 376.156  c
391.145 376.156 390.458 375.671 389.906 374.703  c
389.447 373.880 389.218 372.895 389.218 371.750  c
h
390.468 371.906 m
390.468 373.093 390.614 374.062 390.906 374.812  c
391.145 375.437 391.505 375.750 391.984 375.750  c
392.213 375.750 392.450 375.648 392.695 375.445  c
392.940 375.242 393.125 374.895 393.250 374.406  c
393.447 373.687 393.546 372.661 393.546 371.328  c
393.546 370.349 393.442 369.531 393.234 368.875  c
393.088 368.385 392.890 368.041 392.640 367.843  c
392.474 367.708 392.265 367.640 392.015 367.640  c
391.734 367.640 391.479 367.765 391.250 368.015  c
390.947 368.369 390.742 368.924 390.632 369.679  c
390.523 370.434 390.468 371.177 390.468 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
79.4981 33.9765 m
76.8981 33.9765 l
S
newpath
79.4981 100.928 m
76.8981 100.928 l
S
newpath
79.4981 167.881 m
76.8981 167.881 l
S
newpath
79.4981 234.833 m
76.8981 234.833 l
S
newpath
79.4981 301.785 m
76.8981 301.785 l
S
newpath
79.4981 355.000 m
79.4981 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
51 194 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
79.4981 335.261 m
74.2981 335.261 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
70.5312 337.234 m
72.6250 336.218 l
72.8281 336.218 l
72.8281 343.484 l
72.8281 343.963 72.8489 344.263 72.8906 344.382  c
72.9322 344.502 73.0156 344.593 73.1406 344.656  c
73.2656 344.718 73.5208 344.755 73.9062 344.765  c
73.9062 345.000 l
70.6718 345.000 l
70.6718 344.765 l
71.0781 344.755 71.3411 344.718 71.4609 344.656  c
71.5807 344.593 71.6640 344.510 71.7109 344.406  c
71.7578 344.302 71.7812 343.994 71.7812 343.484  c
71.7812 338.843 l
71.7812 338.208 71.7604 337.802 71.7187 337.625  c
71.6875 337.489 71.6328 337.390 71.5546 337.328  c
71.4765 337.265 71.3802 337.234 71.2656 337.234  c
71.1093 337.234 70.8958 337.302 70.6250 337.437  c
70.5312 337.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
79.4981 268.309 m
74.2981 268.309 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
74.9531 276.343 m
74.3593 278.000 l
69.2812 278.000 l
69.2812 277.765 l
70.7708 276.401 71.8203 275.286 72.4296 274.421  c
73.0390 273.557 73.3437 272.770 73.3437 272.062  c
73.3437 271.510 73.1770 271.059 72.8437 270.710  c
72.5104 270.362 72.1093 270.187 71.6406 270.187  c
71.2239 270.187 70.8463 270.309 70.5078 270.554  c
70.1692 270.799 69.9218 271.161 69.7656 271.640  c
69.5312 271.640 l
69.6354 270.859 69.9062 270.260 70.3437 269.843  c
70.7812 269.427 71.3281 269.218 71.9843 269.218  c
72.6822 269.218 73.2656 269.442 73.7343 269.890  c
74.2031 270.338 74.4375 270.864 74.4375 271.468  c
74.4375 271.906 74.3333 272.343 74.1250 272.781  c
73.8125 273.468 73.3072 274.192 72.6093 274.953  c
71.5572 276.109 70.8958 276.807 70.6250 277.046  c
72.8750 277.046 l
73.3333 277.046 73.6536 277.028 73.8359 276.992  c
74.0182 276.955 74.1849 276.885 74.3359 276.781  c
74.4869 276.677 74.6145 276.531 74.7187 276.343  c
74.9531 276.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
79.4981 201.357 m
74.2981 201.357 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
69.6562 204.031 m
69.9062 203.447 70.2187 203.000 70.5937 202.687  c
70.9687 202.375 71.4322 202.218 71.9843 202.218  c
72.6822 202.218 73.2135 202.442 73.5781 202.890  c
73.8593 203.224 74.0000 203.578 74.0000 203.953  c
74.0000 204.588 73.6041 205.239 72.8125 205.906  c
73.3437 206.114 73.7447 206.411 74.0156 206.796  c
74.2864 207.182 74.4218 207.635 74.4218 208.156  c
74.4218 208.895 74.1822 209.536 73.7031 210.078  c
73.0885 210.796 72.1979 211.156 71.0312 211.156  c
70.4479 211.156 70.0520 211.083 69.8437 210.937  c
69.6354 210.791 69.5312 210.635 69.5312 210.468  c
69.5312 210.343 69.5807 210.237 69.6796 210.148  c
69.7786 210.059 69.8958 210.015 70.0312 210.015  c
70.1354 210.015 70.2447 210.031 70.3593 210.062  c
70.4322 210.083 70.5963 210.158 70.8515 210.289  c
71.1067 210.419 71.2812 210.500 71.3750 210.531  c
71.5312 210.572 71.6979 210.593 71.8750 210.593  c
72.3020 210.593 72.6770 210.427 73.0000 210.093  c
73.3229 209.760 73.4843 209.364 73.4843 208.906  c
73.4843 208.572 73.4114 208.250 73.2656 207.937  c
73.1510 207.697 73.0260 207.515 72.8906 207.390  c
72.7135 207.224 72.4661 207.072 72.1484 206.937  c
71.8307 206.802 71.5052 206.734 71.1718 206.734  c
70.9687 206.734 l
70.9687 206.531 l
71.3020 206.489 71.6380 206.369 71.9765 206.171  c
72.3151 205.974 72.5599 205.737 72.7109 205.460  c
72.8619 205.184 72.9375 204.875 72.9375 204.531  c
72.9375 204.104 72.8020 203.755 72.5312 203.484  c
72.2604 203.213 71.9218 203.078 71.5156 203.078  c
70.8593 203.078 70.3125 203.427 69.8750 204.125  c
69.6562 204.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
79.4981 134.405 m
74.2981 134.405 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
75.0468 140.828 m
75.0468 141.734 l
73.8906 141.734 l
73.8906 144.000 l
72.8437 144.000 l
72.8437 141.734 l
69.2031 141.734 l
69.2031 140.921 l
73.2031 135.218 l
73.8906 135.218 l
73.8906 140.828 l
75.0468 140.828 l
h
72.8437 140.828 m
72.8437 136.546 l
69.8281 140.828 l
72.8437 140.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
79.4981 67.4526 m
74.2981 67.4526 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
74.6406 68.3906 m
74.1406 69.4687 l
71.5625 69.4687 l
71.0000 70.6250 l
72.1145 70.7916 73.0000 71.2083 73.6562 71.8750  c
74.2187 72.4479 74.5000 73.1250 74.5000 73.9062  c
74.5000 74.3645 74.4088 74.7864 74.2265 75.1718  c
74.0442 75.5572 73.8125 75.8854 73.5312 76.1562  c
73.2500 76.4270 72.9375 76.6406 72.5937 76.7968  c
72.1145 77.0364 71.6145 77.1562 71.0937 77.1562  c
70.5833 77.1562 70.2109 77.0677 69.9765 76.8906  c
69.7421 76.7135 69.6250 76.5208 69.6250 76.3125  c
69.6250 76.1875 69.6744 76.0807 69.7734 75.9921  c
69.8724 75.9036 69.9947 75.8593 70.1406 75.8593  c
70.2447 75.8593 70.3385 75.8750 70.4218 75.9062  c
70.5052 75.9375 70.6458 76.0260 70.8437 76.1718  c
71.1666 76.3906 71.4895 76.5000 71.8125 76.5000  c
72.3125 76.5000 72.7474 76.3125 73.1171 75.9375  c
73.4869 75.5625 73.6718 75.1041 73.6718 74.5625  c
73.6718 74.0416 73.5052 73.5572 73.1718 73.1093  c
72.8385 72.6614 72.3802 72.3125 71.7968 72.0625  c
71.3281 71.8750 70.6979 71.7656 69.9062 71.7343  c
71.5625 68.3906 l
74.6406 68.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

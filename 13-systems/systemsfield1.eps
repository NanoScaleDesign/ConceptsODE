%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, July 15, 2011 3:29:23 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
0.0275688 -1.00000 390.972 392.000 rc
1.00000 0.0980392 0.0980392 RG
newpath
370.571 10.7249 m
388.030 10.7249 l
382.504 8.53689 l
S
newpath
370.573 30.3716 m
388.027 29.9783 l
382.454 27.9152 l
S
newpath
351.172 30.1749 m
368.631 30.1749 l
363.105 27.9868 l
S
newpath
351.174 10.5326 m
368.629 10.9173 l
363.152 8.60797 l
S
newpath
370.597 69.7549 m
388.003 68.3950 l
382.325 66.6439 l
S
newpath
370.626 89.5050 m
387.975 87.5449 l
382.239 85.9910 l
S
newpath
351.207 89.3056 m
368.596 87.7443 l
362.898 86.0590 l
S
newpath
351.185 69.5538 m
368.618 68.5961 l
362.981 66.7144 l
S
newpath
293.021 9.84317 m
310.391 11.6068 l
305.113 8.87161 l
S
newpath
293.006 29.4580 m
310.406 30.8919 l
305.077 28.2573 l
S
newpath
312.387 29.7209 m
329.822 30.6290 l
324.417 28.1564 l
S
newpath
312.398 10.0939 m
329.811 11.3560 l
324.457 8.77417 l
S
newpath
292.981 68.7881 m
310.430 69.3618 l
304.979 66.9932 l
S
newpath
292.976 88.5250 m
310.435 88.5250 l
304.909 86.3368 l
S
newpath
312.380 88.8215 m
329.829 88.2284 l
324.232 86.2293 l
S
newpath
312.375 69.0750 m
329.834 69.0750 l
324.308 66.8868 l
S
newpath
292.992 49.1033 m
310.420 50.1466 l
305.034 47.6322 l
S
newpath
312.378 49.3785 m
329.830 49.8714 l
324.368 47.5281 l
S
newpath
331.791 89.0795 m
349.215 87.9704 l
343.562 86.1377 l
S
newpath
331.777 69.3285 m
349.229 68.8214 l
343.642 66.7947 l
S
newpath
331.774 49.6250 m
349.232 49.6250 l
343.707 47.4368 l
S
newpath
331.776 29.9589 m
349.230 30.3910 l
343.759 28.0668 l
S
newpath
331.783 10.3230 m
349.223 11.1269 l
343.803 8.68670 l
S
newpath
351.175 49.8465 m
368.628 49.4034 l
363.049 47.3562 l
S
newpath
370.581 50.0463 m
388.019 49.2036 l
382.395 47.2847 l
S
newpath
370.672 109.305 m
387.928 106.644 l
382.135 105.323 l
S
newpath
370.746 129.169 m
387.854 125.680 l
382.005 124.640 l
S
newpath
351.313 128.990 m
368.490 125.859 l
362.663 124.697 l
S
newpath
351.246 109.113 m
368.557 106.836 l
362.794 105.387 l
S
newpath
371.037 169.145 m
387.564 163.504 l
381.630 163.218 l
S
newpath
371.307 189.293 m
387.293 182.256 l
381.356 182.480 l
S
newpath
351.889 189.249 m
367.914 182.301 l
361.976 182.491 l
S
newpath
351.601 169.034 m
368.202 163.615 l
362.272 163.250 l
S
newpath
292.984 108.331 m
310.428 107.618 l
304.818 105.657 l
S
newpath
293.014 128.235 m
310.398 126.614 l
304.693 124.948 l
S
newpath
312.445 128.533 m
329.763 126.316 l
324.006 124.847 l
S
newpath
312.400 108.633 m
329.809 107.316 l
324.135 105.551 l
S
newpath
293.253 168.512 m
310.158 164.137 l
304.262 163.403 l
S
newpath
293.601 189.025 m
309.811 182.524 l
303.870 182.550 l
S
newpath
313.038 189.121 m
329.170 182.428 l
323.230 182.525 l
S
newpath
312.711 168.729 m
329.498 163.920 l
323.585 163.338 l
S
newpath
293.089 148.276 m
310.323 145.474 l
304.519 144.200 l
S
newpath
312.537 148.551 m
329.672 145.198 l
323.831 144.112 l
S
newpath
332.467 189.193 m
348.539 182.356 l
342.600 182.506 l
S
newpath
332.160 168.899 m
348.846 163.751 l
342.923 163.289 l
S
newpath
331.981 148.773 m
349.024 144.976 l
343.157 144.042 l
S
newpath
331.879 128.781 m
349.127 126.068 l
343.330 124.765 l
S
newpath
331.822 108.891 m
349.184 107.058 l
343.461 105.462 l
S
newpath
351.423 148.956 m
368.380 144.793 l
362.494 143.985 l
S
newpath
370.860 149.110 m
387.740 144.639 l
381.840 143.939 l
S
newpath
273.654 9.56823 m
290.960 11.8817 l
285.771 8.98059 l
S
newpath
273.636 29.1669 m
290.978 31.1830 l
285.741 28.3713 l
S
newpath
254.281 28.8441 m
271.536 31.5058 l
266.407 28.5007 l
S
newpath
254.301 9.26638 m
271.516 12.1836 l
266.431 9.10275 l
S
newpath
273.599 68.4622 m
291.015 69.6877 l
285.656 67.1171 l
S
newpath
273.584 88.1820 m
291.030 88.8679 l
285.594 86.4644 l
S
newpath
254.211 87.7828 m
271.606 89.2672 l
266.286 86.6171 l
S
newpath
254.235 68.0904 m
271.582 70.0595 l
266.337 67.2620 l
S
newpath
196.363 8.17095 m
213.062 13.2790 l
208.414 9.56942 l
S
newpath
196.356 27.6455 m
213.070 32.7045 l
208.410 29.0085 l
S
newpath
215.634 28.0873 m
232.589 32.2627 l
227.743 28.8161 l
S
newpath
215.650 8.57052 m
232.572 12.8794 l
227.753 9.39486 l
S
newpath
196.335 66.6164 m
213.091 71.5335 l
208.400 67.8772 l
S
newpath
196.319 86.1205 m
213.106 90.9294 l
208.392 87.3035 l
S
newpath
215.560 86.7662 m
232.663 90.2837 l
227.688 87.0269 l
S
newpath
215.590 67.1763 m
232.633 70.9736 l
227.712 67.6357 l
S
newpath
196.347 47.1263 m
213.079 52.1236 l
208.406 48.4448 l
S
newpath
215.614 47.6203 m
232.609 51.6296 l
227.730 48.2307 l
S
newpath
234.864 87.3154 m
252.156 89.7345 l
246.984 86.8017 l
S
newpath
234.895 67.6647 m
252.125 70.4852 l
247.023 67.4330 l
S
newpath
234.921 48.0593 m
252.098 51.1907 l
247.052 48.0467 l
S
newpath
234.945 28.4855 m
252.075 31.8644 l
247.074 28.6480 l
S
newpath
234.965 8.93478 m
252.055 12.5152 l
247.092 9.24011 l
S
newpath
254.258 48.4489 m
271.559 50.8010 l
266.376 47.8883 l
S
newpath
273.617 48.7952 m
290.997 50.4548 l
285.703 47.7512 l
S
newpath
273.578 107.975 m
291.037 107.975 l
285.511 105.786 l
S
newpath
273.589 127.873 m
291.025 126.976 l
285.395 125.075 l
S
newpath
254.179 127.425 m
271.638 127.425 l
266.112 125.236 l
S
newpath
254.190 107.548 m
271.628 108.401 l
266.215 105.946 l
S
newpath
273.786 168.223 m
290.829 164.426 l
284.961 163.492 l
S
newpath
274.150 188.890 m
290.465 182.659 l
284.524 182.586 l
S
newpath
254.677 188.688 m
271.140 182.862 l
265.203 182.642 l
S
newpath
254.308 167.824 m
271.509 164.825 l
265.691 163.618 l
S
newpath
196.298 105.647 m
213.128 110.302 l
208.381 106.719 l
S
newpath
196.266 125.215 m
213.159 129.634 l
208.363 126.118 l
S
newpath
215.476 126.142 m
232.746 128.707 l
227.600 125.731 l
S
newpath
215.523 106.409 m
232.700 109.540 l
227.654 106.396 l
S
newpath
196.124 164.759 m
213.301 167.890 l
208.255 164.746 l
S
newpath
195.983 185.775 m
213.442 185.775 l
207.916 183.586 l
S
newpath
215.590 187.673 m
232.633 183.876 l
226.765 182.942 l
S
newpath
215.382 166.325 m
232.841 166.325 l
227.315 164.136 l
S
newpath
196.215 144.870 m
213.210 148.879 l
208.331 145.480 l
S
newpath
215.421 146.045 m
232.801 147.704 l
227.507 145.001 l
S
newpath
235.167 188.349 m
251.853 183.201 l
245.930 182.739 l
S
newpath
234.828 167.241 m
252.191 165.408 l
246.467 163.812 l
S
newpath
234.781 146.875 m
252.239 146.875 l
246.713 144.686 l
S
newpath
234.799 126.861 m
252.221 127.988 l
246.847 125.448 l
S
newpath
234.831 107.034 m
252.189 108.915 l
246.929 106.144 l
S
newpath
254.200 147.477 m
271.617 146.272 l
265.954 144.471 l
S
newpath
273.641 147.928 m
290.973 145.821 l
285.225 144.316 l
S
newpath
371.721 209.567 m
386.879 200.882 l
380.999 201.731 l
S
newpath
372.346 229.964 m
386.255 219.385 l
380.534 220.990 l
S
newpath
353.085 230.142 m
366.718 219.207 l
361.040 220.959 l
S
newpath
352.353 209.619 m
367.451 200.830 l
361.576 201.719 l
S
newpath
376.108 291.171 m
382.492 274.878 l
378.440 279.235 l
S
newpath
357.632 291.476 m
362.171 274.573 l
358.627 279.354 l
S
newpath
355.744 271.271 m
364.059 255.879 l
359.508 259.708 l
S
newpath
374.523 270.900 m
384.077 256.249 l
379.227 259.689 l
S
newpath
294.325 209.898 m
309.086 200.551 l
303.249 201.659 l
S
newpath
295.766 231.088 m
307.646 218.261 l
302.286 220.832 l
S
newpath
314.748 230.673 m
327.461 218.676 l
321.942 220.880 l
S
newpath
313.648 209.775 m
328.561 200.674 l
322.706 201.685 l
S
newpath
301.222 272.314 m
302.190 254.836 l
299.704 260.246 l
S
newpath
318.987 272.066 m
323.222 255.083 l
319.764 259.928 l
S
newpath
298.207 252.143 m
305.205 236.106 l
300.990 240.305 l
S
newpath
316.552 251.593 m
325.656 236.656 l
320.913 240.243 l
S
newpath
337.198 271.675 m
343.808 255.474 l
339.696 259.773 l
S
newpath
335.265 251.127 m
345.741 237.123 l
340.679 240.242 l
S
newpath
333.875 230.371 m
347.131 218.978 l
341.515 220.923 l
S
newpath
332.993 209.687 m
348.013 200.763 l
342.146 201.705 l
S
newpath
354.196 250.749 m
365.607 237.500 l
360.344 240.263 l
S
newpath
373.260 250.444 m
385.340 237.805 l
379.941 240.292 l
S
newpath
377.865 311.108 m
380.735 293.841 l
377.674 298.946 l
S
newpath
359.590 311.221 m
360.213 293.728 l
357.835 299.186 l
S
newpath
361.337 330.558 m
358.466 313.291 l
357.222 319.116 l
S
newpath
379.573 330.673 m
379.028 313.176 l
377.019 318.782 l
S
newpath
383.204 388.103 m
375.396 372.446 l
375.916 378.380 l
S
newpath
364.601 387.650 m
355.202 372.899 l
356.338 378.746 l
S
newpath
363.806 368.653 m
355.998 352.996 l
356.517 358.930 l
S
newpath
382.265 369.057 m
376.335 352.592 l
376.160 358.547 l
S
newpath
323.549 310.877 m
318.660 294.072 l
318.112 300.004 l
S
newpath
305.610 310.303 m
297.802 294.646 l
298.321 300.580 l
S
newpath
306.752 329.067 m
296.660 314.782 l
298.073 320.568 l
S
newpath
325.008 329.753 m
317.200 314.096 l
317.720 320.030 l
S
newpath
308.334 385.971 m
295.078 374.578 l
297.853 379.846 l
S
newpath
307.986 366.904 m
295.426 354.745 l
297.885 360.168 l
S
newpath
327.178 386.561 m
315.030 373.988 l
317.308 379.490 l
S
newpath
326.693 367.548 m
315.516 354.101 l
317.377 359.758 l
S
newpath
307.490 347.930 m
295.922 334.819 l
297.949 340.419 l
S
newpath
326.006 348.617 m
316.203 334.132 l
317.500 339.945 l
S
newpath
345.932 387.129 m
335.074 373.420 l
336.802 379.120 l
S
newpath
345.292 368.142 m
335.714 353.507 l
336.921 359.340 l
S
newpath
344.407 349.203 m
336.599 333.546 l
337.118 339.480 l
S
newpath
343.174 330.257 m
337.832 313.592 l
337.445 319.536 l
S
newpath
341.504 311.169 m
339.502 293.780 l
337.968 299.534 l
S
newpath
362.739 349.652 m
357.064 333.097 l
356.796 339.048 l
S
newpath
381.061 349.947 m
377.540 332.802 l
376.517 338.670 l
S
newpath
275.044 210.080 m
289.570 200.370 l
283.762 201.622 l
S
newpath
259.005 232.503 m
266.812 216.846 l
262.389 220.823 l
S
newpath
255.849 210.373 m
269.968 200.077 l
264.216 201.566 l
S
newpath
277.069 231.677 m
287.545 217.673 l
282.483 220.792 l
S
newpath
286.211 290.853 m
278.403 275.196 l
278.922 281.130 l
S
newpath
268.413 289.817 m
257.404 276.232 l
259.195 281.911 l
S
newpath
266.812 271.403 m
259.005 255.746 l
259.524 261.680 l
S
newpath
283.916 272.177 m
280.698 254.972 l
279.572 260.821 l
S
newpath
208.617 213.053 m
200.809 197.396 l
201.328 203.330 l
S
newpath
212.292 229.017 m
197.133 220.332 l
200.848 224.981 l
S
newpath
228.015 232.503 m
220.207 216.846 l
220.727 222.780 l
S
newpath
218.874 212.227 m
229.349 198.223 l
224.288 201.342 l
S
newpath
212.758 266.971 m
196.667 260.178 l
200.913 264.345 l
S
newpath
212.818 286.275 m
196.608 279.774 l
200.928 283.863 l
S
newpath
231.690 287.367 m
216.532 278.682 l
220.247 283.331 l
S
newpath
231.375 268.430 m
216.848 258.720 l
220.235 263.613 l
S
newpath
212.639 247.792 m
196.787 240.457 l
200.889 244.765 l
S
newpath
230.636 249.939 m
217.587 238.310 l
220.267 243.626 l
S
newpath
250.248 288.589 m
236.771 277.461 l
239.650 282.672 l
S
newpath
249.409 270.026 m
237.611 257.123 l
239.736 262.685 l
S
newpath
247.414 251.953 m
239.606 236.296 l
240.125 242.230 l
S
newpath
242.427 233.359 m
244.593 215.990 l
241.742 221.216 l
S
newpath
236.882 210.921 m
250.138 199.528 l
244.522 201.473 l
S
newpath
263.633 252.847 m
262.184 235.402 l
260.468 241.105 l
S
newpath
280.478 252.683 m
284.136 235.566 l
280.844 240.525 l
S
newpath
287.545 309.477 m
277.069 295.473 l
278.639 301.218 l
S
newpath
269.725 327.392 m
256.092 316.457 l
259.044 321.627 l
S
newpath
269.246 308.494 m
256.571 296.455 l
259.082 301.854 l
S
newpath
288.335 328.256 m
276.280 315.593 l
278.517 321.112 l
S
newpath
289.398 385.379 m
275.216 375.170 l
278.432 380.179 l
S
newpath
270.379 384.803 m
255.439 375.746 l
259.038 380.485 l
S
newpath
270.232 365.588 m
255.585 356.062 l
259.033 360.912 l
S
newpath
289.164 366.241 m
275.450 355.408 l
278.440 360.555 l
S
newpath
212.853 305.634 m
196.572 299.315 l
200.937 303.356 l
S
newpath
212.877 325.022 m
196.548 318.827 l
200.944 322.834 l
S
newpath
231.966 325.743 m
216.256 318.106 l
220.277 322.492 l
S
newpath
231.861 306.503 m
216.362 298.446 l
220.263 302.939 l
S
newpath
212.907 363.843 m
196.519 357.807 l
200.953 361.771 l
S
newpath
212.916 383.266 m
196.509 377.283 l
200.956 381.233 l
S
newpath
232.127 383.741 m
216.096 376.808 l
220.305 381.011 l
S
newpath
232.088 364.379 m
216.134 357.270 l
220.297 361.520 l
S
newpath
212.894 344.427 m
196.531 338.322 l
200.949 342.305 l
S
newpath
232.037 345.042 m
216.185 337.707 l
220.288 342.015 l
S
newpath
251.284 384.255 m
235.735 376.294 l
239.664 380.763 l
S
newpath
251.202 364.963 m
235.818 356.686 l
239.655 361.234 l
S
newpath
251.089 345.717 m
235.931 337.032 l
239.646 341.681 l
S
newpath
250.927 326.540 m
236.093 317.309 l
239.637 322.090 l
S
newpath
250.676 307.473 m
236.344 297.476 l
239.634 302.437 l
S
newpath
270.027 346.440 m
255.790 336.309 l
259.033 341.300 l
S
newpath
288.832 347.189 m
275.783 335.560 l
278.463 340.876 l
S
newpath
303.823 291.516 m
299.589 274.533 l
298.812 280.439 l
S
newpath
321.501 291.768 m
320.708 274.281 l
318.779 279.915 l
S
newpath
339.420 291.709 m
341.586 274.340 l
338.735 279.566 l
S
newpath
177.110 7.73388 m
193.518 13.7160 l
189.071 9.76629 l
S
newpath
177.120 27.1569 m
193.508 33.1929 l
189.074 29.2286 l
S
newpath
157.938 26.6202 m
173.892 33.7297 l
169.729 29.4800 l
S
newpath
157.900 7.25820 m
173.931 14.1918 l
169.721 9.98809 l
S
newpath
177.173 85.3653 m
193.455 91.6846 l
189.089 87.6439 l
S
newpath
158.166 84.4960 m
173.665 92.5539 l
169.764 88.0610 l
S
newpath
158.061 65.2565 m
173.770 72.8934 l
169.750 68.5074 l
S
newpath
177.150 65.9775 m
193.479 72.1724 l
189.083 68.1651 l
S
newpath
100.628 5.62048 m
114.811 15.8295 l
111.595 10.8208 l
S
newpath
100.863 24.7583 m
114.576 35.5916 l
111.587 30.4440 l
S
newpath
119.795 25.4119 m
134.442 34.9380 l
130.993 30.0872 l
S
newpath
119.648 6.19628 m
134.588 15.2537 l
130.989 10.5145 l
S
newpath
102.482 81.5230 m
112.957 95.5269 l
111.388 89.7817 l
S
newpath
101.692 62.7438 m
113.747 75.4061 l
111.510 69.8876 l
S
newpath
120.781 82.5055 m
133.455 94.5444 l
130.945 89.1456 l
S
newpath
120.302 63.6073 m
133.935 74.5426 l
130.983 69.3729 l
S
newpath
101.195 43.8101 m
114.244 55.4398 l
111.564 50.1235 l
S
newpath
119.999 44.5595 m
134.237 54.6904 l
130.994 49.6995 l
S
newpath
139.351 83.5267 m
153.683 93.5232 l
150.393 88.5630 l
S
newpath
139.100 64.4592 m
153.934 73.6907 l
150.390 68.9097 l
S
newpath
138.938 45.2825 m
154.096 53.9674 l
150.381 49.3188 l
S
newpath
138.825 26.0366 m
154.209 34.3133 l
150.371 29.7656 l
S
newpath
138.742 6.74456 m
154.291 14.7054 l
150.362 10.2370 l
S
newpath
157.989 45.9571 m
173.841 53.2928 l
169.739 48.9843 l
S
newpath
177.133 46.5726 m
193.495 52.6773 l
189.078 48.6944 l
S
newpath
177.209 104.724 m
193.419 111.225 l
189.099 107.136 l
S
newpath
177.269 124.028 m
193.359 130.821 l
189.113 126.654 l
S
newpath
158.652 122.570 m
173.179 132.280 l
169.791 127.386 l
S
newpath
158.336 103.632 m
173.495 112.317 l
169.780 107.668 l
S
newpath
181.410 177.946 m
189.218 193.603 l
188.699 187.669 l
S
newpath
171.153 178.773 m
160.678 192.777 l
165.739 189.657 l
S
newpath
162.012 158.496 m
169.819 174.153 l
169.300 168.219 l
S
newpath
177.735 161.982 m
192.893 170.667 l
189.178 166.018 l
S
newpath
103.816 100.146 m
111.623 115.803 l
111.104 109.869 l
S
newpath
106.111 118.822 m
109.328 136.027 l
110.455 130.178 l
S
newpath
123.214 119.596 m
131.022 135.253 l
130.503 129.319 l
S
newpath
121.613 101.182 m
132.623 114.767 l
130.832 109.088 l
S
newpath
114.983 180.920 m
100.456 190.630 l
106.265 189.377 l
S
newpath
112.957 159.323 m
102.482 173.327 l
107.543 170.207 l
S
newpath
134.178 180.627 m
120.058 190.923 l
125.811 189.433 l
S
newpath
131.022 158.496 m
123.214 174.153 l
127.637 170.176 l
S
newpath
109.549 138.316 m
105.890 155.433 l
109.182 150.474 l
S
newpath
126.393 138.152 m
127.843 155.597 l
129.559 149.894 l
S
newpath
153.145 180.078 m
139.889 191.471 l
145.505 189.526 l
S
newpath
147.600 157.640 m
145.434 175.009 l
148.285 169.783 l
S
newpath
142.613 139.046 m
150.421 154.703 l
149.901 148.769 l
S
newpath
140.618 120.973 m
152.415 133.877 l
150.290 128.314 l
S
newpath
139.778 102.411 m
153.255 113.539 l
150.377 108.327 l
S
newpath
159.391 141.060 m
172.440 152.689 l
169.760 147.373 l
S
newpath
177.388 143.207 m
193.240 150.542 l
189.137 146.234 l
S
newpath
81.6935 5.02896 m
94.9492 16.4210 l
92.1739 11.1540 l
S
newpath
63.3343 23.4511 m
74.5111 36.8988 l
72.6501 31.2417 l
S
newpath
62.8488 4.43859 m
74.9966 17.0113 l
72.7192 11.5095 l
S
newpath
82.0414 24.0955 m
94.6013 36.2544 l
92.1418 30.8319 l
S
newpath
84.4174 80.6965 m
92.2252 96.3534 l
91.7059 90.4194 l
S
newpath
65.0188 61.2465 m
72.8266 76.9034 l
72.3073 70.9693 l
S
newpath
83.2756 61.9327 m
93.3671 76.2172 l
91.9539 70.4313 l
S
newpath
25.4257 3.34930 m
34.8253 18.1007 l
33.6893 12.2537 l
S
newpath
6.82298 2.89651 m
14.6307 18.5534 l
14.1115 12.6193 l
S
newpath
7.76199 21.9428 m
13.6917 38.4072 l
13.8675 32.4529 l
S
newpath
26.2216 22.3465 m
34.0294 38.0034 l
33.5101 32.0694 l
S
newpath
10.4542 60.3267 m
10.9995 77.8232 l
13.0082 72.2171 l
S
newpath
28.6904 60.4415 m
31.5606 77.7084 l
32.8048 71.8836 l
S
newpath
8.96657 41.0523 m
12.4871 58.1976 l
13.5104 52.3298 l
S
newpath
27.2877 41.3478 m
32.9632 57.9021 l
33.2307 51.9512 l
S
newpath
46.8528 60.7423 m
52.1953 77.4076 l
52.5821 71.4633 l
S
newpath
45.6202 41.7965 m
53.4280 57.4534 l
52.9087 51.5193 l
S
newpath
44.7346 22.8574 m
54.3135 37.4925 l
53.1063 31.6599 l
S
newpath
44.0954 3.87081 m
54.9527 17.5791 l
53.2253 11.8796 l
S
newpath
64.0211 42.3825 m
73.8243 56.8674 l
72.5273 51.0542 l
S
newpath
82.5375 43.0694 m
94.1052 56.1806 l
92.0785 50.5810 l
S
newpath
86.2041 99.4838 m
90.4385 116.466 l
91.2155 110.560 l
S
newpath
68.5263 99.2315 m
69.3191 116.718 l
71.2483 111.084 l
S
newpath
71.0399 118.933 m
66.8055 135.916 l
70.2629 131.071 l
S
newpath
88.8055 118.686 m
87.8371 136.164 l
90.3226 130.753 l
S
newpath
95.7019 181.101 m
80.9407 190.448 l
86.7781 189.340 l
S
newpath
76.3793 181.224 m
61.4661 190.325 l
67.3209 189.314 l
S
newpath
75.2794 160.326 m
62.5660 172.323 l
68.0856 170.119 l
S
newpath
94.2612 159.911 m
82.3814 172.738 l
87.7407 170.167 l
S
newpath
32.3949 99.5234 m
27.8560 116.426 l
31.3999 111.645 l
S
newpath
13.9188 99.8285 m
7.53496 116.121 l
11.5867 111.764 l
S
newpath
15.5040 120.099 m
5.94973 134.750 l
10.8002 131.310 l
S
newpath
34.2831 119.729 m
25.9678 135.121 l
30.5186 131.291 l
S
newpath
18.3061 181.432 m
3.14765 190.117 l
9.02814 189.268 l
S
newpath
17.6815 161.035 m
3.77225 171.614 l
9.49360 170.009 l
S
newpath
37.6745 181.380 m
22.5764 190.169 l
28.4509 189.280 l
S
newpath
36.9420 160.857 m
23.3090 171.792 l
28.9872 170.040 l
S
newpath
16.7667 140.555 m
4.68697 153.194 l
10.0859 150.708 l
S
newpath
35.8312 140.250 m
24.4198 153.499 l
29.6832 150.736 l
S
newpath
57.0339 181.313 m
42.0143 190.237 l
47.8806 189.294 l
S
newpath
56.1519 160.628 m
42.8962 172.021 l
48.5120 170.076 l
S
newpath
54.7617 139.873 m
44.2865 153.877 l
49.3478 150.757 l
S
newpath
52.8293 119.324 m
46.2188 135.525 l
50.3310 131.226 l
S
newpath
50.6068 99.2901 m
48.4413 116.659 l
51.2922 111.433 l
S
newpath
73.4746 139.406 m
64.3708 154.343 l
69.1144 150.756 l
S
newpath
91.8202 138.856 m
84.8224 154.893 l
89.0367 150.694 l
S
newpath
12.1619 79.8915 m
9.29177 97.1584 l
12.3528 92.0530 l
S
newpath
30.4370 79.7780 m
29.8139 97.2719 l
32.1921 91.8131 l
S
newpath
48.5235 79.8301 m
50.5247 97.2198 l
52.0592 91.4650 l
S
newpath
66.4785 80.1226 m
71.3669 96.9274 l
71.9147 90.9958 l
S
newpath
193.903 226.240 m
176.725 223.109 l
181.772 226.253 l
S
newpath
174.645 224.675 m
157.186 224.675 l
162.712 226.863 l
S
newpath
174.437 203.326 m
157.394 207.123 l
163.262 208.057 l
S
newpath
193.761 265.784 m
176.867 261.365 l
181.663 264.881 l
S
newpath
193.729 285.352 m
176.899 280.697 l
181.645 284.280 l
S
newpath
174.504 284.590 m
157.327 281.459 l
162.373 284.603 l
S
newpath
174.551 264.857 m
157.280 262.292 l
162.427 265.268 l
S
newpath
115.877 202.109 m
99.5624 208.340 l
105.503 208.413 l
S
newpath
116.241 222.776 m
99.1984 226.573 l
105.066 227.507 l
S
newpath
135.718 223.175 m
118.518 226.174 l
124.336 227.381 l
S
newpath
135.350 202.312 m
118.886 208.138 l
124.824 208.357 l
S
newpath
116.437 263.126 m
99.0020 264.023 l
104.632 265.924 l
S
newpath
116.449 283.025 m
98.9906 283.025 l
104.516 285.213 l
S
newpath
135.837 283.451 m
118.399 282.598 l
123.812 285.054 l
S
newpath
135.848 263.575 m
118.389 263.575 l
123.915 265.763 l
S
newpath
116.385 243.071 m
99.0540 245.178 l
104.802 246.683 l
S
newpath
135.827 243.522 m
118.409 244.727 l
124.072 246.528 l
S
newpath
155.196 283.965 m
137.838 282.084 l
143.097 284.855 l
S
newpath
155.228 264.138 m
137.806 263.011 l
143.179 265.551 l
S
newpath
155.246 244.125 m
137.787 244.125 l
143.313 246.313 l
S
newpath
155.198 223.758 m
137.835 225.591 l
143.559 227.187 l
S
newpath
154.860 202.651 m
138.173 207.799 l
144.097 208.261 l
S
newpath
174.605 244.954 m
157.225 243.295 l
162.519 245.998 l
S
newpath
193.811 246.129 m
176.817 242.120 l
181.696 245.519 l
S
newpath
193.708 304.879 m
176.921 300.070 l
181.634 303.696 l
S
newpath
193.692 324.383 m
176.936 319.466 l
181.626 323.122 l
S
newpath
174.437 323.823 m
157.394 320.026 l
162.315 323.364 l
S
newpath
174.467 304.233 m
157.364 300.716 l
162.339 303.973 l
S
newpath
193.671 363.354 m
176.957 358.295 l
181.616 361.991 l
S
newpath
193.663 382.829 m
176.965 377.720 l
181.613 381.430 l
S
newpath
174.376 382.429 m
157.455 378.120 l
162.273 381.605 l
S
newpath
174.393 362.912 m
157.438 358.737 l
162.284 362.183 l
S
newpath
116.442 302.818 m
98.9973 302.132 l
104.433 304.535 l
S
newpath
116.427 322.537 m
99.0120 321.312 l
104.371 323.882 l
S
newpath
135.792 322.909 m
118.444 320.940 l
123.689 323.737 l
S
newpath
135.816 303.217 m
118.420 301.732 l
123.741 304.382 l
S
newpath
116.391 361.833 m
99.0487 359.817 l
104.286 362.628 l
S
newpath
116.372 381.431 m
99.0671 379.118 l
104.256 382.019 l
S
newpath
135.725 381.733 m
118.511 378.816 l
123.596 381.897 l
S
newpath
135.746 362.155 m
118.490 359.494 l
123.620 362.499 l
S
newpath
116.410 342.204 m
99.0299 340.545 l
104.323 343.248 l
S
newpath
135.768 342.551 m
118.468 340.199 l
123.650 343.111 l
S
newpath
155.062 382.065 m
137.972 378.484 l
142.935 381.759 l
S
newpath
155.082 362.514 m
137.952 359.135 l
142.952 362.352 l
S
newpath
155.105 342.940 m
137.928 339.809 l
142.974 342.953 l
S
newpath
155.132 323.335 m
137.901 320.514 l
143.003 323.567 l
S
newpath
155.162 303.684 m
137.871 301.265 l
143.042 304.198 l
S
newpath
174.413 343.379 m
157.418 339.370 l
162.297 342.769 l
S
newpath
193.680 343.873 m
176.948 338.876 l
181.621 342.555 l
S
newpath
96.4263 201.974 m
80.2163 208.475 l
86.1574 208.449 l
S
newpath
77.3162 222.270 m
60.5292 227.079 l
66.4419 227.661 l
S
newpath
76.9888 201.878 m
60.8566 208.571 l
66.7970 208.475 l
S
newpath
77.6273 282.366 m
60.2181 283.683 l
65.8925 285.448 l
S
newpath
77.5818 262.466 m
60.2636 264.683 l
66.0213 266.152 l
S
newpath
18.7198 201.706 m
2.73387 208.743 l
8.67083 208.519 l
S
newpath
18.9905 221.854 m
2.46321 227.495 l
8.39751 227.781 l
S
newpath
38.4260 221.965 m
21.8249 227.384 l
27.7549 227.750 l
S
newpath
38.1378 201.751 m
22.1131 208.699 l
28.0512 208.508 l
S
newpath
19.2811 261.830 m
2.17264 265.319 l
8.02254 266.359 l
S
newpath
19.3547 281.694 m
2.09900 284.355 l
7.89240 285.676 l
S
newpath
38.7807 281.886 m
21.4702 284.163 l
27.2329 285.612 l
S
newpath
38.7140 262.009 m
21.5369 265.140 l
27.3639 266.302 l
S
newpath
19.1667 241.889 m
2.28698 246.360 l
8.18689 247.060 l
S
newpath
38.6043 242.043 m
21.6466 246.207 l
27.5329 247.014 l
S
newpath
58.2055 282.108 m
40.8427 283.941 l
46.5666 285.537 l
S
newpath
58.1480 262.218 m
40.9002 264.931 l
46.6974 266.234 l
S
newpath
58.0456 242.226 m
41.0026 246.023 l
46.8702 246.957 l
S
newpath
57.8674 222.101 m
41.1807 227.249 l
47.1040 227.711 l
S
newpath
57.5602 201.806 m
41.4880 208.643 l
47.4272 208.493 l
S
newpath
77.4905 242.448 m
60.3549 245.801 l
66.1964 246.887 l
S
newpath
77.6521 321.925 m
60.1933 321.925 l
65.7191 324.113 l
S
newpath
77.6471 302.178 m
60.1983 302.771 l
65.7949 304.770 l
S
newpath
77.6294 380.906 m
60.2160 379.643 l
65.5701 382.225 l
S
newpath
77.6403 361.279 m
60.2051 360.370 l
65.6102 362.843 l
S
newpath
19.4013 301.495 m
2.05239 303.455 l
7.78780 305.009 l
S
newpath
19.4298 321.245 m
2.02388 322.604 l
7.70252 324.356 l
S
newpath
38.8418 321.446 m
21.4092 322.403 l
27.0461 324.285 l
S
newpath
38.8200 301.694 m
21.4309 303.255 l
27.1293 304.940 l
S
newpath
19.4540 360.628 m
1.99970 361.021 l
7.57314 363.084 l
S
newpath
19.4562 380.275 m
1.99750 380.275 l
7.52330 382.463 l
S
newpath
38.8527 380.467 m
21.3982 380.082 l
26.8747 382.392 l
S
newpath
38.8548 360.825 m
21.3961 360.825 l
26.9219 363.013 l
S
newpath
19.4461 340.953 m
2.00761 341.796 l
7.63207 343.715 l
S
newpath
38.8520 341.153 m
21.3989 341.596 l
26.9781 343.643 l
S
newpath
58.2442 380.677 m
40.8039 379.873 l
46.2237 382.313 l
S
newpath
58.2508 361.041 m
40.7974 360.608 l
46.2676 362.933 l
S
newpath
58.2535 341.375 m
40.7947 341.375 l
46.3205 343.563 l
S
newpath
58.2498 321.671 m
40.7984 322.178 l
46.3851 324.205 l
S
newpath
58.2359 301.920 m
40.8122 303.029 l
46.4652 304.862 l
S
newpath
77.6486 341.621 m
60.1968 341.128 l
65.6590 343.471 l
S
newpath
97.0063 381.156 m
79.6364 379.393 l
84.9142 382.128 l
S
newpath
97.0214 361.542 m
79.6213 360.108 l
84.9498 362.742 l
S
newpath
97.0352 341.896 m
79.6075 340.853 l
84.9934 343.367 l
S
newpath
97.0460 322.211 m
79.5966 321.638 l
85.0480 324.006 l
S
newpath
97.0507 302.475 m
79.5920 302.475 l
85.1178 304.663 l
S
newpath
97.0434 282.668 m
79.5992 283.382 l
85.2094 285.342 l
S
newpath
97.0132 262.764 m
79.6295 264.385 l
85.3337 266.051 l
S
newpath
96.9381 242.724 m
79.7045 245.526 l
85.5084 246.799 l
S
newpath
96.7738 222.487 m
79.8689 226.862 l
85.7647 227.596 l
S
newpath
194.043 205.225 m
176.585 205.225 l
182.110 207.413 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
379.300 195.500 m
379.300 198.100 l
S
newpath
305.585 195.500 m
305.585 198.100 l
S
newpath
231.871 195.500 m
231.871 198.100 l
S
newpath
158.156 195.500 m
158.156 198.100 l
S
newpath
84.4416 195.500 m
84.4416 198.100 l
S
newpath
10.7268 195.500 m
10.7268 198.100 l
S
newpath
1.02756 195.500 m
389.000 195.500 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
285 218 14 15 rc
newpath
289.171 224.187 m
291.906 224.187 l
291.906 224.421 l
291.729 224.421 291.606 224.450 291.539 224.507  c
291.471 224.565 291.437 224.645 291.437 224.750  c
291.437 224.843 291.510 225.000 291.656 225.218  c
291.708 225.281 291.781 225.385 291.875 225.531  c
292.281 226.187 l
292.765 225.531 l
293.067 225.114 293.218 224.849 293.218 224.734  c
293.218 224.651 293.182 224.578 293.109 224.515  c
293.036 224.453 292.921 224.421 292.765 224.421  c
292.765 224.187 l
294.718 224.187 l
294.718 224.421 l
294.520 224.432 294.343 224.489 294.187 224.593  c
293.979 224.739 293.692 225.052 293.328 225.531  c
292.546 226.593 l
293.984 228.671 l
294.338 229.182 294.593 229.489 294.750 229.593  c
294.906 229.697 295.104 229.755 295.343 229.765  c
295.343 230.000 l
292.593 230.000 l
292.593 229.765 l
292.791 229.765 292.942 229.724 293.046 229.640  c
293.130 229.588 293.171 229.510 293.171 229.406  c
293.171 229.312 293.036 229.067 292.765 228.671  c
291.906 227.421 l
290.968 228.671 l
290.687 229.057 290.546 229.286 290.546 229.359  c
290.546 229.463 290.593 229.557 290.687 229.640  c
290.781 229.724 290.921 229.765 291.109 229.765  c
291.109 230.000 l
289.218 230.000 l
289.218 229.765 l
289.364 229.744 289.494 229.692 289.609 229.609  c
289.776 229.484 290.046 229.171 290.421 228.671  c
291.640 227.046 l
290.546 225.453 l
290.234 224.994 289.992 224.708 289.820 224.593  c
289.648 224.479 289.432 224.421 289.171 224.421  c
289.171 224.187 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.5842 195.500 m
47.5842 200.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
45 208 7 13 rc
newpath
55.7968 215.437 m
47.2031 215.437 l
47.2031 214.765 l
55.7968 214.765 l
55.7968 215.437 l
h
f
Q
newpath
60.0468 215.828 m
60.0468 216.734 l
58.8906 216.734 l
58.8906 219.000 l
57.8437 219.000 l
57.8437 216.734 l
54.2031 216.734 l
54.2031 215.921 l
58.2031 210.218 l
58.8906 210.218 l
58.8906 215.828 l
60.0468 215.828 l
h
57.8437 215.828 m
57.8437 211.546 l
54.8281 215.828 l
57.8437 215.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
121.299 195.500 m
121.299 200.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
119 208 7 13 rc
newpath
129.796 215.437 m
121.203 215.437 l
121.203 214.765 l
129.796 214.765 l
129.796 215.437 l
h
f
Q
newpath
133.953 217.343 m
133.359 219.000 l
128.281 219.000 l
128.281 218.765 l
129.770 217.401 130.820 216.286 131.429 215.421  c
132.039 214.557 132.343 213.770 132.343 213.062  c
132.343 212.510 132.177 212.059 131.843 211.710  c
131.510 211.362 131.109 211.187 130.640 211.187  c
130.224 211.187 129.846 211.309 129.507 211.554  c
129.169 211.799 128.921 212.161 128.765 212.640  c
128.531 212.640 l
128.635 211.859 128.906 211.260 129.343 210.843  c
129.781 210.427 130.328 210.218 130.984 210.218  c
131.682 210.218 132.265 210.442 132.734 210.890  c
133.203 211.338 133.437 211.864 133.437 212.468  c
133.437 212.906 133.333 213.343 133.125 213.781  c
132.812 214.468 132.307 215.192 131.609 215.953  c
130.557 217.109 129.895 217.807 129.625 218.046  c
131.875 218.046 l
132.333 218.046 132.653 218.028 132.835 217.992  c
133.018 217.955 133.184 217.885 133.335 217.781  c
133.487 217.677 133.614 217.531 133.718 217.343  c
133.953 217.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
195.013 195.500 m
195.013 200.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
192.468 212.750 m
192.468 211.770 192.617 210.924 192.914 210.210  c
193.210 209.497 193.604 208.968 194.093 208.625  c
194.479 208.354 194.875 208.218 195.281 208.218  c
195.937 208.218 196.526 208.552 197.046 209.218  c
197.703 210.052 198.031 211.182 198.031 212.609  c
198.031 213.609 197.888 214.458 197.601 215.156  c
197.315 215.854 196.947 216.362 196.500 216.679  c
196.052 216.997 195.625 217.156 195.218 217.156  c
194.395 217.156 193.708 216.671 193.156 215.703  c
192.697 214.880 192.468 213.895 192.468 212.750  c
h
193.718 212.906 m
193.718 214.093 193.864 215.062 194.156 215.812  c
194.395 216.437 194.755 216.750 195.234 216.750  c
195.463 216.750 195.700 216.648 195.945 216.445  c
196.190 216.242 196.375 215.895 196.500 215.406  c
196.697 214.687 196.796 213.661 196.796 212.328  c
196.796 211.349 196.692 210.531 196.484 209.875  c
196.338 209.385 196.140 209.041 195.890 208.843  c
195.724 208.708 195.515 208.640 195.265 208.640  c
194.984 208.640 194.729 208.765 194.500 209.015  c
194.197 209.369 193.992 209.924 193.882 210.679  c
193.773 211.434 193.718 212.177 193.718 212.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
268.728 195.500 m
268.728 200.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
275.953 217.343 m
275.359 219.000 l
270.281 219.000 l
270.281 218.765 l
271.770 217.401 272.820 216.286 273.429 215.421  c
274.039 214.557 274.343 213.770 274.343 213.062  c
274.343 212.510 274.177 212.059 273.843 211.710  c
273.510 211.362 273.109 211.187 272.640 211.187  c
272.224 211.187 271.846 211.309 271.507 211.554  c
271.169 211.799 270.921 212.161 270.765 212.640  c
270.531 212.640 l
270.635 211.859 270.906 211.260 271.343 210.843  c
271.781 210.427 272.328 210.218 272.984 210.218  c
273.682 210.218 274.265 210.442 274.734 210.890  c
275.203 211.338 275.437 211.864 275.437 212.468  c
275.437 212.906 275.333 213.343 275.125 213.781  c
274.812 214.468 274.307 215.192 273.609 215.953  c
272.557 217.109 271.895 217.807 271.625 218.046  c
273.875 218.046 l
274.333 218.046 274.653 218.028 274.835 217.992  c
275.018 217.955 275.184 217.885 275.335 217.781  c
275.487 217.677 275.614 217.531 275.718 217.343  c
275.953 217.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
342.443 195.500 m
342.443 200.700 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
350.046 215.828 m
350.046 216.734 l
348.890 216.734 l
348.890 219.000 l
347.843 219.000 l
347.843 216.734 l
344.203 216.734 l
344.203 215.921 l
348.203 210.218 l
348.890 210.218 l
348.890 215.828 l
350.046 215.828 l
h
347.843 215.828 m
347.843 211.546 l
344.828 215.828 l
347.843 215.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
195.013 380.275 m
192.413 380.275 l
S
newpath
195.013 306.365 m
192.413 306.365 l
S
newpath
195.013 232.455 m
192.413 232.455 l
S
newpath
195.013 158.545 m
192.413 158.545 l
S
newpath
195.013 84.6349 m
192.413 84.6349 l
S
newpath
195.013 10.7249 m
192.413 10.7249 l
S
newpath
195.013 390.000 m
195.013 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
151 91 15 15 rc
newpath
155.078 97.1875 m
157.781 97.1875 l
157.781 97.4218 l
157.656 97.4218 l
157.468 97.4218 157.325 97.4635 157.226 97.5468  c
157.127 97.6302 157.078 97.7343 157.078 97.8593  c
157.078 98.0156 157.151 98.2395 157.296 98.5312  c
158.703 101.468 l
160.015 98.2656 l
160.078 98.0885 160.109 97.9166 160.109 97.7500  c
160.109 97.6666 160.099 97.6093 160.078 97.5781  c
160.036 97.5260 159.981 97.4869 159.914 97.4609  c
159.846 97.4349 159.718 97.4218 159.531 97.4218  c
159.531 97.1875 l
161.421 97.1875 l
161.421 97.4218 l
161.265 97.4427 161.145 97.4765 161.062 97.5234  c
160.979 97.5703 160.885 97.6666 160.781 97.8125  c
160.739 97.8645 160.666 98.0260 160.562 98.2968  c
158.203 104.093 l
157.974 104.656 157.674 105.083 157.304 105.375  c
156.934 105.666 156.578 105.812 156.234 105.812  c
155.984 105.812 155.778 105.739 155.617 105.593  c
155.455 105.447 155.375 105.281 155.375 105.093  c
155.375 104.916 155.432 104.773 155.546 104.664  c
155.661 104.554 155.822 104.500 156.031 104.500  c
156.166 104.500 156.354 104.546 156.593 104.640  c
156.770 104.703 156.880 104.734 156.921 104.734  c
157.046 104.734 157.184 104.669 157.335 104.539  c
157.487 104.408 157.635 104.156 157.781 103.781  c
158.203 102.765 l
156.109 98.3906 l
156.046 98.2552 155.947 98.0885 155.812 97.8906  c
155.697 97.7447 155.609 97.6458 155.546 97.5937  c
155.453 97.5312 155.296 97.4739 155.078 97.4218  c
155.078 97.1875 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
195.013 343.320 m
189.813 343.320 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 342 7 13 rc
newpath
186.796 349.437 m
178.203 349.437 l
178.203 348.765 l
186.796 348.765 l
186.796 349.437 l
h
f
Q
newpath
191.046 349.828 m
191.046 350.734 l
189.890 350.734 l
189.890 353.000 l
188.843 353.000 l
188.843 350.734 l
185.203 350.734 l
185.203 349.921 l
189.203 344.218 l
189.890 344.218 l
189.890 349.828 l
191.046 349.828 l
h
188.843 349.828 m
188.843 345.546 l
185.828 349.828 l
188.843 349.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
195.013 269.410 m
189.813 269.410 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
176 268 7 13 rc
newpath
186.796 275.437 m
178.203 275.437 l
178.203 274.765 l
186.796 274.765 l
186.796 275.437 l
h
f
Q
newpath
190.953 277.343 m
190.359 279.000 l
185.281 279.000 l
185.281 278.765 l
186.770 277.401 187.820 276.286 188.429 275.421  c
189.039 274.557 189.343 273.770 189.343 273.062  c
189.343 272.510 189.177 272.059 188.843 271.710  c
188.510 271.362 188.109 271.187 187.640 271.187  c
187.224 271.187 186.846 271.309 186.507 271.554  c
186.169 271.799 185.921 272.161 185.765 272.640  c
185.531 272.640 l
185.635 271.859 185.906 271.260 186.343 270.843  c
186.781 270.427 187.328 270.218 187.984 270.218  c
188.682 270.218 189.265 270.442 189.734 270.890  c
190.203 271.338 190.437 271.864 190.437 272.468  c
190.437 272.906 190.333 273.343 190.125 273.781  c
189.812 274.468 189.307 275.192 188.609 275.953  c
187.557 277.109 186.895 277.807 186.625 278.046  c
188.875 278.046 l
189.333 278.046 189.653 278.028 189.835 277.992  c
190.018 277.955 190.184 277.885 190.335 277.781  c
190.487 277.677 190.614 277.531 190.718 277.343  c
190.953 277.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
195.013 195.500 m
189.813 195.500 l
S
Q
q
newpath
195.013 121.590 m
189.813 121.590 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.953 129.343 m
190.359 131.000 l
185.281 131.000 l
185.281 130.765 l
186.770 129.401 187.820 128.286 188.429 127.421  c
189.039 126.557 189.343 125.770 189.343 125.062  c
189.343 124.510 189.177 124.059 188.843 123.710  c
188.510 123.362 188.109 123.187 187.640 123.187  c
187.224 123.187 186.846 123.309 186.507 123.554  c
186.169 123.799 185.921 124.161 185.765 124.640  c
185.531 124.640 l
185.635 123.859 185.906 123.260 186.343 122.843  c
186.781 122.427 187.328 122.218 187.984 122.218  c
188.682 122.218 189.265 122.442 189.734 122.890  c
190.203 123.338 190.437 123.864 190.437 124.468  c
190.437 124.906 190.333 125.343 190.125 125.781  c
189.812 126.468 189.307 127.192 188.609 127.953  c
187.557 129.109 186.895 129.807 186.625 130.046  c
188.875 130.046 l
189.333 130.046 189.653 130.028 189.835 129.992  c
190.018 129.955 190.184 129.885 190.335 129.781  c
190.487 129.677 190.614 129.531 190.718 129.343  c
190.953 129.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
195.013 47.6799 m
189.813 47.6799 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.046 53.8281 m
191.046 54.7343 l
189.890 54.7343 l
189.890 57.0000 l
188.843 57.0000 l
188.843 54.7343 l
185.203 54.7343 l
185.203 53.9218 l
189.203 48.2187 l
189.890 48.2187 l
189.890 53.8281 l
191.046 53.8281 l
h
188.843 53.8281 m
188.843 49.5468 l
185.828 53.8281 l
188.843 53.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, July 15, 2011 3:33:23 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
25.9213 -1.00000 365.078 363.027 rc
1.00000 0.0980392 0.0980392 RG
newpath
387.234 13.6233 m
372.661 6.37799 l
376.363 10.4825 l
S
newpath
369.087 31.7092 m
354.600 24.2948 l
358.253 28.4422 l
S
newpath
369.171 13.5422 m
354.517 6.45916 l
358.264 10.5223 l
S
newpath
387.148 31.7922 m
372.748 24.2118 l
376.352 28.4009 l
S
newpath
386.886 68.2503 m
373.009 59.7593 l
376.334 64.1715 l
S
newpath
386.679 86.5695 m
373.216 77.4428 l
376.330 82.0047 l
S
newpath
368.634 86.4818 m
355.053 77.5304 l
358.226 82.0516 l
S
newpath
368.835 68.1637 m
354.853 59.8457 l
358.232 64.2163 l
S
newpath
333.056 13.3440 m
318.215 6.65731 l
322.072 10.6183 l
S
newpath
332.981 31.5061 m
318.291 24.4979 l
322.059 28.5419 l
S
newpath
315.007 13.2215 m
300.057 6.77981 l
303.979 10.6768 l
S
newpath
314.936 31.3802 m
300.127 24.6239 l
303.965 28.6030 l
S
newpath
332.751 67.9503 m
318.521 60.0592 l
322.033 64.3255 l
S
newpath
332.566 86.2642 m
318.705 77.7481 l
322.022 82.1663 l
S
newpath
314.720 67.8168 m
300.344 60.1927 l
303.935 64.3927 l
S
newpath
314.546 86.1272 m
300.518 77.8851 l
303.922 82.2373 l
S
newpath
314.844 49.5743 m
300.219 42.4325 l
303.950 46.5107 l
S
newpath
332.883 49.7039 m
318.389 42.3028 l
322.046 46.4468 l
S
newpath
350.596 86.3811 m
336.883 77.6312 l
340.124 82.1050 l
S
newpath
350.789 68.0647 m
336.690 59.9448 l
340.132 64.2673 l
S
newpath
350.928 49.8154 m
336.551 42.1913 l
340.143 46.3913 l
S
newpath
351.031 31.6147 m
336.448 24.3894 l
340.155 28.4888 l
S
newpath
351.111 13.4498 m
336.368 6.55145 l
340.167 10.5672 l
S
newpath
368.979 49.9123 m
354.708 42.0945 l
358.242 46.3427 l
S
newpath
387.035 49.9971 m
372.860 42.0097 l
376.342 46.2997 l
S
newpath
385.163 142.233 m
374.732 129.787 l
376.469 135.023 l
S
newpath
367.145 142.160 m
356.542 129.859 l
358.352 135.071 l
S
newpath
367.891 123.437 m
355.797 112.580 l
358.260 117.520 l
S
newpath
385.917 123.521 m
373.978 112.496 l
376.371 117.470 l
S
newpath
383.849 161.123 m
376.046 146.900 l
376.728 152.371 l
S
newpath
363.485 179.947 m
360.202 164.078 l
359.246 169.509 l
S
newpath
365.830 161.076 m
357.857 146.947 l
358.605 152.409 l
S
newpath
381.545 179.956 m
378.350 164.069 l
377.364 169.495 l
S
newpath
331.150 141.973 m
320.121 130.047 l
322.113 135.192 l
S
newpath
313.178 141.849 m
301.885 130.171 l
303.992 135.271 l
S
newpath
313.879 123.087 m
301.185 112.930 l
303.926 117.722 l
S
newpath
331.869 123.224 m
319.402 112.793 l
322.037 117.644 l
S
newpath
329.837 160.952 m
321.435 147.071 l
322.349 152.509 l
S
newpath
311.871 160.867 m
303.192 147.155 l
304.216 152.574 l
S
newpath
309.364 179.906 m
305.700 164.119 l
304.875 169.571 l
S
newpath
327.391 179.923 m
323.880 164.102 l
323.003 169.546 l
S
newpath
345.433 179.936 m
342.046 164.089 l
341.126 169.526 l
S
newpath
347.825 161.020 m
339.655 147.003 l
340.478 152.455 l
S
newpath
349.140 142.075 m
338.339 129.945 l
340.233 135.127 l
S
newpath
349.874 123.339 m
337.605 112.678 l
340.148 117.577 l
S
newpath
260.899 12.7050 m
245.541 7.29632 l
249.722 10.9171 l
S
newpath
260.848 30.8463 m
245.592 25.1577 l
249.706 28.8544 l
S
newpath
278.869 31.0573 m
263.779 24.9468 l
267.787 28.7564 l
S
newpath
278.928 12.9086 m
263.720 7.09271 l
267.802 10.8236 l
S
newpath
260.688 67.2417 m
245.752 60.7679 l
249.666 64.6733 l
S
newpath
260.556 85.5290 m
245.884 78.4832 l
249.642 82.5369 l
S
newpath
278.539 85.7686 m
264.109 78.2436 l
267.730 82.4188 l
S
newpath
278.687 67.4707 m
263.961 60.5389 l
267.750 64.5632 l
S
newpath
224.834 30.2667 m
209.190 25.7374 l
213.572 29.1153 l
S
newpath
224.867 12.1486 m
209.157 7.85275 l
213.589 11.1650 l
S
newpath
242.702 66.9586 m
227.530 61.0509 l
231.590 64.8064 l
S
newpath
242.590 85.2305 m
227.643 78.7818 l
231.563 82.6807 l
S
newpath
224.640 84.8504 m
209.384 79.1618 l
213.498 82.8585 l
S
newpath
224.729 66.6018 m
209.295 61.4077 l
213.527 64.9700 l
S
newpath
224.790 48.4137 m
209.234 43.5931 l
213.552 47.0523 l
S
newpath
242.780 48.7513 m
227.452 43.2554 l
231.613 46.9000 l
S
newpath
242.837 30.5883 m
227.396 25.4158 l
231.633 28.9721 l
S
newpath
242.879 12.4568 m
227.353 7.54455 l
231.650 11.0291 l
S
newpath
260.781 49.0209 m
245.660 42.9859 l
249.687 46.7754 l
S
newpath
278.792 49.2403 m
263.856 42.7665 l
267.769 46.6719 l
S
newpath
259.427 141.256 m
247.013 130.764 l
249.623 135.628 l
S
newpath
260.026 122.460 m
246.414 113.557 l
249.603 118.067 l
S
newpath
277.310 141.504 m
265.338 130.515 l
267.746 135.482 l
S
newpath
277.953 122.717 m
264.695 113.300 l
267.707 117.929 l
S
newpath
258.191 160.429 m
248.250 147.593 l
249.782 152.891 l
S
newpath
255.434 179.808 m
251.006 164.217 l
250.448 169.702 l
S
newpath
273.374 179.853 m
269.274 164.173 l
268.601 169.645 l
S
newpath
276.036 160.619 m
266.612 147.403 l
267.933 152.758 l
S
newpath
291.355 179.883 m
287.501 164.142 l
286.742 169.603 l
S
newpath
241.591 140.926 m
228.641 131.093 l
231.504 135.815 l
S
newpath
223.812 140.472 m
210.213 131.548 l
213.395 136.063 l
S
newpath
224.268 121.693 m
209.757 114.324 l
213.423 118.460 l
S
newpath
242.130 122.130 m
228.102 113.887 l
231.506 118.240 l
S
newpath
240.418 160.162 m
229.814 147.861 l
231.624 153.072 l
S
newpath
202.251 179.400 m
195.565 164.625 l
195.824 170.133 l
S
newpath
219.796 179.626 m
214.228 164.400 l
214.076 169.911 l
S
newpath
222.749 159.763 m
211.276 148.260 l
213.461 153.326 l
S
newpath
237.559 179.741 m
232.674 164.285 l
232.277 169.784 l
S
newpath
224.502 103.193 m
209.522 96.8215 l
213.462 100.700 l
S
newpath
242.418 103.600 m
227.815 96.4142 l
231.533 100.503 l
S
newpath
260.356 103.916 m
246.085 96.0986 l
249.619 100.346 l
S
newpath
278.315 104.166 m
264.333 95.8485 l
267.713 100.219 l
S
newpath
293.935 160.760 m
284.921 147.263 l
286.077 152.655 l
S
newpath
295.230 141.697 m
283.626 130.323 l
285.869 135.365 l
S
newpath
295.905 122.921 m
282.950 113.096 l
285.816 117.816 l
S
newpath
296.293 104.368 m
282.563 95.6462 l
285.812 100.113 l
S
newpath
296.536 85.9645 m
282.320 78.0478 l
285.824 82.3204 l
S
newpath
296.699 67.6592 m
282.157 60.3503 l
285.841 64.4710 l
S
newpath
296.814 49.4218 m
282.042 42.5849 l
285.858 46.5849 l
S
newpath
296.899 31.2325 m
281.957 24.7715 l
285.874 28.6736 l
S
newpath
296.964 13.0782 m
281.892 6.92312 l
285.889 10.7445 l
S
newpath
314.287 104.535 m
300.777 95.4797 l
303.914 100.025 l
S
newpath
332.295 104.674 m
318.977 95.3405 l
322.019 99.9501 l
S
newpath
350.313 104.792 m
337.166 95.2227 l
340.124 99.8856 l
S
newpath
368.342 104.893 m
355.346 95.1217 l
358.231 99.8298 l
S
newpath
386.378 104.980 m
373.517 95.0342 l
376.337 99.7809 l
S
newpath
375.060 214.496 m
384.836 201.535 l
380.112 204.422 l
S
newpath
373.274 230.662 m
386.622 221.371 l
381.229 222.653 l
S
newpath
355.109 230.574 m
368.579 221.459 l
363.169 222.670 l
S
newpath
356.868 214.429 m
366.820 201.601 l
362.057 204.425 l
S
newpath
372.098 264.188 m
387.797 259.851 l
382.283 259.273 l
S
newpath
371.932 281.470 m
387.963 278.572 l
382.525 277.497 l
S
newpath
353.821 281.431 m
369.866 278.611 l
364.433 277.509 l
S
newpath
353.979 264.131 m
369.709 259.907 l
364.199 259.289 l
S
newpath
320.442 214.256 m
330.830 201.775 l
325.973 204.434 l
S
newpath
318.756 230.356 m
332.515 221.677 l
327.069 222.714 l
S
newpath
302.201 214.141 m
312.863 201.890 l
307.948 204.442 l
S
newpath
300.567 230.218 m
314.497 221.815 l
309.032 222.743 l
S
newpath
317.736 263.997 m
333.536 260.042 l
328.038 259.330 l
S
newpath
317.597 281.338 m
333.674 278.704 l
328.255 277.539 l
S
newpath
299.611 263.915 m
315.452 260.124 l
309.962 259.355 l
S
newpath
299.484 281.282 m
315.579 278.760 l
310.168 277.558 l
S
newpath
299.895 246.839 m
315.169 241.198 l
309.625 241.085 l
S
newpath
318.042 246.951 m
333.230 241.085 l
327.685 241.054 l
S
newpath
335.710 281.387 m
351.770 278.655 l
346.343 277.523 l
S
newpath
335.858 264.068 m
351.622 259.971 l
346.117 259.308 l
S
newpath
336.184 247.048 m
351.295 240.988 l
345.751 241.028 l
S
newpath
336.937 230.473 m
350.543 221.560 l
345.116 222.690 l
S
newpath
338.663 214.351 m
348.817 201.680 l
344.010 204.428 l
S
newpath
354.324 247.134 m
369.364 240.902 l
363.820 241.005 l
S
newpath
372.460 247.209 m
387.436 240.827 l
381.893 240.986 l
S
newpath
371.854 298.951 m
388.041 297.094 l
382.684 295.670 l
S
newpath
371.804 334.263 m
388.091 333.787 l
382.876 331.913 l
S
newpath
353.700 334.257 m
369.987 333.793 l
364.774 331.916 l
S
newpath
353.714 316.548 m
369.973 315.500 l
364.695 313.810 l
S
newpath
353.748 298.925 m
369.940 297.119 l
364.588 295.678 l
S
newpath
371.819 316.562 m
388.076 315.485 l
382.795 313.805 l
S
newpath
371.801 352.026 m
388.094 352.026 l
382.937 350.001 l
S
newpath
353.697 352.026 m
369.990 352.026 l
364.833 350.001 l
S
newpath
317.533 298.865 m
333.738 297.180 l
328.398 295.699 l
S
newpath
317.492 334.241 m
333.780 333.809 l
328.570 331.921 l
S
newpath
299.426 298.828 m
315.638 297.216 l
310.304 295.711 l
S
newpath
299.388 334.231 m
315.676 333.819 l
310.469 331.925 l
S
newpath
299.399 316.491 m
315.665 315.556 l
310.399 313.830 l
S
newpath
317.504 316.512 m
333.768 315.535 l
328.497 313.823 l
S
newpath
317.489 352.026 m
333.783 352.026 l
328.626 350.001 l
S
newpath
299.385 352.026 m
315.679 352.026 l
310.522 350.001 l
S
newpath
335.593 352.026 m
351.886 352.026 l
346.729 350.001 l
S
newpath
335.596 334.249 m
351.883 333.801 l
346.672 331.918 l
S
newpath
335.609 316.531 m
351.870 315.516 l
346.596 313.816 l
S
newpath
335.641 298.897 m
351.839 297.148 l
346.492 295.688 l
S
newpath
247.297 213.577 m
259.143 202.453 l
253.995 204.502 l
S
newpath
245.921 229.615 m
260.519 222.418 l
254.994 222.882 l
S
newpath
264.151 229.857 m
278.497 222.176 l
272.991 222.824 l
S
newpath
265.637 213.815 m
277.011 202.215 l
271.953 204.473 l
S
newpath
245.227 263.583 m
261.214 260.456 l
255.760 259.459 l
S
newpath
245.140 281.056 m
261.300 278.986 l
255.925 277.633 l
S
newpath
263.256 281.143 m
279.392 278.899 l
274.003 277.603 l
S
newpath
263.357 263.712 m
279.291 260.327 l
273.822 259.418 l
S
newpath
228.904 213.256 m
241.328 202.774 l
236.078 204.548 l
S
newpath
227.674 229.313 m
242.558 222.721 l
237.018 222.957 l
S
newpath
209.409 228.927 m
224.615 223.106 l
219.071 223.059 l
S
newpath
210.443 212.806 m
223.582 203.225 l
218.219 204.624 l
S
newpath
208.906 280.827 m
225.119 279.215 l
219.784 277.710 l
S
newpath
208.959 263.243 m
225.066 260.796 l
219.660 259.569 l
S
newpath
209.083 245.877 m
224.942 242.160 l
219.455 241.365 l
S
newpath
227.023 280.952 m
243.209 279.090 l
237.852 277.667 l
S
newpath
227.094 263.430 m
243.139 260.609 l
237.706 259.508 l
S
newpath
227.256 246.150 m
242.976 241.887 l
237.465 241.282 l
S
newpath
245.425 246.371 m
261.016 241.665 l
255.489 241.217 l
S
newpath
263.587 246.554 m
279.061 241.482 l
273.526 241.164 l
S
newpath
245.100 298.682 m
261.340 297.362 l
256.034 295.762 l
S
newpath
245.075 334.194 m
261.365 333.856 l
256.167 331.938 l
S
newpath
245.082 316.406 m
261.358 315.642 l
256.110 313.860 l
S
newpath
263.179 334.208 m
279.469 333.842 l
274.267 331.933 l
S
newpath
263.188 316.438 m
279.460 315.609 l
274.206 313.849 l
S
newpath
263.209 298.738 m
279.439 297.306 l
274.122 295.742 l
S
newpath
245.073 352.026 m
261.367 352.026 l
256.210 350.001 l
S
newpath
263.177 352.026 m
279.471 352.026 l
274.314 350.001 l
S
newpath
208.866 334.156 m
225.158 333.894 l
219.969 331.952 l
S
newpath
208.871 316.320 m
225.153 315.727 l
219.925 313.891 l
S
newpath
208.882 298.535 m
225.143 297.509 l
219.867 295.813 l
S
newpath
208.865 352.026 m
225.159 352.026 l
220.002 350.001 l
S
newpath
226.969 352.026 m
243.263 352.026 l
238.106 350.001 l
S
newpath
226.971 334.177 m
243.261 333.873 l
238.067 331.945 l
S
newpath
226.977 316.367 m
243.256 315.680 l
238.017 313.874 l
S
newpath
226.991 298.615 m
243.241 297.429 l
237.949 295.785 l
S
newpath
281.281 352.026 m
297.575 352.026 l
292.418 350.001 l
S
newpath
281.284 334.221 m
297.572 333.829 l
292.368 331.929 l
S
newpath
281.293 316.467 m
297.563 315.581 l
292.302 313.839 l
S
newpath
281.317 298.787 m
297.538 297.258 l
292.212 295.726 l
S
newpath
281.371 281.217 m
297.485 278.824 l
292.084 277.579 l
S
newpath
281.485 263.822 m
297.371 260.217 l
291.890 259.384 l
S
newpath
281.743 246.708 m
297.112 241.328 l
291.572 241.121 l
S
newpath
282.365 230.055 m
296.490 221.979 l
291.005 222.779 l
S
newpath
283.935 213.998 m
294.921 202.033 l
289.940 204.454 l
S
newpath
188.853 11.2512 m
172.755 8.75015 l
177.536 11.5426 l
S
newpath
188.826 47.4159 m
172.782 44.5909 l
177.505 47.4791 l
S
newpath
188.842 29.3242 m
172.767 26.6798 l
177.522 29.5148 l
S
newpath
170.824 28.6129 m
154.577 27.3911 l
159.566 29.7972 l
S
newpath
170.826 10.5778 m
154.574 9.42355 l
159.573 11.8088 l
S
newpath
188.805 65.5345 m
172.804 62.4750 l
177.484 65.4321 l
S
newpath
188.772 83.6942 m
172.836 80.3180 l
177.456 83.3673 l
S
newpath
170.809 82.7915 m
154.592 81.2208 l
159.527 83.7336 l
S
newpath
170.816 64.7142 m
154.585 63.2954 l
159.544 65.7618 l
S
newpath
115.852 6.75378 m
100.925 13.2475 l
106.466 13.0476 l
S
newpath
115.781 24.5971 m
100.996 31.4069 l
106.532 31.0892 l
S
newpath
134.463 26.3238 m
118.523 29.6802 l
123.990 30.5991 l
S
newpath
134.481 8.41201 m
118.504 11.5893 l
123.960 12.5695 l
S
newpath
115.562 60.1643 m
101.216 67.8453 l
106.722 67.1973 l
S
newpath
115.385 77.8559 m
101.392 86.1564 l
106.865 85.2684 l
S
newpath
134.352 79.8747 m
118.633 84.1376 l
124.144 84.7421 l
S
newpath
134.403 62.0686 m
118.582 65.9410 l
124.076 66.6818 l
S
newpath
115.687 42.4049 m
101.090 49.6019 l
106.615 49.1384 l
S
newpath
134.438 44.2127 m
118.547 47.7941 l
124.027 48.6356 l
S
newpath
152.730 81.5466 m
136.463 82.4657 l
141.727 84.1967 l
S
newpath
152.733 63.5899 m
136.460 64.4196 l
141.715 66.1795 l
S
newpath
152.734 45.6213 m
136.459 46.3855 l
141.706 48.1665 l
S
newpath
152.735 27.6450 m
136.458 28.3591 l
141.699 30.1562 l
S
newpath
152.736 9.66345 m
136.457 10.3379 l
141.694 12.1478 l
S
newpath
170.821 46.6570 m
154.580 45.3498 l
159.556 47.7821 l
S
newpath
188.628 120.266 m
172.980 115.751 l
177.365 119.125 l
S
newpath
188.721 101.920 m
172.888 98.0943 l
177.418 101.273 l
S
newpath
188.432 138.854 m
173.176 133.166 l
177.290 136.862 l
S
newpath
170.730 137.379 m
154.671 134.641 l
159.410 137.504 l
S
newpath
170.776 119.074 m
154.624 116.943 l
159.469 119.625 l
S
newpath
170.797 100.902 m
154.603 99.1130 l
159.504 101.692 l
S
newpath
187.873 158.038 m
173.735 149.984 l
177.198 154.291 l
S
newpath
169.330 176.721 m
156.071 167.304 l
159.084 171.933 l
S
newpath
170.581 156.064 m
154.819 151.959 l
159.292 155.217 l
S
newpath
185.196 178.836 m
176.413 165.190 l
177.477 170.600 l
S
newpath
114.007 130.144 m
102.770 141.876 l
107.802 139.559 l
S
newpath
114.711 112.900 m
102.066 123.117 l
107.353 121.455 l
S
newpath
133.837 132.504 m
119.148 139.515 l
124.679 139.122 l
S
newpath
134.130 115.188 m
118.856 120.829 l
124.399 120.942 l
S
newpath
134.272 97.6011 m
118.714 102.414 l
124.243 102.824 l
S
newpath
112.698 147.137 m
104.079 160.886 l
108.535 157.605 l
S
newpath
110.204 164.116 m
106.573 179.910 l
109.708 175.362 l
S
newpath
130.136 164.767 m
122.849 179.258 l
126.977 175.577 l
S
newpath
133.062 149.221 m
119.923 158.802 l
125.286 157.402 l
S
newpath
136.968 187.170 m
152.225 192.858 l
148.111 189.162 l
S
newpath
152.117 168.897 m
137.076 175.128 l
142.620 175.025 l
S
newpath
152.650 152.788 m
136.543 155.235 l
141.949 156.462 l
S
newpath
152.703 135.204 m
136.490 136.816 l
141.824 138.321 l
S
newpath
152.719 117.384 m
136.474 118.633 l
141.773 120.257 l
S
newpath
152.726 99.4836 m
136.467 100.531 l
141.745 102.220 l
S
newpath
56.0531 2.14193 m
52.1013 17.8594 l
55.3280 13.3759 l
S
newpath
55.9493 20.1182 m
52.2052 35.8858 l
55.3724 31.3606 l
S
newpath
76.2748 20.9984 m
68.0875 35.0057 l
72.4397 31.5899 l
S
newpath
76.4509 3.10171 m
67.9115 16.8996 l
72.3488 13.5939 l
S
newpath
96.3938 22.6425 m
84.1763 33.3616 l
89.3908 31.4874 l
S
newpath
95.9723 58.2047 m
84.5978 69.8048 l
89.6562 67.5471 l
S
newpath
95.6671 75.9249 m
84.9031 88.0874 l
89.8389 85.5758 l
S
newpath
55.6989 56.0663 m
52.4555 71.9433 l
55.4780 67.3212 l
S
newpath
55.5463 74.0383 m
52.6081 89.9740 l
55.5414 85.2954 l
S
newpath
75.5322 74.6225 m
68.8301 89.3897 l
72.8078 85.5488 l
S
newpath
75.8245 56.7594 m
68.5378 71.2502 l
72.6658 67.5694 l
S
newpath
35.9733 1.90005 m
35.9733 18.1013 l
38.0100 12.9735 l
S
newpath
35.9733 19.9014 m
35.9733 36.1026 l
38.0100 30.9748 l
S
newpath
35.9733 55.9041 m
35.9733 72.1054 l
38.0100 66.9776 l
S
newpath
35.9733 73.9055 m
35.9733 90.1068 l
38.0100 84.9790 l
S
newpath
35.9733 37.9028 m
35.9733 54.1040 l
38.0100 48.9762 l
S
newpath
55.8321 38.0929 m
52.3223 53.9138 l
55.4221 49.3427 l
S
newpath
76.0686 38.8845 m
68.2937 53.1223 l
72.5444 49.5823 l
S
newpath
96.2079 40.4413 m
84.3623 51.5655 l
89.5099 49.5169 l
S
newpath
93.9284 128.764 m
86.6417 143.255 l
90.7697 139.575 l
S
newpath
54.9213 127.953 m
53.2332 144.067 l
55.7932 139.177 l
S
newpath
55.1641 109.980 m
52.9903 126.037 l
55.6968 121.225 l
S
newpath
74.2046 128.163 m
70.1577 143.857 l
73.4114 139.393 l
S
newpath
74.7437 110.319 m
69.6187 125.698 l
73.1741 121.467 l
S
newpath
94.7065 111.205 m
85.8637 124.812 l
90.3731 121.604 l
S
newpath
92.8190 146.312 m
87.7511 161.710 l
91.2908 157.467 l
S
newpath
54.2808 163.915 m
53.8736 180.111 l
56.0386 175.035 l
S
newpath
72.6815 163.927 m
71.6808 180.098 l
74.0304 175.104 l
S
newpath
91.2557 163.970 m
89.3144 180.056 l
91.9511 175.206 l
S
newpath
35.9733 127.909 m
35.9733 144.110 l
38.0100 138.983 l
S
newpath
35.9733 109.908 m
35.9733 126.109 l
38.0100 120.981 l
S
newpath
35.9733 163.912 m
35.9733 180.113 l
38.0100 174.985 l
S
newpath
35.9733 145.911 m
35.9733 162.112 l
38.0100 156.984 l
S
newpath
54.6314 145.929 m
53.5230 162.093 l
55.9058 157.115 l
S
newpath
73.5296 146.022 m
70.8327 162.000 l
73.6949 157.278 l
S
newpath
35.9733 91.9069 m
35.9733 108.108 l
38.0100 102.980 l
S
newpath
55.3699 92.0095 m
52.7845 108.005 l
55.6137 103.264 l
S
newpath
75.1781 92.4749 m
69.1843 107.540 l
72.9752 103.516 l
S
newpath
95.2612 93.5936 m
85.3090 106.421 l
90.0715 103.598 l
S
newpath
96.5436 4.81478 m
84.0266 15.1865 l
89.2921 13.4596 l
S
newpath
115.124 95.4499 m
101.654 104.565 l
107.063 103.354 l
S
newpath
173.284 211.131 m
188.324 204.900 l
182.781 205.003 l
S
newpath
172.846 227.748 m
188.763 224.286 l
183.290 223.403 l
S
newpath
154.594 226.823 m
170.807 225.211 l
165.473 223.706 l
S
newpath
154.698 209.531 m
170.703 206.500 l
165.256 205.470 l
S
newpath
172.688 262.720 m
188.921 261.319 l
183.607 259.745 l
S
newpath
172.671 280.480 m
188.938 279.561 l
183.674 277.830 l
S
newpath
154.556 280.231 m
170.844 279.811 l
165.636 277.919 l
S
newpath
154.560 262.341 m
170.841 261.698 l
165.607 259.878 l
S
newpath
103.087 201.865 m
113.690 214.166 l
111.881 208.955 l
S
newpath
101.441 221.786 m
115.336 230.248 l
112.002 225.843 l
S
newpath
118.647 223.833 m
134.338 228.201 l
129.921 224.868 l
S
newpath
119.304 204.203 m
133.681 211.827 l
130.089 207.627 l
S
newpath
100.472 260.106 m
116.305 263.933 l
111.775 260.754 l
S
newpath
100.343 278.748 m
116.434 281.294 l
111.661 278.488 l
S
newpath
118.367 279.433 m
134.618 280.608 l
129.622 278.217 l
S
newpath
118.396 261.125 m
134.589 262.914 l
129.689 260.335 l
S
newpath
100.761 241.174 m
116.017 246.862 l
111.903 243.166 l
S
newpath
118.463 242.649 m
134.522 245.387 l
129.783 242.524 l
S
newpath
136.451 279.898 m
152.742 280.144 l
147.617 278.041 l
S
newpath
136.452 261.832 m
152.741 262.207 l
147.633 260.064 l
S
newpath
136.455 243.729 m
152.738 244.307 l
147.657 242.100 l
S
newpath
136.464 225.545 m
152.729 226.488 l
147.700 224.168 l
S
newpath
136.500 207.121 m
152.693 208.910 l
147.793 206.331 l
S
newpath
154.569 244.513 m
170.832 243.523 l
165.560 241.815 l
S
newpath
172.730 245.093 m
188.879 242.943 l
183.497 241.616 l
S
newpath
172.663 298.314 m
188.946 297.730 l
183.719 295.891 l
S
newpath
172.658 334.099 m
188.951 333.951 l
183.775 331.973 l
S
newpath
154.554 334.059 m
170.847 333.991 l
165.682 331.987 l
S
newpath
154.554 316.101 m
170.847 315.946 l
165.671 313.970 l
S
newpath
154.555 298.156 m
170.846 297.889 l
165.656 295.948 l
S
newpath
172.659 316.192 m
188.949 315.855 l
183.751 313.937 l
S
newpath
172.658 352.026 m
188.951 352.026 l
183.794 350.001 l
S
newpath
154.554 352.026 m
170.847 352.026 l
165.690 350.001 l
S
newpath
100.283 297.209 m
116.494 298.836 l
111.568 296.306 l
S
newpath
100.245 333.817 m
116.533 334.233 l
111.430 332.077 l
S
newpath
100.256 315.552 m
116.522 316.495 l
111.492 314.175 l
S
newpath
118.346 333.930 m
134.639 334.120 l
129.506 332.035 l
S
newpath
118.349 315.808 m
134.636 316.240 l
129.536 314.078 l
S
newpath
118.354 297.649 m
134.631 298.396 l
129.573 296.136 l
S
newpath
100.242 352.026 m
116.535 352.026 l
111.378 350.001 l
S
newpath
118.346 352.026 m
134.639 352.026 l
129.482 350.001 l
S
newpath
136.450 352.026 m
152.743 352.026 l
147.586 350.001 l
S
newpath
136.450 334.005 m
152.743 334.045 l
147.591 332.007 l
S
newpath
136.450 315.979 m
152.743 316.069 l
147.598 314.015 l
S
newpath
136.450 297.944 m
152.743 298.100 l
147.606 296.026 l
S
newpath
86.9419 200.628 m
93.6282 215.402 l
93.3693 209.895 l
S
newpath
84.9832 219.866 m
95.5869 232.167 l
93.7772 226.956 l
S
newpath
53.3168 199.950 m
54.8376 216.081 l
56.3841 210.786 l
S
newpath
52.6451 218.042 m
55.5094 233.991 l
56.6078 228.587 l
S
newpath
68.9029 218.601 m
75.4594 233.433 l
75.2488 227.923 l
S
newpath
70.3493 200.122 m
74.0130 215.909 l
74.8380 210.457 l
S
newpath
49.4618 273.346 m
58.6926 286.696 l
57.4493 281.323 l
S
newpath
50.7341 254.632 m
57.4204 269.407 l
57.1614 263.899 l
S
newpath
65.1674 275.900 m
79.1949 284.142 l
75.7912 279.790 l
S
newpath
66.1341 256.591 m
78.2282 267.448 l
75.7652 262.508 l
S
newpath
35.9733 199.915 m
35.9733 216.116 l
38.0100 210.988 l
S
newpath
35.9733 217.916 m
35.9733 234.117 l
38.0100 228.990 l
S
newpath
35.9733 271.920 m
35.9733 288.121 l
38.0100 282.994 l
S
newpath
35.9733 253.919 m
35.9733 270.120 l
38.0100 264.992 l
S
newpath
35.9733 235.917 m
35.9733 252.119 l
38.0100 246.991 l
S
newpath
51.7961 236.242 m
56.3583 251.795 l
56.8696 246.305 l
S
newpath
67.4299 237.438 m
76.9324 250.598 l
75.5793 245.252 l
S
newpath
64.0714 333.254 m
80.2910 334.796 l
75.3512 332.292 l
S
newpath
64.2191 314.308 m
80.1432 317.739 l
75.5344 314.674 l
S
newpath
64.5531 295.178 m
79.8092 300.867 l
75.6957 297.170 l
S
newpath
64.0344 352.026 m
80.3279 352.026 l
75.1709 350.001 l
S
newpath
35.9733 307.923 m
35.9733 324.124 l
38.0100 318.996 l
S
newpath
35.9733 352.026 m
35.9733 352.026 l
S
newpath
35.9733 325.924 m
35.9733 342.126 l
38.0100 336.998 l
S
newpath
45.9305 352.026 m
62.2240 352.026 l
57.0670 350.001 l
S
newpath
46.1470 332.170 m
62.0074 335.880 l
57.4540 332.735 l
S
newpath
46.8889 312.212 m
61.2655 319.836 l
57.6737 315.636 l
S
newpath
48.0910 292.528 m
60.0635 303.517 l
57.6556 298.551 l
S
newpath
35.9733 289.922 m
35.9733 306.123 l
38.0100 300.995 l
S
newpath
82.1383 352.026 m
98.4319 352.026 l
93.2748 350.001 l
S
newpath
82.1481 333.628 m
98.4221 334.422 l
93.3710 332.148 l
S
newpath
82.1881 315.129 m
98.3820 316.918 l
93.4815 314.339 l
S
newpath
82.2849 296.492 m
98.2853 299.552 l
93.6057 296.595 l
S
newpath
82.4884 277.672 m
98.0817 282.370 l
93.7370 278.945 l
S
newpath
82.8922 258.616 m
97.6780 265.423 l
93.8539 261.431 l
S
newpath
83.6558 239.310 m
96.9144 248.727 l
93.9018 244.098 l
S
newpath
35.9733 181.913 m
35.9733 198.115 l
38.0100 192.987 l
S
newpath
53.8510 181.916 m
54.3034 198.111 l
56.1961 192.929 l
S
newpath
71.6254 181.932 m
72.7369 198.096 l
74.4171 192.842 l
S
newpath
89.2084 181.984 m
91.3618 198.044 l
92.6990 192.693 l
S
newpath
106.383 182.163 m
110.394 197.865 l
111.099 192.397 l
S
newpath
122.536 182.933 m
130.449 197.095 l
129.725 191.629 l
S
newpath
155.848 194.394 m
169.553 185.634 l
164.114 186.703 l
S
newpath
176.083 196.616 m
185.526 183.412 l
180.877 186.418 l
S
newpath
190.761 352.026 m
207.055 352.026 l
201.898 350.001 l
S
newpath
190.762 334.131 m
207.054 333.919 l
201.871 331.961 l
S
newpath
190.765 316.264 m
207.051 315.784 l
201.836 313.911 l
S
newpath
190.772 298.437 m
207.044 297.607 l
201.790 295.847 l
S
newpath
190.788 280.673 m
207.029 279.368 l
201.724 277.763 l
S
newpath
190.823 263.012 m
206.994 261.027 l
201.626 259.645 l
S
newpath
190.905 245.534 m
206.911 242.502 l
201.464 241.472 l
S
newpath
191.129 228.423 m
206.687 223.610 l
201.158 223.200 l
S
newpath
191.900 212.145 m
205.917 203.886 l
200.442 204.758 l
S
newpath
195.265 197.259 m
202.552 182.769 l
198.424 186.449 l
S
newpath
205.224 159.128 m
192.593 148.894 l
195.304 153.703 l
S
newpath
206.097 139.822 m
191.720 132.198 l
195.312 136.398 l
S
newpath
206.439 121.099 m
191.378 114.918 l
195.368 118.746 l
S
newpath
206.608 102.654 m
191.209 97.3610 l
195.417 100.950 l
S
newpath
206.705 84.3554 m
191.112 79.6569 l
195.456 83.0821 l
S
newpath
206.766 66.1418 m
191.050 61.8677 l
195.487 65.1739 l
S
newpath
206.808 47.9818 m
191.008 44.0250 l
195.512 47.2412 l
S
newpath
206.838 29.8574 m
190.978 26.1467 l
195.532 29.2924 l
S
newpath
206.861 11.7579 m
190.955 8.24340 l
195.548 11.3327 l
S
newpath
213.960 197.525 m
220.064 182.503 l
216.244 186.499 l
S
newpath
232.430 197.662 m
237.802 182.366 l
234.179 186.540 l
S
newpath
250.781 197.743 m
255.659 182.285 l
252.172 186.571 l
S
newpath
269.063 197.796 m
273.585 182.232 l
270.197 186.596 l
S
newpath
287.300 197.834 m
291.555 182.194 l
288.243 186.615 l
S
newpath
305.508 197.861 m
309.555 182.167 l
306.302 186.631 l
S
newpath
323.696 197.882 m
327.576 182.146 l
324.370 186.644 l
S
newpath
341.868 197.898 m
345.612 182.130 l
342.445 186.655 l
S
newpath
360.028 197.911 m
363.659 182.117 l
360.524 186.665 l
S
newpath
378.180 197.922 m
381.715 182.106 l
378.608 186.673 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
357.016 352.026 m
357.016 354.626 l
S
newpath
334.084 352.026 m
334.084 354.626 l
S
newpath
311.153 352.026 m
311.153 354.626 l
S
newpath
288.221 352.026 m
288.221 354.626 l
S
newpath
219.426 352.026 m
219.426 354.626 l
S
newpath
242.358 352.026 m
242.358 354.626 l
S
newpath
196.494 352.026 m
196.494 354.626 l
S
newpath
173.563 352.026 m
173.563 354.626 l
S
newpath
127.699 352.026 m
127.699 354.626 l
S
newpath
104.768 352.026 m
104.768 354.626 l
S
newpath
81.8366 352.026 m
81.8366 354.626 l
S
newpath
58.9049 352.026 m
58.9049 354.626 l
S
newpath
26.9213 352.026 m
389.000 352.026 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 375 14 15 rc
newpath
209.171 381.187 m
211.906 381.187 l
211.906 381.421 l
211.729 381.421 211.606 381.450 211.539 381.507  c
211.471 381.565 211.437 381.645 211.437 381.750  c
211.437 381.843 211.510 382.000 211.656 382.218  c
211.708 382.281 211.781 382.385 211.875 382.531  c
212.281 383.187 l
212.765 382.531 l
213.067 382.114 213.218 381.849 213.218 381.734  c
213.218 381.651 213.182 381.578 213.109 381.515  c
213.036 381.453 212.921 381.421 212.765 381.421  c
212.765 381.187 l
214.718 381.187 l
214.718 381.421 l
214.520 381.432 214.343 381.489 214.187 381.593  c
213.979 381.739 213.692 382.052 213.328 382.531  c
212.546 383.593 l
213.984 385.671 l
214.338 386.182 214.593 386.489 214.750 386.593  c
214.906 386.697 215.104 386.755 215.343 386.765  c
215.343 387.000 l
212.593 387.000 l
212.593 386.765 l
212.791 386.765 212.942 386.724 213.046 386.640  c
213.130 386.588 213.171 386.510 213.171 386.406  c
213.171 386.312 213.036 386.067 212.765 385.671  c
211.906 384.421 l
210.968 385.671 l
210.687 386.057 210.546 386.286 210.546 386.359  c
210.546 386.463 210.593 386.557 210.687 386.640  c
210.781 386.724 210.921 386.765 211.109 386.765  c
211.109 387.000 l
209.218 387.000 l
209.218 386.765 l
209.364 386.744 209.494 386.692 209.609 386.609  c
209.776 386.484 210.046 386.171 210.421 385.671  c
211.640 384.046 l
210.546 382.453 l
210.234 381.994 209.992 381.708 209.820 381.593  c
209.648 381.479 209.432 381.421 209.171 381.421  c
209.171 381.187 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
35.9733 352.026 m
35.9733 357.226 l
S
Q
q
newpath
150.631 352.026 m
150.631 357.226 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
148.468 371.750 m
148.468 370.770 148.617 369.924 148.914 369.210  c
149.210 368.497 149.604 367.968 150.093 367.625  c
150.479 367.354 150.875 367.218 151.281 367.218  c
151.937 367.218 152.526 367.552 153.046 368.218  c
153.703 369.052 154.031 370.182 154.031 371.609  c
154.031 372.609 153.888 373.458 153.601 374.156  c
153.315 374.854 152.947 375.362 152.500 375.679  c
152.052 375.997 151.625 376.156 151.218 376.156  c
150.395 376.156 149.708 375.671 149.156 374.703  c
148.697 373.880 148.468 372.895 148.468 371.750  c
h
149.718 371.906 m
149.718 373.093 149.864 374.062 150.156 374.812  c
150.395 375.437 150.755 375.750 151.234 375.750  c
151.463 375.750 151.700 375.648 151.945 375.445  c
152.190 375.242 152.375 374.895 152.500 374.406  c
152.697 373.687 152.796 372.661 152.796 371.328  c
152.796 370.349 152.692 369.531 152.484 368.875  c
152.338 368.385 152.140 368.041 151.890 367.843  c
151.724 367.708 151.515 367.640 151.265 367.640  c
150.984 367.640 150.729 367.765 150.500 368.015  c
150.197 368.369 149.992 368.924 149.882 369.679  c
149.773 370.434 149.718 371.177 149.718 371.906  c
h
156.125 374.765 m
156.322 374.765 156.489 374.835 156.625 374.976  c
156.760 375.117 156.828 375.281 156.828 375.468  c
156.828 375.666 156.760 375.833 156.625 375.968  c
156.489 376.104 156.322 376.171 156.125 376.171  c
155.927 376.171 155.760 376.104 155.625 375.968  c
155.489 375.833 155.421 375.666 155.421 375.468  c
155.421 375.270 155.489 375.104 155.625 374.968  c
155.760 374.833 155.927 374.765 156.125 374.765  c
h
163.390 367.390 m
162.890 368.468 l
160.312 368.468 l
159.750 369.625 l
160.864 369.791 161.750 370.208 162.406 370.875  c
162.968 371.447 163.250 372.125 163.250 372.906  c
163.250 373.364 163.158 373.786 162.976 374.171  c
162.794 374.557 162.562 374.885 162.281 375.156  c
162.000 375.427 161.687 375.640 161.343 375.796  c
160.864 376.036 160.364 376.156 159.843 376.156  c
159.333 376.156 158.960 376.067 158.726 375.890  c
158.492 375.713 158.375 375.520 158.375 375.312  c
158.375 375.187 158.424 375.080 158.523 374.992  c
158.622 374.903 158.744 374.859 158.890 374.859  c
158.994 374.859 159.088 374.875 159.171 374.906  c
159.255 374.937 159.395 375.026 159.593 375.171  c
159.916 375.390 160.239 375.500 160.562 375.500  c
161.062 375.500 161.497 375.312 161.867 374.937  c
162.237 374.562 162.421 374.104 162.421 373.562  c
162.421 373.041 162.255 372.557 161.921 372.109  c
161.588 371.661 161.130 371.312 160.546 371.062  c
160.078 370.875 159.447 370.765 158.656 370.734  c
160.312 367.390 l
163.390 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
265.289 352.026 m
265.289 357.226 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
268.531 368.234 m
270.625 367.218 l
270.828 367.218 l
270.828 374.484 l
270.828 374.963 270.849 375.263 270.890 375.382  c
270.932 375.502 271.015 375.593 271.140 375.656  c
271.265 375.718 271.520 375.755 271.906 375.765  c
271.906 376.000 l
268.671 376.000 l
268.671 375.765 l
269.078 375.755 269.341 375.718 269.460 375.656  c
269.580 375.593 269.664 375.510 269.710 375.406  c
269.757 375.302 269.781 374.994 269.781 374.484  c
269.781 369.843 l
269.781 369.208 269.760 368.802 269.718 368.625  c
269.687 368.489 269.632 368.390 269.554 368.328  c
269.476 368.265 269.380 368.234 269.265 368.234  c
269.109 368.234 268.895 368.302 268.625 368.437  c
268.531 368.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.948 352.026 m
379.948 357.226 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
378.531 368.234 m
380.625 367.218 l
380.828 367.218 l
380.828 374.484 l
380.828 374.963 380.849 375.263 380.890 375.382  c
380.932 375.502 381.015 375.593 381.140 375.656  c
381.265 375.718 381.520 375.755 381.906 375.765  c
381.906 376.000 l
378.671 376.000 l
378.671 375.765 l
379.078 375.755 379.341 375.718 379.460 375.656  c
379.580 375.593 379.664 375.510 379.710 375.406  c
379.757 375.302 379.781 374.994 379.781 374.484  c
379.781 369.843 l
379.781 369.208 379.760 368.802 379.718 368.625  c
379.687 368.489 379.632 368.390 379.554 368.328  c
379.476 368.265 379.380 368.234 379.265 368.234  c
379.109 368.234 378.895 368.302 378.625 368.437  c
378.531 368.234 l
h
385.125 374.765 m
385.322 374.765 385.489 374.835 385.625 374.976  c
385.760 375.117 385.828 375.281 385.828 375.468  c
385.828 375.666 385.760 375.833 385.625 375.968  c
385.489 376.104 385.322 376.171 385.125 376.171  c
384.927 376.171 384.760 376.104 384.625 375.968  c
384.489 375.833 384.421 375.666 384.421 375.468  c
384.421 375.270 384.489 375.104 384.625 374.968  c
384.760 374.833 384.927 374.765 385.125 374.765  c
h
392.390 367.390 m
391.890 368.468 l
389.312 368.468 l
388.750 369.625 l
389.864 369.791 390.750 370.208 391.406 370.875  c
391.968 371.447 392.250 372.125 392.250 372.906  c
392.250 373.364 392.158 373.786 391.976 374.171  c
391.794 374.557 391.562 374.885 391.281 375.156  c
391.000 375.427 390.687 375.640 390.343 375.796  c
389.864 376.036 389.364 376.156 388.843 376.156  c
388.333 376.156 387.960 376.067 387.726 375.890  c
387.492 375.713 387.375 375.520 387.375 375.312  c
387.375 375.187 387.424 375.080 387.523 374.992  c
387.622 374.903 387.744 374.859 387.890 374.859  c
387.994 374.859 388.088 374.875 388.171 374.906  c
388.255 374.937 388.395 375.026 388.593 375.171  c
388.916 375.390 389.239 375.500 389.562 375.500  c
390.062 375.500 390.497 375.312 390.867 374.937  c
391.237 374.562 391.421 374.104 391.421 373.562  c
391.421 373.041 391.255 372.557 390.921 372.109  c
390.588 371.661 390.130 371.312 389.546 371.062  c
389.078 370.875 388.447 370.765 387.656 370.734  c
389.312 367.390 l
392.390 367.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
35.9733 52.7539 m
33.3733 52.7539 l
S
newpath
35.9733 138.260 m
33.3733 138.260 l
S
newpath
35.9733 223.767 m
33.3733 223.767 l
S
newpath
35.9733 309.273 m
33.3733 309.273 l
S
newpath
35.9733 361.027 m
35.9733 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 169 15 15 rc
newpath
5.07812 175.187 m
7.78125 175.187 l
7.78125 175.421 l
7.65625 175.421 l
7.46875 175.421 7.32552 175.463 7.22656 175.546  c
7.12760 175.630 7.07812 175.734 7.07812 175.859  c
7.07812 176.015 7.15104 176.239 7.29687 176.531  c
8.70312 179.468 l
10.0156 176.265 l
10.0781 176.088 10.1093 175.916 10.1093 175.750  c
10.1093 175.666 10.0989 175.609 10.0781 175.578  c
10.0364 175.526 9.98177 175.487 9.91406 175.460  c
9.84635 175.434 9.71875 175.421 9.53125 175.421  c
9.53125 175.187 l
11.4218 175.187 l
11.4218 175.421 l
11.2656 175.442 11.1458 175.476 11.0625 175.523  c
10.9791 175.570 10.8854 175.666 10.7812 175.812  c
10.7395 175.864 10.6666 176.026 10.5625 176.296  c
8.20312 182.093 l
7.97395 182.656 7.67447 183.083 7.30468 183.375  c
6.93489 183.666 6.57812 183.812 6.23437 183.812  c
5.98437 183.812 5.77864 183.739 5.61718 183.593  c
5.45572 183.447 5.37500 183.281 5.37500 183.093  c
5.37500 182.916 5.43229 182.773 5.54687 182.664  c
5.66145 182.554 5.82291 182.500 6.03125 182.500  c
6.16666 182.500 6.35416 182.546 6.59375 182.640  c
6.77083 182.703 6.88020 182.734 6.92187 182.734  c
7.04687 182.734 7.18489 182.669 7.33593 182.539  c
7.48697 182.408 7.63541 182.156 7.78125 181.781  c
8.20312 180.765 l
6.10937 176.390 l
6.04687 176.255 5.94791 176.088 5.81250 175.890  c
5.69791 175.744 5.60937 175.645 5.54687 175.593  c
5.45312 175.531 5.29687 175.474 5.07812 175.421  c
5.07812 175.187 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
35.9733 352.026 m
30.7733 352.026 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4687 357.750 m
25.4687 356.770 25.6171 355.924 25.9140 355.210  c
26.2109 354.497 26.6041 353.968 27.0937 353.625  c
27.4791 353.354 27.8750 353.218 28.2812 353.218  c
28.9375 353.218 29.5260 353.552 30.0468 354.218  c
30.7031 355.052 31.0312 356.182 31.0312 357.609  c
31.0312 358.609 30.8880 359.458 30.6015 360.156  c
30.3151 360.854 29.9479 361.362 29.5000 361.679  c
29.0520 361.997 28.6250 362.156 28.2187 362.156  c
27.3958 362.156 26.7083 361.671 26.1562 360.703  c
25.6979 359.880 25.4687 358.895 25.4687 357.750  c
h
26.7187 357.906 m
26.7187 359.093 26.8645 360.062 27.1562 360.812  c
27.3958 361.437 27.7552 361.750 28.2343 361.750  c
28.4635 361.750 28.7005 361.648 28.9453 361.445  c
29.1901 361.242 29.3750 360.895 29.5000 360.406  c
29.6979 359.687 29.7968 358.661 29.7968 357.328  c
29.7968 356.349 29.6927 355.531 29.4843 354.875  c
29.3385 354.385 29.1406 354.041 28.8906 353.843  c
28.7239 353.708 28.5156 353.640 28.2656 353.640  c
27.9843 353.640 27.7291 353.765 27.5000 354.015  c
27.1979 354.369 26.9921 354.924 26.8828 355.679  c
26.7734 356.434 26.7187 357.177 26.7187 357.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.9733 266.520 m
30.7733 266.520 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
26.5312 268.234 m
28.6250 267.218 l
28.8281 267.218 l
28.8281 274.484 l
28.8281 274.963 28.8489 275.263 28.8906 275.382  c
28.9322 275.502 29.0156 275.593 29.1406 275.656  c
29.2656 275.718 29.5208 275.755 29.9062 275.765  c
29.9062 276.000 l
26.6718 276.000 l
26.6718 275.765 l
27.0781 275.755 27.3411 275.718 27.4609 275.656  c
27.5807 275.593 27.6640 275.510 27.7109 275.406  c
27.7578 275.302 27.7812 274.994 27.7812 274.484  c
27.7812 269.843 l
27.7812 269.208 27.7604 268.802 27.7187 268.625  c
27.6875 268.489 27.6328 268.390 27.5546 268.328  c
27.4765 268.265 27.3802 268.234 27.2656 268.234  c
27.1093 268.234 26.8958 268.302 26.6250 268.437  c
26.5312 268.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.9733 181.013 m
30.7733 181.013 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.9531 189.343 m
30.3593 191.000 l
25.2812 191.000 l
25.2812 190.765 l
26.7708 189.401 27.8203 188.286 28.4296 187.421  c
29.0390 186.557 29.3437 185.770 29.3437 185.062  c
29.3437 184.510 29.1770 184.059 28.8437 183.710  c
28.5104 183.362 28.1093 183.187 27.6406 183.187  c
27.2239 183.187 26.8463 183.309 26.5078 183.554  c
26.1692 183.799 25.9218 184.161 25.7656 184.640  c
25.5312 184.640 l
25.6354 183.859 25.9062 183.260 26.3437 182.843  c
26.7812 182.427 27.3281 182.218 27.9843 182.218  c
28.6822 182.218 29.2656 182.442 29.7343 182.890  c
30.2031 183.338 30.4375 183.864 30.4375 184.468  c
30.4375 184.906 30.3333 185.343 30.1250 185.781  c
29.8125 186.468 29.3072 187.192 28.6093 187.953  c
27.5572 189.109 26.8958 189.807 26.6250 190.046  c
28.8750 190.046 l
29.3333 190.046 29.6536 190.028 29.8359 189.992  c
30.0182 189.955 30.1849 189.885 30.3359 189.781  c
30.4869 189.677 30.6145 189.531 30.7187 189.343  c
30.9531 189.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.9733 95.5072 m
30.7733 95.5072 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.6562 98.0312 m
25.9062 97.4479 26.2187 97.0000 26.5937 96.6875  c
26.9687 96.3750 27.4322 96.2187 27.9843 96.2187  c
28.6822 96.2187 29.2135 96.4427 29.5781 96.8906  c
29.8593 97.2239 30.0000 97.5781 30.0000 97.9531  c
30.0000 98.5885 29.6041 99.2395 28.8125 99.9062  c
29.3437 100.114 29.7447 100.411 30.0156 100.796  c
30.2864 101.182 30.4218 101.635 30.4218 102.156  c
30.4218 102.895 30.1822 103.536 29.7031 104.078  c
29.0885 104.796 28.1979 105.156 27.0312 105.156  c
26.4479 105.156 26.0520 105.083 25.8437 104.937  c
25.6354 104.791 25.5312 104.635 25.5312 104.468  c
25.5312 104.343 25.5807 104.237 25.6796 104.148  c
25.7786 104.059 25.8958 104.015 26.0312 104.015  c
26.1354 104.015 26.2447 104.031 26.3593 104.062  c
26.4322 104.083 26.5963 104.158 26.8515 104.289  c
27.1067 104.419 27.2812 104.500 27.3750 104.531  c
27.5312 104.572 27.6979 104.593 27.8750 104.593  c
28.3020 104.593 28.6770 104.427 29.0000 104.093  c
29.3229 103.760 29.4843 103.364 29.4843 102.906  c
29.4843 102.572 29.4114 102.250 29.2656 101.937  c
29.1510 101.697 29.0260 101.515 28.8906 101.390  c
28.7135 101.224 28.4661 101.072 28.1484 100.937  c
27.8307 100.802 27.5052 100.734 27.1718 100.734  c
26.9687 100.734 l
26.9687 100.531 l
27.3020 100.489 27.6380 100.369 27.9765 100.171  c
28.3151 99.9739 28.5599 99.7369 28.7109 99.4609  c
28.8619 99.1849 28.9375 98.8750 28.9375 98.5312  c
28.9375 98.1041 28.8020 97.7552 28.5312 97.4843  c
28.2604 97.2135 27.9218 97.0781 27.5156 97.0781  c
26.8593 97.0781 26.3125 97.4270 25.8750 98.1250  c
25.6562 98.0312 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
35.9733 10.0006 m
30.7733 10.0006 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.0468 16.8281 m
31.0468 17.7343 l
29.8906 17.7343 l
29.8906 20.0000 l
28.8437 20.0000 l
28.8437 17.7343 l
25.2031 17.7343 l
25.2031 16.9218 l
29.2031 11.2187 l
29.8906 11.2187 l
29.8906 16.8281 l
31.0468 16.8281 l
h
28.8437 16.8281 m
28.8437 12.5468 l
25.8281 16.8281 l
28.8437 16.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

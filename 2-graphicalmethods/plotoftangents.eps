%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Sunday, April 3, 2011 11:35:50 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
0.647059 0.647059 0.647059 RG
Q
2 J
0 j
0 J
1 j
q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.332 376.773 m
352.379 381.570 l
S
newpath
303.431 359.452 m
318.968 366.164 l
S
newpath
264.528 343.778 m
280.068 349.852 l
S
newpath
225.633 329.598 m
241.163 335.091 l
S
newpath
147.833 305.156 m
163.366 309.654 l
S
newpath
108.936 294.651 m
124.465 298.720 l
S
newpath
70.0331 285.144 m
85.5707 288.828 l
S
newpath
31.1372 276.543 m
46.6635 279.874 l
S
newpath
0 194.757 m
31.1082 194.757 l
S
newpath
46.6924 194.757 m
70.0106 194.757 l
S
newpath
85.5929 194.757 m
108.908 194.757 l
S
newpath
124.493 194.757 m
147.801 194.757 l
S
newpath
163.398 194.757 m
186.708 194.757 l
S
newpath
186.730 316.766 m
202.269 321.739 l
S
newpath
202.290 194.757 m
225.601 194.757 l
S
newpath
241.194 194.757 m
264.507 194.757 l
S
newpath
280.091 194.757 m
303.403 194.757 l
S
newpath
318.996 194.757 m
342.310 194.757 l
S
newpath
357.892 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.332 331.269 m
357.869 336.833 l
S
newpath
303.435 318.279 m
318.966 323.312 l
S
newpath
264.530 306.523 m
280.069 311.079 l
S
newpath
225.638 295.890 m
241.162 300.007 l
S
newpath
147.833 277.556 m
163.365 280.930 l
S
newpath
108.936 269.677 m
124.465 272.729 l
S
newpath
70.0294 262.547 m
85.5696 265.310 l
S
newpath
31.1371 256.097 m
31.4757 256.151 l
46.6681 258.596 l
S
newpath
0 194.757 m
31.1082 194.757 l
S
newpath
46.6970 194.757 m
70.0069 194.757 l
S
newpath
85.5918 194.757 m
108.907 194.757 l
S
newpath
124.494 194.757 m
147.801 194.757 l
S
newpath
163.397 194.757 m
186.709 194.757 l
S
newpath
186.732 286.264 m
202.271 289.994 l
S
newpath
202.292 194.757 m
225.606 194.757 l
S
newpath
241.193 194.757 m
264.509 194.757 l
S
newpath
280.092 194.757 m
303.407 194.757 l
S
newpath
318.994 194.757 m
342.310 194.757 l
S
newpath
357.892 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.332 285.765 m
357.868 289.474 l
S
newpath
303.435 277.105 m
318.965 280.460 l
S
newpath
264.529 269.268 m
280.068 272.305 l
S
newpath
225.638 262.179 m
241.161 264.924 l
S
newpath
147.839 249.957 m
163.365 252.206 l
S
newpath
108.936 244.704 m
124.465 246.739 l
S
newpath
70.0332 239.951 m
85.5684 241.792 l
S
newpath
31.1364 235.650 m
46.6672 237.316 l
S
newpath
0 194.757 m
31.1075 194.757 l
S
newpath
46.6962 194.757 m
70.0108 194.757 l
S
newpath
85.5906 194.757 m
108.907 194.757 l
S
newpath
124.493 194.757 m
147.807 194.757 l
S
newpath
163.397 194.757 m
186.708 194.757 l
S
newpath
186.730 255.762 m
202.270 258.248 l
S
newpath
202.291 194.757 m
225.606 194.757 l
S
newpath
241.193 194.757 m
264.508 194.757 l
S
newpath
280.091 194.757 m
303.407 194.757 l
S
newpath
318.993 194.757 m
342.310 194.757 l
S
newpath
357.891 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.331 240.261 m
357.867 242.116 l
S
newpath
303.433 235.931 m
318.964 237.609 l
S
newpath
264.531 232.013 m
280.067 233.531 l
S
newpath
225.636 228.468 m
241.165 229.841 l
S
newpath
147.836 222.357 m
148.800 222.427 l
163.363 223.481 l
S
newpath
108.932 219.731 m
124.467 220.748 l
S
newpath
70.0299 217.354 m
71.6603 217.451 l
71.9681 217.469 l
85.5680 218.275 l
S
newpath
31.1325 215.204 m
32.0968 215.255 l
32.4303 215.273 l
32.7622 215.291 l
33.3885 215.325 l
33.7180 215.342 l
36.3217 215.482 l
36.6182 215.498 l
45.0325 215.949 l
45.3766 215.968 l
46.6639 216.037 l
S
newpath
0 194.757 m
31.1035 194.757 l
S
newpath
46.6928 194.757 m
70.0074 194.757 l
S
newpath
85.5902 194.757 m
108.904 194.757 l
S
newpath
124.495 194.757 m
147.804 194.757 l
S
newpath
163.395 194.757 m
186.709 194.757 l
S
newpath
186.731 225.260 m
202.271 226.503 l
S
newpath
202.292 194.757 m
225.604 194.757 l
S
newpath
241.196 194.757 m
264.510 194.757 l
S
newpath
280.089 194.757 m
303.406 194.757 l
S
newpath
318.992 194.757 m
342.308 194.757 l
S
newpath
357.890 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.330 149.254 m
357.867 147.399 l
S
newpath
303.434 153.584 m
318.966 151.906 l
S
newpath
264.532 157.502 m
280.069 155.984 l
S
newpath
225.635 161.047 m
225.973 161.017 l
241.165 159.674 l
S
newpath
147.837 167.158 m
163.363 166.034 l
S
newpath
108.933 169.784 m
109.271 169.762 l
109.566 169.743 l
119.931 169.064 l
120.264 169.042 l
120.576 169.022 l
121.223 168.979 l
121.879 168.936 l
122.209 168.915 l
122.536 168.893 l
122.836 168.874 l
123.488 168.831 l
123.816 168.809 l
124.130 168.789 l
124.468 168.767 l
S
newpath
70.0297 172.161 m
70.3684 172.141 l
70.6632 172.123 l
71.3282 172.084 l
71.6602 172.064 l
71.9681 172.046 l
76.5038 171.777 l
76.8230 171.758 l
77.1560 171.739 l
78.4324 171.663 l
78.7545 171.644 l
82.9798 171.393 l
83.6362 171.355 l
83.9366 171.337 l
85.5687 171.240 l
S
newpath
31.1318 174.311 m
31.4704 174.293 l
32.0962 174.259 l
32.4297 174.242 l
33.0693 174.207 l
33.3879 174.190 l
33.7174 174.173 l
36.9626 173.999 l
37.2679 173.982 l
46.6635 173.478 l
S
newpath
0 194.757 m
31.1029 194.757 l
S
newpath
46.6924 194.757 m
70.0072 194.757 l
S
newpath
85.5910 194.757 m
108.905 194.757 l
S
newpath
124.496 194.757 m
147.805 194.757 l
S
newpath
163.395 194.757 m
186.709 194.757 l
S
newpath
186.732 164.255 m
202.271 163.012 l
S
newpath
202.292 194.757 m
225.603 194.757 l
S
newpath
241.197 194.757 m
264.511 194.757 l
S
newpath
280.091 194.757 m
303.407 194.757 l
S
newpath
318.994 194.757 m
342.307 194.757 l
S
newpath
357.889 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.332 103.750 m
357.869 100.041 l
S
newpath
303.432 112.410 m
318.964 109.055 l
S
newpath
264.530 120.247 m
280.067 117.210 l
S
newpath
225.636 127.337 m
241.164 124.590 l
S
newpath
147.835 139.558 m
163.362 137.310 l
S
newpath
108.936 144.811 m
124.466 142.776 l
S
newpath
70.0302 149.565 m
85.5680 147.723 l
S
newpath
31.1334 153.865 m
46.6643 152.199 l
S
newpath
0 194.757 m
31.1045 194.757 l
S
newpath
46.6932 194.757 m
70.0077 194.757 l
S
newpath
85.5903 194.757 m
108.908 194.757 l
S
newpath
124.495 194.757 m
147.803 194.757 l
S
newpath
163.393 194.757 m
186.709 194.757 l
S
newpath
186.732 133.753 m
202.271 131.267 l
S
newpath
202.292 194.757 m
225.604 194.757 l
S
newpath
241.196 194.757 m
264.509 194.757 l
S
newpath
280.089 194.757 m
303.404 194.757 l
S
newpath
318.992 194.757 m
342.309 194.757 l
S
newpath
357.891 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.332 58.2462 m
357.868 52.6829 l
S
newpath
303.433 71.2364 m
318.966 66.2038 l
S
newpath
264.532 82.9915 m
280.068 78.4366 l
S
newpath
225.636 93.6262 m
241.166 89.5067 l
S
newpath
147.837 111.958 m
163.364 108.586 l
S
newpath
108.934 119.838 m
124.464 116.786 l
S
newpath
70.0319 126.968 m
85.5701 124.205 l
S
newpath
31.1339 133.418 m
46.6656 130.919 l
S
newpath
0 194.757 m
31.1050 194.757 l
S
newpath
46.6946 194.757 m
70.0094 194.757 l
S
newpath
85.5923 194.757 m
108.906 194.757 l
S
newpath
124.492 194.757 m
147.806 194.757 l
S
newpath
163.395 194.757 m
186.707 194.757 l
S
newpath
186.730 103.251 m
202.269 99.5219 l
S
newpath
202.290 194.757 m
225.605 194.757 l
S
newpath
241.198 194.757 m
264.511 194.757 l
S
newpath
280.090 194.757 m
303.405 194.757 l
S
newpath
318.993 194.757 m
342.309 194.757 l
S
newpath
357.890 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
-1.00000 6.01576 392.000 376.484 rc
newpath
342.330 12.7428 m
352.379 7.94534 l
S
newpath
303.434 30.0622 m
318.966 23.3523 l
S
newpath
264.530 45.7366 m
280.069 39.6626 l
S
newpath
225.632 59.9171 m
241.163 54.4241 l
S
newpath
147.833 84.3593 m
163.366 79.8613 l
S
newpath
108.936 94.8644 m
124.465 90.7954 l
S
newpath
70.0333 104.371 m
85.5690 100.688 l
S
newpath
31.1342 112.972 m
46.6664 109.640 l
S
newpath
0 194.757 m
31.1053 194.757 l
S
newpath
46.6953 194.757 m
70.0108 194.757 l
S
newpath
85.5912 194.757 m
108.908 194.757 l
S
newpath
124.493 194.757 m
147.802 194.757 l
S
newpath
163.398 194.757 m
186.709 194.757 l
S
newpath
186.731 72.7493 m
202.267 67.7771 l
S
newpath
202.289 194.757 m
225.601 194.757 l
S
newpath
241.194 194.757 m
264.509 194.757 l
S
newpath
280.091 194.757 m
303.406 194.757 l
S
newpath
318.994 194.757 m
342.308 194.757 l
S
newpath
357.893 194.757 m
389.000 194.757 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
0 J
1 j
newpath
0 194.757 m
-4.77612E-16 197.357 l
S
newpath
77.8000 194.757 m
77.8000 197.357 l
S
newpath
155.600 194.757 m
155.600 197.357 l
S
newpath
233.400 194.757 m
233.400 197.357 l
S
newpath
311.200 194.757 m
311.200 197.357 l
S
newpath
389.000 194.757 m
389.000 197.357 l
S
newpath
0 194.757 m
389.000 194.757 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
284 218 14 15 rc
newpath
290.250 224.250 m
290.458 224.468 290.614 224.692 290.718 224.921  c
290.802 225.067 290.927 225.463 291.093 226.109  c
291.656 225.281 l
291.802 225.072 291.981 224.877 292.195 224.695  c
292.408 224.513 292.593 224.385 292.750 224.312  c
292.854 224.270 292.968 224.250 293.093 224.250  c
293.270 224.250 293.414 224.299 293.523 224.398  c
293.632 224.497 293.687 224.614 293.687 224.750  c
293.687 224.916 293.656 225.031 293.593 225.093  c
293.479 225.197 293.343 225.250 293.187 225.250  c
293.093 225.250 293.000 225.229 292.906 225.187  c
292.708 225.125 292.572 225.093 292.500 225.093  c
292.395 225.093 292.276 225.151 292.140 225.265  c
291.880 225.484 291.567 225.911 291.203 226.546  c
291.718 228.718 l
291.802 229.052 291.869 229.252 291.921 229.320  c
291.974 229.388 292.031 229.421 292.093 229.421  c
292.177 229.421 292.281 229.375 292.406 229.281  c
292.635 229.083 292.833 228.828 293.000 228.515  c
293.218 228.625 l
292.947 229.125 292.609 229.541 292.203 229.875  c
291.974 230.062 291.776 230.156 291.609 230.156  c
291.369 230.156 291.182 230.020 291.046 229.750  c
290.953 229.583 290.770 228.875 290.500 227.625  c
289.833 228.770 289.302 229.505 288.906 229.828  c
288.645 230.046 288.395 230.156 288.156 230.156  c
287.989 230.156 287.833 230.093 287.687 229.968  c
287.593 229.875 287.546 229.750 287.546 229.593  c
287.546 229.458 287.593 229.343 287.687 229.250  c
287.781 229.156 287.895 229.109 288.031 229.109  c
288.166 229.109 288.307 229.177 288.453 229.312  c
288.567 229.406 288.656 229.453 288.718 229.453  c
288.760 229.453 288.822 229.421 288.906 229.359  c
289.104 229.192 289.375 228.843 289.718 228.312  c
290.062 227.781 290.286 227.395 290.390 227.156  c
290.130 226.125 289.989 225.583 289.968 225.531  c
289.875 225.250 289.750 225.052 289.593 224.937  c
289.437 224.822 289.203 224.765 288.890 224.765  c
288.796 224.765 288.687 224.770 288.562 224.781  c
288.562 224.546 l
290.250 224.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.9000 194.757 m
38.9000 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
36 207 7 13 rc
newpath
46.7968 214.437 m
38.2031 214.437 l
38.2031 213.765 l
46.7968 213.765 l
46.7968 214.437 l
h
f
Q
newpath
51.0468 214.828 m
51.0468 215.734 l
49.8906 215.734 l
49.8906 218.000 l
48.8437 218.000 l
48.8437 215.734 l
45.2031 215.734 l
45.2031 214.921 l
49.2031 209.218 l
49.8906 209.218 l
49.8906 214.828 l
51.0468 214.828 l
h
48.8437 214.828 m
48.8437 210.546 l
45.8281 214.828 l
48.8437 214.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
116.700 194.757 m
116.700 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
114 207 7 13 rc
newpath
124.796 214.437 m
116.203 214.437 l
116.203 213.765 l
124.796 213.765 l
124.796 214.437 l
h
f
Q
newpath
128.953 216.343 m
128.359 218.000 l
123.281 218.000 l
123.281 217.765 l
124.770 216.401 125.820 215.286 126.429 214.421  c
127.039 213.557 127.343 212.770 127.343 212.062  c
127.343 211.510 127.177 211.059 126.843 210.710  c
126.510 210.362 126.109 210.187 125.640 210.187  c
125.224 210.187 124.846 210.309 124.507 210.554  c
124.169 210.799 123.921 211.161 123.765 211.640  c
123.531 211.640 l
123.635 210.859 123.906 210.260 124.343 209.843  c
124.781 209.427 125.328 209.218 125.984 209.218  c
126.682 209.218 127.265 209.442 127.734 209.890  c
128.203 210.338 128.437 210.864 128.437 211.468  c
128.437 211.906 128.333 212.343 128.125 212.781  c
127.812 213.468 127.307 214.192 126.609 214.953  c
125.557 216.109 124.895 216.807 124.625 217.046  c
126.875 217.046 l
127.333 217.046 127.653 217.028 127.835 216.992  c
128.018 216.955 128.184 216.885 128.335 216.781  c
128.487 216.677 128.614 216.531 128.718 216.343  c
128.953 216.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 194.757 m
194.500 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
191.468 211.750 m
191.468 210.770 191.617 209.924 191.914 209.210  c
192.210 208.497 192.604 207.968 193.093 207.625  c
193.479 207.354 193.875 207.218 194.281 207.218  c
194.937 207.218 195.526 207.552 196.046 208.218  c
196.703 209.052 197.031 210.182 197.031 211.609  c
197.031 212.609 196.888 213.458 196.601 214.156  c
196.315 214.854 195.947 215.362 195.500 215.679  c
195.052 215.997 194.625 216.156 194.218 216.156  c
193.395 216.156 192.708 215.671 192.156 214.703  c
191.697 213.880 191.468 212.895 191.468 211.750  c
h
192.718 211.906 m
192.718 213.093 192.864 214.062 193.156 214.812  c
193.395 215.437 193.755 215.750 194.234 215.750  c
194.463 215.750 194.700 215.648 194.945 215.445  c
195.190 215.242 195.375 214.895 195.500 214.406  c
195.697 213.687 195.796 212.661 195.796 211.328  c
195.796 210.349 195.692 209.531 195.484 208.875  c
195.338 208.385 195.140 208.041 194.890 207.843  c
194.724 207.708 194.515 207.640 194.265 207.640  c
193.984 207.640 193.729 207.765 193.500 208.015  c
193.197 208.369 192.992 208.924 192.882 209.679  c
192.773 210.434 192.718 211.177 192.718 211.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
272.300 194.757 m
272.300 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
279.953 216.343 m
279.359 218.000 l
274.281 218.000 l
274.281 217.765 l
275.770 216.401 276.820 215.286 277.429 214.421  c
278.039 213.557 278.343 212.770 278.343 212.062  c
278.343 211.510 278.177 211.059 277.843 210.710  c
277.510 210.362 277.109 210.187 276.640 210.187  c
276.224 210.187 275.846 210.309 275.507 210.554  c
275.169 210.799 274.921 211.161 274.765 211.640  c
274.531 211.640 l
274.635 210.859 274.906 210.260 275.343 209.843  c
275.781 209.427 276.328 209.218 276.984 209.218  c
277.682 209.218 278.265 209.442 278.734 209.890  c
279.203 210.338 279.437 210.864 279.437 211.468  c
279.437 211.906 279.333 212.343 279.125 212.781  c
278.812 213.468 278.307 214.192 277.609 214.953  c
276.557 216.109 275.895 216.807 275.625 217.046  c
277.875 217.046 l
278.333 217.046 278.653 217.028 278.835 216.992  c
279.018 216.955 279.184 216.885 279.335 216.781  c
279.487 216.677 279.614 216.531 279.718 216.343  c
279.953 216.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
350.100 194.757 m
350.100 199.957 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
358.046 214.828 m
358.046 215.734 l
356.890 215.734 l
356.890 218.000 l
355.843 218.000 l
355.843 215.734 l
352.203 215.734 l
352.203 214.921 l
356.203 209.218 l
356.890 209.218 l
356.890 214.828 l
358.046 214.828 l
h
355.843 214.828 m
355.843 210.546 l
352.828 214.828 l
355.843 214.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
194.500 350.376 m
191.900 350.376 l
S
newpath
194.500 288.128 m
191.900 288.128 l
S
newpath
194.500 225.881 m
191.900 225.881 l
S
newpath
194.500 163.634 m
191.900 163.634 l
S
newpath
194.500 101.386 m
191.900 101.386 l
S
newpath
194.500 39.1394 m
191.900 39.1394 l
S
newpath
194.500 381.500 m
194.500 8.01577 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
151 94 14 15 rc
newpath
157.078 100.250 m
157.224 100.500 157.322 100.731 157.375 100.945  c
157.427 101.158 157.484 101.578 157.546 102.203  c
157.812 105.328 l
158.072 105.026 158.442 104.541 158.921 103.875  c
159.151 103.552 159.437 103.114 159.781 102.562  c
159.989 102.229 160.119 101.994 160.171 101.859  c
160.192 101.786 160.203 101.713 160.203 101.640  c
160.203 101.599 160.187 101.562 160.156 101.531  c
160.125 101.500 160.046 101.463 159.921 101.421  c
159.796 101.380 159.695 101.307 159.617 101.203  c
159.539 101.099 159.500 100.974 159.500 100.828  c
159.500 100.661 159.549 100.523 159.648 100.414  c
159.747 100.304 159.875 100.250 160.031 100.250  c
160.218 100.250 160.377 100.328 160.507 100.484  c
160.638 100.640 160.703 100.854 160.703 101.125  c
160.703 101.458 160.588 101.841 160.359 102.273  c
160.130 102.705 159.690 103.364 159.039 104.250  c
158.388 105.135 157.599 106.104 156.671 107.156  c
156.036 107.875 155.562 108.330 155.250 108.523  c
154.937 108.716 154.671 108.812 154.453 108.812  c
154.317 108.812 154.200 108.760 154.101 108.656  c
154.002 108.552 153.953 108.437 153.953 108.312  c
153.953 108.145 154.023 107.994 154.164 107.859  c
154.304 107.724 154.453 107.656 154.609 107.656  c
154.692 107.656 154.765 107.677 154.828 107.718  c
154.859 107.739 154.895 107.799 154.937 107.898  c
154.979 107.997 155.015 108.062 155.046 108.093  c
155.067 108.114 155.093 108.125 155.125 108.125  c
155.145 108.125 155.187 108.104 155.250 108.062  c
155.489 107.916 155.760 107.687 156.062 107.375  c
156.468 106.958 156.770 106.619 156.968 106.359  c
156.609 102.343 l
156.557 101.677 156.471 101.270 156.351 101.125  c
156.231 100.979 156.031 100.906 155.750 100.906  c
155.656 100.906 155.494 100.921 155.265 100.953  c
155.218 100.718 l
157.078 100.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
194.500 381.500 m
189.300 381.500 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
175 380 7 13 rc
newpath
185.796 387.437 m
177.203 387.437 l
177.203 386.765 l
185.796 386.765 l
185.796 387.437 l
h
f
Q
newpath
189.828 382.218 m
189.828 382.453 l
189.265 382.505 188.807 382.614 188.453 382.781  c
188.099 382.947 187.750 383.203 187.406 383.546  c
187.062 383.890 186.778 384.273 186.554 384.695  c
186.330 385.117 186.140 385.614 185.984 386.187  c
186.599 385.770 187.213 385.562 187.828 385.562  c
188.411 385.562 188.919 385.799 189.351 386.273  c
189.783 386.747 190.000 387.359 190.000 388.109  c
190.000 388.828 189.781 389.484 189.343 390.078  c
188.822 390.796 188.130 391.156 187.265 391.156  c
186.671 391.156 186.171 390.958 185.765 390.562  c
184.963 389.812 184.562 388.833 184.562 387.625  c
184.562 386.854 184.716 386.122 185.023 385.429  c
185.330 384.737 185.770 384.119 186.343 383.578  c
186.916 383.036 187.466 382.674 187.992 382.492  c
188.518 382.309 189.005 382.218 189.453 382.218  c
189.828 382.218 l
h
185.875 386.656 m
185.802 387.229 185.765 387.692 185.765 388.046  c
185.765 388.453 185.841 388.893 185.992 389.367  c
186.143 389.841 186.364 390.218 186.656 390.500  c
186.875 390.697 187.140 390.796 187.453 390.796  c
187.817 390.796 188.145 390.622 188.437 390.273  c
188.729 389.924 188.875 389.432 188.875 388.796  c
188.875 388.067 188.729 387.440 188.437 386.914  c
188.145 386.388 187.739 386.125 187.218 386.125  c
187.052 386.125 186.877 386.158 186.695 386.226  c
186.513 386.294 186.239 386.437 185.875 386.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 319.252 m
189.300 319.252 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
175 318 7 13 rc
newpath
185.796 325.437 m
177.203 325.437 l
177.203 324.765 l
185.796 324.765 l
185.796 325.437 l
h
f
Q
newpath
190.046 325.828 m
190.046 326.734 l
188.890 326.734 l
188.890 329.000 l
187.843 329.000 l
187.843 326.734 l
184.203 326.734 l
184.203 325.921 l
188.203 320.218 l
188.890 320.218 l
188.890 325.828 l
190.046 325.828 l
h
187.843 325.828 m
187.843 321.546 l
184.828 325.828 l
187.843 325.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 257.005 m
189.300 257.005 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
175 256 7 13 rc
newpath
185.796 263.437 m
177.203 263.437 l
177.203 262.765 l
185.796 262.765 l
185.796 263.437 l
h
f
Q
newpath
189.953 265.343 m
189.359 267.000 l
184.281 267.000 l
184.281 266.765 l
185.770 265.401 186.820 264.286 187.429 263.421  c
188.039 262.557 188.343 261.770 188.343 261.062  c
188.343 260.510 188.177 260.059 187.843 259.710  c
187.510 259.362 187.109 259.187 186.640 259.187  c
186.224 259.187 185.846 259.309 185.507 259.554  c
185.169 259.799 184.921 260.161 184.765 260.640  c
184.531 260.640 l
184.635 259.859 184.906 259.260 185.343 258.843  c
185.781 258.427 186.328 258.218 186.984 258.218  c
187.682 258.218 188.265 258.442 188.734 258.890  c
189.203 259.338 189.437 259.864 189.437 260.468  c
189.437 260.906 189.333 261.343 189.125 261.781  c
188.812 262.468 188.307 263.192 187.609 263.953  c
186.557 265.109 185.895 265.807 185.625 266.046  c
187.875 266.046 l
188.333 266.046 188.653 266.028 188.835 265.992  c
189.018 265.955 189.184 265.885 189.335 265.781  c
189.487 265.677 189.614 265.531 189.718 265.343  c
189.953 265.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 194.757 m
189.300 194.757 l
S
Q
q
newpath
194.500 132.510 m
189.300 132.510 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.953 140.343 m
189.359 142.000 l
184.281 142.000 l
184.281 141.765 l
185.770 140.401 186.820 139.286 187.429 138.421  c
188.039 137.557 188.343 136.770 188.343 136.062  c
188.343 135.510 188.177 135.059 187.843 134.710  c
187.510 134.362 187.109 134.187 186.640 134.187  c
186.224 134.187 185.846 134.309 185.507 134.554  c
185.169 134.799 184.921 135.161 184.765 135.640  c
184.531 135.640 l
184.635 134.859 184.906 134.260 185.343 133.843  c
185.781 133.427 186.328 133.218 186.984 133.218  c
187.682 133.218 188.265 133.442 188.734 133.890  c
189.203 134.338 189.437 134.864 189.437 135.468  c
189.437 135.906 189.333 136.343 189.125 136.781  c
188.812 137.468 188.307 138.192 187.609 138.953  c
186.557 140.109 185.895 140.807 185.625 141.046  c
187.875 141.046 l
188.333 141.046 188.653 141.028 188.835 140.992  c
189.018 140.955 189.184 140.885 189.335 140.781  c
189.487 140.677 189.614 140.531 189.718 140.343  c
189.953 140.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 70.2631 m
189.300 70.2631 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
190.046 76.8281 m
190.046 77.7343 l
188.890 77.7343 l
188.890 80.0000 l
187.843 80.0000 l
187.843 77.7343 l
184.203 77.7343 l
184.203 76.9218 l
188.203 71.2187 l
188.890 71.2187 l
188.890 76.8281 l
190.046 76.8281 l
h
187.843 76.8281 m
187.843 72.5468 l
184.828 76.8281 l
187.843 76.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
194.500 8.01577 m
189.300 8.01577 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.828 9.21875 m
189.828 9.45312 l
189.265 9.50520 188.807 9.61458 188.453 9.78125  c
188.099 9.94791 187.750 10.2031 187.406 10.5468  c
187.062 10.8906 186.778 11.2734 186.554 11.6953  c
186.330 12.1171 186.140 12.6145 185.984 13.1875  c
186.599 12.7708 187.213 12.5625 187.828 12.5625  c
188.411 12.5625 188.919 12.7994 189.351 13.2734  c
189.783 13.7474 190.000 14.3593 190.000 15.1093  c
190.000 15.8281 189.781 16.4843 189.343 17.0781  c
188.822 17.7968 188.130 18.1562 187.265 18.1562  c
186.671 18.1562 186.171 17.9583 185.765 17.5625  c
184.963 16.8125 184.562 15.8333 184.562 14.6250  c
184.562 13.8541 184.716 13.1224 185.023 12.4296  c
185.330 11.7369 185.770 11.1197 186.343 10.5781  c
186.916 10.0364 187.466 9.67447 187.992 9.49218  c
188.518 9.30989 189.005 9.21875 189.453 9.21875  c
189.828 9.21875 l
h
185.875 13.6562 m
185.802 14.2291 185.765 14.6927 185.765 15.0468  c
185.765 15.4531 185.841 15.8932 185.992 16.3671  c
186.143 16.8411 186.364 17.2187 186.656 17.5000  c
186.875 17.6979 187.140 17.7968 187.453 17.7968  c
187.817 17.7968 188.145 17.6224 188.437 17.2734  c
188.729 16.9244 188.875 16.4322 188.875 15.7968  c
188.875 15.0677 188.729 14.4401 188.437 13.9140  c
188.145 13.3880 187.739 13.1250 187.218 13.1250  c
187.052 13.1250 186.877 13.1588 186.695 13.2265  c
186.513 13.2942 186.239 13.4375 185.875 13.6562  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

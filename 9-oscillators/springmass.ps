%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95b Copyright 2005 Radical Eye Software
%%Title: springmass.dvi
%%CreationDate: Wed May 05 18:10:05 2010
%%Pages: 9
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMSS17 CMSS12 CMBX12 CMMI12 CMR12 CMMI8 CMSY10 CMR9
%%+ CMSY8 CMR6 CMCSC10 CMR8 CMEX10 MSAM10 CMTI12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o springmass.ps springmass.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.05.05:1810
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EF696E091A9D51510BE264701A41C04FA8125A48F306ACA7A83E35D5BA0C296A
BC594ECA2CB27E92FED95B595C21E5BF0DA724D40761CB377BDE5FB98C9D152D
6C0DC98C4083E9656321BFC445CD6FCC142DEF16E27DD6FAD0B3185223B1A7D6
779F39C70793184F2C3B721FD0AE6D8E063BD47804785DAEA74AF8C75483B713
65061650543F31B1C85E8AC123C0DB9139C6AF5B74659F883D02B0B8D9EB3BA9
173C2AF9868BC00FC334D5A53B0B5FCDB9B5CE4039E74DFEB291DA9B2EB6D12E
9F95727173CB627B486B93A48176EFC8108764EB609FA5326A6373D51EEDC781
AC00667FDB4985F1BE9A50BFF28E0C641D8D52C80CEDA2F3D317024010BA6587
09794BEDAB44A2532B59AFCB7E485AA044DE71B81D6F3EBEA88E68BA1A623C5D
DE9EC07DC767F8EFDB7FC673987807B4538F7DB662D3DB0BDCBFD4A2643066EA
5AC5540A7C6234E168E31187215000F75E2C45507467E0FA8FFBC1066ACDDE87
984F3939AEC2DB299380385F904F36BF6034E24105FC65E13703B0738B5E243F
86CFDA9FA79AF0D1CA88A1229459CA76D782C1B9354CCD5882A5E33170D8E84B
1114F45D8E01F59C2310C39BC52589DCAF4807F204C82D286FFDBEBE491CD87A
4A513ADB34368ECD37EE15CEDBD1B481F93F036D6F03387717FF78D5C3356C95
A7AE7F2A8AA64F0BC21F013396B3D8B5A7CA12C0DE87222E7DCD61B8AFBA4516
90B5D15C172579D5D300CED0DCA739A38905EC1174BF3F0F145CA14A0FF91EA8
A07F7AC521DED6D6DFF0C8D750FEC98F349C45120F37D280A260CA8058120AB6
5045B728E36E583DEE86C1C36217471346D0853C472464A92B695F5025388140
9CB10DA83AA356AFF42D519704759CCB7F5920AC58B8D82EEE5FBC51CDFC6A0B
CC8EA63CCAF4DBC65998A292ACFB8E3ACE5D86253CAD9DC4E2134C6FDDA0C193
A210EA9540156D7B9B664B33575A4E09BB64C52CDA5610CA548E0F1452F176F2
4AFC09E071EC3BC066340411B1AA53D37E5627DA750BA6AD42DBB106BF622496
A41C16361EBCA026F617C478333A7FC83A63C8E5C0472A8DF78B75F9808B3D0C
6AFCAE1F1F7F6027AE24ACE5A4F5DF395405A9218E61E3F8ED0388007F5F1520
4FC12A4502F232E95B06B759B7A13C46B2C8B5902C40CF6D28974EE41E5200CB
10EED5E02607B4D06BBEFA42E3BCE00E9ED8C4D8DE4C836388CA9D478CDA1B51
94919D13A74CCEA70BAD1DCBBF77211D776F2ABCADF6B79E5EDF846EAE74DA24
F8E04197CE556134DE69C9D9E2E4A173371EFC649C9AE8E0FBCD023394D9E1E2
6AD46971129803A042C9BDC5C3B42EF69DF41662B78D5F35A168F14F4872B367
A3016F03C224C418625386434C5F2B0F9B92401711EE42E5F7E9014E6CB6A856
B4A8069F4593CF7CDD63B2271E7AFBF0DC33B33C2B29C57F4EC4C5EEB5FD4B05
4296EB4F7FB2AB73F3EC1DDC4EDF25A075DC207B64A2C36DE60C22A0482DD476
6F67A7D0B1B8A9B166E6859D557329B963CE668ABB05B8707E9E67EF959A3C0B
9016468DC1D02A1A23274EB7B2631010FE8A910384130CD51EBADC4F174B7025
08666EDF227FC10155CE4895132F0048D4211700FE75543C4ACE7AC38541CEC2
F4FCF43DC7E0C58CEC9A294D604455FEC84FBB8B27A188E562FFFE5BEAD27DF0
4C935B959D8160A0AEEF60462BC6920A0F29172AD2AC1E34A36697DAD4175738
ECDE2BABBA15344A0FEA8C3EC4BFADF20114BCB1906DB30244C9A725686E7C94
9678C1CE41376C37C3B6DBD75A98A43F6B03BA6566AF8EEC190623F611D94F28
E6CD002B5448CCF69848C3424CF0D9F5B7896A71AF0AD02EBF9178D14BFB6658
7A4D13DE41DA17FE28C02F7AAF608054AF6AD22725F308FD7216068ECF0DBA41
E8FDE261C1F01C50D9F20DF2A7B8E616C8D97AA4DC28683AA0F7FF4E88621CEF
C57BC164E84E878A67315E669D88E535FFA3D30309F177CC9FADA8C34928FE2F
CA00E77237853F243591982C29F9FA78AB3025946CC4BAA423A87176B46BDDC1
A574A08899EE28314E4F9FE741965D26DDA2B335681E7BC0E9EE5020826C670D
E5DC480D6C81226E74BCC46951CB501165683C27050DAF13C7F813A11A4221E3
5A6847248A69DE8C77AD9FD8A98CC18051C0335E733EB3536C2130F43D0DBC26
F7ECF2732D96EE4F875A16621A89D4B8369A4E9D5B07E490FB341A2636A4267F
717A7A9F014E570E8B36774E29DBF13AB3D476EF16732A57B86328063E851F83
7580E9B43C0FECDF7B43E79B8536805204ED75B39D68B33C65FCA0A2C11C80CF
27B991FA8A740863EB9E52A38D8FAA930235D97E0019C06D3AEBA503A9789DF0
37A9C2912098BA8ABA6CA51F6BDB57E1BD78831FA0A0C98BB6233166761CB057
D0C576375C4511DFAFE511AEDBCB902609D55A3DD21F65A4F4DADAD2BD0BF43C
B250C2C9CB3624AB716C39130EAC405EEFEB1CF0437ABAD409A94DDC1E47B258
1E87AE44E428ABA9BF63E5937F2E4E0671065CEEA65725C740F154066F4F992F
D1DB84CC579FAD5F01CEF70CAE2839957C334179A401485068F8EE77D0FDEB9F
984EB7D48687A804980C1F50125BAD65D9D04BF5D32065AC01AD98269339DED3
3DA1021CB027D8EE41C7B742FA1045D492B6EEB56045446DEA7DD493053D1183
711C4B60423739D48B345B4A437D1E37FA5E65C532A466A59CF552B7ED86AED5
BDDA4CE961F00A4F023934FB535E7BC89FB89B8F97362C0A66D5A5BB8D2ECEFB
8E792187D733C3F34E3B086A38B389714D0380E60192299564B4EBACC6F2B3C9
7E346A864491405F07C904178D5BD7B115211828BDAB09B139EDD79EE9F09664
D1F923AB5E95ECDE3E1171EF585BCB64EBF6CD3BF52651DB9448CF49404CC1A3
304857AE0AC885FA586F1521A96C168B0253B8C7E30E04CA47F70A01378CD5D3
9C60B33B46F533C0CBD62B747F8175CFA0E188C4E47C17509BC6CACB27B9BF7B
73AF0CA63473B97F0AF787B4E58C6AE811A8C18617CFAD6DA564740FFD1DEB52
67FAC9C2FEA900333791AC4F93E89C918FC16BD3BD92B8A9EE7B29BD23776B52
66911D61CFB57D1226AE02C859583224D6E6ABA44F6BBB66CC96933A5696B1F5
2B5556C038A442DC448F3BBDCD815A1720686D5875059FF296F172F1261BB338
443BC3A831110A61EAE3DDE399C86EF243C6BEEF23BF3FA197028AC3FFDF3832
AD6C185C8A1B98113A90ED25AE4403E702F60D11E539F173DC758B82B01E673D
566131CCED9E77D2FFC85FD36736CCB6178AB18F5CF12BBD16EC86F3E8C791BF
7FD2B18B5BC6C00F41A42BF591C66B55D738D2E1E57025E0FCC20F461FFE69E0
D14347838733366610E6651982040AD59C8A4C81277DAF0C1CC8C6A0582F9E98
53F597CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSAM10
%!PS-AdobeFont-1.1: MSAM10 2.1
%%CreationDate: 1993 Sep 17 09:05:00
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSAM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /square put
readonly def
/FontBBox{8 -463 1331 1003}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1C87678CE98C24B934A76220
4DD9B2FF3A49786028E35DDE10AD2C926BD30AD47015FFE9469DE1F793D1C53A
C8812CBCD402444EAEA7A50EC5FD93D6A04C2783B50EA48059E3E7407537CB8D
4C206846EF0764C05289733920E2399E58AD8F137C229F3CE3E34D2D1EAB2D53
20D44EFAC8EFA4D14A2EFE389D952527F98D0E49BD5BD2C8D58FF9CB9C78D974
75C2AB5467D73D2B5E277A3FDC35909938A9DF0EB91BD9159D3437BE22EE4544
3429AC8E2BFBE34AE54D3BA3AD04BDF3F4F43A2B43992DF88678681B3AB32CFD
A23E2C98D1AF00AB206AC95B78BBE6316F7A0AB6BD3236C28C76288B3C25D1EB
E9ABB3576C5EC15A71D26177F5883E9B48293D59015615E2EEAF2E9BA04151ED
5497B9A1C41CBA44BAFF13EA218F5EAC11952EE336AD1DBE6CE92F002EAA3B3D
3BE4C3792F3405763C4BD93EFC3B4FC34193439561841BA989DD8D9F9AEE7A7B
24AEB4654B35023C9720B8F31AA9452E29753FB7915CB29977E725611E37C0B7
784BCC26FACF8A7A0EB1E54290D27FFE52B2D87FAD080AD15EE1984C37E0EB30
122C3012D3A16B09C28903D138352AB5462674B6CFB63F1371768D094DDF288C
36FB9B58443F872D61F2CD8CED42FE0EFF3D7E9952A172BB1AFECB60BF79F2B6
04265FDE4F78BC9FD619AA733CD0412F1D9A7C13B271BF827DCBDC8ABAE24FF0
74D3C220621D7FF0EFE62D835A221D0A7C139E2E6681FC2BBA58FA3B80D416EC
3854C63BA040A4262B458340DAA18AA6AEA3BBAC61615CB85982B18664D3D3AF
340C65B969071CF2D0CABEB80E04623D0526F862ECA8280EEE236C535F70561A
854181132E677674AD5E14C6636F57541D3C821F0776D2CB9B8526D4B826791A
0B179B387D47B08982D36BD61C90BA2CDFE045E8BBAE1C5D4DBA9760AC2D9587
67FB0C22BBD0A905E37D82FD03BBFA69003B5FC6EFCA8CCA8516F461AA33D6F3
6F0B583AECD7A2374014C81033772FE29A7CC38DB81E8462044EF083ECA78849
AC11327BA7EB2FE5389E333AB1FEEDCDC90C78C4713BA7769975CD6290D03B5C
6635F5650B5C1898C7108E6A2A09814C43297E4051B12B263C433646D8555F45
C0B380F639A5A2B5E307C67E6B4208970FB2F32CB0D495CBC1A6D78B36524C44
4FDEA1286022EEC44210FC4ABCE3B8E8BD7DC9A57E5CF409205B78672AD1052E
23813AC24D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /parenleftbig put
dup 1 /parenrightbig put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1C9C622FAEAB9D3E54476B49A2A026565F10A9695AA86AFBEEFBBEC93
995B6AAA89C4646D3F2520C735C228B4DC6557B29F04D6F6A598C9E01EF2D4E6
58BEBC5AE19E01B360CEA14D6AC1F0BF8C3DB22D149423331DD3E8576D372A2C
9F5A7A342964103B6B64C68D37C25E323B0AAF5D0F5618A666EC42E6C774C5EB
DDA641F142FBBCB69BE9A57D57C5FB4F624C5B62079C720A4ED3EEFA0DF9F929
ADE6A5F91BF130106AE7A961B4CBD3E7222978FC4F780AE834C0610CFD6AF623
1769CEC7941BE8D20C0C1E219D5C9E8C7ED751D574B40788420EFD49108CDA17
D3BB9F6380728CAE5D884E4B76F8345810C455349B8A1BD537B5878BB2F8EBCB
42C38D2CF3B3305BB07349A6119109CC790310DED04F879E79103CE683921AE1
8FD87BC95DFAA58C64D2742518E584AE2452AAA01BCD3B38BE5C3F223ECB8EFE
448433698951E3A3F63944DE070449BF0CDBC9D930150260DBF6D92C7998EC05
35A2AF083D7A15CB2C2AB375B4219E13D02057E18724F68892212B6695FB6C92
0DF308F0D3B091A868F722AA26C4281D75A3C61310698BA8386EA1398BE3BF3E
71236BF37B8846542B06000781D10A8DE225DDEB0F35C7C216A9E0C5285C3F46

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BADE1E60F381
8ABB3D45547347BCA2454D6E5C6640841E2124FE1FB662C98CE18EB82274DD5F
36B1788A5A23AC3A8E7A63AE0E29B83F8215270E28652C2A8CECCCB932B515DA
F6800513426169F40E447D8605591CA5214DBA71880CC6C54400F8A61A924513
3885D87B44303F567A9324A40C633254B5F1C6685DBC6BF169730F1DF8DD5022
3406E2634BD476FED3A09F8E2C3EDC316312D173B98F41A0273EA2D3A7C76849
7A8EA236DFB36C4F99657A3A8975D7C2DE669FFA11AB043684A25FDC37B5AB71
1B977F162C4FCB6580F4519673A581E88B4C386FD8CF524348E03DF008D3F531
FB25032387DCA8AF5C0C46AF365DF5A492D3E3740711CA5A39A7AB6390CE1953
171F58AF76E37F900BDC979CEE1D8CB1DE4E20E95D4D991B5CA4C7C24CE1E689
52E4B4A5163156E8A949962BF7A6A7EE4B40963A8E0F90C11F1CC5A5F1500E9D
D562FFA15725CD36E1A6E671512054ADAB4D88C780561928C040AA9AC9765646
79762EADD541D9759F6D2620D4ECF3260442D6AAD6C0F14E74C6F08CE98EDA83
1222DB03EC45F96AE1E9952AF790867A697D0012408071E080276B264748C893
967795C977D721B18693B0F8D323D614767F211D3AAE74D7F46B757127533A4D
10E92CAD1F42C7EAA3F7CEC1160E390B98FD7E149B91489E0052D61A999CAD03
F7DCE89194F5F358CB1FFD970ADFCB4BDD55C44EE30BC8E67E57526EE6A5CFBD
7CB5D0D23786B723F3EB1874134DFE031CF7FEBFAEA8512E5A5C861DCD4ACDD7
1037E20D982D33527A298440CEBB2D60A7A195A4A992B580F04A50655910B66E
489698D51209515D5F2C96795ECB1A6C43372B737E817D60EF3E0405D22FC6F8
9CB51ED09F81E85ABC81E3DF7993813B6E194E4C3EB81886F60FFA66EDB97359
2CA854D165E4EDCC4EFEF68C653CAABD69092F185775E10F09AC45A344431930
EC8BA573A39C46F5F7488595A658EC58E5ECA2DD3D3720E0F6DF82904D0C235A
FBD9506D11040E4741557D9E15DCF3D6E6829E660C8B29078FA56649509BF4ED
AF3AAC991BBA02407D1007288170DBBFFFA570B70B03355EABF1A2717250B3B7
8730EBE47B90A1FFE5966AB5110A116E4CAA15BD6DE50BECE24AB724DF1769B4
827EFB04F1036048D5C49EE0EE58F2B4E7DC0A18C7F23A0AA96705D76F5862D6
5309DFCA029E5ED05DBC500BCE02AC8B138664B205A09A419C1AC8C43FCAA064
7DD006A203023033BA11BFAE2E4D2CCB9184825FB8189E8DB29172A0BF4B7404
6B4055C997047D42AEB9A5DD7D796325DDED38A2108A6C55EC6F4C3E11B3E7CF
108BF210D2252DDB628C575CD700CA5AD1A49E2246F1C64174471D85EBAD6962
C374899757EC3FFD380A8DF88BD96D057AFD7A38579BFB89E2C1944861D82428
252EF19496BCD8CE00B77F827A88139E6854F1008CBACDE080BFD58626511723
8BA21DF4E95DBC6123EA7FF646678CC152CCB16ED1983CC0BA48F87F85E24B78
B1028FD71D7C269A8E9C1E862C73969344E64F1EAFE2E1A35D1B4254EC2B771C
C2F425301F03510D6FA578CBA767192A254713550196E873064D0AFAA70D4B67
6DE467BA116D906050FA5DF98A443CEC534B83847EA8CE2F22606545EBC21353
58FE16476401B7018BB6B5A2C580B2D6908C5A0457553EEBA315C6F3230BFA2A
129D96A3FAB7F37B34E30FA78C5E33AA22842CE46207EE0D33D7FF4BAEF55789
CF394DBDC1D8D84DB195CF495F3ECD54543DDB2E7539CF32D9D95964F3F76CB6
6F61A97FAE15873FAAEAB13735EBEF20F532BBF34886AABED8431A8372369B0E
80A35FFF40CB1953A63BA8CCB0F133F7E98BA7E394E3D514AA5626D88EFEBE3D
6197D8BF8C8A1B738AEE5D02C8C9829874B8F2266653F9F5EB11416FACF3098B
CC9B7C083B4E396532825ADC3DF3C9136E98F08FCDCE5AF9949764B18D2A9616
A3B3616E3268E584357666C58DE16504C39B1F6488CE71EB6AE1C7FE991C4814
8C747BB223D37F1398D8A9D6C69AD1A38CE32D6396C40EEDC334D51D8B86C366
63537BF3B944D95E86A178CFB56EA0931CDA2D2C8F1586D4B1C7155C902851D6
4896FC59E47F29655EEBD4EB9895F7AFF19E2AC14DE3523E46B72DDB2575A329
4D60F2284F6E8DA53C6BEEA3181B33604FF9F0719D7F602DBFE98559446E0F63
1DE075A69AE4437E1A5859F260DE291410855955E5FCFB229C4ECBCF7657D967
AE4024EC146E8B66931BBCEC322C42DAEA6C96CEDF6871100D2C54539D678D13
D316FA25E444B6529E946FEC874229AA9A1F4512271093B828DB9EC205311B69
9EEAF22DDA61A479CB7ACE9E4F8C569C7C0BF4473543B3B77B4727E970F8E7C8
2503E010019ACDE1D948221017492CE7D6D6DB24B373C41EB0554443B0246EA1
6771C6AC0E0C2DB572E403ED36DF2F853D7A7AA26891D55116E829D10EA6A8F3
1C99AE449F0A8C21626DFFEF420B42D9FD22AF9FA5DC68BAF29DD90BC1382625
63BBECB07781B9A9FC1A98A53F9036B10C49123CDAD4EF342C5C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 69 /E put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 120 /x put
readonly def
/FontBBox{14 -250 1077 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABB1116532AD67AEFE0758C051241E301C7E13A98
6447EB0180BF6799814BEA4DC0F727D0A40B7BC3B1269CDE174453D6A3C4479C
146001CF717DE25AC1BE5AEA5F2F1C17719251C429D3AED19EFB5B36DBA8A5AF
E03D96BE9DA3DA49FCD6D60C5D65CBFAAF45A202003143C9488369F56F041487
1ACDD719AFEBE2DCC58141E7CF7A9BF2A7B0B585E41C5F698461AA9C8317062B
66EBC2C5BFD4A48372C6BC75102A7AC0CEDDDE84A1471F1B8C342B6B624A1832
C93F9594C1E456CF29F0D22C6448DE1B83384208A7CBA5760BD78D79CBC8308E
ABE227CBB05E7266E6C759243C76AE815F3A8A59ED5F2BF8C834853460902276
014C4F8FD0BB53C9FD98E46D2EF63A6045CADF22DBA0B707D1DD5D7EEE7CB729
419D7406B00A81207563200AF37010A34CF3187C2955AE181FF71F8C60BD587B
2787DAC2D67B8DF06C363C944DB57539CC8F2F57F17901CB1394A8D0C4500BC3
FE2633A3371075F2EF47A6F9548EAECBBBC0621153C2B874CA80A547735ED1BC
88DB815A1B6EAC65E30FCECA47DB24680C64D923A0C4AC49D0B0A6AC45A39E9E
68FA39DFA84236477E5208B8A49570E3B13BE11C1E5294C204A4175AAFADF777
E0E956D3FD1965C812F77FEF6A0298808D4BAC4DEBA4B63B20DAE5A19351D291
14D8DF7164CF02619886994A1E5B1EC43A0DE5E953917C4C035DDA8CCEE7A9E2
4372981A091D4818915C5732BDDE64488E4CE2AEF8F2A9601305641C42775780
23457B0E0E9EEF9A7CF95BCD5E1C00B2516F8404AEB2D7959DA676E7CF18E63B
9DB2A0EB59A671FC69CC4FB87CBED87666A9AAB63719A754860310C8A2B8D4C9
B98E31353A7F3785728C6CB96B77C0B96455E8530070C434BB4EAA67F0A5127A
43C6306235795A16DB835F4A8718B4955948DCB7FFC7C44DFD12B2698BBC6424
B18FCFF1AE988C58688421F58F136B92FF7FEE4A4003344686C8F0CD7A08B830
60966C5853E33EC1CED70F856EA9617700A276DA37FC99818955BA3BDAB3B5F3
9C67FCBE7373428FCD471367F0F3B212DFE18E0F994AC2D55BAC4EDD070ED5C5
7A60BDBD8F95370EC463D737C805AB77F990C0817D7830F98C59FA6168B74E28
386D945D3D9B8B779139B11E1F3CF8EE1F79E9ADE5CB130609D583EE0043ADC2
CAFF76A2326319FBBFCF9C2D8F18C4D2AAEBFEC53DE0FEA8030A931C265A69D2
81E7606788534320704DEB65E93A553F5E02B78CA7000426FAFF560BE5F5C441
C6212FE992FA303730A55D0AF416383241FDA3C0AF7F2333B65FC548720E46D8
3F206183E6545EC428DCE9580F09244869BC472F73C0E2170D8D450AB1463A7A
B40E860C2BED23149FC8789444B08C47DA86E307C5F929601E3CA2FB0359A07A
BDA7FF3E8D97AD86BE6CB88A5FF3E4F4E75EF6F45E51DA5081B33DA12C3D1947
2586547612B17BD5DAE676DA04324C0E4AE018AA3BADD50D651246472FE80B3C
2915638F53C1AE388B896E1FED40E9DD441EA11AB45487680FD0F62F484475F5
853E513A55716D91042A1C66F65247EC920C4032A73A5B43543028C8BC24DB1C
700738277793A7D58BD179D08FF5AAB46D3B6F19E0276423323B82C908105385
2F3DBA5367BE50AA8692C60E0B964D15F2CEA6FA2F4C1AEB1A07DD1957EE44EE
41C4D3285A9AA724DD02FBD1A67A256F9E640902546596CB3B146B9518D77EB0
471E2D5405E1589BBD3C94D49F0040E1BFDB33569A72D1F6BD604ECDE03C8AAC
322FA1D88A5FBFA1B2E77941A5C0DDDCF1C4F6C13A4A76D2AA236338896F9B39
4DECC94AAEB72ADD47F843B4D4BC2C2CF6645F852D87E2F0676606E36F7C6BB9
D0F6F40954740A56D6CC4CA526FA3840A6B885061383AAB0783548A23004688C
566F2201830C6FF29134BE86243E4AEE8A7F92515BFEAB73C72F21BE62DAC75B
7690417025B192AE638AF30009883CCFD1BFDE9C4DFC14FB8FE15FEF1BAD92DA
4BB938A2131D222D9C0A02B24692AB4C40B14C40C8707CF838FA0204761A0FBE
634E350392094265DF6A16C724394B25FBEA8A25836ADB80E6A060DBEBA50C73
1CDE5D012FAA407F940D708D27413EB3A0F869AE30333EA65FDBC14421391569
3F0595E1EB94E8CD94FF2AE2E044C5867453E039849FFCB953F26941D417FCC6
12874751FB9A203C035F477105D1D62FB56A0D3D4853F7B560685CA9FE8E3FE1
1C3A2831E565E1D3A5C64CEA1F0C9721F49DC451204C7143FA6D381D5BCE537B
5FA5E328D92E66B8F0D655C19377BF9D4B478A6CD0C384DFA0349B44AC6B4998
D9AED24B3BF2D026F140C05B9A5835FAE25BE6031C28BB98EB0C5480E4E39B3B
C214C0C220A61D96FAFE41278745F5A64974BE468AC08DFC72E32722031E851B
BE0B02F9E8B24D36D42170E75AC9573B41E9247662E8549D496D181F5B36FC61
91F9FC0F3479D971C22104ADDC45A2E96A5E2FCABD82A829496DF74D47AE2583
EE583A76927EF95C6DFC49FD26F7CA0193BD2B9E258B7CC40FDA5DF4A187970F
B78D6399D81DBE23199DAC1F26186384B2ACA5C1E26FAEB527F98C3C4C11FB44
9268EB6AF0DADE7EE7D11935BF3A98347088A64195AF282CDBEFAF27CAFBA969
DFEEFB9217F1D8BD2BA7D88BB16D2DE72023616C1443CF1825305A2F0B147AF0
89B4BE0CE9D7EB7F7D3352578ABFB6C9F4DB94F20660526C62ACD3D949292584
99AA6B326149FFADE47B1E0FB1E285949F4D2E243062DA645812D693FDE6B9C7
CFD6D6421DEC30C40FCF344943CA1311814F6562097A3BD8F3939537A2D8E4E4
BC4B4306511A86096F66A6D64D2C1A3B31327026502C169882DC7F74BA0C1FC3
6B8BD8A72D0E9BCFACD21C8F6198C6041B0C7360EC7B36F1F0C18342DE908F47
DA88A436FDFAE1B6EEDE65CFDCF0BB2ED80462787825B0704C852E6B8C2E43E8
710B12FFF7B3DAEA18DB467CA8E1196AA0DB7CCBA568F402E23CCA45C2476647
B9091C429CC8F7431B99ADEB5E37A2AF3EFE70A28633F08D3EAD4D08D02743AE
3588EC7026814B8ADFC1B323FC75DDFEE662032092AEF8EF4A4CC836D845AC7E
A4A836C48DDFE3BDC31EDB208CDF26A4B5329997E57108557A1C5D4988916BCE
1D49F4C17F52ACBE4C0323B8BF369D4DE8DE719B4C8AF9C852DB67D7607E7963
DED830A3A00EBF88A7595B9BAE58890D9218909F691FD346CF0C60CBE015E833
3E73DD31D4BCCB7DD236F318BD7151355F7DDFC41F4EE2765FFCED772EA8E274
FCA54A6960E870E9D85BF9F1C828F274E49EB1B0ACE2C9829C15502DD209956B
9EBE1DDB0ACAF3160BBD257E0434CA588B525D53ED0CF033B23E360C8A334BEA
6987290AF0C6B7073248BC86B897D1D88415CFC172B3F47837204DB3CB21DE47
175EFA6E13E0A578AF277BC3A546926F501873AB4B96228DF40C89B1400308AC
A64290DB4A0A796861C51E7171011DD31446119EC1BCD481D91E47F2790A9F77
BEAA3E47330F2D816886F5F92B823582DE30A66FE09D237078DFC2B0E8BA1352
99A013E42D17911A92260BABE7D5937C6AAE168CF3B4D02ED164C19BA8421822
C44C04431B96C0F0747FE76BD6F464D99F1D4DABF4145B09CEAA25051CB50E87
49964450C1E22347F4F428A0227F25FC0B9BF187D6E0D3AF0566762CC6A6DB10
46EE578BD8EA027B5AD56B4FA9D0BB96F8005C8EB8B23886D98603D5C8390E11
BE0B194AB57E49C32F820E4A32E362F4FA7E92F361129256E49D189CF8708594
EC8201FA0407A6AFC430AC02EDF6C4F7534C01D3055F536D9E0275A3ACBE1EA7
3CA911A08C4B2CC172B179D7A50C63F88D469145971E9329028C6582ACDC013D
926098E70B8BAE477CF4693E9C0A879F7C7DE5C8F0276305E1986AD306764795
80A403293545721A44DB26866ADB249C255378A1B0DCAB76CF186A3C0F83F798
6C9F251B50C236E4DD1F42042A2B1E667AC5F0A5D600F866B84D04062FCC1D4C
8FEF28D06274C11B94244E380A036C9F4AB206CAD2A90DBC8D382803CD08AFA3
6F7C3B745B1934366396B6CB062F4AF445123575577EE6042D3F750F5281FBBD
5C19CF94D1CA4031448A37BD2A84241E51978FF154251D2D2FB07765705D378C
E87049450FC363A2D439FF222BD7F1B1A80D6DB45183EE07D6886542FB835BA6
E4721F996BD41DD192B216758B7982AE4A9E89130F03AC4297DC7BD6DC7DF3F5
69A58CD8F91AF958F6E79EA2B9AABE07BE42F3AFA5FCE3F0ACE7653FC9E9BF67
B8E4B86473380D01E30D5E4617831978C199FC440B39D5EF4189E9A268857C7C
6E40A0466DE81EB3C45A2422B301C8802532C471E5E27D8CB122920EF4B9BEF8
CEC4307737385E8F757A53FDB6F2BE2B50FA3B749E5A8414FE20C0D2585BECA8
8F8E934ACBC38C18B88BE707C079BC2875098D27A700D30326544FA5116EB72F
63768147EF20913A778ACBDC41BBA75ACC5C2AAA52
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB663529DD50
29E1FF043619C3969739047DCBFBC336B393CB065D21CF1968C731ADD4D51375
6CBAC27AD1F90D3AF7877A375C3E4697C702FFBABCAEF3BF9FFF0514F0D8B8D4
D0A784E6AB1B346FAC133BA719CD914F3DB00BBE1DB62CDA3EED304D3C0CF4CE
4D3844FB9A039B4F810D415DE5BE6A499537046FF1B4308E1970E7209BFF9452
4CC558DD3D61F1A1BB450989EEF806B1EA4F748AB13801067038FC174052E571
0B1724AEDCE7E20A8A2566A65C1ED74A1799E9653DCC76048FBB9BE4D35D6957
8C90E4F27B5763DE2B5DBACF44ABEBA6E6E1CACCCB5D1D783FA668A29A0DC36E
6385C4503EE8A57F495376CD7042D9322AF0C98FD7B3E861964A5A0F6E0DDF86
57A30B84BC1A24E90886169CE60DA850DDD71C96B7AC604E426A2163D793F7DF
C24EEF4CB13A28979067E96BFB2028F9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302535C253C2A7A0D2A39F364428A2F6
E75C522DF7779C207C50458653CFCBB74C28D8FB93C4A505CBCFF64175CE3168
7335D1F5349075B3FD6AB84CBA8513CAA1308A96DB6D10EA70D799A769103385
A17B45DECE34805BEF9D87E8F5257EF9755A5AA37E309ADE68B08A3BB336C6D0
C6952F9329C994A85C3666ED1C878CDF153C6E6D0D659831F038CC4DCA781303
AFC296814D9578BFA8377B07DA8FC940685BD73547E8BDBA607CF729CB682C20
B53D80E751FEF2FA8336893402A36529B3B2DF4ADDBAC968B8584CA27CC89BBB
2EF619B92E8A21E7720A25BF0AB1A16E18D0600D3E1A8EEDC66F1C06B7B366D3
8D03E44E3A6F9310B3A0E9104FC78CB352E3184682A5342F24280DA329993A02
65A051AB0B3853C93631B50C8B314002453770DBA4A927B48909B1679AA0A417
29B27CA25CD6550886CA02AF4841759D6C525F6F3B88A4F6E306C866643D8180
FD2D5C9527C9B33353A345D8BA62EB8E230321D545B2F85C1F8535E1DE930148
648A7C7DC2B01608A8FBA5B623B0F0B78FD7AFF029072C42D9EAA098997B5922
923A4BAEA63A21F03252BEA56738EEE1CD89247B02C553AF4D8589C5AD4B1DE9
0182D3A2FA3AB5496DDAE027FD34D437DC7A4CB7D5C51397194EBC355F9FCE8B
5180034516A176CBD3503ED42D42F66D488F0AB581963AB0777006FAF29F6D11
F0CB2EA17BB13B83D55AB4A8C0B9F1FB6C5F8882FE4BAD505D26A66CC57DE8D6
7EC73F297F675A7588B7A6FEC44441B090F715E18E5709D08FEE4EA260BF9AA2
77A6C51B5C715C16D5B6F5E097D9FDF264C238486C9711E30E361911EA2532E5
878E68A6308B28DFEBA2DEF0FBCFF9C7726611992299782443EA321D37EC06E3
FD731A015F1BBE5366CE7C07B5F3E519E669A618FE8C78FDAEF6CB83BC6F784E
BD3FBDEF53247CDF8F25DCE7903DB0D01532E0DFF6955CBC7813E9383787B977
9964D7A29D29E99B3AF7B16DA34910681CB74D51F34CEB86DFAC1AE89C648A99

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AD14F1CBE935942AEC
D4004E6BEF379066FD72209DC88D2E634E79BCC2B98C766CBD92C561F2703F8A
109E6C6CEC7B866F2FC7ADF646BF492E520319F3B949AB5D84AE990B33344A40
3971F58DFDF8D8D67FA0B8F2A0D884F8C09A5A721319B911DBA0A35903877343
C37BC36C5EB32353272D1E6ED5FCA611BE319A7E1E842CB7576E7F5635C3352C
04B4AC72A87290D2AF4EFD374469B9DED0B19D1804A05B503C512E097A20B7ED
37FD5A468709D8D7DF5F0CE601D1D821AFD9CCCBF3E129730095B5BBBC46F337
D2C89990588F796E0ED47B29EFF6779243BAFFFB629B72D4FEC2A2C489EE07B4
06646119566AF78CF8106D9B72BE1A629361BB0266B88BD04C7B087FF2DDCA42
A9C8495E930B0600C15D886B08960B110BF583B24761D25153E60E3B8961952E
CE60B49F4F0C7F10F2BA6591EAF8BEE255575BA5EF9BADC27B82A440AC8271D1
0EBDFE3D91FD64F6DBF65132DDD322E4F338BB2FAE84C5C6698FFA5E99B3A1C5
45FD04B4EDC98A6AB7005C8D61DF18770978A82D001BFCD2C6C649FC1C97CD27
672346D7BB99E1091F72B7EDFD02C04C3EA16F7E2AEDADD88F0327FA32F43EEA
9A82A47D70502CF2ED400C71BF4CF3D8B3B1AD0AA88D16DB7644E83A5C99512D
3CFB784FAB931C55AD2F271027F1B04D0A297DE90B689FC20981A91E16888394
59D6D7B6BD3227F3B8716E311EC1AB26F057EFB873911879289C985F50527847
5FAABF2A99B1A9C3D90BEC79E83376366300715C05B0D12CC85E5946E77B9C63
4E3CDAAEA897FF2213099C44E52285A80277650FB65BEF289F6E29BC435FCED9
4AA68F290D3EF2D366ACC5031AA0B39101DE25132283D8A063C1171E24A8CF5D
73E0EA80A37A7B2C1C711AC31EBADB0369B9F9C630FE513E53BA9C06E56520E5
9585D2E452C801C9CDE773F0F893D17BC23013BC8DEA68E70F7F2483E7C95E6D
0A19F8143DFEDD0A325180063328353D550ABF9EFC0CC18613A7273DEC3969BE
7D6F3B933768FF6E23E89C50F70A58A4E56D8CE9EBF334774AA1880ADD518103
92E8FAB3BE2D30D06797384A611CD9C7C47DD2240826B608C18DBBAC0AED6AEC
A2361D3BBA4FBA2F09846D0D205DE93109C05483462096368BE28E6C8B087EF9
434DC7C2159C2A641B6CF69C70C3301CB4C9374F0A4B969D32398E4670ADBBEE
A722D129DFD6559C5F761AE44F67B6223E5102D45F3A37CEC8A4DDD8C5DE86AB
F61F13380AD296388A8D53C8C4B54F9273F24941B7C9EEBE8AC00728279B667F
BE3FE3DC6E52FAE5BC5C7B699E1FADDFD06125BBE1A0C6F08F29FD0D850F1898
6E13E2180B97C501C32F14038068033D0048A4825545C4E19FFF0D9A31A9402B
8DFEBF2CA50E54A4DB670C460BD2CFC4A25829B246714AB1BF5A60526FA789AB
9DE2F8D0198D60BBB9C4FCB14666E049667632C67850EB99ECA142E3EDEBCB02
6B70B523C0A898A8D6CEB05BE83C2A9500962A2EE29B4F1DA41F01196B4AA98C
10A96F8B11C5473D4C2D1AF1AFE5E644EFE2EF0D99E49DDCA9EA2F7BB0005328
80FC2F64B92E7A931E137B483FE6B95EFA9AF9E6ACB5A83B5AE6A1FB0F39092E
9DAEEDAF44CCBC30B5F7AD70D2BE009E7E873A31A07FE7A38D29972EAF1F7A3E
9635BF5B40127471C19DA91758903209CA17AE3BD686E4BEFFBFADA859F7BD0E
E83BA255194EDF04F932F0AFA4420D4A875C58DBE9761AB60904090321A707E2
E7A6FB4FADF0039FA41F8BBD2EC4C6A7D367B09FFDD3C5BE8CD8855D17AE2433
D9CFBBEB4B8ECFCEB21DE990CE8CAD19E7DFF1B79F55E86BF2B68AE5ED2E6B1D
EB7FA222AE90515F099DA932164A73427485AB5A8E6838A10E9FE70B6226354C
2E027E4E4E7E3C1EE61A59CA0FDF0F384E88714A61C95F0C42F54A5ED4324FE6
7E2226ED6AC1E56A265F0F53541456607D944CBB9C7E4250D5875800D92C3546
D5F7D88AEAB6888F61350BC208B11E15580785BA9307988A3C43A6402688F538
BADC8171E12E13929CEA3942167E43877692B3FADCC7B0FC9E44ED3249915899
AE01F329C2F41312DFD8332F693675372B662F33087E98CB53E5FBDD429BE842
8A7B5B0E919637B96DFD6B913319F40645272635F9A765BBB7B8F2FF130F80F5
619589FE7B2E1689431207B505D18E7E9EEE8979E39815C12D1C452D4D99EE85
DA97E4DEEB15D434836F62BAC72EB8FE441F05260EA4558D64C94BDB00F7EBBB
925B04B9C35F3305ECF6518EE85F378A9390BB507795DBFFC0CCAB4B9859E42B
DF4350FF84F6A3C6E21B6289CA9602ED64EEA5073C6AD48A7200115C21A54E73
03203EF1DEA558CCA5395CD491B9801F32D2174D532E6DD1FD8F75DAB87732D5
48089979A8E4B4E301F2574EC8D5ACF49B62DB43AACBD22FB3700D4D91CD5152
EDB9CCB14C7B8B12E0B10F87226E7AA9D41FB2F61042788CF9F1BF6F548B0C13
791C97A2AF72C0215309CE4FB67713F49F584D12A5785A054D9058CE14FB2764
6A9AC98B3A0313C7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 6 /plusminus put
dup 20 /lessequal put
dup 25 /approxequal put
dup 33 /arrowright put
dup 49 /infinity put
dup 54 /negationslash put
dup 112 /radical put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57034F6B6A67AB666E15104577F342F68
CDE6AB4EF53E08A8E0552B76072FF46E80AC884959B54D147A9D5105D1FC6B3B
BEB747B75D6E6A3BE833BFC95FBCB2A23A8697CF76D1B9F09F567345137B24FB
84474441D5CC4C121EE3C00C85BF44A4AE873BDB4194882445B788B6BB493660
438A9F3F804726DD6260C64707B2B1DACB291D4DB0CA4136DCFEFC1DB4BED492
C9FDAD9FDEC8B94FE308309D72397CEF54C9A2C50098453A4323F6AA13F21BC0
31CFB10E33825AB10452A598345EE02FEA188C7DDCF00B6EE6349732BE12317E
8D1E63EF94946011DC06FBCB8A3F2FE0346CC81FEDCA6514498AF431574E50A6
27A41BBE66250B3627780D635331CA70E023D418FEB25568DE131286169A23C2
936E5C4FC1DB3EB70A9D22D4A0A847033FEAA06DA05DDDBCE7964A702A579AB3
0815BC4B304CFA8D1B8F98910388A84A70AD0B2364D0575AE6973D448E5AE6EF
6037DDA218E64A11EE4F439D695D312ACB75EF2A45FEC0FDA38C09EFB6161079
28398755FE8E250BBB6268DFCC310D46204641383EE39CD733E1700BC62C7372
3B13D003583E588341FE4DD78494D8F4FF952139A5991DB9B00188677F37BB7E
DF9F0DB0E6C7BD17E97B472ED87CEB542661ED5DD2A5804A22E0CC3C5D5A3405
A11460AD59989B17A3C80BC2B6D5393A938DC7E5B617D59917AD65DA22B2A2A3
BD4E31E8A1DD6C24A8E37E8CF9BA2D2A17EEE5DF46CD55764C0AB34B78D40519
FECF8A9FC7BFDBEAEA15CBE6A18281A612AFEC8F75C637576B984FE4A56828CF
CC5217D23453DB9924B7A6FCD0DFF813AF0056C114F1D064BB92A7FC6D9FAF91
BCB3409B055621D4E9D51D30FFE503812CFF51EEDC35C87408D7D31CF17DEA19
015567A7D4D5481B83226A50A8D18909C0DB28E7E188BEF76E13DACAD94B278F
80839836B129FD50008D105423C6ECC22529C1F95D7797B0AE7DABBB687C783B
07E31DDED2C36BC10787E194544970AF964FDC97A7F64499D0139868183CD035
8E414D9BF1690F8340A890F305F615856669A11020FE8B29C1F399C95EA3A716
17562BDEA96640B494E04341BBA6C6139F5B9609C7BEB0627DAECDCF59C630B5
E5B75E8F034C7251F4050A929A8D0BEDD9842E551B2E091FAE3C982C7006A921
72C32965F9A833B969AF9F60766857E2F891E3A9E1C16D7ACB7E4ED234A3BE4A
5B320629D918E3499675225F5BBFBEF0BCBA1F41AE3D54B001BCB5E20365AF6D
324149B18D294CE1DB3510CA6717D812335C23514484C8059D714CA3ABC5943C
1D8396985AAEAED4B71D863546E4C77E231AD7B16961FBDF800E7D1404A2BC20
6B7DC86FAAD9850086D51F03EDCA9757746E316680058F1E14EF889E1DB6EB27
0EDC922874FDD6C5C515A868E0AF9F596165DE4CCB2EC4D719040A59295136F3
6A0D668CB6445A99B5667CFDAEF515E40415BDC94F0E472A26BC76B8A7C9D413
181DE7D3A608A01A3709DA4A873DE0C96133CF7D5544E20665B76E3F1DDC3210
BBB10CB2D39F41B61584D906CF6BFB813E1448278356931354794B7642236F59
FC68F24EA6D87EA0B2045E2CCCB0EC2E81FFA839AECA81952612792C7E8158F2
65832D71A5E338E652B2C1830F8677FF868A27FBDFEDFF68A03F5CA2DADDFF7C
088064F2C000B4C0C2A8E0E27395EB5AE695A5A1FA8FE1E620721D3A9DF7C0A4
4FC8C975375E00B521C926095E0403D6236EEB2B944AA4CE5825726A502DB75B
72BE9D700A5862BFDAB3ED44739E2FE677A11CEDEF160954A87646AED1FD36C3
C94F7673F8D2728DFEB029FFA568190E43BD3A0A2DF96406544DE5DDC9DCF019
7660ED23C1B66A155F753D02F3D6B6709B06C68D35E0717E39CC8F857EAEE76B
DEF91FCF4E65936A1F4E68C7F27A87C431DFDB55B50B83CA95
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 33 /omega put
dup 58 /period put
dup 65 /A put
dup 66 /B put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F4E29AA26767350A6DBD6AFD2952EBCC71A53108EAB519B76C21D9B
8828AC790EC3DC13177ECA9A232FCD22DDD26B83D96241584F8C810D6B86046C
0D6CFFBFA474067AFACF126184C0D403A32784172FA057F6C13C9828AE0E102A
85B7799E45A5601A7AC00732D9421EF76164B594F8D6A3CB7E0C1C38F0D91C09
EF69B025E5E301E5B960ED1E0466D8D6379D8788955F8E5DF836F1570978E029
5447DFBDF4E930A43C0808050320621D952F64E38FAC009A2F20A881270FC91E
C1D13D8411EA2CF06CABA6284E9C195BDD3E968CAB6D863C26E328A890529AEA
0432BCE4B8394F29AFECAEB70E00DA72EFFD1842DA8DEA363037258A4884AE45
14143AB631BEEF51A21509AD479A620CEF5EA613823D462B3F8D63F3D0657E63
4F5E5A305DB4CC64385534D980917CE6AE72A4F30B4A14A12A00A5EE9823BB33
3131CCA628760753F6D901061E59C7D0FE318607752115AB6A7CB3CCF555C54B
65BEA79E4D732B3879D89A1B74002148F90159761B631BFF8BD769582C843988
087EF6B543C03682BA2B6F16BDA41B5335B37211C37DD8D6B4D5F18DBD592938
4D6A60AC5FEFCB4BC099FB752566DE25EA0ACD9CFD3738AE73A9C9CBD3CE601C
95039F8D3A70130CB13B63CEB3213790D086D00382BC6E321BE1063FA16C7C72
FD32FBF308D7EE630457F396C4F2A55FB7A98E410528171A9A37D60CE847EDCF
9D27823FC87545BEFF0160B430DC91BF211650B84384708ED7222A16391FA918
853A0FF651BCEF6B4F0E2C63626FA5D275F28F39E3579BF5B013790B8A7194D3
C40DA9FB9C5A6FD3DF5496D7E1B44B5BAB976A9D61E9F84E6E82BE63F36951F4
5108F0DD1BF6F3D1092C1A0E3545EAE68E46937178BB57F61DAB0E1C3368A7F3
9FDCD02F83E8ABA1D317553301CD41C37DCBAA8F08D1AEF7DD7CEA3C477D731D
8940EF97A4873407BC5DC06371305DAAC3B64FE95DE25888CCFE19417495FA54
DBCB26CF2C02FFE855D4A764B700C2BF2903C60944AFACEE010054D2A11CB33B
F8943BBB062ABF6C7197442EC49561AFDC9FF689B50180D9170D7AB953C79404
A67D2E42A8B9CFA1D16114A8CE2BBC6A04594D54F8644B88E52FE31441FDC6F0
C9BB67BAD26F741A51FC23AF885682116EF2E823239B2B6C40A9D1B8DD4926BE
6D28C4A4B39907281BFBA655B3EAAEAB1329C14D7ECF7C8EEBA737FBD037B88F
1588B10E3B8F420E806FAC14916C7EC0B9198E8FF693672F148ECFE6F4DA207D
B106F6F99A29EE3444BCD6CE1913DA20C05F5242716901D608E29926BD98099A
6CDA00FC9840D372D9AB4921EFF433A50EEB85660E8B5BD1B30AE13ACA52C21B
E6CDCAAC3AA2709CA92C1567E55DC17479F334C135E57F263A07EAB0F10ECAAC
80E13A317730D1A061E6E0F568E262D7E4928037E96EADB9AA5BB596B198CBF8
1CB52D4C5D7084826D0C358F0781CB6BDE4EB0A99F8C3D3643F6CC305E324A3F
EAAC08D893F9BF1AE6CCF83476F206741F65A4765CCF68DC7B6413CCECFA2AB7
BA52FE2A1C926AEA76456DEFED5ADBAE88EB694D5DB00CC90551E2172483E53E
71D76764C6CB4AFB1E008C02678F93B691455E67207A97A89E7C16FDA92CF0A4
F7F12ABCDC9A0F985DA5FF8E01F4769963061852F6F4024DE6E8BD7EB895CB11
55A375444B735ABD6BDAF227EB4A6670C7F05EE750B4F5C3C6AF56D57EADA801
AF85AF3274860BC454080BAEA3E0421FA112399AF8D28B732311800C03827965
D4D24A85754761AFBBEF439F0A6033A03AE088C69A6D78927E7DF87A621FC84D
A0D6662E93D22B48CE53EB73B59834BDC62CF66BEBE626F4ED8CED7CDBF1A937
E0A6BE2F7C551AD3A05C9DEE2F6A992D5AB9C1E711980B564B8C6336BA7DF221
BA679B1FAF9354B2F64F76697F1DB6C5FBAECA1456AB02C0C0930D895F08D8AA
21C4F82CA767BFA2297DC487987C1A44579D296ECC01A772EC40B509DD9A0FA4
493B685A10B71662A6492E0725CFCF8B08829A92D65E49770C523ECE1E0285FF
4C294B60BBFB40A5F604C187C6C1AE834B91A31F82E66CDFBB2B83E525350F53
E7409E87D9B7DB1EA8B5416FB32202EC054DDBA6D0048EA6A2CF0FB7537E19DA
45638A60F9844109825458C1924CF489C63AEC35BA7E7CFB85810378B0858492
ABE67CA13D20FDA03D4BFD6C58B50ECD3071300BE0EDE6C68C4DDF0488641FB5
BDAED6BD8A16E34FC6AAFE9A124066DD99B08A6F6843A1182308A410234702E0
10FD7BD9EC0EFF95CB05668D9C6366989DFD4CE47DC41F3CA459C610C90C5E11
AA89A54C16AA32C81BB5CFC575FD98872584DA029ECF77890D5B50D1BD08776A
77FBB1143647A3FDC5684A8A4DB26FA69351F5BBC33ACFBF3F2B90C4C16EBFFA
FE48A4BD4EE8EED186EF06E10ABA12170EA3EC55A07CAE2A4FAD122356AF69D7
B5383DB79374DF9744B9B97B5C75C83D550664026E39F652367A3785A6BBFEF0
C9FCB4396AFE890C3D5E9EF506E9F95B47F613DF1D82A088905B2B4CC8ABFF0A
62E1F67570AE50EFBA139E5A802F0A4E6AC798EF6E0A096F401EF13FCDDAB7DC
FC7A65A22D873D1980BAFC3DED02575E16A48D2A16CE8EAF614F582120F37474
D6BBFF3AC41649ADC5E0CAD535F234D66F14BB1066C6FCCB47FCC6D678B89990
B006D8BE6AADAF8242E859F3618BB645ABE5A9D8D0ADCEA4866FF54B7BB916EE
6FE02EADD3A78AAF4512CBE6F63A666BFE902E64E6DAE279BE9E6574DB81F669
D30EAFB7E151D0385D2180AFF1A44AA193512C661C0BC9D98DF03530D8290E4F
08DE43DDCD91CB427F5CE6E319174A61B5F99A0A5D59CE5684ACAF9C0EB385B6
FD77A52D6778B6EFCACA24FC779C05A7A0AFFAF9E71709C90A91F0E60F02387D
1FC1FD0DF154FC0DAD906A0DB2DFEA18C6D4061601B0D92E56A3B576F9216E53
C844C50FEA4C4840E92016EDE998402F1920E478D22CFD5F468715EC17DC79D1
BC345D63E08B93CE676563F2F05BD3FC19B44962F822CEDCF115708A9208CAB2
5B321A24EF38BFED8F1CB3184A4ACD97DC868B3145AE0ACA12C200C75FCCBA82
8850B5B4C815590E1D9A652BCDDF436085ED4F282B47E67B00B050EB2DBF87C5
6F43C20F073E3CC9EA1BA1E09FC968B5AA6AA0BDD2C8654CEAA2368D7FBD189F
012433FA10EE789FDC37E02CDAE298803211EF8309AE10B293BD28F07C1D2352
655EB60CD7C61E4AAC3E00A79AFEDE1575E9A87E50F6ABDBCF714C3EE7C1C7A9
9EB83365135063C5DD00AD33104F01298C3B9103A90A0D9A9873D2BC4D2DFDAC
73D1FC08F134C2C457A1FB6A0B0F043947A8B1E84217EE61A6DEF6DA42EDFA9A
D15A3D0E98B8A3F6C4F6C946DE8348A2B859BDCD861AA59EBC3F4CE7DE8B82E5
7D0F064082FAB500F37171539AAA036602550E80766517A465D9976D0D191C94
9DC6022CCE4C4FF3E9FBF281E97A532A471FD96C958DA3EC3F29A6407DFFC927
F54DA9184FB6A114CB25C3D1D8094B433CA2ABFA47040F4AA8FCC4B68FC166EB
9AAFA459CD356711471A4774E76AD0899C5D06152C7AA516FC10011A2B0E2E63
C698A099D93F38A893F15DB7E85CBFDB42B69E0E4D92F4BABD93CC7CED926088
DDA283B77B1F1BD8BFD18E049E09A0C58B4BE658F1EDED68BF50328BB1247996
21FA9743C80A7ABA8C536765FEADD7D2CA02903DD596128864D68A0C0F19D45B
8C90A72BA5994F3A979DE21AF2138AC661A089B5CB699007DA8E417AEBDE4DBD
108721ECB0558062FB6FE9EDEA3F1853C165923B2987C35E62C0AF8D1310A967
1910331A6828771387B33244ED6A28B5C31179DCE44BDF09FF818215D6198188
AF41944ED21159CFA2BCC96BBB3EA2925951947329B7DA0E6DA4E52A4390DB83
12705A1591CE71AAD95EA60F5DF0CBF9F6DD1AEFED2115682CD877AC49FD11F2
C11FA06CCAB1D429D776B0D45C28DAB940AAB8A51C6D9201B3B6BDAA9FB4BA35
A8F3666493E7853B5AE99A9467A0639B2244542A4B194D113A5933C693C7F1F2
19CDA9BF7F7B4DBAEA838032BF51366E96A03D476CD548FE6250C93119001F2F
F84E77A9EB883078BC849659EF1CA5AD6B0F45362EF7A461E4F380AE0ACC0066
6F99EA0FA2DB1EA72521296BE8F751DA2F459BE2F01B9E46ED15567C70106628
7FF39469DB351198848F3371DEB17C90B73267CCF203D22B2E0E742A075B5875
C769DDB2187E88C8CFCAB60BD2D683A39DC5B14CE2F6D341B517A13E707EE41F
5CCA0F31877D2CB6B71AEC2BEE81EDB865F004E10F3D0B097CF8EC7E33DD452F
ECC2BDBFF3506DE53357DB4C54938F0334B897A7643BF310DF73636B63B1D2AB
2333DED64F349E42C79CE37CFE84DE4798B237CCF0BF4CDB1795A71D8F56DA16
A257F23620EE02B053712CC458C1779BE76D0AE84E52B7D22E8A99654E97018E
5DA84E967310126BD013D0E22AFDC11FBD9DE98E8BA13535E1E44707A5F8B87E
5640E711499E5A84853D1A6AAAC5C771FC439BBF9F1FFC60DBF0DD48275619D2
A7D618C5E28C5FE020AA39422B6E7D27A5F62BCA68BB93EE7715A248B14B2CD6
296383D6078BD2283B42848B32FC4C6C8D24FC341B448D3A5BE6CD0DBA3030D4
BC49BE38C9EB63AB649F00775FE967483122F6E98890209CB3195F7C46937E5B
FBE12A871EBA1D215A2A6B0EAF47CCFF519DB523DDF58D80517A6112DFBBBC3A
81ABE0E7268F427F19CE775B9E1BE0C76215977E7CC8ED0AE4C0FFFEE8CF7938
726B13822378BB82455AD9BEA067B0176CCC9CE562DEF48DA6940FFD6ADB9034
946895D4919A5D87F1531E1B9B18D5A15CF9E48423F4A9AFCDED98B59B4A5818
44BBAED7160FA2E3BE3328525EC298F3E9120A75C6598A881A7050A150A3610D
1C26416FE9FB0377D553FD683612463ED7AB38918625DAF8480070DAF41528F3
437D410C22AB2E3900EA3238560C92FA55FAE986995E1D2A6BC329677DE8ABA7
0A23CE833A47871B70C127725663D5E2F4ACD855A0AB9D12C93015385B8AFFC1
8766EC429D6BBF1D235EF9ED23B6387BDA20C793F1C96D186AE8088A2769FD5F
91957986D42D6754802EDFC7EE61FE2BEDC885DE32BDD2DF9CED95C999EFC2E4
EA61B6457C2DCB2E338390820E1C0A332ADB6E7ADA7AC5B79003F2868846CB88
8E24F59129BD2CFDCBAE67943544019CFBD5FEF4AAF4959E5C88184323D8BF40
AC3EA79E625ECB0100547A112C5C048FDF73832C79135B6AB073FBC742882D51
E7EF4BC620787DB5B9BD324F6BD8F0E447EBC9269AB0F59848EFD73151A5838E
91891ECE8EDBE765BA7C7D3742F074CDECFEF1FB9DC64469FB7CFCB7B2ACCB11
9F1000CC4F30A270EAB2E1C334CE99F395CC9E86440F33EF11414EBE8B7460C2
694EF636FA9F14678D5E6B6BC8B7ADBCBB18A2DD5FBC7270E5E07C36A23E430E
6D1FDF6ADB08D068E07C51B635A458135E9B4981145269001D0CB4873C9844F6
3829B5A98430A8BDC93D4F137C9C8282AC8EB3C243E280584BB2C47AA170C369
8C51A68C2BF01275656FBD508D367F99FCE65EE32EC5C4906A84BE89EF59318C
1D31C78F14CA2C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
dup 95 /dotaccent put
dup 99 /c put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
dup 127 /dieresis put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD8EF2AE9331
49A3C96E5188A3021755F4B78621945529AF83B723C86D255B18BB383A67169B
8EEB2683E527FE48CBE563A5699CB943373DB4704A5DCBCF8EA3F5906E0C17BA
326FC461829C9DD2A96DB5726DB947CB12DECE17B9C94CC4B02D9DA428C51F4F
789AFDACA936DAD1DBE4A7E0176A8FDBC67F8978DF6CA02E30E7417A35C4706B
546264F9555048044DD42DEE0C69FA597EB613255E62BD2F1EE0E1B4C24238BB
B16F5D694BF8E4A3C849D0384A140DBDB6A765629547C18F43A5B8A1173BF70D
FB265536F141900C22FA96524240E906950D34F1EAB0DF7E5ED9A4159D2F2D15
34A4B6F4BADD1C7DF9CC8FFB74C57EF6048ACF76A7F0370585D8ECDA6BE7B98E
625B7887320630EEE692831922ECEB6472726C4E4341CFC556A17DCC221CC835
7717BCBF6410A54A45FCEF7448F316D313E7F4CF8254F43B4F07619ED45C46A7
6D0F2E64A30075C47C4CA9735736926C9B266C884A17D5285656C247EB462A9D
D78DC3B63EDC1F97EAC781C8B48003284A8B439174B2B4230AB6B40E5D4BE266
7616EC4FF9DFDE1204AA622801859044B6AA4A4EDE02865E3B5D00C32A643765
49902D4BD9D6874D5C5F0D65170ED088F1871D61AA211FBDDA4D5C4A86E9B300
E2E6937E6A5E8B370265564CF8DAD00C7440F65026D2B427E1438EDF26BBE2B0
6CCF9C71B0D8B554764EC1867C00A1D29A039B16A7246491FB4E9BEB71640DCD
476EC0C76D87D8682438AD2C53E5928D18C19776CDD6CD1919B8292BA0037060
D50DD3C86D7E6D3FDA8E4371B237F92659BB80160A16A073A0D9E6ABF8D01886
D1291A3F95496A9CABF4169281F2CB7311F484591E02D5A4E140E9AAC68093B0
DB188657F71AF1796547C3EAAE74A42EED9C1F50A91E9582F42CAE1F0CF210AE
5212DE338E27A503F7F65451D38A753E9EF1C64904093B170381537FD8A071F7
F3A53719C6C86A011BCC946C4E3652E88B19BC046AD950A7F4079DA5A445BC82
0DE6F66BF54D0C998C1197B68BA6366EE13C5A87E527B1673CEBBE976D5FAC8C
6E56C02B66CD235FC9CBB12ACC1754C342CF65C55AFDB46FF450B5C37206DE8A
83F0B5B14358B8B1F9BF84117E5FC4F3FD7B8EC60A25A794089A1D8807B05D98
01E5E36A17C272A75BF1B1675CA4744091635A3FA92DC6CF9AC54B5B0F589139
9F3A947C6213E38909D3E3EF2D3EB63EE27260B961091E6CAD15AB2CED1A7242
6FDEC6BB7C3A180A96C9DD02A0588E9C3AE2D970E9D56B78169043F077C3E039
6EAA1710F36CFFE75F8B071E60A622965D909662818ECD00F848FA9F372D0DDB
C0C7B9CE78F529C027974F3560201E51D0B922786D60304492F1E441CAFEA2BD
B29AFC940AD257B1E66966B2966E864E1D0CE39387AC066D5616DDFD930F1B97
C4CCD336965FC9D1C3C186CEA080495B1A3B0999B52E2B1273AEC266B5CFFBC7
D55A7EBDF77281C3106972EC7E6FCE26A10C328AE143EFC88FEE7456301A3DF3
1FC94850AE2EA9622D657D9CC7EB8937178192188596A78481DBD7FC778114F2
93F5F10B9CBA63A4DB51FEC9F919B9C90D9FF8D622BF0836383B58286A4EC20A
105D8A75A5DD399D795A332874F88B00C31627957D33933411742EE6791053C8
08256C7EFF057606B381BE37F2131988F96E6F570DAD08FCFCD5B26DCA5C5F04
3D18FC06A38D7FA65D91963C2E1F96179AE942E290401FB92DA0694FE1C366BF
0AB6A9603360EFB17781DB6DDD792ABA0722CB58BA93696274B4815C0DE371F3
0270665BA91684CDD9DE413EE76636BC076CA353972047D6B7625BD32227989D
BF381D6DE21AA52CD6A417C507BA40E6056F16212C9C03A5BB61FE805373BD06
EA51C80658B8EED8712944F77D8137E8B69285912B84D395F3298F5E0A074D3A
37B1F294C04FC16E1BC16D9D2DF2F6F4CA1BD2AA4FDF5526F3AD4380B60AD883
6BFBE9FA5D6BC81E3DF7B4D5015D1A639266B85557583F33C1725B024BC5B082
9806169508D3E51C642F80105890488BC43C8C85D174145F30CD1E944495CA6A
9AFC8C9D6AD5139B85E0C0EC848F37D0FDD866517874B1307302B9162042C0EE
381ED27D91413B04B1553C07C48788229181F524C1DED2D2759C72374D9D4E4E
F5C46E98E46DF5757EF0681E9E3D493E82D13E8836901A666B6318E6FAD596D3
D82AB085CF7EC915E4A0F35A56D947798CE12E1A6D66D31F2AC7C92F79820A2B
06851A939086B812F0ABA58EA5F164520F54009577F4CC81B2885DEE8E006822
3E6518BEA1E4DC2A8BDF8F6D69DCD4C2FAF9255A23C261533FFBA0E2D59B47B4
2EE13FA4523AE7CA1791A45CF79E079E976B2CEFA34DC48EE16E9E11BBEE05CD
1F7ABBC4D78288851837B97B396DD840F90CDB2886600AF102FC1867C7138A5D
80BE99D4B96A0648D3D2BC7ED67C240F7994735DF694670591DD86E75447EF18
29CE46CB1E7CE2B2DF2DA7C9056E25385A0DE9C1B1E913AE5FB4DF6DB99721EB
2092339A8C2B461B65B6CCF86E6124B259DB1BC1392F278A3C3C5D760B1AABC8
DD876AEBDD1C3C7CDE1CBDD83A5956B69F8057DA39FD73786C35AEC6638E74E0
94813C501B1FD02B141A22234CB35032A74CD990FDBFC5CC89FABEE498CEFFD4
B7A56BFC3D01857EE8DAF486D35BD9D359431179296BAFD0C1958685CF936D95
2B5196527364F62AF9A12B851DFE664CE32DEDAC1C90EC0DE5E75347F228A664
24AD8DCE375848E69054C93C83784942BF3D54F47D20844CAFCB3A495605569F
11D1CE6566E9C88BD78D2608DB8893B3163B852513CD6815F5B83503239B0EBC
57D3B01E173C8344E9D6FB46282DD17F11CA4A6ACE9DD86D866AA11AF3FF1CE5
A891EDB5E195834F698D57EA3FCEC2BAAA881ABCD68A2DF6DD954486B355FECD
A710835FC8D2444FEB1E2C891585A1CFB0322BBD1EC8259535DE7D07BBA4F97F
6E1E8B8D7E3A514C959AB3CB99D5EA4868536ABF5A2EA7146AC142E830F045CA
9F2E9DE68469E0273F4F53D4954E51BEF81D635EACCFFC00C89D488907446959
C09DF9CF23C0E4B4650B0F3183DC8C831C0244251C588581E8DFB56E926DE2AB
798220F0C8FA3B27163C85172760491F6A8447C31F27F2AEE423D91C5A377C6E
958C550F67B5D308C2BC23EA24DE6FAC38664E2E814ED7A6C288CD2364BE173C
D537D2360B3CA9870E3F9D1D2212A7CDCFEF5D4FC703DADC46CD721400E0656A
4C76D5F72CE13988A4CF8953BB54C5228AF9ED83F1D9EC36E12768095980472F
1E90EFC8059520A29D00FE4ED53786D0C811053B170AEE0FF2655275E1A014FD
9BBBC6E96375662AE3D5D81FBFBCCE010FE48AA4E825529F334497C2D62388B6
69D6182193204BB17BF9B26F82A00D58D84C3C2C5EBE30C176A2663C54ABA64A
09270E03C7A7F5E7978E9FE8AFDC1FBF998501365AB255AFF563FB5BDAEF51CB
4B66C2142B7111F966C9AF410248AA32DCA4726A2384F743DB266350EB9FBF7B
0BBC84F7FA48631886901A7F3E4781F698C64E37528B525E60570530748D1D86
5055760FCCC55C06998D34D8D54807A40417FA423C72CD61651AF180F1F3674C
4FFC117ABBC58DF85DEEC73AFF92A6587E4A6A4618E1600045F21657B631FF66
15D8404822EB441245D7252A1D3D5C2C6759F0509E9C2C690C8C133285671BE2
D90A83153EC6EADC3F2DD6ABF20E1DABC98FA66F9383E710D9D183F2F77FCC78
32CEB874C065A11C69C50217D18D6CB1C65313D93528F56DF1CEAAC1F7F84610
BD1CC4662CB291E8F6DDB52C1A0D8A99BC82C07FE7B689FA53B02666A1071E77
697411127CF0FE07E59FB59E1DA07C33B2ABBE33AD83D8B2FB593DCE4BA21CC3
5D2AC9D14F64000BC731968FB1DF8BDB69C3DB631633B8F9B21570216DEE08C0
EB6AB5D5674C6E7ED177508EBF533B0E1552B6A88D80305C8DD8358EB6CD992C
CA1CFB7D093E8A032D0ABD0B55AD68399665E706256283C5390933F350A3DE7F
25CB2BCD241148334DBDA89A9B38AAAF2B66BB266C59D14BFFDB34CAA0F29EB1
2931B2978A95DFDF8D7EF9B100CAA5C82C1B10DC04649E16EA277204C4C360CE
776926ADA7849E542E5953C1854D218EFD856A334945A1088FABCB81E055AFB5
07D01D600DF9602F559785ACABC52E9DDF05B6F30E163BACC2C2ACC3F82E4DEF
4917A45BEE54BCB61208DCBF20F69BACE54590F59F94D9F3E8D8D5E705A7524B
DDB5ADF62BD609161DFDA02BED116AE7ABD6B4AE2F920EA805EC660149F725D0
365C58DE1C99C573679AD8D0A29BB7F7804F195F6FB04CA69BC4AA7C9393951C
10AAB1B33D1ADD9C9BD2933CEE6CC96B8412EA3227DC49483A34BE3623F36C67
30D5119F673571D7F359DDA864FA13B10F6FAC2E870AC497B7D199108FBBBEAE
C8041A9119DE65C2310ECDCB9D0CE03490451C765DE3FAAD2E85840B40FD3CA6
E1D67833E088C84549460A0DD3BC333EC3A8B8658A0EA0D873E60C720202F8D1
2E29EF11F30A86F9866DAA84192EB044B7FDA58CB06B3E0D480C3EED4E287F5F
D8D9F68A04A4CC56B89C7F758C11BCDF2CC5F312F03AEDD6142019B533EB463B
B329CA4442841E8872889B6B61DEC9F12078D61CB3B8E37B13ABE0C5842DC0D5
16A79D4845EAF0C72D7FC56A2DEB503828C982FE815D1931AA9DD0AC4236C5B6
916E4617C89EE965680E0CF5D2D7B159DC51F4ECD866C076D1AF74C312C311BB
206143066A5180499A26ACCEDD1B49BD12BF631F927CD6D22DCD77309FCFB82A
552FEE5D6C3591B93ACD21E532F022F8C32D3FB765A6F5BF6E3F0BEE9A99D866
60D0EE64423780E59B92B0A47C75F536D2ABDA9351A12A4E74E73748D2D2544F
5010AA2469C44EDABD6D978B668381B89B5E47C2B7DB0D3415CFB82864E168C6
8F99BC8F77E107E52CFAB80FE716BA083765C94DD6FE21DA8ADC5E27B86B3514
A924AD196FDCE0CFE5E069366281B1AB88E10C911F0E0B628984F92599BA2F89
9D6571BC7D5A60FDFA3437451E37500EBDC70E92CA260C1BA03CCEA8C8819D5D
D2D6B73B6E9E038593AD4280815CA81D710A55DCFD1D626C0E49CBA062C5CA33
BAE99BFC402BACEFA3A74E7B12D62A7AC4A33C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 25 /pi put
dup 33 /omega put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 78 /N put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A55F20456933FCA64CC1B060E260782BEF6
721D38BF65DF1F1DA5439DBC802B4A9D803BD635C05B9ACA4D26C28195A1F4C4
CC623B30B076D4861E89B93E2CF26F6DF07199C03BA5466FA3EFBD7F77EFE068
E55B7186855063934C5716EDC3F5056BDA963B6B933B546475BCFF91C512F411
8D14B1C32C9735281E542E26E882D48D0C1C314B1B3F38CF95FB3E21ED1F0EB8
4D722CC5A4799D17118120EE9245740D7F275A4FE93755C89B01CE2F1AF46EFD
BDC92B419BFB642BF268D53A04DFC989CF1D5B59426B667C6D6BD74427C914F0
67479B3A4A7FC0E0823871776F80CA52AC024E596C0C46333C5424F9C5EEA9F5
69F1E20CD78BCE5365E1CE48CD621592E13F40A9276AFA5498E9BEDB12DFECC3
3451DD7E052CF00FDC0A854E00E1D9E78621ABDDF6149ECBC35E7209149B2F24
EDE57B5BA5725EB81169D3751E292A4B7CEAA30EDCC000279526C9E09A8DC195
9FA16EBBC7164D15BC12F033A1D5D20EBF8530E7129D0A90AD3EA1E2BBD0462B
9C428DEC0D968F92D4C8FD869744D591E7A401E0988549425A62BDF7EED9F619
8752B1E910C1CD4BA6C292A75BC7F698DD35E70DE952B60B22968A7148637DB3
17EA3227A482CAA66F66D2F6A39F074B0C4DB0E37CBAF9B23638EFE801F71407
30186CDFD810CBF197D55CE63F12950167935869EC0E7F578FBAE44FB71F204A
08C874C98D255526A83771E85D7AE4C2BC53459543B09A265F0B98D5CD9EF55C
B2144292035D2304EC4F9083716CA7906B80486BB5C7931DC1B5F69AABE2F964
CBA4C0ED5416A20F102C82B9B6215534DDD10D943833A0D213E955D2550A1E22
21476CB9FDB25645C25B135F7DE7D5DEE57119D6706384D8CD79B6D54FF16BC7
47BA97AFE65D20B3C501E3C477E81E8DD72C9530114B4D7AEA600CD1766C38A6
9855185BF3C30F53BA7BFDEC14687AB004F7289D2231D5F8B1B03452760BC036
18CFB97E9EF7FEE33EC8C0BA9E2C939218E039198CC0083D935597857A51E0FA
E73426506E62696914FEDD29C2E24B77E40FDA5B79A9B6DFE77D3E28CE30AA05
488BA02C4A359976B52CDBDBE23F27130BC483EA7DF0AF82B48B6852FDC6455C
CAC46D595C9613828BCBDCFBDB0817102F0582941174F6E14CF4F4312C363919
4A8F7FBA7DEC4C22ACC953CC263467CFD44B97D2AAAE7D47C537C11871CD02D5
7132252CCD7C0F37BAE0686701A93033ABFD31FB4F1385E3C08A7F1D30115C4C
BB9CD8C6651BBA8C364C03F1D2F11899D1E95525F3EAC3298805A8BADD601CAB
509E7E506AEDEC4413EC0A1FDCE57C7CC13FD5EC35BD264A319273D6C7568860
4A698C70E1BD4E15A7C66C246C0FF08CB24244018842B38BA7030AF0F71D7F11
2DF0DF1B2FDCFFFAFAA0D933F1CAF593C21E6FDD1A4CE4F43F08BDE9987D7B60
665B2E7BBEF5D1518B3691A1D79166B9D1987876080DB86EFA9383D26BE8EE1C
D24CE36349044DDD2FB13106CB894BE36DC1F7485A471A3D0657D25871939A5F
84BDE57CE586DD99962EB54FC5D04C78D7037A53E73FEFA5FA0BC4432916DE5C
C53E0C85764D4B014E17377CE92836EE3019C357A9CA02188839D63DA34D35EC
0413FA018AC674033A72FE66BFAE7FDA7F16C82539C156C54C6516B01196BDCA
8E9C36DD13333365DB1EE67FCED77B729D6FACCDA86EB846DB173502C24F28AD
C6C34E83C2195333CA95B956401E87ABAEF86162C7CAB2B935E0A28F71DCEF75
622DF0B533BAC8F11BAF180D68B8A72E59426C27211EB246ECA70D42D5E3B9C2
8457816B0BD61BA6EDDC38BBE1F262AA626470B0F821A481806C6E37D7DA76BF
F6AACD3A354CEC0FC4557F859A1F858B60571D0438E3C35EBBAC85948EF33F7A
EC0F4629A8D31A148CBE9432989DE0CF4AA142A7326B7C4A5A97F5F6FF840568
3E4C4884192D3CB300524CC375DDF316DE109219256C8726973FCB98D5CDD895
9053DA19110CB32BE950834F48A6582315A4EF8E17C942926052D3C1C2589977
44A24D97C9BA81FB62AF98762A3468FB18E053E5728EECF82DF67618CE39DB55
0E35156760988CD5E2B1D9BAD3737AF6C1B34F75C349D71A54B95A77FBA1A75F
9717E3F73AE07FA1D91EDADBB7C5D1C08B5917940FC5BA1657DE86FB5784105C
EA8DAE0905C6D1C19A37439DB83A8626B118A4BD0F4A9433DC0A69E5570FA418
FFBE3686DB9DCD39BB45F894B5EFBA86AE3F971594ED62D5F401375E2ABB9C6E
5E7255DBFC077D60A4F3D669A164C531E7E3E50C7F45D82E026D897B1D229FE7
4D28B5C60D0CC9E4D9E832344637DA49F1A90A6808008DC2FFD0836EAA22B4F5
DCC78A11B4A56B663A9FF76CDD6446FBA9E2A59153C4BB59C0595CE9EEF54790
82E1842875705C6ACB01989391DC92240BF62DF3CD9DB3DD19829E31AE05F414
11C25704426240E90C6FAE00BB0497C5779E5F568165C8715FBDE743497C4779
B0DAA89DECD54ACF53CD89DD01EFD05313603EA159E7D2DF3ED0B57AE1B5F76D
609E465600DD563ED1C0F33BE7CFADAEA2246B5B08EFD338A831E202D7895C83
787CCA2BAEA30E157991316AE374C43DABA1943CC634362B9872C050C30DEA56
1ECD95168DEF1F56249797D643154E46BC23C8FD145AF16834FF18C108810032
514C3FA356AB7D02D559E5B2B604B767E0F932EC4753E8326B4C5B489A803AB5
30474286844605EA4B5006AD196218D0048AADA3D4FCFBAE7E32187E8F8BA237
6B328CFDD2F2249C9DF37E3DAE8A424C5684D9C4EDC8975006FF147423E8B660
E30A9DF0C5D5DDBEC22DFB071F37465213370DC9FF0D2B963678BE4D2CB29793
51A63FF30535124A02D87CDF358548FAD3AF3C199E5D6A0974DAAC1AD7FC13F8
C218AE243223A986D34CB9ADCD2657A2CB9DDC145BCAE12E556B52893131BC29
67143FBE8DD5C9875D4DECCB84E23BAC8589AE4FF067BCCDE75D3373A98CD7F7
14BD710D4AC7ECE41D0ADBF01EED36561CFDB5AE5CE27EDAF45D3403BACDBA86
D68C4374CCEB4F5A8A37F8A243D0CA3A8771F367F3DAB320D445499691ECAE9E
CA93517A32022D02D555B027F9001E8EEF94651AB40561510F8A3913DE957DD6
F2A4A5F631011ABAAAF0FE32A4A1FECBE5A12B313E8519AD6AAAE5DAC489F6BF
8CB2E81987588AB7EBEA727A3FF725FE32036C9462110310AB78A212BB2575DF
CE095ACED277E34D185DF0F705706241B61D54B066D4E8478F26A253A567F806
32B81F00FBA5F25FADD4D5BBD9D8DEE412518197DD1825357CA09A651A581A29
BDE73BF5A07F000CFCB1F380DF02CA783910665E01B7CBE4FE099763BBD94927
29C91D624BFD8E0335355C50731559C7766EF1DAB7B8AA46A77531A2EE2E9E2D
8BF6BE3EAC7E145F73EDAAADCB290CEA83EF844299B5F9444789E57FBA380550
E94E5242B9777AA7E9CC58FBFBE5CD9F94791D63A6E9A72D75CDB90A923E044C
4D099C7EC63C904FC75B02A1233585386E045D7FE520E0DC401DD1D99B2028B2
75B1851882EFACD64682BB4175306CCD92EFB10A3B869F7F98AD1BB543AAD1FA
0778F4BC3BE53988AD6B9BEDF83D8C3FD6C405DB09D6ED87B8C372806606FD4A
BE5419E58BB9A7F4C68747CA82931BEFAAE4501688D26AFC38853B5CC274CB33
F7B88F8FA5758EBDBE30CF40E1CAC99E86F086749BB747B66C63E8A72EEDCF6A
6AFD101651B63C0157B169958880EAFA6171351B2A41B341FE04034B32738D8D
51445F777C7BA503717C0A5EB214717E828C4D184386B5817905EBB3E0E8CF34
EC33CAA54367AE593FB491E1E21112D906B0D2857F5B150143040E0A32A54D8F
94CD0EF54CDB3667CAF1C6670C9150297D4D94D2D9B3050AAFCB897209BD9F69
7819E64AD631E51AC7B6CDD4AB81E0EC56BD2DC1FE29108588DA8661E8A622EF
DB306C24DBB4212579D731453F8F1E5887B22ADECEAF5C443A5D6B4C648E0FB8
663F312F4FEF85284B318E13C3DFBFB3FEF19385B4700136D49FCB7C0E7F97A7
9C9E13B5E20CF9D75D86CD0FD9AC1EA862FC2543EA9520D5DC8F83C4EE417E3D
226158CC94241A150E63EA61A5BAD35CBE38D09297CCFD820E7AD0C00EAD55B1
C21B2535C1DB9537C9EF0ECCB38B14E525A0DEC19ADB392ADC2F622E3CC3795D
6CE364BD245F109960EA4F589CFEB4F55B64B06BEC6000E0700E705CD500F3A4
74135E26C88AB8E0D387DA2CAEC4E960B1ECF97B660EDCF5B5ED288F74119CB1
D538768E831A93B58C69C917B241F919F4D7A080CAE0C0C2C805280F9F30B73E
D9C7E31BCD035B6B7B59077A7B96DCFCF065CB0EA3E23C70D65891054A87237E
E5DDFD7801DB2292B6876EE87A235EDEC58EE76C771E85812B43473BF74DC6BC
5E73DB65793487E80BEAB80FD36638FDA8DB0D5E40EB9D3BA9305C3464AFD769
E1E287450F212F292359F38346D76E1AF9EBE963B97546E85E1AEFB2E4988290
7856EC72C6B3141CD8E2807F5CE2B8B728049D70DE06210187DEB16BC6EE722C
7F5B42694309259B5FD7120BB7AD1E3AA80512755E00D63A45B279A4DD09FA26
44209E9A4DC2BBBC1228520191409945447B9D0481D07494B6A0BCE6A260E048
5294FAB062AC3C6A902E06D39C1649F9C093EE1E7C70466CA8A964662AFD9926
09DEC1970A72BD3D32373E2119D3BACD0C8BA23B594E1B549002AEC261240DAF
B5CD7CC90554D20CC17F307D69A4341C0089F9493EDE0C1B3C174D39C2307B3A
0E16B60A8E2725AE5DCCBDACC99197D8B8FBDCFB5ED09D334223673B32264541
D110A1917FD27BA19CF94BD8B9BD36A4B412DF637D8F0CB8F1817F937F5E32AA
A579F800B047A506CB449291C5C40FBD174E730E386977145CF98F311D5C81DA
635D53A180990189775BDA1C2D4250A1488D1DE9A141577BA2980CD508D40749
79FCDEB26B68F71ABF43B0F0A647D3F484ECAD6B97B0F3F1748F170B7832BB6D
ECFE447A989E5C18588C7FCB49416F84B810F20599AA613DF3C83EBE0A11DFE8
EC9E5238539CFAD4AEE4F5660B6D7DCA321FD5ED82E0290145AFD031729815B9
DB1510129D12FBB1342C84A4AE24B548D4E7D31572F6F31DD4311CE7126B7CE5
8F54F9BB1C075C472DB23C6C221FA28B102660F6CD0FC2347BBA01FA1A64FE32
81A81090F723FC1D3CAA5E3FF98F1E4250E75544C59A380BD2F825667BDB2B17
044D98D0AFDF8A42719C7A5CF982B70F31632B67588015F520B9DB50AB74EE3C
058201AA0BBBA360E7896F72305746E186FFA3DB344FD0E046749B9D4596264D
D8EA58437434BAFB5D70677B8CCA7F976A0F1D452F2D377F299227221B2B6D20
EE76171FDEB7EB1FAF7127C06AAF8B93110543BB5869C6C5454C6EE7DAF272CF
8E0C87E5CBBD9E828BA146CF6B613159163346EFF578BDB39A446FF70AB89E6F
CCFB8573619A98BE83B740B66974A37C305CEE842FE2103C755E9703D2B45134
08E64CD4685329A1321E7CE6CB127C93B73507D5AA4FD96ECD53C9CEE40D2193
D593D785493B0A8149A74552D2A4BA7C3EA06BA9A13E9CD427D0433C6822D9CF
BA6D11CE6E5446F9E17F465A3FEE0B773ABBF809E8E7285D877F2702A5EA115A
3F7CE1936547651417621602BABC5097EA5F292596D1BF498DA99B5BAC2593FD
C6B427ADE6648BC9F4EAB16BA271E1F69278CF22320196D75BC7ACE99F9D5B58
7DF37583932BAB2FA69BF48DB2196651AD5B92DA47F82BFA2800092422E7E62B
5BDEEEB1F19B6A08A313287008FBFCE0876E78616857D8D9F5231E58205E3F19
F90C68D20A4736CD2E7042B435B6E8808C58853B80D16D193EFD9DC04B6F8569
EC6279F06D6D5A41849BBDAA8F215D1DFFBCDCF6ADADF536C6DD28856A6D83F6
861045794016CB70B9D034D411DA3B107104C2C2A03E3ABBF2FEEA0D83C0C59F
0D90C2BAE368EC4A16AD989CDF85D0DF71AC6D35E27523897D19C89D4E047E5D
0354A1F0E2578D50E506AC76B56EBE12591466FD72335A2A4E7A82371BE6CE1C
BA711A6B06FAF43E8AC31AF3EA0A3DD13B134ACE28F99944AC11E765FB3A433E
6ABFBB0C66DAFF722E03B079ED4D216E51F4889D92111492C56CEFDAE92847FE
F30688760A2D87CF506FD1093D8446DB5C436055E333E90A617CEB33DC9C4610
A166B5D02A044CC3A91224C13D97B86621689F9A925281D67C2D573B75E22155
88D89C58AD867119807BC241861BFA0D8DDEA950D96C3A3C66B7F5B5233DEED9
5ACAD8D02D33EFF7B3A162F085F5F0B115EB189B9838E7D5DDA88D5B19BE84D8
12A19BAF9EBA3B4E92FF08F9E01DD465FCA73318451DD8D79CEA690EFC302CB3
149752A9642A4D410DA8920EAF7DF45DF849A6FF67532584810CC3998C0CE826
1C2B63C7D83621B9E6725B3DEF11ED247426FBC5AFB582DBB4BFF0CE30F2EB1F
4016B7B9D2A1195F43C84548BC800BD81B4599BCA0E13821B969B75AE01F7BD0
15E703FE1CD91A75DFA3E749841ECD18CC1F7FE79EC12F26068D729ED4732CC6
F104BCD98C04A65432049F44017B8543E283C4FBBD7850024678EE88752148CA
734527EE4C079A6FF42AC254F0C238089D9FD6E5DFD5577D6486888CCF2AAB1B
DCBB55219813544AA75EC8EC0861743A022E652DEE99824BABF4B566ABC884F5
EEEB4619218C51052A61A7974D2C5865818FB4484E9B23A126FD11BED18622A5
619E8C6FD745DE28F6E34E57A271A70A47129B9746707E6C7CE14EB45F235691
36C7EE42C6EAC8A74CEC1DBCA71DEF0E8CB74A95983DCA91EA7B8641AC509D95
BE741EAD2E077A4DA3A7D04C8B70FB62E3C946B99724B75416A22BC299FD1E07
7B98FEFB1F1B8E1135C850C8DB01F837E7D8449A3D18B91381A68599A00A6412
B3FF2EC9B06CC8E7426690028FF912FEADEE6DC686262387377D64A42F91748C
146EDD9FC6D5083BBE51BF395E33B3F3448281AA1ADCC442A86F1D32F96A43FC
A3E63C8359A106682EF34EDCAC46F9BD26AA8B8CFAE4411253CD9F61F74A994F
22DB6D441AA8466E430317DDA292D99117A25017732554DEE8050C3003559450
51BBF156F20C4337FC0D3FDDE0EC12D3099CC4C63AB3CFFCD0D06D01D1865234
FEB9ECC5AA3E66A8E9183EE844C477F04C629EC55C991D8453AF2685C3F0417F
415138F44268E9CFFBB598CACADCC58AF1B9CC0140D364404ECDCD3BAB7DACCA
7D504373A1172E3FA2E01ADF61A23CF74889291EB373F38FF90D3CCDEE00FFDE
DB481D56E67AEFF07E01248B98A2E5EE0F5739C8EAD7861D62C8CD538E0E4803
9301146A10E6FE1182C783E51A66BAC8AE31E66405BE9E1A882AD64A2ED1E117
88FE6ECF4CEBFFDB09AF8B950DE5B8424049E60992B2CADD42707B8651CC6A05
A4ADCE1F78A1B698DAFD4D30A5752AB494F3556B794DF62AAF9F6C8924D03232
EB9E5D0A13E9CDC57376228776F69D7AE7DB13B361621917FFDA5FA60FD499A7
3EDA117AEE9F9BEE39956E7662126C0B4534E4ED9C6D6587480B02B54F33747C
35529EA6C2CA8A88BBEAD2C42732C998AE531E27F331413299CBA80CAE9AD9F4
B3BCF978501ADE9CE739FCD39A38DA74A26D1FCEEA1E292BA56251A50DB4A6A2
5A3FC0F88FD8AA98CB9F825558C855D6881CCA9F3D0D69D84D943EB5C77D8613
BFBE3873AC5E712756D3146E6F41DAA680100D89C4EB96FA234F9982B046FC4C
196B7743469AAD150971AA5CA19E2F696200EB0BD8448436F38A84C2459D329E
84768FBCEDEBE776A8BD11675DC0B6199019414D5ECEAD4D62BCB4BF494F4626
E74B68F72D17D52434D4799C9F374B804D9F9C52ABA8A6458B3AAC26497ADEE1
EEACA90C3986A17F78F24558205CA419D1C3AF7D5D053EB550134853E1D72EB9
6A6F0415B8FA7682C2925B2BA5AE188D8E29B028171D9A4C5CAF09F25EA35C90
53E4B00613E60701A3D7D7DE211EB0C774C818093FB0110D7FAD2C9C30EE58F4
E2B0878391C7593AE9DAA4BDB945B39C5ECB42DA0B67AD5DE39AD43EF178C714
373B64E2299FC5086D99BDB649AE0B57BD3BB0E483AC132721A755DB88856787
E675825933806FCB5F9A7AB0F1ED57633874F64F36A53610705DFEA2ACC563D8
535E0424C4085C8322AD2E89E109C2C2DCBA5BBF1196B8426555787AA8E253A5
4F1E7FC579A8CDF3C1C9D147482F3065B57A62323D368AFCD3C71643BE379315
A4BC9A89C732E538494B152CD430D2352A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 67 /C put
dup 68 /D put
dup 78 /N put
dup 79 /O put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE28661742
70616F47ECC9F6899E06FF70A24539542D8F4347972FFAFF24339AF1C54C1ABE
1B4EBD9D1ECBBC64786831A95BEF63DF92085041BE117F6CD0611C88EB651C59
746B97A2501D28F62E7A29778E26455F48D239C1D45089DE0CC936D0D71CD641
45E4C704B3D6CFCEF6D99B1B47F86C85D61DAFA4855DA123C7C24E3D7D65FA01
BACD490FF5E116EF6526B303B2FD1D8B4465C5290FA19F0F1A4EB17B32210D58
359A46E1F68A414E54F4DD67BE55FA259B162CD667A0F4AEB55D91DAD2815E21
3C4AC9C84F0CCA2EF086F406F01C7CD77396F059C135CD9E4BC253DB7012F8EC
FBA3749EB8319FA96AC987888862E893AD12DF63CAB0365E295F578F413269D4
B139BF28D947BF01756ABA7AB885654C984540AD51691200349151D9ABF24AB2
3FE987446CB878D12E2244699EA2448A1F1F48082EE3BC1BCC265FA2506D66A4
9E00289E2F53C7601552F2455DC9AB2F5618124E11C778F0060FA9D1699AF9CE
1E42CEFF824F7B53DA6841A351BE35F36988BF61424FE43B14C0EA5391DC1F9E
DAB3441AD897243EC8162A6EA3D92D5C04F0EC89E8958179DB06A84EF3341B2F
703BFD2632ED6F78D253825E5301E056D8BD7EE271DD33257D92E92F4764E5AD
8EB98F220CB3F64FFB425435DA12175152E4031877077E0DA2484669DB6DEA71
A2A0A8E2E1C455A9B531678B5AD096C20F78A5CAC3122479EF7E8D8A566FC91D
08562229DFFAD96D506C76952BF632FB4DD87A0A9057886F381FB650C32312E2
3556310E076F57FE2B8AE3918AD39C5D78A7D4A8171ED035D3CAC4E64BF54B46
C05382F6DF3C090CEE784C73564CEC59D3AEF58A0392E4112EEE7646EAED27F8
4CE4FFA8C2126FE7A06B17555ED4E0FB7B8EB862396EB9A9581F46A641D11FA0
3F6EBCDD69C35C35F09C3936A7CC4B0F2A8DF1EEEC4CBD86964A41AC12658296
ED429EEFACE7DD143FB1F1C641ACBA859CD07265E134C716A8A227CBC5771FE0
DC44E4E6475386D36C3161FB1F984CC7DC2B3DEC776FEB3AAEE5EFA0BDD706EB
5C6CED8029A082440D475E98EFD3D4640F6D6F786783F31AF9CA79CC065BF9ED
B1E8F3E30DC024A3EA791C588A344263BB2F1FD082FF670F7C7705C80A814710
24A2336C813D0F1D02B35D73B65F360DB502483A3C03E08997786BC80BA9E8CE
4FD34C3367C8821ED55DA6C862007DE8377812F4E0EF1117138E393824E4AA0B
8321D54AE969C4FC9A504CD9EE93D62C48C30FC23219F7E9228E06805B2A7EF5
ADAF44E3DCBAEEF0DC21C6B9ABAE1F0CCCC92644EEE29EED4022294335A1EDB8
B20DA80529A429BEFA316D1641A73C905551A052706495C2813E4391554B4BDE
8513EB263494B792E07FD6473A7829EF1ED3A9288BE577C242F343B5B6AE94B8
E0DB46EA1EA2E4365EF09CCED0E44AA12FDFC072A9A62C9F14B0469879464C30
FF759C76561F6E33FE8581B9BDD7B2628AE962D496D5E9E6ED8644D183520838
D2A39DC391DAD3D9BA6120ED920A85AEEED75E3631D46ACCDD5EB097ABDDCE0B
4D343056821ACC18C05EEF081EEB691AA46C4ACF64E8D125A038EFB28D24232C
29992904ED258D0AD9EA6581803E0065A9850BD7055027BA1447A763483E8F01
36B3AF7178E3AF428C5D3400BAFD8074A4A1F4F2AEEACDDFBBAA4D7AE261C860
02427353CB49FB0D8788B128477D8F724F6C904BFA0B3CE9F68D9E6F7293CCB0
2794CB7BA2031FC65B4A2FA720B3CD34F8FED55F6F15C30ED01E16C8E034ACEA
24A798BCD4A635690F75F88230496A8AB392B06163651A2011FF4E316E2A0E21
3866F9EE23922365D941BCC92E0E63381601409FD67B5E44C74706A82EF14047
DD546EF01FA76C773E98A85796A48BAA7AE3F8AC83653A193A96098F60995362
C6B34E742DA5E4B567F71D40947AD49952309EBC54D6380A2B4710727D24F287
520D489DFEB81F8FBBFA45FCC1C1823EA84281676D3E25F7F4A3201D8F9E50CF
5E84D00D9F0F5BD5683075C9730BC61CF1EBAEB4A8B2DF465BD360E8DF9C099B
738CABA45BF681A5EAFF827244F8232ED55B2432E67F67168F8CBF55D3E2B28D
BB4A7A4943E855B44F72360A8DB60461F43BBE8091EA35910053624B526491E4
6D90572A2E83D7596246C8F4BE3053B40E949280F10501E4E51BB40301458276
77E0F61E127879FB0917BA60788E0AF310C59989B0D8C91C3E6A12B887DBB178
036C134BDC533A5719CE5FCBD988E525948A9A30830F280A7D1F1860C0AC860E
EB6FF12524D98DFBD5DA5E75A2B1E6C1C11C3432B259DF73223C01B487220FB6
37FB1C38D212E61A594717CEC493D6C4DA98131E97F61DE34F9C4F2DA0C802D5
EB0B780C398FFD83F0ED54DC8656ABE35F713D31D49EF5EB48E9DF6AECEF0738
214AF27381FB47B433B5CF4B6BBC03EA39F436A076C1AAB86E5BC88092F9DFF3
A8D75BA9325BB0EE0BA38E27E6F957DB3187BDE8D821B6A79ADBF214D660B016
EB9CFF1151BC95740AC8B79E6E0A5A383A9C11875D4C9F61DB5D203A34A2C506
B6AD17BD62E5EEE0D72A00E0E5D1336B335F22864A5FF3F733D5F6B44CC96D2A
CE1E835BE29C48B05A69D27317767CDB2E32B987789A3A2B66580FC933FAD35D
8A7FB8C23879CE963DB0C837FC36DDD5A275CC614F7A3724B3DB7210E6C786B6
DFEACAEFAD999BA5C36229ABD4EC246FF4C2B595336AACDC651A4D7E1E95AE55
670897EA31DFC0C29E7D8884E20B2D115B7A26E2714BE344429CD84201863E55
81CDF21ED27BD793012BCFCFDAF5E7C1D6B1FB4D93F26B0B94539636D16CE417
03C869FF2C85DE1EBF2D079B4667C62BFB7E0E5445EA3D5C2DA6DFCE0976A80A
320BDE5BE49D487C7E1C47909231C7201634E8E9B17C4BD5D237456687CD8F9E
211FF6C425F95AB9F5DE36FDBE1C2C950FA522F748981F24DAE388A6E227E334
CAF7B1C52BA5BCCA70E186644703E93FF6C499ECD211558F1BD8C6018D58BC4F
27155FCAC7BB5AD602A5512B48BA5652916F98BA5F846E2E8BFF8EDAE9CC3745
1F9E1576337DD0D0E8FD5DB2A9D0CC9C506A71ECDB5E6F2B1D985A6590D554C1
C0A979120D26130235328DA575B70BE0695DFF29635C5D16DB38F945CDEA9B94
D4667EACA9985BC4C832898EB2B5E29D024F12B89016F24F3F580E66DCE9BBF4
44AE6F0012EA57401034C6D1A8B022F56613F20242D9EE72A5E604BB819E6C3B
82B08E02ED74EAA25ECB685183A66B4BF9F754BB7F5D8DFEC784A6665FEA23CA
0CA080578AD2C482C415342B36739AEB8BA5C08515322A3231AA769B66A370EB
A0EC9E75760A0B2A75E482B6DCCFB4122AEC101C77D0AE6EE182B9AB4354BA42
6A865A193D62EDF9FF90900E863039EFD9419F0F44382B179F4D1AA9BF193447
954F350B88E076A73DA2AF36C081BF5E58BA606EC1C0A3BBE64F5A7024F3611D
C8E843B82AC3BA0C80D8F3FA700A1ADE97BDF1B791781663617D6AD4680DE382
C2018B959AA8890F842E3FB7D8D07E51F13691670651B1D02230223360C71BC8
BF416F63B2CEFE383FF7503629B48EEE151676716D67D68141F74A4C0B51206F
7086BBFD278A9FB161AC8AA075AD79C50EA249A53CEA807F1E0E7CEC9B118E7B
48CCB6346AF8D51ECB23E3B43C4D384745C3CA8ADDC7BC6C7B17443D4F819C55
DA63421BA81F2D31A67D75699DBA694A3EAB0D44E4F443F18FBFE536F32A32C0
432D4D98E77E14FBD9879E29B53F1FA7107378B9327270B4D4A79E9A288DAC49
54A07DD9E8011356D5754CA2125FB7E6EBE996545C927090A54926AE6448F1A5
5473C6FC2E2D80DDA0206B6BD08FB0FFDD88F77063DCDEE9A8E2198D7578D460
0707C088061C538F9A7EDF30942FCDDEC344FBEDE057416893328CA6E2FD005E
3A2A935BC6668D9D8BB78F8197F0F068D8715CFD81BB6781366B91BB50333BB0
061A94831D1594476CF4A4A404F8B16EE7218BE5B638DB840FDAACCCF116C523
298CC68E66E9EC6EAA1CCC73F22100C32D144F26A89CB9C5756FCC9784641DBC
604BEC90244EEE9B169CB71308DC8C5435F7AFF0EC529F3B0CDC8D22560F721F
1F883F6B4A28D47562877120E23444849FB1430AA8A9FAD29CAC966F6E49408B
A985D24EE386CB5F877343FAE59727696111E14381B7031C08D040DDBD063282
ACB42801DC7C32B9422A08D2F7716F07A963184E98E8C2D2BBADFBA81E7E0AB6
482EDED1ED51F444B88EA82099ED76D1AA4F104B2F4FE74D81B87124AB670168
015A88AB7A2379ADC444D77DF3FB034AEEC13AA7A4A062AA47F2307AD1295C8E
168E086EB43B8D942A97B53738BED8DA5DB0F3F2CBF99292712B3B68B5504A9A
4735F032607EF6B088656DF6E79B45E310AA62E2E65CD2431BF0CB48C7699D21
45E1780FE5F95F1ED46EB1CB5A545EE2504C93580A261F4C83F055241A351D8B
8CBB03B4CE9C7901769E07834CE6C194A636FE45F4B6053F595EEC310943E44D
C6D1EF01AEB7F3B7195C0B9DDAA4BB496ABD0F0D8F02182B7880FCEB473AB7E1
5ECAA28DC1C34D39A5F2BE0A194E52BCF12CE01F49E62050C22F97726F7C5855
37EADF12A79388B1F7EDD3C82D0C59AFA9867B922D719A90C1F0A6F7B95505BC
E3993342DB37CD3AC3F5708C6D6B765F5BEC6F464AC04ACF5158C45755A2BA81
C84683EFC00DFE4FF29919376FA72019DF4918E81BB5929C2AAA39E93EEB567B
A941FA47EF94F1AA5343615E5C17E98F9F8ADCE70E4A46096E7B4EFB4B9A559A
335FF3F69809693090BA0F6A7CBDBE6B9261B7CDDA1A183AB1F1CD86DDEB449A
B5A5BC9738F2268CC3D11B832BFCA6BA4E9B2F925F2A07AF75E9FC9C34B47D12
7DB9AD937B677C10B6436D898A2E6D8508A9BF7EED61FDF1135B4AFA128F2E47
24CAAB97995E23772C87AC595559BFB7D3FA345FA6ADF30BC3524603AA581E6A
FDA78F77603172BB4237756B88AE18A845AE086C62A9194753353B263DDF3E47
C7E93A4A9C97283E9B9BC37AE65CF1A1ACB6A656B02668ED29F36AFB0A1F7B72
E5B2D8AB0862A5BFE8EBA30620177803DF0190ED0F2F0486E412949C87E846E0
045559DA5C6A761FBCA165C0CCDB6EFB0077A17EFAF2095DF24E4475753B1481
0C183EC962265CD5762D2B6A34CB410840F826C2B147C5A58C5278EB66BE3A34
5F5A5095D98C654F84834FE753059D0D55848AA1AB86FF196D6C8F47DADDD775
A968208AA6458585877B1918E28352FE3698E4BAA928938C3D8EE5549BC8BF97
BE2AE7136218F50F3DBA8AE5BB14AF8B554E1D21A7ECD6345CFB1D5D71FFF1EF
AF30A6D031727EEEA99622B655950AF330B43C584C8F35E8A5827DF358D0908F
7619B909CE4751E342CA3DF98A70799BBB93EE7962B196F5651E2CB6D6E7F01B
5CD2DE14C1A6F33BBBA287C158B2249DCB733D313F59CB06048DBB12AF0AEF48
C356CAD58E989E8B1AF52F74988B73162ABBA84185F740B6A802C1B16A9BFAD5
FB0F4FBBEBF2A558705B0CB04291DF02D10894CB6FB2CDAA5D3DA49BE6D0BCCA
637AF5D220D69E32F6A9BEBC0D3DDAC7DD2DF966720A7F187D12570A4484C074
3D8C30DF2E02AB4A9179B68AA29840DA64F101AB3BA06652A3B920665FFF7A8C
F738619469ACE7FD542DCC4B4A27F10B9CE0B78001F2BEDA1FBD3B824BAFB2DD
6A187B8022AFEEE0994BB80056C8BA61
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS12
%!PS-AdobeFont-1.1: CMSS12 1.0
%%CreationDate: 1991 Aug 20 17:33:47
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 33 /exclam put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 59 /semicolon put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
readonly def
/FontBBox{-62 -251 978 758}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B17498276F99362748F6E97327D
7CDA3F5773E01FAD12B7339D4A0993D40A82FA42AAB119589F1D7D60A8AC7A96
BF8C5A08AFE6D427A6FDDEA2FEF0B8ABC37C6DB62C8B4074CD6C385419CC66E5
A4B4C5F902900090EBBDF7AB524205CD9DD9D8B9CB522B8EA97203F0E8FAF683
09750B6C8286AB341F9C240CC02CF7F3E153C3498F16159862CD74C0B6341D3D
57184AB9036EBA94B432D0CAC32240DD569E639B4ACF0BEF07EA19DDF0606551
C8EC84A7A67F3C3F58D3335D7273B51CC2602B63B900D24A6D5A8E766D49EEB0
693796781F0781FF13C5592AA9E071E39034E0742E804ADF14422A734917F0FA
8973A1B9269EA354F8AC75B7284AF48B69529167E55922A20C3106EB6C559E97
7CC1A491C3B41AF834804590554742E742A09A5228F71DAAB9BA2BC3F00FD5C3
B4821FEEDC8B65732409A9C4663FD4C4BC7C864D71F6A6D354ADF71675042DA1
31DC2859AE00363B3EF589B4DAB98D3515FE8176041A332A5647DA8FB9718975
9D0103074531756594D5DD1AF3A9A20F1BE203E28D24DEDA7801AD1CDF96906E
E7049115872C82DD177C3BD765F72E7C15A90CAC968198A38EBA25054D99E7DC
A349E6502C98F894994EF7A0AEED79D1F12EA1B18BF8BC3B5806141C82B201EA
0275585110EA202D7A253F1D6DB449FF2B25F7B8385B1427453717DB07ACC21A
9F5D5DF4AB9D3497C382B1B9761FD0693533650CF014F5D56201767E4CD18A44
A4D912E1A90EF1BEBA702F806652672ACE37D40B4705A4725AC38A8B7D706E84
6D22D811AFF8C8F465D585778EDF77B600F65E332849ECE66FB0EE108B30103C
BDEDE7AEAD0E3A72472B218310D9228AE0BD49120DF3345B692107CF277A1160
C96BEBEA85F73D6CAB5FDA7BD9AB11CED7AE8BB209749CBC56C9D14E13262491
62FB3924FBE891042E35D6AE5384218ADF93B3F04C1226495DDF12D2FFD62EE1
76F3891F37718FF7870E85D4D41B06DD80C28E3E598562E01FCABDF8F9BE38A3
7DB1C0381C44A89D8563566D6687A0BA5B6F710C019F0172CC508DEB93ACA516
CB8BA1880845D93BE1CA9A90EB45AF44766B237E534C8C1EB9014C2AA7BC58F8
6360BCED7B111F089892E5E7EA1EA3C55D9BAE2DFCE37231DCA606714B21B362
57891148079E8EEB67F11C6B76D2B4AECF838CCCE2CE1D7541C4312D32918412
9546F1907A1101A35EC11C7969DC4BB92EA4CD735EC4301B6F4A2CE19350C16F
05130B85FAADF938C40DF8DB9C4D0C82903E5938DA22A6EF1B7B1727BABE99BF
6C35165B6B3E88D7A9F70D81D7B569595CA9A4C0E133EA4934C6FC20C3CE4DC7
8D02ADDCE5BD8E7B2CD8064E330207CE8A3C9A4EA76FCDBC0EFD6D08AE98D717
0F2808C8697AB31EA90E01DC19CB08DE04CA9463E8EF2154B7F525350E6288CB
42C6632F166F4B2D7E0636B1A0339185896D1F9253A2D6DA5873EB3014363116
5C5678B82DB55326C7B282AE511128AD7FD26685E93602EC441DC5282216F7ED
A7C1617030DF60F0980A32E1BBC379666F8E11E3C175DC760F23AB3FADCC2FA1
137FED26EC0A9168C7DC423582F6EA536CED637F345D7736B493E69E326D09C3
C3FD821E2706A66AED8BE51817E5446AD915604FBB7C4C3B8F46B4E782998903
8EA93AFAA5D6B83ADC159F5BE0413C0DFAADF468A40E23D5916A786F8F61FA42
0454232FE066336A9B1A34C4850B877487C1C41F870DB01FD993C647EA40E13A
60D10103240CA2F273D5183191429B80099D9377BFDBC3ABE9D54DCBC30B73B3
46FDAEA4655572F1C6478B8E8FA4113BB884B14A3F4E31105741257E8FBA3551
E5CBE10451F15E9DB21221855FCF1FD7FFD964076539AB1ADB670ABEB992F5D3
E1A83487DD7D84E7F4B760991ECA993F079BF9ABD41EDC6572F409F40E565857
C86BF3D7BB649DCF308CD15253534BC47F564F33F5CCF0202307F1F2DFC64657
9F9E241DB36F6FBDF5BEFEEE4542A2E9C419C82A4A738E5C2F5138F949E6FC27
35479D38929D04B5F53F5D2D74BD6890C95D25D3ABAB44DB67A8CF4DE5C3E9F3
29CC5CFCDBCE3CE46AFF19C5D80FC21DC5EB39ACB0499A44187B7443D56511EE
590645582E50AD1A881F27AAB3D70C2168763D3E734DD7CB38183FBA950F8AE0
1BC20DAFC988590334FDDD4CD0749421434B65EA431E44F15FABD4DBB7DA94BB
44F2420F59C4D7131DA6D9E6EA429DFD4381D9B4EBDD3E207E8FE42F9DDB5C57
14EBA2D45C453609B63B748696C7385FF6FAB1CEA172AE3E043F9A644DD64B56
B3B701CB432DF642CCA0CF1E43975524B81C261352DE8C80BF35536C3004AB20
584965124B872C6019173F1C6A736934F5C6CB71AF930AC83B2AD301CB60EDAF
7AA924796A08DBB7AAF72354E5ACA701477F5EB93AB19D7A1CA07FD56836F059
0A0B1ED4B68F6B06A82D840609060F5FF0E904936ABF80921CE8A5D83D687E4C
15799702FCC00BD761A7127DF80AB5EF7A4325BF6C9EBAB2966F964608D86F70
E0F836FD73A8326246B52D0262FF0999200A63AAE7BBD938282806F106379E53
0C2E4786F11B3D3F4954099916B453DFFF5328CD9AF40C19C8A3BA393B7C694C
54A97C41B774EB46E6485C5B95956B291E5B5C2C052CCE60B07F528E6D0076E3
2F20B25870EABCA5C0CD865DF0358372A3C3D3650C9F9469582927D670F2AC23
032955AAF65ECC3ECC1A18B52A3F5E93855F8F155A163CD6508C012E18728266
C09A6C7920797BFD1B99741C69DC725A9379DA2BF593711F12A2FBAAD9E238E2
3592989250F458AAC07630F9D4584353E194005650F0A0E6F2ABB44084C565D9
C66222439AA03552CFCE1C7DCCC1D46DAF4838BAB041AD9E21EE71953E98291F
248EB81AA8E2F4D93B1341844AFB4D2C7D3AA7BBC329D344C3DE8D33CB6F6F81
780CADC3AEAE2DBED1DEDE8668DC605E764163558703D92B278461673B1A7FBC
44BF3BABF8959F4A5A67FBDC5317FC36E225CCDE4491B450BB113D483E89641B
D55065F7A559D465B73516750B0FAF57FA90FAFF2F5EE8A86B4967EEEADD541E
FC143A7B4B71FDC407E3F40184A0AD7B3AD84D4B91FF39B84FB47FAA081141C4
96B2A49B0A7B5BD37B6A5039C2E0C74959BFE2466BC2FCBD098B6ECFECBC5C4F
FE7BE6088F6A0FED3C045A03F419FBE2B6BC4F294E6B30829597CFD1BFF00B4F
FD707642457680F623F4F93CFFB30B7C91099CBDA297355F5C1C1B1AF218CDFF
4508F5549C47EE96CA3FDE4488470F9530BEA741B73AA64976222E4D1202A0C1
47C54455D3E3C730DAB51A68D59737CDFB80071BCB3FDA586AE70D688965F03A
B51D75CA1AA28A968E41BEA8C678E216A5FB63C243F84DE4949979F1C14126D4
399ACCC12D0CF5C7593337625599A3B12C26C3604D82D84EA5931C777D351127
1BD953E6EC46866CC9FDB8E9FBFEDA6A557A941172C933514835BE9F01BC65F0
E7536590CA6BBFD6E87C9CD4DBD0B0E622931807778D13A23B7083880F5FB33B
0AD451285DEDDB4CBAD1E1CBEEC9EAD4E8893DCAB644F8B14BFD03BEFFF86F35
9F67807C30DE0C6705F1D7F0FBC37FB1EEE3D179F5CFB937719C4FF9D2C8E6FC
198D983E10A960E19BA0A58E6E89B61CECF1C23356782317D97BFF72F81BBF1B
50FCAE75468E2C80676AD1C8266AFF1711E5C7683F61F0CF0E6AE3B41D75E1E3
F01006C7863E839E596A355F5589D59DF84734CBAF2860BAD93A417FB94CEE2A
E3AFF6062831833952BE146B67D27475635DF3CEAADD151D1D994C7FDDC6E731
93F67A04C3D989026C68D54F0BD7B65710C8EE5E60024AE94A3C321D82F13C4B
2559BC1A68C305B600413B879242DDD087B5B39FC60D1AAC1761AF6886C3ECC0
289F8D359FA03E7356F5E40C5D2CBC0AABC34FD0C4A0756FD52A11F7F36ADE2D
05B11BF83195D6CEAAD45A4531F92D9048E8352B640612859D05162CB7536043
48EADCA6D2E508C71613979C16D8513E6E5F0845C7E023E2D2266180FC260CB4
A03ACC8363264C1BBC051F2B15671FB92EE762CD29EDB0771FB745998F3B1974
75FDFA4E10D007AF2BFEFCCE1B6AA5F5A04E642382605CB51D5F1AB45A6D30DB
95F334B987CC2C78677BF8BB91E9534F8C3215E2B6555B0D92753B4EDDAD2BF4
83F5E30BFC0D91685594F29E8D6EBF03B562504552C73ADB2DFB7A377F59B8CB
86EC87595826EBEA775753BD743E94C24449B1690000EA03EF74EC405AB8FC64
602D27B0CC7CB772DD397987FA196EF91D0685AFAD5EA4EC927F0C7DCB619634
7E59372843B907E5D8CB4A9BBD3B65A411ED1977C34F89E3CCF90B95CF607A19
24D75319A2464D1AEE2234C1A3FDF4FFFF091D73584C34644E4DA343D48AC221
9F603891FD4EF315257155BC6E602D30F13C49BF43792A5894152EE7FE89F94C
3C30BA16D950258FF0C91133E4295AF85F25540C5745478ECBC82CE38D48AC51
830DACD3B36D9B56CABDFACF94D2BF600091E80935992451199D3D1EE324025A
315307FB5198948FE82A9D6B9CBEF2878A6F741E75E52369891367064895A15F
3B427F2937359D1CA1B11DF47E996E67DE270468469440ACA06278B3599F60E5
7DE7E5E1A201F4452542B838BC6ED729963BB5FAD5B5E418EFFCA512E5A29CA9
550C47041525A8E74C3931D08F039809FD86A086A5304231759979D461EBF9FD
3862ED2B909D58B9A730FA61874040DD0E80DEC965E9BE21C7850E723F33E25E
1DD7343E903AEE3455C90F7235AC44EBEB6176C887A64CDADB3FCE6EEF6FCEE1
A9119F25111C00401BF46BC7F5F44667487B2D6F4B922A16EF946CDBFEDA7BF0
4B233D7BA925745F932ED1207996A643DC072996335B47AA15953345586315E3
41165420EB33B813029C475C2652EA310825C9016DAC49C58FF6C526C2182ABF
28F557F1065E7F1691D27D98BDCD92D76D8EF0603DE48B6EE85AB0B13528F017
5A391E5E0D232EF84C07A87483AA6D59C33B91AD692559B176CAA68D60D6AA40
B518F5A1C94EEA92CCC75D0C3F1806702223D173FFA1B4AEA445970F107D46C7
31B205B73217A8FE3CE93C0DEE9A83FEA559798B7297E5D74C3A29FAF7E7510C
88DF7847F86CAC211440BD2DDCD29AF5B57D7B91F8616F00DCCA75A144297691
1A8C1429ADA405FD456E90C6DC95DBA05C9FDA4E8F6221C44B008AF5C23A3108
E4C3031E45F3FD553E60CDC26583155011D8E9A62E95B20F8A4112F5C9F4EF9B
D368545811F1D141EDDF06387B6D7E90A8B81F36644921263791D3E16B9DAD79
404CB9BF1DA7D0EB9B90F0607B9AFB5E897A15ECA0B12BA152FE2251B6F1877E
C286D3323EB42BDE96DFE6889CAFC110FDB4271F8F70FD9E8441EADC43DB8214
5A9F67ED46C4386CEACA1E621EBD0E71BE0F142BD3F9A6A1FF5861E04ABC2543
C426F269855A4F6A457C33DEA8CCDF7D9971999C1BCBC110485DDC8233AAA34F
ECCEA075CB90DD2539A36D6EBF72F903D379FBC2A64EB6231F556204402AB9B2
A5BE277CEDCA7F526703A8F4B344ACC9059371C462B19BDC4040AA98C7FBCB92
73C4191DEB48972CAC60D32270B2DA11639635030D88E9B5FAA017DEB3BE1FA0
4DD68A9DD4168B233C84CD2BC40A593C77633FC3A9D62C51F8540FB26CE00DCD
6692960490A9F5CD3CEFE9824D58FA480BE12B47A82CC9470EAFAFDD7B3DCF62
701BFC8420DB581CCF877BE2F1F5DD40FB9969CD33D9AB6AC3094EEA3056E36D
5E9AD52EC5F4E93690005857C93AC1A6C46CF205E9A223369D7E9D581F0FCFCD
207F4825F501DB78652709C857989096131C0CEB0C90CE44D4A30FE271AF0674
26001A6AE8751137E7AEAE9590C24597D5621B0CE614297988623BF5854BC7D0
7E9B66AB5431B7EE969970D13BF64EDDCB2AD9A4EEE1C0D0334DEEDDBAB38809
CA22B640AA0E54CF78BBBB5C48F26E6C8B8E9EA1CB1C2B9D718FA8B9D6A005A7
AE1C5886061879C5909180EAA12EAC195EC91E51D386CE1847CE2A8F625BA12A
F946835AC3B6E5D53B929C2FA84D74BE342EC7B6AE81C37246E71253A32BD892
43CFD8E03F015C2B033651A9197DEE90B073F78328863EFE36E95CFC57E25F99
600552CAA8F7B728F9AFD28DB65F7F73C1670BCF93732875268E27596A5E4065
E0117797E9EAAE82D772840F64B0403FAAC2E1CC44C4C72FF66368A24E553F92
C35C1572A93BF48630187D316F0644F2C4C50919FDC03738C699DD31EE707474
E8BE78807FDD3E327817D3BA2E81CE988991612F8745E231C74B97433DF609A2
944F510840D37B53B652D0B8E5850D24388E08134EF510E1E65DDC6D9672643F
875414C3E0FDBE6AF02C5F4BE7EE314FA0A2CBBD5CE4E67C2F354F0414204CDD
F0A72FEF1E18CF10F3794380EE3290839A3C7ECC0D4AE0A86D3693C678E60A79
223548485C828D357139EBE15804305C26C350F025CA7980BE64FF017BB38B98
8BF3CB2C67377966383DC0D37A7AF43517967FF358674F6A843EA21A9F9F2D8D
AE022572DE94201A092AFFB26F205B362E8FEC9ECD41957A7AFC68C43D30F0D0
2B4EC5F9B64482A637078AB009EBB3F93E9A23201AF259D320CCDCFE7CAA7F93
898C5516091EA58224CB1D2255066EC6ADB32EEA0971410202A805C66C0DDBA4
EB6B66804939A2CC607FC5F01BE5D20CF5A9B76C3C6BAEDD1DC0C776E9225FAB
6547923931CD6EDA1BD84827E4D45C95BFBD3679415D2418839F7DE50B599D16
A2721BFA4AB0B88E1A12AC4315A0508D2B86F75F62ECE36B3EDA703EA405CBF3
28DB0B10846905F146BE65A123F0D1E02CB3D41DA1934DCEA90371DE9ACE9979
8FEB9A03917B6CC1585DA1B6DFF9EA8B104899D67C6D8E6435087C423783FD12
C29CFA62E822B2E629CA9F7E4CAE0CE419DBF9260A09A287B28245837A19877F
5B24926D0DC3FA1B7CBAABB662768B2270FC9A1D695EB2A2B3F3C0C7E7DEFEE5
E4F04A2C56B9D6957157C85102E22B493D12A86BB3E5BE112A15EDCD686D09E2
79AC5F124DEA41E9C0099EA01F477DB72C6DA49ACA7B9A578B55CF082E510357
FD3DAA2C3184D0C5719F8474E0CA355B1A9BE27CD7790F7E337840B595FADA4E
A55E2095C93D5111539F4B93B0AD20EBA9F0A4FF43F96BAFBBEF1020B2A6C53B
BFE468475E22BC68178D23C37FDE731AEE9299D7FD9B604BD7BFF8486B28DF1F
2BF64DD6D6BA0A7E6B05A4B40C0E6D69FD55A8A00B77C8F9EFC37D1FCD7F96D4
C2073132A0BDFA38FCD676714E2662DBD9A860FCEB781D132EF1577C558AEF41
732A14C39EC20BA2284CD5DECE6D1807242CA370E7F2164597BE94E6CD9D494E
4100ABC7CDCB2191BC13D88A803E5664A5273F9D82AA4BFCF4615597F295051B
8430FF7F5F8350F9012CAF564700FFFC68A689B6C775C3E22527058FD760E498
8CE10A4F13193555BDAC9C9C9F4DAFB2FEC4494F5241F259711CA845578A50DF
9597A302BB7D8DFA42EF0E00411BE7F6937D2BCAF51E7E0CBA73268B7C28D6DB
AC7659F6D534E1DFC6C6072D280CCB53F3DB1B4C7B9CB26F42E980F46BD9DCB1
FECBF33A430F116C26861DFE27CD1191A4496FFBB5C74A5326F26732A16023FD
3DC608089DA4138F10EFB2DE94E0DE61A325BE6FE9162A62D3B544F70BA7BE86
48185AC7CA1A2E5DA0690339D0285E2D0254C586BC1D44FEE0E81CB0ADF8E1F8
98A45F8C4552A577EF84CD5468EB7D9B70A7CB9C078D413261256B764658D9FD
779E93C65B738C3A7DCBCBCD1C6167CBEB6181C675CF584FAC1C1770910DD0F5
76863E58FF8239960E747CEC01D9D7CB7FCDDF70F572940FA8C378468260AB1E
49A9C131E8737BCB67C38163723B40636F91719F3F861FDC66085EE973EFFD30
915C907D213CBD67A57DFBFD381C214354640141431816BFD417F9E06EB6E7E4
76D87E631618DAE729940E16E77B5E6A74C3680F5AF38D0ED55CFC9D7D9202A1
94CC2243EC8EC3C7D542C54BD1BBCF77C834E4EBF05C53B0E2A7100C694C3934
6C7A513AB63F9CA993F837994245B7EBFFF9A750E73982526B714A7236D76962
C7DF20E3A0DDC45587D52A566B3D97F3707AFF3D2598660F5AABE24661059ED8
383E6DB68EC69CA432C37414D457C8FD8A4E5201BAC6519125D0390179AC3A0D
C2E2A601E15217F8D076274D9285509364A41189926D66DB05FE2D2D678E7476
24A4EF221B2BE0CA1804BFE9EE63D5E0C5C8BD9EEFE2A0022E65BF53C1052103
62D3C22BF0DD458FC2B871F3EE1254DFCDF37AA05646EE1C0D5324C927A265AF
13ED3974523721EBC05413660572A801CAF1E9EB7B0D2DBBBEDBF312576A4E12
BE17D38673EA4F60CB46B8F3F46BD1346F4523F9FA2EBFD90BB0A739B471D229
4A5639E95613061BA80A033016B215544750C5F9B092120E4C721E409EBDB65A
8E98921EBE0FC915EEB434A18DAD89C41F6C29494CB3293D45129BCD3A73CA17
4DD332D0BC13EA876E2EF7D12D6F9481F8C5599316C248E0FB533CD8499D04C6
F49A377D5308CF8097386911AEA1BB23370458CA00CC14CC32CF0C30523CE083
0827845F9917F87CFF16A38894960186B62B041EC9650296C7F87E259ADCA13A
D3E5E9215905CC0E546959FDC572924BB1D201B94B68B7CF718BCF55588E7E30
D15CFA32929AE165B78012346049B709252D48CEB17497DE00C452BF6A035214
E7A2DF100BE4EC55766D671203EB1B84B3C0B8D591796F91BFF1DE79C3964C7B
71FABAEBB388453562E524D4195B194777E153CA3F43A1C04FAA664C84ACFA5E
916E7BA8A7A73AF17724C478EF760CBDC7BD688C02B6235DCC75647346A20E6F
4BF032C051D4D50097B9F6B1C04ED4D957C7CA7A5B35DFD3E3C36D1CF4580397
46BA51219A4D4822A4A84D89325B0E58001BD92542F06A8C192A4668D3F50197
D896CC7219EFF06EDE34EA7559C14C9370E07DFEC5B1E1A5C8571BA9D2C7926D
F96056557612C07F9600EF0D641B20C29111DFEAC6AAE3EB9B548F629F8D5FA1
062541CC8272AEA42A5ECED5AC9C2190523632F6F6B492326DAB9D989399889C
47B75C553AD8A0A5F454FFCA8214D9A35055BD663806503A55D1F1FABB3D93EE
17E24D94634D63ABCE86702A35E167E6E24020D0C28EC84941A02EF32A0BF25E
FD3FBB28B9324307AB311D8DB3327875E220411870B1985C3EE3E349F821A64B
2263366505C67BEA4D51708D6707B2D814A36361C7D9FC5003689357FA4F7981
873BCDF12242C53C56A599EA14980C7D6FB47FE89CDCA06221F9EC5FE8CEAC54
FDE4A1118EF4244D71CC8D3E525380F8D1A793669EE4DC0CB1AD9B6F4E304A78
295741C814566B8F75BA7006C284071AEB6753EAA560853317C63BDD4FF8C6A8
21BA727E8484C7A2421BCE2F96ACD92C417EA25DD8417FD91E1D0EB21EAB2DCD
C6125D037739E1714AB59B6DE945558883F515D11AEDD37D218C72ACDEFCF4E9
D6EC205DBA305ACBBDAA431CD74F8A50BE1790F817B16A9A14A8C99D27A2BFD7
2A04A0ED76C3D0341D197CC91EE7709D1567094231F240B033264AFE50566F77
BFF335F560AA0D777DC6E62B6C0B128C20F4C3ECEDB5DBAEAEE5AD6E5A922048
7EC1C0B16C16192E875C97B211680489812E072E0D5DAE530897B818A5366428
6FD64E873188A1E8F50D18261D9F6DE9CF073978420B09AEDB84EF9F28FED6DB
5E5C805726A2D6ACA8A1FE6AD25D0E8C5B3B9CCEEE378A512073DF63ECFAC47B
070CE6AC5EBF041B166A462E9077D58DD8ADD5011995EA32D0D5CB6F6771EA02
065F3AFEF596C524C1526AB8D6D17D334FE7FEEC9C9FB894159B59A1E63326C1
8F3D93836C9EDF4DF7EAEC662401DC4978292B19DCD5CAA35C45DD22EAC08FC3
F44C1BE831A0DE16791D9D491E286DF26AF93724BD66A6D8F86FCAD59F1502B7
4AAF6AD1E8E0739534242D2FD22E7C30E3EDCE22486ED463095F2EE2A6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSS17
%!PS-AdobeFont-1.1: CMSS17 1.0
%%CreationDate: 1991 Aug 20 17:33:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSS17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMSS17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 77 /M put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
/FontBBox{-58 -250 939 758}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A14816D516A63DE166FBCFEA932
BF000C3B84394CB6E6A446D37717CF8AF9A27241D89E3EC12BBAA36A87DA0A50
B96DE87FD2565D6BB4225E150CDC8FBE654B16102FE8DF3BB5EB869ECD8E521D
74ADF974252C93C4FA50311485350B2EC0A92EAB44C9A8BB11852B3666C5F393
6BA5AE3D742F26EE549A603EC810A7528CDFC7D3A1580528936A7C291404D23C
A573D08407861ED401CA26626B04DC86EBB4547870BA7A03E49CAE3D0CA7BCD7
6C28C3A89BF4182CB84BBBDC9DDAA541448456EAEE89E87C488851D1235F3326
D866CED01587D10C2464C07E3DFB71E49317FCBCE83A4B85F2B7E544BFB398B8
5BD9355CCF9088DB5108E011959AC68F9A3773B17656F85521618D608D9F6450
BC4EA327B03E999BA05A16CFC2234F388EE7463AACF02EA3A45D5E65805C7ED9
4618D5A8669FF3ABAF8B41D76D11F4AC0DB848BA8A5D51CCD6D85EB6BEA99A54
80CA3DD9B7E9832296073E66AA9697E86758256A063934E0B30425BEB569D9A7
C37604DF22CD0A369EE007F67CFF5A930B5F77EA030E547DC635869BE5905270
09C91AEB22772C01412D78965DD2B489B4C4DF35FADD130DF1FCD2C59D0974E1
4C161E5FF72F790700E0439032D0240542B702A7520469411C6809C27B3AA535
A5ECD235FB90601C6492C6C3D2D38AB999445474D7E788097E247DE495BAF83A
7F1C70DD205967B579F69E764F4DDDE56AAC3D87CB837EADF755DB85B88EF041
AC4F754DE77B66B0471384EFEBF9D67DF6626338DE3D4C65A1831032D36C0B8D
C60513EA65E9AD53E4F1F1AE4F6DB85E249AC53396FF5DB2189F37D359DF0AC5
9369E07ACC443314B1A13CBCDC48DC2F95896CE74E346E7E94D94DB9D0AE96EF
AD5D9ADA929D7897FA0B41F766CE854BA9D899B6E01B1B4C66B56E7AD1B387B5
5DE80BC0AF84CE2AC67411B50739134584B176601A37A2E6B94B711E2305DFD8
AF638B5F9D1D0777A2A2F62141018738280B08F326C2E68D9F4DF41EDA14E254
F0C0E777C1AB376148715A122F6FA49952AD27DC682367580BF2C8292567F332
91477B75CB5091F8FDA16C4AFD49852AC6BC1AF5F9A611E3D79301CD71A5FDCE
5F2911B73372B37384B4EFE347C8452DB9EF3A7CD8944958583023E25A9F68BF
5584BC804E9C2BAC1D32296079B8CBFC6C0DA5A34274C0F9C65F948727E32EC7
E5ABD76D608D841FC9E60818A99688545560C4616409DF004DB995CAF48D7CC6
13E0851335F39389E0FE4711B683CBE160FCE3309A7FC0321931D9147E280A28
38CBD3FD3DB195BD25821BB3135ECD6403F120F240D8BB74285F200A7FA918D7
2034129FF997F4F6AF1A94754E95E66240B7412146A74BD3688CB66D99A3C4E9
BFCC06354DC21826084F72021024A8AF222FCCCB307949600F63413719AD7967
74F0A3B1AFEB65816A80B050BB23D4B25820CA3E76474F03920F1465AE247844
55CD6B78225DC841180A2C40AFAF4424B44C7E1029CA1D6791DDFD724D26E4AE
3A33F60289F0FC9771B53462AD87AE108A200175420FF766A60EAB705A7F2E80
AADB3309C8A58E27A7EB325CE84DA60615919A20B84DE6C5867EF05AAA65BDCD
7E2B75A8986F8BBDEFD6093F83F8957B11682856A9E770BD37071DF9DA210E1C
D27B66FA824D7EB3D96A1D26C5CB7CC1F0B73B17CAEEF29F00542CB8F611B7AA
9057E3ABD9C3B6235756B133CA68E92DA9FA3CA38CF286CF916A0019F8AF721A
2ED1013995828D4B45CC570E6AF9ADAEFD1B8B76BBF7AB0DCAA4B25353A2E2D0
4FC2740F27B355B954489C05C9EAA1F2316F6DD738B35526206A6B9150310AD0
51AFCEA786B253981675550CFB916F09A565B9E7DE39261A3131C5BF73B9076D
EF2467047DAC2A87B4AED4B5A7F89F40F2B0A0BB2477387A406C60A9A4FB8C94
8CC6B24A9AED0B7466102399769AEBB7DDB05D86B2188F1F3A2F7B3BF17B09D0
E77ADB6E09FD331A2D199ED03278D9B7F0A4C7E22322F5D39C24FCE1548223BE
C98DB9DE46B976A36E0AE197141D40C03E9BDBC6ED01415D08488AD9796BA477
216DE44386A8F5BDE81B93D71AC2D696338BA98AAFA4D35CEA331EEFB6561705
8C2A0C280AFB08F0C7F031E00A90D996C9B7F335D8733A87448032A62800734E
4684551CE9A103606C3F40E62BC88429BB9A5A0C57F8C5ADF2378AC2A169D9DD
8DADE2B1930FFBEDC27084CFC379158D0D24B5D4260EA8168386712854003119
D8AD91ACF338C50345518FB2447FFBA57413CF7FA892477A321CBBCEAE28B39E
E0DB5198A03FCE9C74F205B22075FD66E8C63B736F912CD70660AAF85D540CDE
50E2D1E37EB0B9DD1C828978C1BE019C13D526777DEC135B0FAFE4087DFB2374
E688682BD083E3220EC7DDCB3D5E3102EE38B54A7DC7B2045F8B16D67D522BAF
446FE3154F3ED81945C6C19267AD2CEB14FE5EE79612CF299F920B5B72D5C5CA
C01958CBA601F0E6BF71FDB608D0A8FD1E742E58CD91CA47AED07BD3C049AD45
2A44B6258D3559414EC2439FD67B5E4D0F917B382487573075C683784FCCC1C1
77C2DCFF25EEC3385EAA8FB56B40CC853CFDAD940AB0E32A304F293BE3F7CF9B
24F14E6D627BC09561A744DBA2549B2D269E537F5654CED659B0E565F835B595
36EAC10F06F67F1EBAEA9EC212A72B9884207ED349A358621ACCFC7FA2D8959A
8729942A4B230672DE14F8E0B57F57CD3498B23E3959C7AB364C0364269AE07A
F439CB8B6CF42D40AAF92C3546390B7904576CD32D1C2DBAF3DFEB71B11CACB2
0D43EE2969EDEA79717DCCC97670A98716E69ED9968C0456A2E437F009F562E6
B8C01D3D8847A9DC0AFA2728FBC3101E1A95475EE8497F3FAED452E56F01668E
FE7319A293CCD371C81294F89424BDCDD58F0DB5BD0D92AE2B31454BE5B1F02D
7D01D84148F18F5BA1B60B0C21EBF25B529CCA2E1942D7DAF2D3BE31A6429FA2
8CC34B1D6D7A8CDF81084EEDE6C12C9B468659035AEF038863F418CC49BEC30F
D5141E17AB587D8E39CBAE174E0D7E8D34069B7E781373BBB643547283CFA908
5C24407AFE29110211286B989F3D3145DA722A8917538ACF927529A54D6ECA85
0478309CBAA14BB1A3F6541434BB7FFCA69DE7CD957F16B14FF116E46B993539
BA93F2F9DAE44030BFE31365B6417C7E6E83668CBC174E8EECE58EE2BAEC3BE4
91B731A7A2F17DE8307A1E57807A7683DC4B43B1236A7E235B00A044EE0D47CA
A9F0FC2EBEB88B96B7CE06875A89EB1F44DD192838196387D2F344BF84343538
217748EED9A25D61B9E9E101932C0712F058012E774AE00075B96E9DEF34C4FE
F08DE6F91C0DA04B04F4CC357DC83068F1D63A6E64A481C5B86F06B622ED39AB
0EAA60381632D71E2C73F44EAA619A3D329EDE61CD04F248022B6DC7AD82C240
45677687C5A36A2D339C7296AEC0F61E70BC0E066BE1EDEA92D47543717FD0A6
CA4BD321D2D851F9634D30E143AE9DAC42FD161B61D8D6A5A39952DE983F93D6
FE15EFF6D2526394D84868154B6BB8B509338CF3F5BDE12DDDA5E89AA72530F8
174AE66B36DC2C26A9A1DECB4C72A9F821BD40B187BF0F53530ADFE042A675F6
A2D36DEF143C50EDD2549B4D0705DB9B0C61C40FA7BD0893CFD4B5F131C0A386
0A1E0595854496F2165F2E73EF4F88DDD95779982AE2C6AC30C1C288AC24DD98
25D8AC1850171EE383B1620B61DDB71415C2739019DDAF53785553C735FE1CF0
89AB2CE1194FDD48D7CB62BD5A637F85FC2607BB068269A877EB459A6F7ADDE6
D230D69EB05AE1CF65D43FBFCBE5A223A8F1AED72E0E5107ABE824CB26E9AD45
243FA826099638CA4D74FCCFBCB3C1BF9650B8A0BA3EEF6E4846A12DD26E1424
880C750107E8B2BE2C7627A651520C42A1C25F7A30F199979309BD97881A692F
69BBF7C0CC7B8AB14892DA5D331425D4DB68754F45CA69EF7DC90CE5EAE79704
C95D374CD9861EAF8E0E75BC77E695E9E4A5642E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (springmass.dvi)
@start /Fa 139[32 40 2[50 50 55 80 25 2[30 3[45 50 45
1[50 97[{}12 99.6264 /CMTI12 rf /Fb 252[77 3[{}1 99.6264
/MSAM10 rf /Fc 254[46 46{}2 99.6264 /CMEX10 rf /Fd 198[35
35 35 35 1[35 1[35 35 35 4[55 1[27 27 40[{}11 66.4176
/CMR8 rf /Fe 135[73 4[55 72 1[67 76 1[89 61 2[36 3[67
1[71 69 73 16[89 10[89 10[38 5[66 66 66 66 49[{}19 119.552
/CMCSC10 rf /Ff 205[30 50[{}1 49.8132 /CMR6 rf /Fg 206[71
19 14[71 31[20 55{}5 66.4176 /CMSY8 rf /Fh 198[38 38
38 38 38 38 38 38 38 49[{}9 74.7198 /CMR9 rf /Fi 143[83
57[0 4[100 15[100 7[77 4[77 13[77 4[28 77{}9 99.6264
/CMSY10 rf /Fj 139[25 33 2[36 1[43 62 1[37 2[41 34 1[33
36 15[41 43 4[56 11[53 53 6[20 24[44 7[41 25[{}18 66.4176
/CMMI8 rf /Fk 128[49 10[38 38 3[49 54 81 27 2[27 5[43
3[27 33[76 3[49 49 49 49 49 49 49 49 49 49 4[76 1[38
38 40[{}24 99.6264 /CMR12 rf /Fl 134[48 2[47 1[35 46
44 3[58 85 1[51 1[33 1[47 48 45 2[41 51 18[78 7[63 1[81
70 74 73 2[76 1[76 27 27 24[61 7[55 25[{}26 99.6264 /CMMI12
rf /Fm 134[59 2[59 62 44 44 46 59 62 56 62 93 31 2[31
1[56 1[51 62 50 62 54 11[86 5[84 88 9[86 81 21[37 3[44
44 40[{}27 99.6264 /CMBX12 rf /Fn 132[49 42 45 45 66
45 50 35 37 33 50 50 49 50 77 23 47 26 23 50 49 30 43
50 43 50 47 9[92 64 1[67 54 63 1[62 72 68 1[53 2[27 68
65 55 58 70 62 1[64 1[46 3[27 27 5[49 49 49 49 2[27 33
27 2[38 38 27 5[31 18[79 1[52 57 11[{}61 99.6264 /CMSS12
rf /Fo 134[74 4[58 62 55 1[83 81 83 128 38 2[38 1[81
1[72 2[83 78 13[90 2[103 2[141 31[54 45[{}18 172.188
/CMSS17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 1238 487 a Fo(Sp)l(ring-Mass)54
b(Systems)555 634 y Fn(In)37 b(this)h(chapter)g(w)m(e)g(study)f(in)h
(depth)f(a)g(classic)i(application)d(of)h(second-o)m(rder)456
750 y(constant)g(co)s(e\016cient)g(systems.)57 b(W)m(e)36
b(will)h(mo)s(del)f(the)h(b)s(ehaviour)f(of)g(a)g(mass)h(at-)456
867 y(tached)45 b(to)g(a)g(freely-moving)f(end)i(of)e(an)h(ideal)g(sp)m
(ring,)k(p)s(ossibly)c(subject)h(to)f(a)456 983 y(damping)31
b(e\013ect)h(\(imagine)g(the)g(sp)m(ring)g(and)f(mass)h(a)m(re)g
(submerged)h(in)e(molasses\).)555 1099 y(W)m(e)43 b(will)f(usually)g
(not)g(sho)m(w)h(all)f(the)g(steps)i(involved)d(in)h(solving)g(each)h
(initial)456 1215 y(value)34 b(p)m(roblem)h(in)g(this)g(chapter.)51
b(The)35 b(reader)g(is)g(strongly)g(encouraged)g(to)g(k)m(eep)456
1332 y(a)d(p)s(encil)h(and)f(pap)s(er)h(handy)f(in)g(o)m(rder)h(to)g
(\014ll)f(in)h(all)f(the)h(missing)g(steps.)555 1448
y(Let)g(us)g(b)s(egin)f(with)h(a)g(\014gure)g(rep)m(resenting)h(our)f
(physical)f(system:)1050 2307 y @beginspecial 0 @llx
0 @lly 81 @urx 36 @ury 2160 @rwi @setspecial
%%BeginDocument: springmass1.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: springmass1.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0
%AI9_PrintingDataBegin
%%For: Information Technology
%%CreationDate: 5/5/2010
%%BoundingBox: 0 0 81 36
%%HiResBoundingBox: 0 0 80.3438 35.0557
%%CropBox: 0 0 80.3438 35.0557
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 56 8
%%BeginData: 5112 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C457DA8FD0CFF5227A8FD36FF52277DFD36FFF853FD0AFFA852F827F8
%A8FD34FF5227F82752FD35FF2752FD0AFF52F8A8A827F8A8FD32FF522752
%FF52277DFD34FFF87DFD08FFA852F87DFFFFA827F8A8FD30FF522752FFFF
%FF272752FD33FF2752FD08FF52277EFD04FFA82727A8FD2EFF522752FD05
%FF52277DFD32FFF87DFD06FFA827F87DFD06FFA827F8A8FD2CFF522752FD
%07FF522752FD31FF2752FD05FFA852277DFD08FFA82727A8FD2AFF522752
%FD09FF522753FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD1AFFF87DFD
%04FFA827F87DFD0AFFA827F8A8FD28FF522752FD0BFF272752FD05FF2727
%F827F827F827F827F827F827F827A8FD19FF2753FD04FF5220A8FD0CFFA8
%2720A8FD26FF522752FD0DFF52277DFD04FF2727FD0C7D5227FD1AFFF87D
%FFFFA852F87DFD0EFFA827F8A8FD24FF522752FD0FFF272752FFFFFFF87D
%FD0CFF5227A9FD19FF2752FFFF52F884FD10FFA827F8A8FD22FF522752FD
%11FF52277DFFFF2752FD0CFF7DF8FD1AFFF87DFF52F87DFD12FFA827F8A8
%FD20FF522752FD13FF272753FFF87DFD0CFF5227A8FD19FF275252277EFD
%14FFA82727A8FD1EFF522752FD15FF5227522752FFFFA8A8847DFFA87DFF
%FFFF7D20FD1AFFF827F87DFD16FFA827F8A8FD1CFF522752FD17FF5227F8
%7DFFFF52277D52277D5252FFFF5227A8FD19FF27277DFD18FFA82727A8FD
%1AFF522752FD19FF522752FFFF7D52FFFF27FFFF27FFFF7D27FD1AFFF852
%FD1AFFA827F8A8FD18FF522752FD1BFFF853FFFF527DFFFF27FFA827A8FF
%5227A8FD19FF2759FD1BFFA82720A8FD16FF522752FD1CFF2752FFFF7D52
%FFA827FFFF27FFFF7D27FD1AFFF87DFD1CFFA827F8A8FD14FF522752FD1D
%FFF853FFFF527DFFFF27FFA852A8FF5227A9FD19FF2752FD1DFFA827F8A8
%FD12FF522752FD1EFF2752FD0CFF7DF8FD1AFFF87DFD1EFFA827F8A8FD10
%FF522752FD1FFFF87DFD0CFF5227A8FD19FF2752FD1FFFA82727A8FD0EFF
%522752FD20FF2752FD0CFF7D20FD1AFFF87DFD20FFA827F8A8FD0CFF5227
%52FD21FFF8275252285252522852525228522727A8FD19FF2752FD21FFA8
%2727A8FD0AFF522752FD22FF52275227272752272727522727275252FD1A
%FFF87DFD22FFA827F8A8FD08FF522752FD25FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FD1BFF2753FD23FFA82720A8FD06FF522752FD4EFFF87DFD24FFA827
%F8A8FD04FF522752FD4FFF2752FD25FFA827F8A8FFFF522752FD50FFF859
%FD26FFA827F8A8522752FD51FF2752FD27FFA827272752FD2FFFA8FD22FF
%7DA8FD28FFA85252FD2FFF7D27F87DFD7BFF7D272727F884FD79FF7DFD04
%2752F87DFD77FF7D2727FF2752FF52277EFD75FF7D2727FFFF2752FFA852
%F87DFD73FF7D2727FFFFFF2752FFFFA852277DFD71FF7D2727FD04FF2727
%FFFFFFA852F87DFD70FFA852FD05FF2752FD05FF527DFD77FF2728FD7EFF
%2752FD7DFFA8272EFD7EFF2752FD7EFF2752FD7EFF2752FD5EFF7D527D7D
%FD15FF847D527DA8FFFF7D7DFD09FFA87DA8FD04FFA87DFD4CFF207D7D52
%52FD0DFFA8A8FD05FF7D27A85252FD0DFFA827FFFFA8FFFF7D52FD4BFFA8
%27A8FFA827A8FFFFFFA8FD05FFA8FFFF5252FD05FF527DFFFF277DFFFFA8
%FD07FFAFFD04FFA820A8A8FD0BFFA8FFA8FD40FF27A9FFFF27AFFFA85253
%52FFFF7D2752A884F82752FD04FF5252FFFF5252FF7D522753A8FFA85227
%7DFF7D52FF2727277EA852FFFFA85252527DFFA8527D5227A8FD3DFFA827
%7EFF5252FFFF27A8FF7D52FFF8A8A8FFFF5252FD05FF527DFFA820A8A827
%A8FF5252FF5252FFA8FF5252FFA827FFFFA8F8FFA8277DFF7D27A8FFF87D
%FF7D27FD3EFF27522727FFFF7D527D845227A85252FFFFFF527DFD05FF7D
%275252A8FF7D52FFFFFF27FF7D27A8FFFF7D52FFA827FFFFA827FF7D52FF
%FFFF527DAF27FFFFFF27A8FD3CFFA827A8FF527DFF7D277D527D7DFFA852
%27A8FF5252FD05FF5259FD04FF2E7DFFFFA827A8FF7D2752FF5252FFA827
%FFFFA827FF5252FFFFFF5252FF27FFFFFF27A8FD3DFF27FFFFA827FF7D52
%FD07FF5252FF527DFD05FF527DFD04FF7D27FFFFA827FFFFFFA827FF7D52
%FFA827FFFFA827FFA827FFFFFF27A8A827FFFFA827A8FD3CFFA827A8FFA8
%27A8FF52527D7D7DFF527D277DFF7D277DA8FFFFFF277DFD04FFA852527D
%2784FF7D525327FF5252FFFF2752A8A8F8FFFF52277D2752FFA8F8FFFFFF
%F8A8FD3DFF7DFFFFFF7DFFFFFF7D7D7DFFFFA859A8FFFFFF7D7DFD04FFA8
%A8FD06FF7E7DA8FFFFA87D7DFFFFA87DFFFFA852A8FF7DFFFFFFA852A8FF
%FFA884FFFFFF84AFFDFCFFFD83FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2010-05-05T15:56:25-07:00</xap:CreateDate>
         <xap:ModifyDate>2010-05-05T15:56:25-07:00</xap:ModifyDate>
         <xap:MetadataDate>2010-05-05T15:56:25-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>112</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6B/zizr+va15P1a41nUr&#xA;rU549QMcct5NJO6p6EZ4q0jMQKmtMUl7TihLPMnmTRvLejXOs6zcra2FqvKSRupP7KIvVmY7ADri&#xA;r52TT/zD/PjVLzVo7qTy75Qskmg0hDypLKylKMEK8y3SVtwo+Fa74pZV+U35s6zpWs/8q5/Mbla6&#xA;9asIdO1GY/DcL0jR5DszMP7uT9vofi+0oe5Yq7FXYq7FXYq7FXYq7FXYq7FXYq4kAVOwGKvn78x/&#xA;zH1/8wdfb8uPy4bnA9U1vW0JEYjBpIqyDpEOjMN3Pwrt9pVLLXUfOv5E+Zkt9cuJte8h6s4rfUYv&#xA;FLxAZgGLcJFA3TlR1G242UvorS9U07VdOt9S024S6sbpBJb3EZqrqe4/iO2KEVirsVdirsVdirsV&#xA;dirsVdirsVdirsVeD/8AOIP/AChGs/8AbTP/AFDx4pL2XzJ5k0by3o1zrOs3K2tharykkbqT+yiL&#xA;1ZmOwA64ofP2l6X5n/PvzOusawsumfl1pkpFlZAlWuGU0IBH2nb/AHZJ0UfCu9Til9Gafp9jp1jB&#xA;YWECW1nbIIre3iAVERRQAAYoYZ+bP5TaN+YGjelLxtdbtVJ03UgPiRuvpyU3aNj1HbqPdVhH5Tfm&#xA;zrOlaz/yrn8xuVrr1qwh07UZj8NwvSNHkOzMw/u5P2+h+L7Sr3LFXYq7FXYq7FXYq7FXYq7FXEgC&#xA;p2AxV8/fmP8AmPr/AOYOvt+XH5cNzgeqa3raEiMRg0kVZB0iHRmG7n4V2+0q9W/Lf8t9B8h6Cmma&#xA;YnqXElHv79wBLcSgfabwUfsr2+dSVU817QdI1/SLnSNXtku9Pu04TQv+BB6qyncEbg4q+erW68z/&#xA;AJBeZxZXpm1X8t9VmJgnA5Pbu3UgdFlUfaXpINxv0UvorS9U07VdOt9S024S6sbpBJb3EZqrqe4/&#xA;iO2KEg88/mb5P8j/AFL/ABHdPbfpD1fqvCKSXl6HDnX01alPVXrirFf+hmvyg/6us3/SJcf80YrT&#xA;v+hmvyg/6us3/SJcf80YrTv+hmvyg/6us3/SJcf80YrTKvI35m+T/PH13/Dl09z+j/S+tc4pIuPr&#xA;8+FPUVa19JumKspxV2KuxV2KuxV2KvnT/nGXzJo3lv8AK/zFrOs3K2tha6iWkkbqT6EfFEXqzMdg&#xA;B1xSUNpel+Z/z78zrrGsLLpn5daZKRZWQJVrhlNCAR9p2/3ZJ0UfCu9Tir6M0/T7HTrGCwsIEtrO&#xA;2QRW9vEAqIiigAAxQiMVdirBPzZ/KbRvzA0b0peNrrdqpOm6kB8SN19OSm7Rseo7dR7qsI/Kb82d&#xA;Z0rWf+Vc/mNytdetWEOnajMfhuF6Ro8h2ZmH93J+30PxfaVe5Yq7FXYq7FXYq7FXYq4kAVOwGKvn&#xA;78x/zH1/8wdfb8uPy4bnA9U1vW0JEYjBpIqyDpEOjMN3Pwrt9pV6t+W/5b6D5D0FNM0xPUuJKPf3&#xA;7gCW4lA+03go/ZXt86kqsrxV2KoDXtB0jX9IudI1e2S70+7ThNC/4EHqrKdwRuDir56tbrzP+QXm&#xA;cWV6ZtV/LfVZiYJwOT27t1IHRZVH2l6SDcb9FKO/5yDvdI13X/yrurWSLUNK1C9mKOKSRSxSTWQI&#xA;IOxBGxB+RxV7D/yrL8tv+pT0b/uH2v8A1TxQ7/lWX5bf9Sno3/cPtf8Aqnirv+VZflt/1Kejf9w+&#xA;1/6p4q8o/wCcaIILfzh+ZlvbxrDBDqEEcUUYCoiLPehVVRsABsAMUvfMUOxV2KuxV2KuxV8Zfkb+&#xA;Veqef3MWoXUkPkzTLr17qBGoZ7p0UcEA6H01HJz9kfZ3OKS+xdP0+x06xgsLCBLaztkEVvbxAKiI&#xA;ooAAMUIjFXYq7FXYqwT82fym0b8wNG9KXja63aqTpupAfEjdfTkpu0bHqO3Ue6rCPym/NnWdK1n/&#xA;AJVz+Y3K1161YQ6dqMx+G4XpGjyHZmYf3cn7fQ/F9pV7lirsVdirsVdiriQBU7AYq+fvzH/MfX/z&#xA;B19vy4/LhucD1TW9bQkRiMGkirIOkQ6Mw3c/Cu32lXq35b/lvoPkPQU0zTE9S4ko9/fuAJbiUD7T&#xA;eCj9le3zqSqyvFXYq7FXYqgNe0HSNf0i50jV7ZLvT7tOE0L/AIEHqrKdwRuDir5J82/lzrvkL8x/&#xA;KekS3j3nlqXVo7jQXdvs87iAXCMn7LikfIjZtj4gKXvv516lrtlb+UY9F1CTTbvUPMVnYNPGW48L&#xA;mOVP3kYKiRQ1G4NsSMUJBrOkeadA/MTy75YsvN2rT6Z5vivFvpbyVJ7iBrGITs9o5RVhMq/BstFq&#xA;SBWlFWQflff6vaebPOXky/1K51a28vTWUmn3t8/q3Po31uZvTkloC/ArsTvirDv+cb/+U3/ND/tp&#xA;xf8AURe4pe8YodirsVdirsVdirwf/nEH/lCNZ/7aZ/6h48Ul7xih2KuxV2KuxV2KsE/Nn8ptG/MD&#xA;RvSl42ut2qk6bqQHxI3X05KbtGx6jt1Huqwj8pvzZ1nStZ/5Vz+Y3K1161YQ6dqMx+G4XpGjyHZm&#xA;Yf3cn7fQ/F9pV7lirsVdiriQBU7AYq+fvzH/ADH1/wDMHX2/Lj8uG5wPVNb1tCRGIwaSKsg6RDoz&#xA;Ddz8K7faVerflv8AlvoPkPQU0zTE9S4ko9/fuAJbiUD7TeCj9le3zqSqyvFXYq7FXYq7FXYq8H/5&#xA;yQ/5Tf8AK/8A7acv/URZYpep+dvJa+aH8vs14bQaFq9rrFBH6nqm15Ui+0nDlz+1v8sUO1zyWuq+&#xA;dfLPmc3hhPlwXwW0EfL1jfQiHeTkOHClfsmvtirtD8lrpXnXzN5nF4Zj5jFiGtDHx9E2MJh2k5Hn&#xA;zrX7Ip74q8s/5xv/AOU3/ND/ALacX/URe4pe8YodirsVdirsVdirwf8A5xB/5QjWf+2mf+oePFJe&#xA;8YodirsVdirsVdirsVYJ+bP5TaN+YGjelLxtdbtVJ03UgPiRuvpyU3aNj1HbqPdVhH5TfmzrOlaz&#xA;/wAq5/Mbla69asIdO1GY/DcL0jR5DszMP7uT9vofi+0q9yxVxIAqdgMVfP35j/mPr/5g6+35cflw&#xA;3OB6pretoSIxGDSRVkHSIdGYbufhXb7Sr1b8t/y30HyHoKaZpiepcSUe/v3AEtxKB9pvBR+yvb51&#xA;JVZXirsVdirsVdirsVdirx78/fIPnfzPqPlPUPKltFcXGhTXFxIZpI41V2a3eLZyvIVhNcVSr61/&#xA;zlr/AMsel/fb/wDVTFXfWv8AnLX/AJY9L++3/wCqmKu+tf8AOWv/ACx6X99v/wBVMVTX8gvIPnfy&#xA;xqPmzUPNdtFb3GuzW9xGYZI5FZ1a4eXZC3EVmFMVew4q7FXYq7FXYq7FXg//ADiD/wAoRrP/AG0z&#xA;/wBQ8eKS94xQ7FXYq7FXYq7FXYq7FWCfmz+U2jfmBo3pS8bXW7VSdN1ID4kbr6clN2jY9R26j3VY&#xA;P+U/5s6zpWsn8ufzHraa9aEQ6dqM5+G4XoiPIdmZh/dyft9D8X2lUD+Y/wCY+v8A5g6+35cflw3O&#xA;B6pretoSIxGDSRVkHSIdGYbufhXb7Sr1b8t/y30HyHoKaZpiepcSUe/v3AEtxKB9pvBR+yvb51JV&#xA;ZXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirGvIn5e+W/I+nXGn6DHLHbXM31iU&#xA;TSGQ8+ITYn2UYqyXFXYq7FXYq7FXYq7FXYq7FWF/mT+U/lbz/a20erK8F3aOpgv7fis6x8qvFVgw&#xA;KsPEbHce6qK/Lv8ALjy75D0QaZpEZaSQh7y+kA9adx3cjoB+yo2HzqcVZVirsVdirsVdirsVdirs&#xA;VdirsVY7588+aB5J0CXWdZl4ovw21stPVnlpVY41PfxPQDc4q+XV/P783281trShzpyL+kG0DgPQ&#xA;FjQLWvH1OPA8vU/2dKYpp9ReQ/PmgedtAi1nRpeSN8NzbNT1YJaVaORR38D0I3GKGRYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWO+fPPegeSfL8us6x&#xA;LxjX4La2SnqzykVWOMHue56AbnFXi3kfyP5i/NvzEnn7z8hj8vRn/cHoe4jkjBqNjT91t8TdZD/k&#xA;4pTK1gg/6GuvIPTX0P0QI/SoOHD6tGOPHpSm1MUJb548j+Yvyk8xP5+8goZPL0h/3OaHuY44yanY&#xA;V/db/C3WM/5OKXtPkPz3oHnby/FrOjy8o2+C5tnp6sEoFWjkA7jsehG4xQyLFXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUt8weWtB8xWH6P1yxiv7MSJKIZ&#xA;hUB4zVWHf+o2OxxVMY40jRY41CIgCoiigAGwAAxV4Va/+ta3n/bLH/UPHir3WSNJEaORQ6OCrowq&#xA;CDsQQcVS7y/5a0Hy7Yfo/Q7GKwszI8phhFAXkNWY9/6DYbDFUyxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxVJtU86eTtJuTa6rr2nafdLTlBdXcEMgqAwqsjqejA4qmlpeWl5b&#xA;pcWk8dxbyCsc0TK6MPZlJBxVVxV2KuxV2KoPVNa0bSLcXOq39vp9uTQTXUqQpWlacpCoxVS0jzH5&#xA;e1lWfR9UtNSVPttaTxTgfMxs1MVeS22kaqP+cpLrUzZTjTTpoQXvpP6Bb6ug4+pThWvauKva8Vdi&#xA;qGtNT028muYLS7huJ7N/SvIopEd4ZCK8JFUko1OzYqryyxRRPLK6xxRqWkkYhVVVFSSTsABiqlY3&#xA;9jf2kV5Y3EV3aTryhuYHWSN18VdSVYfLFVfFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq8e8uaNoup/nt+Y41Wxtr2OKDSSguoo5QoazTlT1A1K03xVV/J2K0sfOP5gW+hsq+Sba7t/wBH&#xA;8W/0eO69EterCa8Qqvs3YfDTFU4P5q6xdabc6/oflW51TyvbFz+khcRQzTxQkiSa2tXBaRBxNOTK&#xA;W7DFUTrX5sWEVr5d/wAO2L6/qfmpWk0axSRLYNHFH6krzSyBvTCL1+EmtfDFUB5784ef7T8stS1a&#xA;Dy+dL1eKO4W5U3sLG0jRCRdROEZZt/srRT8sVTH8pde84av5V0yXX9KFrEdOs5LXVDeLdSXpeEFp&#xA;ZIwiNEzCjkFj1xVIfz4ghnvfy9gnjWWGXzTYJLE4DKysxDKynYgjqMVQf5g6PoeifmR5Bm8r2lvY&#xA;eYrrUfRvYbNFiMumFf8ASWmji4hgq/ZZh+rFWU6r+ZOpSeYb7QfKPl+TzHe6UF/SsxuY7K2gd91h&#xA;9WRX5yU3KgbePWiqJ8v/AJoaHqnlzV9YuoJ9Ll8vGVNc065UevbvApdh8Jo4YD4COuKqfkvzz5p8&#xA;xyWl1P5Uk03QNRg+s2GqPeQyuY2UNGZbdFDR+opBWjN74qx7y1r8Hoef9S8o+VIYtbs9ZuLK+Aux&#xA;GbyS3ZuV00jxkRkeoz+nQ7133xVB/k35m84+Zfy7iXzPpA1HRbq0v/X1ue9R5Lus8qNC9qIwyLx5&#xA;R15dF6b4qU48jef/AChpn5M2Hmv9Hr5f0GJJxDpcLm4ZWW6kiCRsVjMjyyLy3HU7nvirV3+bnmDR&#xA;7aDV/M3ky70jy1O8anUhcw3EsAlICPdWqBXiUk7/ABNTod9sVTHzn+acHlvzBoWkR6bLqra/DPJZ&#xA;NauC7SxhfSjRCvEiQv8AbZ1CjfFWtC/MrU5fN8PlTzP5efy/qV9FJcaS4uoryG5SEcpAHjVOLqoJ&#xA;K0PTr0xVneKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvDbTyJ5T83fnn+YUHmLT0v47aHSzbh&#xA;2dChkskDFTGynfiMUo/yTbX8eifmF+V9vKVuNFSeDQnYBZBa6jbu1tUinMox+113GKGOfltp3lW8&#xA;8mW1pf8A5h6zoN/p8ZtdU0R9QtbRbaSMlXRYpoeQj223PzrXFWV3nkT8rLfyr5Z0NfMzWFxp8ct7&#xA;5W11ryGO89OZ/VZ45KRxyRn1B8IX7IHzxVLtM8yeY/NP5Hedl1CUapLp66lYWOrwoEW/t7eP4bhU&#xA;Xbff7PX51xVnf5R6zpOofl15cisbyG5ls9KsYbuOJ1Z4pEt1QrIoNVPJGG/hirFf+cgbC11CTyHY&#xA;Xal7W88zWUFwisyFo5SUcB0KstVPVSCMVDN/LH5ceSfLFxJdaJpUdveSji947SXFwV/l9adpJKe3&#xA;LFWBflfrek+VPM3nny75kvYNP1SbWZ9Xt7i8kWAXNpdhTG6PIVDcePxAHYnFVPyI+h6vr35lecr7&#xA;008kayYLNZZwY7e4htIDDcTb8aoxOze574qoeU78eVPzE0Hyl5U8w/4k8p6tBcyyaeZY7ptMSFec&#xA;ciXEfSJ2PFVY/jTFUx/J6N5ZPzOjQcnfzNqiqviSaAYqVn5A6tpkn5M2ekpdRHVLKHUBd2PMevF/&#xA;pUzVeP7QFJF3p3xUsI0+wv5/+cZvKGoWsT3MOiat+k9QtoxyaS1g1C5Eiha705hvoxSWf/mp+Yfk&#xA;3Vvy1vrLR9Rt9X1DzDB9U0nT7R1muJZZiFH7pSXXhWrcgKEU67YoSy70y50v80Pyd0u7b1Lmw0q+&#xA;tp3J5FpIdO4Ma71+JcVTX8zAP+VwflYe/rat/wBQ8OKvVMVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVQsGk6Vb39zqMFnBFqF6EF5eJGizTCMcUEsgHJ+K7LyO2Kuj0rTI9Ql1KOzgTUZ0WKe9WNB&#xA;O8afZR5AObKOwJxVB6j5Q8p6ndre6lothe3ifZubi1hllFPB3Vm/HFVTUvLPlvVLeO21PSrO+toQ&#xA;BDBc28UyIB0Cq6sB9GKo63tba2gS3t4Uht4xxSGNQiKPAKKAYqg9K8vaBo7TtpOmWmnNdMHujaQR&#xA;wGVhWjSemq8iOR6+OKq19pOlag1s9/ZwXbWcq3Fo08aSGGZPsyxlweDr2Yb4qisVS/VvL2gawI11&#xA;fTLTURCeUQu4I5wh8V9RWofliqKFlZi0+piCP6px9P6vwX0+HTjwpxp7YqhNK8t+XdHaVtJ0u005&#xA;pzWY2kEUBcnu3pqtfpxVXsdJ0rT2uXsLOC0a8la4u2gjSMzTP9qWQoBzdu7HfFVC28t+XbW/udRt&#xA;tKs4NQvFKXl5FBEk0ysQWEkiqGcEgV5HFURp2l6ZpllHYabaQ2VjFy9K0to0iiXmxZuMaBVFWYk7&#xA;dcVQlj5V8sWF7Jf2Oj2VpfS/3t3BbRRyt/rSKoY/fiqKn0nSri/ttRns4JdQsg4s7x40aaESDi4i&#xA;kI5JyXZuJ3xV11pOlXd5a3t1ZwT3liXNjcyxo8sBkADmJ2BZOQADcTvir//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:94B4FB659958DF119F00B27BEB2664A6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:95B4FB659958DF119F00B27BEB2664A6</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:93B4FB659958DF119F00B27BEB2664A6</stRef:instanceID>
            <stRef:documentID>uuid:92B4FB659958DF119F00B27BEB2664A6</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -35.0557 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 35.0557 li
80.3438 35.0557 li
80.3438 0 li
cp
clp
[1 0 0 1 0 0 ] concat
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
.5 .353516 mo
.5 18.3535 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
.5 9.35352 mo
9.5 .353516 li
@
9.5 .353516 mo
27.5 18.3535 li
@
27.5 18.3535 mo
45.5 .353516 li
@
45.5 .353516 mo
54.5 9.35352 li
@
63.5 13.8535 mo
54.5 13.8535 li
54.5 4.85352 li
63.5 4.85352 li
63.5 13.8535 li
cp
@
59 18.3535 mo
59 27.3535 li
@
54.5 22.8535 mo
59 18.3535 li
@
63.5 22.8535 mo
59 18.3535 li
@
%ADOBeginSubsetFont: Myriad-Roman Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Myriad-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 80 /P put
dup 82 /R put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 115 /s put
dup 116 /t put
def
/UniqueID 41987 def
/FontBBox {-46 -250 1126 831} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
11 dict dup begin
/space <1C60D8A8C9B896187A> |-
/P <1C60D8A8C9B7876E544EA3FF0EFBC988D299654149CEDEE7EF8A501DF5A6
B610A76FCC2A68DE43AAAD2367EF1B69766AEDC7F4E366D228E7A255CF249177
0E01672060D5F7FDB3EF44F4677610ACC755DC168685A7FDF5357A797B64586F
BD5027DF4E6218474AFED0> |-
/R <1C60D8A8C9B78181E07BE2104CA89BCDAC44F176AEFCEB473115B926D220
087479E8CFB0DBDA6CC56B59D7BD2208EF25AA29420C3421474F0A3BB413253B
1FCB0C6820E24187E61CB5074112F140C7511C02055F517CDCBAEED3C09F0BB5
2681545CB9F0B98CA5A0B9D60F520AB1BD0A7D3CE0506B372166> |-
/e <1C60D8A8C9B7A66FB4E9209DE48656974FCFF6918874F1136043F0EE8172
F4D638772B3B7F4B5346ABF7A80D482099561C97EACC6F77A33F735C7F526F3A
D9C6597D65CC687E05FF3F3D831F11A36D65E3B2668B0C94721274A694DE1BF9
4BC567A2314B6F8010DDBF586B4DD5CDAA4D122F00> |-
/i <1C60D8A8C9B880558B244CAC850BEB233B555EDA76BC260032590C4877AB
0154B33DC5B1DD4601F9D82FFEA58A369847318C317AA33846ABE07FDE553738
DFE267FA7A85BCC35C3AC59D6B3202B942> |-
/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10C44EFEDC74AE4DA
23DDA2D9D4E78E5DFA35F442401F635CE4EC97BE57329CAA46C6A3C6CC0DEBBD
4CB8E8B931000F3668CFD86F5BA98BC18E8B1DBC445FD65D7EC5C67C2E7AD143
C336B225F9618FB19106222772767E98CA6DE74BDC9E6E1E91AF0A9BC200F979
51D7A45F25C7DC5AD757FFD60E2D9250E771B55218F79A54B61A1C40C396FB> |-
/n <1C60D8A8C9B790A862F793CE5984292368D14C25090F13C59AB6A5160615
285F0ED3CBCE512383C3878835926BFD10B9FCC2427DAD50675BA10B8D3D6CCC
CDC9457848353594E4269162567708094297D619E96D789F6B32D23000A67AC9
3D08E6B7F3B227> |-
/o <1C60D8A8C9B79676B23EC03A282945F6B9BA3FC96B94A352EA6965D03C46
300E822E9400A32C57489C384C0BBF14085A1FE36254CC88C2F26DA80FE4BE81
E3FBC64BBB1CE4A5FCE6AEF371492E9D8504035C> |-
/s <1C60D8A8C9B70FAD2F81CC8BBF4E6A0E18D42D6949A9CEA98F96BB91C9CE
EEE4953B2FD83F05669F83DD630625A425EBBE7CE79373EE324743431698E23D
247D1ABC2EF04C298E5A1B13987DC1A4A8FE49BE4106E5A1C884B4074CFD17B6
1C7D93D85F5BD451BA630B50AF> |-
/t <1C60D8A8C9B821B336899C0A411A14A41B3F7FD72EC5319DCA4F19582C70
AB43B5B25B037D9F70BCCAF41E05C288447E6D0303CAC78896DC7AF6BA8E289C
923C2C4B8CB519AA426EAFE5402D54F959CF9B32FD990316D3D74F7DFBBA78A6
DD8825> |-
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/HDJLNO+Myriad-Roman /Myriad-Roman findfont def
/HDJLNO+Myriad-Roman*1 
[
32{/.notdef}repeat /space 47{/.notdef}repeat /P /.notdef /R 18{/.notdef}repeat /e 
3{/.notdef}repeat /i 3{/.notdef}repeat /m /n /o 3{/.notdef}repeat /s 
/t 139{/.notdef}repeat
] HDJLNO+Myriad-Roman nfnt
HDJLNO+Myriad-Roman*1  [8 0 0 -8 0 0 ]mfnt sfnt
37.6563 33.0557 mov
-0.024292 0 101 0.0241699 0 (Res) awsh
49.1602 33.0557 mov
0.000854492 0 32 -0.000488281 0 (t P) awsh
57.5596 33.0557 mov
-0.000610352 0 115 0.000610352 0 (osi) awsh
66.9922 33.0557 mov
0.000610352 0 105 -0.000488281 0 (tion) awsh
HDJLNO+Myriad-Roman*1  [7 0 0 -7 0 0 ]mfnt sfnt
56.248 11.1479 mov
(m) sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/HDJLNO+Myriad-Roman*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Information Technology) (GRCC)
%%Title: (springmass1.eps)
%%CreationDate: 5/5/2010 3:56 PM
%AI9_DataStream
%Gb"-6H]KJ^OXL"?JGp&A*s;6)\iMXh,al4[$e07KA(_JGqsMZc#"#<$,k\YgRd0>2k^N@I^Bd<uEEJ9#XT8Rk..+0YGY#i,_-er@
%aSaSl:@:=&^3t5&rQ3lFI(j[fDP";m4GVbZf2nUCl<"#Oh4Lk,GBJqUf$Ucl<*bQJGDYV^,I]^OFE[E@j3?-ALTg.7hH[aDIsQ<e
%GQ7[6h9#?OS%mLg?ejIdT^k>FFT:e"m;N#HGB8%6s8;Q1++LqPGP-,amJ(nk2](qcY:f82D_=9@da?!eoCC/Ja*6-Rs7l-HgT14t
%GOq-1gjR(Rr8mn=pK+!UpiA(fh<g]tO)M59,4)JhrpGMiJ'YmJDtqN-=!'U;m=`7`jA,aEcbD^Cq#81e%JN/bq>'\js)dr4]D!E8
%00d+]]D\)RB]YZh;L>/$fDff<p[.)8md06(a5,?KQc,DT=5;rQn"ujJ2<Lpi5MTUOh<&(@IJN92O7u_fe"88cpShrO^]3oUp%@.u
%XiB/Gps[dJdM@I>rV#p!ICst-_f%<2rd8k[j7VMh.i*d@5tLugNSE69dE4:*>k,;HP`E1+H2=o<Ve,%#3f;Z-G!>C#*Mal?=9&9f
%lL1A6^,hO1qt'8/0(Pq_hgbFth>^!?3618sMCI87>iAI#YHRBoEr->Ej1/ui:B#5,p?MMGh,6;F\A#o.:<'a?Dm&WnbPUb350t"R
%]DdUp-)r?kN?mkKbFbs*ZXa'WQTng4rqZ!^@DmZ][Yu$-`uf0jD$e.ZOEO9)5WjB1gmglFc<[1eoV2;:Y[;fI_YE6k]C4Y5I]`sr
%DuS_ph:j-I0'nc!_aHbMm/NRS5N>A#J,!u*X2rc&3W2>0Bpt(]n9'KUk9"@ih-Rf?cHT#9XjfT)3?`CW4hLW2q>"p!k@OD&Y5VpT
%o$[i84VReW*<$BJs)&eT4[%=nkO@(`r9>8NF\[DI;:]>&TNVWr(':LiJ8-64>\L%iL,pSP!WR$V2r?MmgGW$K-iAm;Vl-J:HA\St
%VtfBG'Ql#\nE\%^#i,@;!Ym=?UlccO-jrKG;gq/6rS9JKN^'HH]'qAQJM*d"IKNIB(NhtWrajfK*RYdHiEps7;>:r5$+$FC&;>V%
%G'lP0kQ4`BWF16k+:\@FcG]t0FHdVfiO&)P=G;7$WDG5N#l9.D^h;_NW3hH[LMEIos.V"]8>0:;b6*M1W!4/_UkL\S(c:5ZHinpD
%#P^5&O!=L[C7l1=b$^+:#]g.O^f4HEjAh@bkQF?54fSh[PW(qB&AZ?pC'%Q7emXalqB,!Q5a>1XaN]EZq&)$K?W7\A#E?S:BoIO=
%#6[qGQ#`Ee_ENMoP-3fG6DJSAaG\,q;!91PYnc[7I_pG_/BhVbF^UFt5p+Vk^2u"KaRA\,7U@FA8@FJj0M&dbi;Z30bNtQRe6HX)
%R:j[D1(Qe$FUf*WjQ8n"FQSq;<aM-?!)C[3DI-G>kUO^^=ZVkGo/uPmpmY:FSGue/q5O:Ws1F]ejfeSPc.>sQb$Xrt7epBib'tk^
%pQQ)4b5WJ(b>76'r-*0*hofC&O.)]38Q#:6s.,e*p[VDbS*[nkk:q_d=2n=UlSnVI)Adngf6DJ/0$Yg'm(+_[T3[Q)nOu,RUt&>%
%j,8iUZn<//M&0u0TW4?Y.&<K\gj3r`T26PnO6OLL>^MUelb_[t0K`b$e!(ONICm:-CH?1YN'-$/R*K*:h!$hIp<m2:>0a8GfsJ37
%(P<bC@f)-H3%Z/$_m+T3Zb]uPIHaji0as(Xg<ZWJIg'I0.R*_/Zh[_."E`NDHJBX3.S<JDQ_mbH"+$+2)uZC;D+p$)-;nK?9#ra,
%SU07H,ufuO$:E2HOO,8EZ#giZbkZ"4c_g:<H!b]>@E?WA\Tne;bu!LOkV@E5S!ksrB&Mh)&A>;VUCQO8c/f>PDdH%K%"0RVGW*0m
%U,*C]VNKl8&ddc]:sP>&cDuCpE\MKr#;4&U;.a):"rU:'J@Q9B\J!FQlMRI?6F0Lls!m>LP[t]p7XTdbERjMY:IfLPln&/LSi6">
%k3#31k=SS6PH8=4(EFHoN>]OSWo<4iN>OsI`jq7%E1k41=iZVZkV9KC%;qFNc<4h9kcN$J)Fu)1lGR;;`":u.T]GXH'df+n.rK\'
%R&%jmA^E-A1@+ES7(7nT":6)$c*Ymd\N0UJMnH;O-iD`u23BdjcpH9:+B++mR?[JhoTtCpcCAP>Q3P#pGa;@ZUeI6RD]X*7("$]Q
%X+b/cKZ9W'W'!^U<H>K>*5&6[JX\C*-oKS4V.C<_;,'cc?jh_3\16`3:hO6__Q$'i:;W/_7@+UG-h<8)/aL-\Ys8o@b^%`J0ks.J
%(oih[>(4lVNq7phVQR'uk#GRIibUJGpLe&;C\g$PDg<e[:HY<f6Y]0Q7M/h'&G&"fcK0gd3r$(Rb?U*@H's1PL&OK&$kRlNPnt?=
%#F;d`R>8qP:kNK62=4Mc5;Pl$@6,q(7(['a3&-gc:.9NkC=t]\;/)tA[]7:kCE*K;_Q9+Rj)Is*!md)+Ga$.fRFS>OjKk4=4criW
%j%RBn2*V#^3j?3UU]['P$.7r\=n/#;9d)'>1-S?P2UBZbb/ElQ7Hi(@".OlelBOVP0)AO8<.qN(16-#0$Ds65C0cX-G?HV!E((8"
%(PEMfPs-)D/9R]9F\NNDDbtJ"_*rfY(L*P8hCcrm@J63,Bb6`\To,nq33?$0K6<4;e9Nd)"Zr9pMN(b>9.^"m:E;?+>#N^+WDhY(
%>Oj/6)1,4on!eMp.FeF+riP?S2.]1eKIQ[q``OU.Sgo"t8:>BI]V)RARKG;M6tFg@;([!S4#B+h(mYl%^Ocn^gD#FE8pj*7f91B]
%BL8b51M`QcX(]LhgY`Ida+)3@hHsZcH^7o+moS\]DrD>Q+&D?Ci66Ufm_Z0qn#l,ncbGc!r7fh)+$T]!lEe7>qTNf[s6\k&LTC1<
%DSNs#g25gAp\1$SIKf3#lgp23GIuO&<K1oMhd=(rmeZANh5upUrDq(DY-6a]q#2:bJ,T*3qsU`Vo,mi-op^1"Da*$*GCB-+YCF3r
%s7!q^a7kq0DdS"mk48N>p@\/%hd(<\f2pjXGl?_a_BI>d$E-2gI/iX3+$LN4Y,YjiVf+dtl%dkl[r3qWs7#mMLAuXGGQ%7#onWFf
%[oYMTpOAs`hKM5]n_Ma][s&psYMR$D\!u":ofp3>GBH[q^Yc_Rs5W2[@RopkhgE)O^Uejb'7C1j^V.DZgXY]#QhR[IRmVM(oj>JE
%qsgT>kPa0(Y&<+P^:U6(EHt:VJ+r*rqY'?plQ:TPnV=1"fCp9'TS@Alhd!kr>/XG[Ut7h;Isb$D5JDXGiU;!Z58)H%h;,jFnAG4T
%Q$p8loC9`Kl^NsI3P!aHp@\rT5POm6lKu4LCQaY.GIOCP+`qf$rlrK!`[E/2phq6-n#6a[rc!/]S\W=#ms"B3]KTqQTWX:Yic-iE
%a26_DU]))5]KSN/I@=#XIEp)ET6"N-jh,>WDXDm#[=0JGITP(qS^fb#nAFQV1-k-e953ml2#+@kn>5(8V7!r2Gl?UWO4QV0rpp"F
%AE#77csNU=?`M+qYu^lU5Q:J6]6f^,X8<j!fPdtN^V1DtQV,S8ebW0/?WnhDb`9lIf5Hlo=47"=HG:qhWN.ObpJ,J:P?RE)&FZ^G
%'sZe"!8^<?42pHeC2fN?=M)'2rr!iEKGbl.ksp<sZ,,Uu[J<CCrkQbQ8W-r(p?-K'U9+Cic(EmC]XdldpI>jl*+!)CF+4#K%cPXX
%GMgn)`@et$f@S9NYFDO)-i3H7qhf_H?)E&<No/]AHhHQoI_<gs*/=4tU$rfer<#il5Q8a=V/O)Zr^]9Q_u8E3++JM3h;,-XIa,!=
%?X8-U@<Z`dC?,82G.C;\m\C/SIduj`[IEDNh2f<rU<>dYP>Dg:?[hmU=)U9!qclr]IJr]lLTBT[obHIUpU=Md$C^]2huBqXoA/61
%TpdLmT+'c?q[_-;(B_T*Nr[Of^YI+1055-qC%C9pn(s$"+8g#,*bbEjYd?HClQ_5Q:BkXM`@h<')#`:&gUG[c"i#$EmcI$847']\
%iUTJQUZP!Fo/ZT<?%$p@IoD=YQ_*+6qpkAqO&r158k>*5rqGOQO3_:\:H.1f?,(`9;g;3*f]VF>F`DhT?_PAEl0iikqlEqHI<g0b
%^Z-CE)qI\i?';Y^Zk\pmDHH&H=u60O[u]k!YWKCtC])(5<jgZmTC76RMX]oumS<uF>>B:m.jBrnG:.=^_#1rSI7Eqq3Bq.m`1C;*
%cuVn,7Lq'<85GmkV8q'FkZR,;l'_$[F8U5OcfqLVc;2b^pc53aUF4G&q$H\poQYg)4UXD/5L]FM`^laA%\B3]F7SV&ZP.YFl.Pi'
%oSAbSpfZkOr&B-@IV+$U36(_RkD-Zsobm]Ys./Y#bg2TI`)"TQaNp:sT-'Dl"V:9^^N9'AolG-sc`>Ck-Z_FFBhf%!0);lOOCCgr
%UHQj.JNb<5?#7tZ(>e13^TC_mig.#i45N^<5qq8F]/ZCBkMt[V*W+mieRuq]R!3Df)^89Mc5Eneiaecr5$:Y9M*G-=!^6'!SST[o
%*4\*V`h&f-0TIsJmt`UC(f"dlb$<ST0.4uC1ZBJGOZ5BXIi\%uS.@Fd(m0eJk_'h$7O(GK8RmX??$N/.8VX.JLC?S:$-:+@9+$F9
%N+IfUM5:R-"Y#)260]S@O?uJ_U_;+dOn:t<Ks`\[,!tJg\^::!EIHjHc+@>2F+Sf@%g,.Ydk\JU:[8^l32L>YNeqDH,WFn>"X9,Q
%lt/JcF-u!Xk&!;R:O%Q=Lpi4Q>39C!gu<&J)I@grQe8Sqa3+e2_\l&?Kqn(llk\cSGH2*(]&YbnlqUZ3cA4CqIe'gP]^t!`50ssk
%ns_l;,lAp'B09NRenL\[?!aMY\uoJ$/+%<-@sUm`eBV`>JP/q/_\*s#$#9ei#*Q0oKk$'jTF"53k+$]W`L.`9/eYt0`ZUDk8CA97
%,=r6gJ2<e/i;5?=U^/cp=To]f%AAMY6a.d?<At\3#l"_PY;6scEurM]KcT._JTn:],GBnF6gu8q&H9U."33M-:3`AQ1cU79cr@ek
%^i[AF^m+=r$V^t%$PMSa2)Yd%ncZcC_'D$R)3Ti.WIi6Dl%05:;[/EidfpKK=CT"G3R2jNS[879,aqjJ31``'R0"lOR8+^%RM2/i
%B<7CiE_4MM4LoQ[3EBiL`<*)%R:\M-FK1n:_Na;^'98t1:H6Z-=!h39mHTQ&m&<Jg:+)Z/4IpS>\uCAHb&YKPat^(GO]N.@lc768
%#1e`3?7@d=,6G%XNn8r@<s#H)-`m+W0ds?9pT3Cff'MS$a\Q#c-e?j!lXo?iB\dahdj^:.0b%E_@14ugSq_H_TdDUQMK@e>.?3UI
%#tH1J#p_F#6td``RY]C5iqOs^r%X%8,#JaoQCc$:+b?2?)s9%-V^*;',bp#;M0gAmpG<<pRM&P0*tsY6$-D-qZQ[aR>A:Z/RWrnD
%LpQ8$^8E5ha!C&/VJDi=lY-DR1m&)7ir;#1_'qt91!PPCdlu.NpS8'1;@!qqd5ae@.7rk\c'q+B3KT!bUeV\'.hdp&3D%[K8bFg_
%0#E`M:`rd!8L5saRO/s?F-=(4P5SmZK5f]Q;J2TNg-Y(A,)J9,\NH_aED5s\OWk40&3VJ^KbPdH_?H6D/9E]^M(PMq"0#6$:?n,9
%48rlr2'hpKoe/-UF>1)+k[A.6dD_i>73AR"(7hO13U:8A>]oY+l/l/2PCCg2\^o*$TiF<9)O_Lc_HOP$dAj$;8$dq6lSS615@ZAt
%rN+^UFRuKqjfF`<C#kMdZ"RUs_Se_ob[';m4?m9WWHH(Xbcsc^)a@0GOe9G8aq)Q;IDMn0$O[+Z*Yt[Uk*+FtV^s/B/1S]a9*gK0
%_u`.RM[kDqHH_4-1W5(QksDI7*huXL.0p[,C1GYCE((huPsrn).d-j7:SS>D@_7gmmS)st(-IE0`f_!<!!CCXZ\\j*@<n?J36mLO
%:3e:8`dE2D`n'aH#5eW\p-J>B;Q10VeR#@i`C_WQfF7&,c0266/+onL<`Q4N=dMih;7*E>H!NPk<H@+W1\(manp9S'E%p>dQ4I$0
%B=nkLA-KX93ZV?4M]sLSOi;NQKfnrL?a*]tB+*X^Q1G;d#01O),Z`BV<HV\"_XeucJAd`>$P><0(LGPB(--$.j@noi[T$#SAiXJb
%N^s,-p98O*JeQerOiQ5:Wb:RfH1.0DPHCi4Sq3Q]Y&6:XX6"<(dr*p#i\Ug<5Uu@a&,gtJ*o.t1?%-hKd6uH/Q`/!%c.YB_-hiaQ
%p$44]7l5R]`qqupQ1R'e;Ec.UaeoL1iQp;Bn6%T!HjrS&KDa#;83^9LHa2Jk,>o;+2hrV"inSYH:`\dFkHF=iiX8<oI4fC2Im]]h
%Zf2/8SbrT%ql`4h?!ZnoJ%B5N$o[ic#q+2GHi*iK_#DLY1CL:O?b?E$?2"LAr<o+l0_H*KpEse0T;tOj>5fKg$uZofmt4-s&FW-P
%qqs&4j7T':eTsB9c_G_IMSCD*k"IoYm,uGr%e4Pck)1Kl4<,a6h;GCN[TVV=LqKuRmWg*6[-mIgQ.\YRp0$rYOB>t=3"<(c]M*b@
%B/r-[DNCL?K1p#<./08R,F:o99L!2_POt9Dj&;eYVuFH<jo:1kZB9aRZ5EZ>Ji%)Ql>)NN2tStF7g,hLCoUr!Bsp#5JbbZ.-uP:r
%2#^M/JRUe`8&(.J7.\H#m7+kQFt(h/OC)%<7*Jd!G(X/.l*XuPa=h)PXZ3+Y=^H_fV4HL7ITH8U$&i!:DY1!:Rll[?mZ@o+ResLh
%2u9rAr7(?9?pj34\$q\_=)W<?kG$ep?qlW<WH2F7<4nEClIl3`230C$osi]hne:DQXhpAGh?;rr\&9:t:OXpF%!L?eE3o,+fr)+E
%No"Ep`l^CBaN?L4G3G;nZ?i7kfRn.Zb$!4Mq`A,4`eSAfB0,R;$HfsNI:SW!HDjh`DqPAY<AuL2e'Ln(%93+$V?APkUr[5+;pWO,
%aFEfV%m,oPa/+(:hW()<D4XQe;',!W<ZAToSn!+Bnl)8RBDFP(?^Ns5-r#bMGUbp1qoClQibS7QM8(V4P+Ho$hq7sLbat2c*5,el
%)YFA3NAuU1Q_r2:jLE:5b%m,>PuErF)L'9dMalqKs8Akippd+^l_,A,eoH'"fosZJSp`VrLO/$2AX'L8mSf_cIAk2Ep3?YKVtFfU
%V^,8hH8S?-Y?>Ys)CoIEf'6B&;>"bQ[An(Dhc;cs5BEZF<VL+m93U"]?Y_>IXI;+[hs@W4j-/iE4Ys3f/q2ZY?t`/r<[K$0"&t63
%Vi7Um9IZ0Vif>\*f[^R;]Wf?[gNm8Ps(_0*coLU6>a8X?=2"(%:5u/TrRC252D949VsaBXUfmVk9=Qj9a]s;1-oQC9NbA.A+/Yh.
%gPMHSkFRRWh8Z;B"u"R[%r%t3)[aM2@MW1>-#jL,=L3/1/9\;f`j:P1j;8(k0q.WC?g0UiA>1-i.DW,Ii<BO3$HXompGN*!W@S8A
%]Hk&CJj.IqUn>cET4[j\@H`n4>rmDFY4T7mgflM0)";0A*Fgi.JP?>,c*Q-ZIpW(ia<qNeVNt`'aM=_I`-A-E-q$;OVZ!jdJ$N5F
%a(DmNc15\fN1Q6u.HriQ4fDYXb/2&Nr\?0MeicrEB]rRPa/gV4?3!=cKqu``cA&frh/4k\A.WE"e^8_7Or;u]LZAIXaYV/FkF!Nb
%+\Y%Zbi$bHY0>e[oPMiZ13fcg21!RfUUN.+Mn*%2]<.d=WC2id</.PJJ=.EhjD,F<)YIHn$2^?/E'?8DT4Dn]qeT6MB0Cl,R6=dQ
%Dur;Xc9.m)C+W7tJlWtt6kiRBBU4[ep\VsC@sI,=Z-g#ZpebO"(9i_s>]XhOQt#ZX%EuT@!:3FqB8>KQ"D*eb`TH(lL1*01#3K?4
%)YSnoD,/X$<0Oo/CQBboo],PBrn6-i$]fc1cb@I^]5NMR.e87:er6ui1`Ia)<2h..0t*]FP54"'[NcGKj>lk"H!A;L/8OpB5uL9m
%iYGV?E!q'Wdi$CpK@rB:ZCPSD>+"[bNujmLa7+]$nXRYj/>k%kn<b9g\8F;oJMTODc=!98>c&_]2(LHP+&/&9<0E2tZ2S]g;3hKr
%I3+Z1IC%]^M=&hIHa[7i.!G>?1<Z:e3Lf-`cGnt+]9()n?HLoE7l2#sbPBP#cS<H<E\tBTHf98CV=1YbRI+_7jNRPH/ZXBB)Ll@O
%"3pB9rPQ5X=8tXjX+VMMHmenEs-7?gIsCJL)6!gqK[`1KYZ$JDmS?f0H/2,r(*aFS^BF>H"S`i9r4$u8/`)Non:=*Eb2M0(mZV0&
%=.epKDKkj`@;ikIpNu\"j:AA$bEW%BKCGp[5&+u(UuhR(:\+H+l1;Yfl/-]6pP7R3s(0otI>.6Aq@h?8FF$k#jdp['TWEjuPi_1;
%m.\Lg[t;Sc3?Gh$^TtaO5KnSG&BOj?eGGFb*JF>SYDKm+^TtRZ35U*6%B=k@8oDpfc0Gs9KXEC:O=%JjSXY[FljNXX*-*3Sq/1'X
%44mg3/cK0$e%B1`/n;kS9>^pNM58+jN$2":L?Rg'0]OL^J[K::HH7+%9?X8=f'pVu,>=E3E/iipD&B+'%8YR:B\D+6%WXjl7E'Cc
%)TY^17pCp(RgaPdV?S8V8Q_"I:Mj5F\_r]\0ZZ+6/G^hl9qfF3OF88s(HQhV$9Qo;nq=8Nj!02S!js]C6mRL6V7s0'+A5[4f#-@.
%W.n<_XPo%/<)]__eZ_XR)[&R'p2O7?N7)]_(mQDIiJEHA:s'_H%<9NGeWfa2$W\aP.LA$E:?g`u=&F<2V.pTWqc_2na9AJVSgm4I
%fe].23heM,JU5e>)P\'c_5C4D:U>ir/<@pO:qI0Yd7B=I44"sC1TA3)-t4E(b[h5Y,Gir3P)<S`W)glrVYtHO*3PX=%)TZ"daWfH
%UoD1E4I8PoCq/Ie13a7'"78q.e+;82*"ST&[<cYbgBO*[Ud]'EH9Rf:S5c)OCOn?&N>0sQfoF4sGXjRg=k<Ge1r\OH(h*#gk13AN
%N3pthXO>2gGCn;Ncu*<&4)geEUCmZJ;2]C(bR?>O8-(ke2(_0hT#mO@%PpGn*RW_X@!Hd0H-eg%J2d'8-G8PmjoAho@nVD.&le^Q
%J+KIEd&=(%%HUo_HoIMA2c$TZ%CAX-c$a8EZcND[c15h\W2T3!bUj?)1`IKpXR592V09?q.lN6W_p]D'&?FmaBU00Y)_IcnP=AU?
%o^Fn'>`^a&Nol43@5ZFT_=5[>FkT`baTE3#W7jaW_">"UHIs3Td!43oCQNef:0iUA4HD(bg8q4A^7Ekqj["64baQG&R#u?Y&F]'L
%qDIWu*D4lF-O=dGeo5UI/n9t1#56I@bH&tMShn*//3?:,%K.PZJ%3/+s(V6#hgU`PF7sH00;Q"nZ<J<"RA#'313$u=#QW(mFhZ4"
%de.ud(M`D"*Z`V1=M+?;e1VWH:(r))#DR$c/Arer=K4>fB6)b4jOrDaJ+I(J56KbFPW"tK';k\^PmO1li(XnJ#6et\%5L!'-!\8,
%9g3G43C785G\,7eO6/E=]5,eO,TRK#i.@D"d[H(c#Gjh:cQl\pPp3TqiXrhT=t^lCgqk#FglYfBX[r5bYg$-/*A-lO[!9m3Hm4,a
%<ZAk!Qk\%bUPY5IhIs'r@/6S-XbuThH.U%\J9>ZO"\^oK1f+SCW;XB3#Y%6/-6B]H"^I*;=]e/hZJtOMl[1N:_e*)4!jS/#<ONb;
%1q8I.d9JL:rR")E9#Ro'#[J<.<,]`eT[8e?P'@\9o3@fU;$g"fU.JIgOX/q4878,SXs=forQGppMZDjU3ak0K2]FeZ?3O-A*7A^,
%]6t`R3"oG!ga-EaJdWMPcJs#lPbq,q$oBGYM\ArR,:eJ)GXC:a1SlC]Q56pkcsq0]ek@>PN6`ED$o(+Q9/[as?8@[joFt2sd,Ke>
%qEjt>hS.)@n4K#&(27+!H&u``"k\=r7+5aG3K1=;,iZhPi0[4#+t;$d#7&+Dbftumi-#Gu2_9b:ajZQ0-AKi56ZdYpg7aCD%`q84
%Vr2cU.S`Xqa\4H[XC(n"KfqSa6rV,4dbukt9VP,6i6%UQNjtN7&lBU2.\Su;$4O0Y2//Ybd:IhIeQaGagPOMZ=mM6]_W/Qj@+d:R
%A/:t/b:o#^J\'?*1m9VUBB&WN]>\$IaPHr$PD^<\ANbnY9d<3?gErI$4^j%VJiN?)Ve)9T$^YR^&7Q8.BUq>omWlQUWf]uY:8de:
%JqR:67?n$[L?ODXk'aC$65sTaU,:PbcdY+RG2&+PR0sgETEK:LeVuUVU^<f/juSt#3lH[n/aO;Y@b@^0IugO3CQTIZ,Ug$Gj5j+;
%[Gk%-'4sbgM*suO!6p7Xjs^f#Ve@Q<=:Ap7)[UeodRDAU@L\rsb6$YamK(bfCJ[WrW>5al1_s4u>"\-cB[WuXCof,>KI[7nn7&kL
%mZuM5dP-hjMMp'rHHI_3#qPIP?BHooRh"ujGtgigh%ln<ElR'$2YnDZ,ZD!roT++*ULg+"Ae'QtQhO*Y.jnDI>9FNgf]XumD/"iN
%2!IV<)SOhO1?WA=VR<.D6Imb@L.frt`9_Kr;A%B8@/#<hR^(A+[.9s$Xuap<7FD3)Quo`;h@k+bNAN)7O;_)@7X\(=k=MnZRJ4&u
%b/1GLlo2%=C[-Z)NTM=dcn\su$kjI@9jUiRS7aY?<h*-g&Qp8%k&o45Yl(2**-tM*YX_j(0%#WG'$EF67C?r;^l%TB*\o+l^_88I
%e=@@\*Jh?[5qP*mCeRulf0jZq$R'VOY"\p!bgb&("]a1XN2ARK4&U%9-YI5L7UsS`f:WKh(6K@.KTt#Ob0n?@"(8@X.e5`2Q#&gi
%_A5Hk$RlRFG]<3\E$brd7@'7?4F.Jq6mdu%:Y9V^#,H?<D$QWMq'i,8(,Nc4)UE?KkE]W_$`Q'C/>1C&'3^hJ3#Tl=0l8geenf+f
%4cj,*7Sfb$MMkcE\[P(99tM3OJ_)6XWV&hWQBgEl2KDA*,$4sFEm#2f%7[4U]OEio4!gKL<h(94R5CIoqFUKQRV,ej6'7+?`sWS1
%q21iLbgHf#o=g;.=DhLL3F>n-9*+Na>[_D@?`hC@m=6i,;qQsdC:!I$^1BUUM?[rP_AefVk0<7f\P,VB\'7H>;OCQX0^]6JZaUuV
%U7B5O_cG3E!4=2RDUBCgFsHEnO<tVEdb/Fc_%'.[.TMUn]A$`B9ie_JXem!u"QB[r&.@9Q2M`2hlGhTN@&_%oDlZ:)N4t90Z`qKM
%okVD3R2-^8cT<(JE0L*P>A1lYcjL\.[^EQ$'P&kiDHr*69nkV:2Xt6#F]mA:`[^MQhO&D\<CR<28m9o@O\&Z]++^Z3":m2eHnh:-
%bZ:g(_2Lpbal?'0N9lEq0pEi9),&\\$T@>T^Nm=TaAe_Tdc*QiROhWWNblX;=uf^U\]di)_uYJWP?$ZU%TphQ)L?ub;Niec'JUOb
%2n:sh)<`<unk0A0L1C/6RDh!%<BRcZs5I%MLabHp6l#/;PUXg*.cejLiY>MBdqcXm'*TX<1Y=W4*H$p`&5hSQDJoi**``@1[]iqD
%6VnqkX=BPpln)Z/9mLBV_DpNqiJ)+M19n2nT)&&q(dg*rYucYX1D:@<en&FcZ<1Rk)],%S"H=25_#)P:X/Q*2C4\3-UWIA]hQ:Zu
%\6j/X"P+?Q#;Do9X5ZDB>@E(\.=\iKdT2LDaeYM:GI].UdaS8`am`WCCk%6BO2OW>V;ZMcTVtK@C%H!!`QPN%W/MBeRi)H0fG4$j
%?L\<:XEodQ$0s&]'W2&3L1Wbd`.l/h"MEr:1b3L*ZBj^>n0_oUZlQHnd72k&IS]d6)^?PEo/'TA51sCEe3#:$#E>iI+B[_N._)Q0
%d$E7%@'bJr4t6ajFi)-5Ms6$hMUA4P?&6&sGI!,LN;TCh=OncD_3fr5(sijo)4iY]+_]FPfPWXY2Htd;[:Yt\(inI;^s9(#Bn<q4
%Y_?<!#!=V7bV-(HHs/"L!RD6'pNNa>-jY<iq(TK02/\#09cFgJ-6[)$g.LoW`hmK@:8(TlcZ&^.I)?1B^>J8uLOsOQ`khr!R0VQm
%ZEqN-8lY*l2i;YVV.E5K$+L,C$)TPG;V"@B[A$_D3@sPmXGWr,NJ!F)`E!Tj>#k-olkS1$8>Zp>as2>P(dqSW*;gst'-l,KH&o7c
%.r^/7P4MB4((S5>,[)FW/Muf80g4l/McUn<hjQ.XbS(WNBp/Ebfl"-)*lUaI`F^k(Z-$WZQL/IDf;.D=/raW>@-828@39FYPu,6$
%QX_Hk^;Kqd:0d"!:l'NPS#I"6RHl"r#7/K=Z$@_5-Lmq_G?2Hd=d9J4%)J@UI"=dEOA*H<Bl4&WNHe)!*G?r6HTSG;_Q.FX!PgU<
%Bi[41bRjAs"b`m&ZNf>6U`VRT=*E)4dO)&@4=et,#HoD=GGq^T<3R:X%ZqFu;21Kk6p;B)'^ZFE=<kfO!N?`!<7$K!c+oVk_T$TG
%XqVkG&.r4rOcF5=2Xe6/WHM9dpp"P9&::j"nqGXD&=9>5.Q@uHieenHID\@LaVA%+10bi2LWIW$QY+s#dQjc49[tIrH-#WFPl7t@
%C`BQURm_)&PSS0Y<*:Skr5and+sI8`IZMmPN>et*:)5pHSOFN`DaZ#7m1n3$F0&mOK\a&;lT,0L\><eD>]"E4PBN%p@"j83K1Qq3
%7,l'-lZ%ahciUPh5)2d\ofE,XF;#'hd@I7JcYdL<oP]YIho*_OUF@LqlDY.>-4c_WR;QQ@@ctIORCC<R-QJrH&n8gG<qh87;.:PW
%#KTNS^4)2=\N58FB>OEG2rYHm1B:3*RuBbRA/h'REWB\)W^SA=64!I%=-^0&DVPu@D]4%kp/4ND-"&DmOE='jD9iQI*W8%*]kOgn
%q\`e]hFf;'o'V"I`\qCA*G(!3b*F'4fW0Aa3jT"h1Lq9FH*8K$8>i^S)@l-IIiq`5[Zt./`H4_.BTjut!SaE>ec]h!;g!uJDAlrE
%(d,FKM[PL;Lp-lXVYB@,fJ**E5aXX9@N`:\$%oMfmSS.h>$5C6$SCMlA/jh`LXnS8)625C*UK2)pM;\fZKVj94O<0.5V*8KO=V(a
%Lam)Yg'974A-0YQ@gEf3RiIsB`N-q'cun;-ljpPhGZ?Flb5R%/iA4['8j'=*nK@csG"KVU+tI6YM@Z-"#"0`#2^`PWk:\[*>>1M1
%aG?7C[DpJ!6QL>((8eBq@i&)'W$VWk<:6/c$QD0"X/1hIk3Y$@o3U)e`2D2E/"LPR#Wo:A,#$-CH(W*F6dL\sDjUb18+L8.8p#6]
%Q[gt<e`<Gn)/aY%",b?di+lTM!KkT.:I,UIE1cU#Td%^HARk&)34cO@JRl\Rc/RDW!CU+V7R4?j1l.e]9st=P=hAZ`T5=QhJdP-V
%(iP$o<Xq(!2Xf#F:Tf$r7/8rs$>VNT'6Y'G]5#K[NYF4k!eSH.[S<7P,HhZCU`N.(%1oEKL,%/7'EbM@i7jH.'ejklZ%0Uli)E+\
%'PpXO3=<@%pCn?G@GW3jMPYF7-<Z:NQdn0f(/Fff*%m=!e+B"gn6n'to+WD(2o34?K5)u5.!D8'gj[XW8Q'+Iik7=mV0(_D"Gb<G
%qGRRFjm+D-6u@2b,*Wj]k8mo_A.S'f*=:LA_-Bh\Hc<h\'[)dnk;CW/N<B[EBu#?'<\.QYeO;g8@O;p>i"aMI$FDSPrWRbS,l%r4
%H@S@3YStE\;?['l)o41lnhOD$_k%KcQdtrbUT>#dR1I%5/Lo9GUfn6W#DinuJGH/O+.bdD?6I^-Z`'/oqnQ.a+0"8jMn5@]`AOt`
%Alh-3eAZ`'IL&>IZ7(s2O<+uCBTca=&pf5(!50kTi&C14TfDhlFt+Mh(%p3DnT'DX]`j%:a;\^oGET"M$o9NlS--$DSh'@l$PZ9;
%]K)bG*/"QAQ=-3@#SVjh;[?)nY2C_u'UY95(,iqL`e1DX<J)$b,d&f1C.eC)gu::dJA]T3n".UhI[VLgYK)(u],e;R"+7sJXjdD<
%i.a]1q`Ap-O=c&G1uKgV'uDjJ1]cN\Wa2g<0Q\L;LP4M^K,-+="@9ksCGY\D.pP#i4ZKHI@'h.5`YWEZfGf%Ifs4=U7n]OrEKVQ>
%bK3J]cK^,[fXttZa9E$-\r2m\8%%:id*T.mJG9o*U%s$/#hsksimfXn#!q6Jlc&Eok%oI_m5Fd77bJRgT7#'e%idn5d*L6kUaP@+
%].\'=-(:jH6^6XICh+2467g6q$\H"ohFmHD-A;J76p%!+b-P*,HOiobl61WN^qu\!c+1,0Eaf=XbEcNk\To[.GronE!AYk'em$+I
%@BO`j:J]4Y#$tKp^`+8lE+%J^%XEWB<nS0lbcW/bJ8LR1f_m#mf#`YR$5&_XpE5`s*+EdkTK5XKOWr*M)q_2,%nXhW+</,Z(H<fn
%-A:Y-P,W%3>Z-[V=b?f>6&4e2-3T%,`['XCPZ)ZX<Nt=Mb^6bNPHNM.6<J(`P=/`MWg?H3Ftu.V"Qu8ph.Dtk7XM!4_iP[IZVno&
%G.7MiMaU[lNlRHSpB$kK=!jE'">eHkVAkY9,K6g!]6sakpu6Rn_Ab%LX?[&^Z`pbPnXCb8]UE@=,.E(jF("QM?T37%a<\`&G1Q"l
%6eGtuHnDY\EfltG7>)f*AeVLedj^@5't/tPM;_'1Q5?ffomS?+A="("RonOIr0<SVQcKWE@rSQX@KYFmA2[**;Hp^Z1oZ@2X3<+7
%!qO%G+EoQCS]EcYBMC<W@^`&2`4<4e5gQTEZ^SjEfkNt4drgIU0oj+SElDOTKuLl`B`",I/>Vl=MoK=2+Y@VJO@b>1nfkE95R2s;
%:8V>_]HjKMno</7NTC7(bG?JcG/P@E*<B:S)Zo)#VQc96UGQ%t_Oe4nS-rM3#qp<q$=7?Y!a893k^p#1hMg!C^`[pDEeKRhJ:J`)
%Ft>J09RmT(`iPGWjer8uB%'_U#;<HWOBJ"63]FPnk7F%Hm".q2'W]12+E<CJ<,'7W7W?p4>Y\;I0WhQ9NFStdL)h%164K?jk,0M&
%n0IIBY4d,0h&r\Ye?Vdfj=2<HKJhWK,/458p<Zc@;MF);_*0%i_;T^4R[Oc5bp#Y;N]3,<jsc&pp/=c/7RQ`\RsW:DgV)ZHhY85f
%X%>L/5s34PSWST6T74q`h-U(0oV7pAD\>mO#f[#XX>U0'O2B')-Es6b<%Mtb8Z4?#-V8f'Z;B.qP_P'#jt76g9uBY(]]a&_'btN%
%+;]1?7+b:)S`;KJ7bt!2&>cYK-\6r^2W+U[qR#l,%r@ja/\)15YS85@e&FMSbEOSm)t[7=YI9@8?ona5dt^)`;;?fu>VO10^^'8[
%[rj@pYt*k@$Oi1COOqt"5(H@pqqq^TBAo);-MkQ(&FaSFi=E.KDo8(>#;Nu(N>2CGH_'jT+NU/0%tO^`-gYYZ+HrTBF?u"K`g8*A
%FW9^ci>%!kYM%d<l\XQ-)dIWuYb,fV\1AoDR;RdQWs9>_]u@s$g>CqrcN6_JhW2t0(80LFK(@;IGC+"q$fdCM;7Fq!"Z.mg:)@po
%LIRc8mY^p6,Uh8k?.eS88(MR$+iF7bG8kCB+aGbFRb]T#m21Uj]?AF?Vb8Q9lNoYo#als9]sU1GHjsUFAdG2_IB0IjK"RB*&6\tQ
%'#E\VZq"sa&M+Je?t5(E:]XSN,1s6+Q>;Ek-jcDOlE$,.Y/<(eiha8p8#Dg<=;rM^R4JrP7=nh?Sk1^'DSNGJY`V3oX#!?p3A4E;
%,r4#!B9pc3hX=?XQTuhKO5Cd$*F/o+M+?P\:0"DVJ0T95&0_]I(%DI*JO`Dh.Ba,!f'il8/.KKH*aLQV4Q#`X*cIBep3HF4OC+$9
%AJ6-J/3-YM_ckI$15BI0`th_`Q9Fs@&n6;E'NWe<>ahNdJ@20n+t<#PDLB#)rao^LCVYp*p!"h1AE[tb(8i<NC60Rr1c)1uTGo?D
%;a+:#-Q\MS5+h&uE1Nks&h(k^oWHo=ifMmtgBW`?YNlc_/3'BMEgW/]J*_sP9]+Mq)nHLjPlN`Y@Ls)L9QrL=i8k=sI63dN`GGtA
%8LFCB%NWX\,]jc$r"4VAbXI13S7Uod3Dg4\UeusUloZ)N]8BD*ktUA!,Wh2EWN2D`C=%3+aB<`R$Wqh.eP^RHUp/qd,98`)PAVu8
%:QYMa5W7%]Q\>!$*1=#U,s'J*drdJ\:k]8SFiIJ.=E(7A5-/*75Cr:?0BY-9"2j8V_BQc=_/[BiK":@]<k!>Pe]-DilQqifN^0i3
%_$gp8YopjJbZV+mQ=[(5%L]NaD6QDLe=<YsT2gR+W,eM4J7WW*]>doMS`R'6'f_h612&\ZK!9PU7lo'JCIH&MHiupb;-Ic>B+_//
%,DT<5gE%o+Bos.klJ$U(.^2fT/g[YE-Nac=$*-bmQE<PTC/7Y4WmF-ap2c7n+KoLZN2ME;(MF??3(DdS%g5=aU8b^+7sB(.;pBm2
%=I/qoMBbam@&l5JYrVPnUIk(&H@l_3pM'ecM9Kb;=p#h?P&8qcoFd_28K]Ih.YI\BRO=1s#5eO7_lC_,O(-[gYpt^/*c]^H90UYM
%kmQ1D2sOkO;u0L"kS_r@>sOK]FY9g?W%`k*.R($DJO56Oj@MlV)f*&mFiB=/Zlur9AZR-m&a\^-<J/6(PV1#_k2gTcOpX11^tC,n
%>/JYp\:<I([Y&>:AYI.,?:'LuYgE]o/Bj`J4Zl:Y4"Q[ff[4iW<5?'4Zq=N\P10t1C)R=a@H2Tj1=7G'"5>YV8Uutd05'I0nS0f0
%Qm@q:jO9,klgh&*.6=sdeOhh%"0O3&I+:tI7lYKE/qkf,p9ParX;Dde7Np'C?e:KbaK4$+E=-2pFWJFU-(9REeCehIKSEm*;W6Wb
%bC]=hE67$k],bo\[N"?U+4.A'^0(l%kUWW%6:oCfPsdM([iFFcTh[,W0&?n,l9<p@NIb`$[ZY1LP&l/(&DSt'm2HXU2bqS[jGC!/
%e/`#PA2<.ET:6/RQFA))%N7uKPU,\\X2l6i$R2em1Y;@ZMnHB[9+<7.llfRmVf+TLS!P\%L`Dmd3&r5O(Lsk@kp\Y]/E"1Xk*e)c
%m%=N%"$SkahCNd73Ctu"<=BPI'*l0hIO1ueJ40k_ijqa:piQeYCDqB;juJ'$!;6FU5.8DF)<<e/C<J<V)QaD133AMFaLN]%#!NY]
%;UJEaJ6;;\+I^)SWUdu9hp?Tj''s^l+B9o6D)UKt#SN<ejL^kK:h`ep0e*FR^tVj!a!EecN\(bOs/p/!gO`'($5Y)0bT9%C(6Ul5
%3juHY6jbJDP<,.YJe!nMSFjba#!Z0eJ\4@aN%@t,_9Qj\^f/0\L;Sc,&1L^.(-#oX]b.Q`9Iu8BMQ?Gj)T'EZ""MCJ1pOjLM9$hl
%'+7nSE&MD[P8)<JT6I7IMk6F@_ueNkhuK%7.^=NW"t.l#M1rqXrD\UWP#d\UL31RY#X:BgE-uZ*C2tp^$;E(WH0AM(oUYHG5mga$
%2gKDU+q`(q!\?^O&fY>EMOpD,UghVPZNtAd7a4XSSFb"7S:-KY=[(KK_=_@TEY<P8MRGONjJEM;]@e0)Rp;;4b>gG6'c]Xe*JlbY
%*?4'q)G\IF0fY+[31l><=Qdh:8%NQf@E(HV%ZuZP*8__K8lM-%LuiJoab#L1qd4<5b8O#&TAA-tbmS%m_>+khiWl_T-j!t'J=N9+
%Hq_*3]u.49)n4W1dC@A/om?hpP!bXMM8uKtI#jdbjMEQ1l\TRG;NKZ7]TU7YkOQbMhBY_JKdn""4D&7[G^YdQD4iPX1?-gNVRo9h
%j+]O1BQc3`04[u>8=W:40%3'D\6CJAg#E5'`#-a?Q16io5c^rlh0X_`O:.-")?KY.!b(Bais".:<Xg6t3&uPK;VO&@^dPUk+/#3_
%@rTF"@jJci\X10'(fk^o)J=)P$W'T#EWXe2XZ)_Bn-L_=:PUR"TYWEfN^\^?a#e;O;AVNhp;[Epc/m3]PJ^\mBa?#?1&E<%D9!%N
%Zl#92hP*]oTb=_,EiDR-o@a3O0n6pf_n4%p5D:5fA+@CQWPJf7<7tOs`Y48XOi*-g363P*\V]J8d<L2Cn/8_aGB!dZLR-,l14R_e
%#Q'(s]L_>Y>XF].a'mp>9kc6(jR_@eYCjR[p]updAR;&tnXR2e0I\AN+W67M@^pIFCh(cl9)W4%<cG7b)2bu9Z"/p4K@C7PDqsM6
%oD<X8MY/FUOtje;<%"_RAR,%aN3f9p;:;-5Xq3[&NDXn]&R6(19fq:m0]\Hm#iTJu)Ecu=YG'#8!4B4iUjM`L7pf?2VdkTaT'Vn5
%&h'TiVDDU3BnmP*ZQB"s3(N.$46-Ka38kN.[#+0/@f-n*@94d?k5c_"WN:e3EH$,iY:S<DRrXaVQ7SjV72(i`emeAHn98>+HEm?Y
%?!69k7>65Y1k\1e"76DqGr"Eg>CI^u=95,Ko]Am\*gohYFng\3>/b/YBQ?q62&%ENP-[MB,jjRp7cNcN8^gc_K$O[s9>&Y`<0=ml
%V3nUJ$]qT1baGu_rCj.oP3[DA7J<g[.U.fG)p`^Ff]LJNq+NnKr2Fr4,o`a,nIU*NK6:?D]46G*_t_+SMW!;G"\\Kn^Bdt*Yl\gA
%/p>nZEtWPc0)uB6Jpa%8kae:/">"5LF,,B7Y2Z7IIUJA;3g7e>0Z[p,N:]jLFS0h.BofpE--0pLd3n,e$g8BjDmJ\,[(m@f#E'"&
%YM"s*Za44C<b95BE&5jA+5M"k$q7%f?0$YB&9hP?ef$l'C^[0+Q8;hj8JZl=`L3rd_6X.-dl`[S4bm,p3CBA+-#tUU0Ds$!'Z&5_
%=uhuI-sZ-T/07X(ZDtr8QaU#P8ql@1#0mG1MluqVR-)J5DmG<PO9j;<G;)%B5!IE$VO$OMs58jVkc"ApO.[;F7q?d4=hHL[U.>N@
%?FKmML)/2LEpAPs_M6+%E8GaCY[/Fm@BFV\js-ZHeA_i+*mtYk'kbNq84U`W9j,Ma%uIL7dY]Rq#\Da#\>/0df`59]12N,<UPrU.
%J@diZ19qMQFG3hQ('GcaTjeiM%$LCh#dRuocsENcP(=01On5*tO!pLRJVRA4a^C.L_FKoNOG["\e/U(WnDu<D_d$;&:&CRRZ$3\,
%6.2"B"<:Y;lA,[Y5'K"gB;CXrO*aXsJEg<I.$8H#E6&8]kOap)QcM6G1EVt!iK@jGb-sNLh2#96)6LjfB$<8rb2KK)<Q[I1#Dbq#
%HZS/Z=Oaj?q4JkG3+L(MkL0,VWa8)F"A$@LY#INN-`;K'YqLeW/6jUr6)Qer9lRK0l.&Ao1'*pc`P=+*E)4=N_Yq>6]^D<1.99Nq
%[T'rU8:`Wf.l`Pq_C3%D6FKbL<1hCG^aX5i-oh',[R=%,$O-:$Q$YQh-jC%(gR$D;*4cB^'^K8X89r4.8jP)QZastFi545h$lX+n
%XSE0G^R5=+Q`UpkTsmCl4_]](-Er0.Gk8me.2B;,1r4UQ9<9OqBnE"208CEC7Pe&T5N!Ul'AQYcp5W(o[u<g;QX^`7=b<t"hBL@?
%'*FhpgRl:q==)c/Cgr\Un]tGNl"YI;(T^EFo:Z]%8E9?3D%Q:bY&9HeH\q8gEbj*$Z9L@!L=@m-ip,qG04>i$cK4P)%UJYAeZ+]u
%U[2Ku:#IKb>aU/_=c(pJ:;3d4*oXUg^HWrCiEasX*o\K7"kODgE@'MSDCu&%]OUV=<3^IZ7Ols_\SD,-9Cg[WaV@b,M:Qh&Po\&%
%7WS7I`r=C9H-YU676\!r.mF-VM,:Z,55:eaQ4n2\.g2#d^q0?!Y;KaDL]oH/I%(:k!BO:A9$C@47([+G.?9q1`RcbYZ3)aG?IGuV
%dg&E!ZmAVWX+VV02]=QsqCtRC!]>o,#W_OmS_Boi=?hlQ$2E#IFIVa_J/#r-$FEbq+;9:O2pY;`5!aCfXc\]t6TX=P1>DuIqh.tp
%.VgJ?8F!5qAJe7b2<G95-<HKP<]_]e1G\#aJjB?N>9g6"SF):Gm-HXU``fipT+gg2c7$V1f%QFmK/?"0NulWUUo#Rn''6/NTEWI=
%Kch25bHW_T`5S8B%u4A/i4rEWj:7-FS-;R]%f)q^S<%/WP%f\eY3a42DAV>([]<17DfY"ecVD[FT<hkdR5hb:!H1PV86<Thb1BDH
%HtQP53['np^<4sB(-^kRn4>'n:mN,W_^e`H>C8@bk7(._eSkOaOLtg%$+uP/gDMQ0/--4]'#%BQ4da'>gVg4$ZOWC/q'M2ff#!f?
%ZpR4`#<^WB'6(6bd@8RSjBEe2c^@Q3G7@r,+4f/)<Y$_k,HRn5E)R`(KE[#XFgI'p*T)ki3$bK"3<ILh=,J<lo=Y:C=0Z_Y(bHh=
%+<ajgY2%sFid=M3I'][9!Qb=dajpj*M!N<`duji13@<p0?8/"FLoFk"Pdsf^TQ^,N+.pri47mM=.UPa\C>!c*Hj=&q*,Oq6C)NGN
%gr!%WR7b6A`l=?dpm^O=4k^Co)Xq(l*X^t/(TlZ%g5&[uYjSgNJG-9J31%$BfP78AZIWF^lcn<6=sG<'E\SABXb$/c9lm:kr8t4`
%l#A?A%-Yg8FsaK>Ls5slT!!iJ"p\LKLa'n%Pl,n0CTOkMf_#E=JSdi\,@&e;fY<[jmp**oeB;\^ljeZn^]K[6%e>=OaS[N-A'P9+
%o/asp8&bSq[b+Y6WskXtmLJM14%Nf@MiBROTf89R6-ahAj@!hPiQ=DTR*ASi3<C9`M.Z3"hT(u1]B[TIA-]<'noDF8Pi2s_>`4.*
%ZF[)iUV+t)QE/>4*_fVK<hVonVIP:2V%3.i4JX9$5%Ynt,#S#IaQ`N?58,;tP0H-_57_o[VOUQCX&mACJAlF#DRk-&+:=IG\.e[O
%.Gk,*@EqGkW+cKk1#BH:RiF&Y8HO-V2g#6D+p0gG_`h8V#clg5%hChd[j*Z)DI/?BnG2p7?]oQ&CD&G!k%qMqXSbO$`rWZocL%ek
%)m4-p:3L4;U*gqX.YD,7E^\&'eReP9FV]TH*^iB$\hc7WCnsIW8+^md+:Ne80!]'oFd0*'.\QXXD<19!9r`6P>62k"KP4dc>(VrG
%P%\-[<KKer<0Z+5h`)X^3!jt5[f[k3IZiI#@_(sYQ%$mj!P9\<=IP;^-gdRt8%s]rX4_$_[@HN?95qT#$P&6RKY?#9q6C+2@+_0u
%<A9gmD^9%8e\2'=2dA[/ent[I]B;)4DjNQA6@L?k8,oKmm@`j(TOd;3d$bo*n4Qcf-g1SNJ2`?ES2p+)l'?+FM4p4VaD^uIEQ8m[
%<kC'HMrTt/94ipR'4ElqS1O=^A8@GN;+oSr\2a#$`5Sp;70LYSq'@V-WF<d:dcYH#'-'>,cn4qF004[pZ5VkQf2u/@QbQ4`>VI+Y
%P@/%7VBcC$@JQ>=_@aMA;q$WA'npHmKt5?-B3,i*r/SD4bPS;Y6>>JlgjSkl(bikho3\pqj#0MYcV)"'bkgE<A8q3GBfaBXZ5Wcb
%.QhtG[G=r#p1r9j(@6T^$cc=_"1YZM2uUO:%cpDFL_eo(qP?A1$l9Ut5:lL'5PUZIUUd0)(pJ`]h.!t>ZR!hNqVDPP@DUB'qgGNX
%I19bCR?P,pQk*fF/Fpq"-Z@)bA(,!j"<ho8[K;@tM*!?,"$S@NMa92cV'N4TI0A+^o'uNPYd`X-]F.m'meU<DA^o#gg\=7t;OOEt
%UK:b_!]-GB+imD1B_3!&BNb1ZMu*k!a^-\&(H:+_I/GeM]SQ,B=MDdq/'rN]o7]*:=N?V9@Iq=h[?u?"poh2P.;%`eB>jV%ES84@
%ChReT=R:%2GL6.8h?rY;03nrY\LtFjnIT-FaX:=@TBZe`i@fb:9VGJVSCEAl&!p6p49m]_5ET)pLq)AB?E.&736R<[a]FBq>U3QB
%'r.<#MR,9;ds>QJD-S@0Rh.'L46F^q;WU(/aa$-(!#UJs;NqX5NOHgZUP.6dKL.P7(fQ^iM@E]"$oo-P<WXg\a]C-9_[;4MPR<'!
%Q)P@X<%EC08-s`m%(Ef\peYep;AV',#FYC%XYLZ=EXi\3-!tH,?GN@lQK0>N)gff/9W]o(1'C,.V?cg6Ee`U4G\rhW)pbC/LFK4.
%Ek)V(2U,.Mg[5^mZ4j,li)0d0JUB^W4IOZoOXHr&:?os-m3f3!kNqk7[f,!VliCP1)*L1\1Ag?c/@=R*/CEW]89IJK':7ZW8or..
%X.3Bu:5-QMHY-+G'td@Un62\g\2(7/^>*3uh1l^)NIA@-dT"jsq@0FnKnIF)6F&?0.;K(HWUj=XCF1-jWgg_A?AJXOY/$gTVeJ%q
%FS"6Ojng!7j`1p9<9edL/M(aMKu@?-/)>jg<iBCD6Fi9JHgq2?EX1rsSN)XpmS.'N=2u1$/5.Ho3-0>phruY8[O'URQ7@5ee8Vch
%/n7Zi\&t8C/Y'5'P>RGl>MmE.%nA7&<Ir,,=g*=War!c>EVVM'7&M#oqtdoK_!`E)LbG)H>Lu;L&5/Kt('Vn08Sm?RK2YUo.W#tB
%4bZ_9>iiHiBM*AHaO98CYlK7=c,T48(1-1mg`NFE@Q[8Z]j;UZg<'b*qQ(XM.Ck%q^M>>c81UONQSa4=pL15AMJ]K(86$hJeS<4"
%N@fo(EM40JT"iH6Go7F!jL\07$V;:O+oerFedg,36W/"uV7)S1!9q*Xg#\Q&H'GEBk?c4Z%JblO>_n>2ck-"sriXC5&CjCUlbp2m
%9X!PE2YjG<fKkBP,XnV1C-1qf8>;`Rr2)2U;/:k\&4MO!8muehIEF#!qOP5cBH3u`<MdEn#*Lmm6:THcnJrn465"B\@7:9BdaM0o
%75>>0:,^3@r2)+-NAD^rB:11lhs^k,.f[fOhdi45k?M#dn"bN1NO4cZeP>,R6IP>VLs`J"9@q9@J0^R5b;b[0SDN(*'mer5pcMD?
%^4ODgfqdLoH/pDeQ$h2?D]rg>.EmRAXHV:&MDZYJVc7Cm=U1&&bA)Y)Yf:EoXY<O2gk6&IY5'4>P-;RMn"Mn6^of0[SMZG8OV[Ml
%==:A+'O++[N`P^V-[l%ehA;KGlg(gX$@,b)X;61)[Pd@\?]XTC'oZ.5>ple/UlD0(%uYQC4%T%s)EO]mgPI";d[)Ygo;kbm'f)LS
%qr/T\4KI6_*7sYjm)tHd;Vt%J8K160IM[NWZ?21o(6Y>s(rWkHGlUFUFqnBAOt'&3_C._V7gD@%9,8Os,GG$Aj9l2]iM!D([@R(.
%OuC`T(..=4Fc]K18^YpXCY-ZhJ<\s=\r+)m>;`p5.1ZiZ?3!4gQE?],Du6s#NO8:[EE(K^3bmSU4"af[;O;O5:)uGKY]_dUXkMKQ
%Zju$IlY3n&Ua]??QVt_gZ`iB:d1hoO'dp\ZC9I$H[IC8gPWHcc4*!JHf<^pnEZKp-7t(G68>#K(:AKR?=WUT5/0`5,$.s49]5ZiU
%6m9>%;+h%_3@GeG`Vn(cW7KIU`R.^I>P=^B*Rp%><K)9qos@cNB"iS$Xn?p=aQ"',S"nPn'YcRmIP8TipSVJh<gDB6jqa+<P/=;P
%XcqC'WqElqUQq.JP@X`nd;8`p4kD/AIUP3ZGcFC29ngmB:&`l1[8Nje_DcEP[3dQr$Z9$,=^!dXJRbWLQ*p'ih1tTm)GL(HbR!(4
%AI.'Q%eIiJ_jM1(]cnk3eV96V7WT<rGMsH"d\\Ku3LFZSbUo?qL6GK^.XPIf_6N_dgH33F]k"](j8hOQ?c9jU+NNAPXe?cpU0QQV
%=f&@S9k^2&Zg933A6;Go\A#G,-K!]/P(HT2e9;T#U"MNXA[B$+g8bpg_O7:f:K^XG:"`XQP,q?"rMV77GLf*gVH,5TVf]B66!ZOM
%)*P#[mrd41>4Y#pBC4&]9%f9AV_mLh@,e:UJS<NdV^Ft@JTk+2^S_:127-9TAlN&i*b&e+B#M&[f]ssp+Qf$LjE6S<19GVbX]1DU
%:;&qbTQkmQHS,k?]Ip![[Jc[8Lt9pF"mOIcejJ4rLlIn(_*.PR#8$L^G?I<n.&l:ZV1LP,]OL8[jTJEPWX:?!'/J`LeCFDeQ562P
%Zr03$FLC`PQPuSAVUaI.:Mp/0DWo60\2;^eKoC';BMV:PUc%D9UYIK_Z<ih4QF=(c7Q,Bg(K_F"WM@#D=F+rh=BXK^\K!ZlgBDKk
%;U1r*jgn.r_4_VlolGgln4';^lef9Wf8jjd=Z\4s,`U67n)='H?H1-&XaNG"!1\AWAG<B0*mgpK0E8n_Q+R:[`@#N2:F^h8[+T%`
%.lEkshd,&/$i+[(lX]<(D&"<`-PohIE[O"EeM-<7h.<^t,upr2-BQ=T^+ZL$q&P&bUY7%;F"b.5F1'YE'O,h5:.dn19isoZLDLkR
%MH3`ZlR35#j\%#.mkE>,m^eY]e@6qnS9!;Fbr8:7NS<2OlR'!A[b"@Yce<)I:.s&refN]%_%X2_>(q3]rD*N?H#i4"m:iR:Z`5jW
%SGBd6MG#"FD/4+4UK+>5]q/[@d2H2&?@np*Ki;<SP$3oHKYnA%X7\WP!CY\#LRO*i^,00tiJi//U%m].qJ$-\B@Q*ZY4'H>n>oo(
%P'h5&GfLSW0>pp-O>"Of[D""QJ=(Q@PO;6t/&!VMo6]25ZRZ7V[-=0lZJm8']ND$/DJEk99FB&B[Z7YEDU<,KhGD@[$u,%)UTI_8
%eZc/_IpA6Bgc(]Lm6BRC!_Mcmq'tZ4X_k,Ef0p-=gZ5Y7:@XTE[MI.h_o\iJQ+??mhM3?1mR;W(@p5]cqmG$Yqp,;DF]KdQYgtic
%VPW!Q7kHi?B;OT$[#ST+0=L@*>$>e-46l'GU3Y2KP_2C`IHcpTH1Ji3.E@B6p:OU\#3V^@`,\DPlc=5<[%3JZ*7]u0/SsCJ2*=7,
%<9lU1l"ce@=TLA)(+W<rMhJpE3I<_trOm6[82,HiB1pj1Dr>;u>ZR@H\W`kDdl:Pe.U&\7@bleaOe7m:9skeF.V'b+(J_<c.Q^.e
%Qp"Z]$^L\OI]Y-.S\u;,2NkrDos@J!#H;m<)EM%NFe,</,a%;\4bc5lUfSpDKm_Guj>5RNP(ZFnhQpqRhrI9)g)[5Y\kZ-28K*j\
%IV"sji]B]FKd>lH8pr)aO>Q\s[P/mjQ@!"n!S\j5"rquY<K7,5lBf]OhrIi6XZa4XmsFRV/88[L/@'.p\lh*sCBH(3A<lk7fnYjE
%id;Lbe\SE"</bFboCB')[-0&^.b4&A:57mo_H[l*Y+qtMBC2KOLT=$;9+S3465Wm+[B?9M!)LIZ3lC.'!j)iU0C2A.LsNr?`Kb,<
%FJ`ts-/\IV>?KV%$JAgoDW[pP2-5O1+]Kq6]rV<<G3M.;cguS^hHm!\MNOC=aTo?c%a1PQj\=Etf&;cN\lX`uQ*I=@G;aS?Xf3&=
%bHe2F>5!J!%8asf.aEHL4f,R-Dt:b'KU'7(hGl#^"Yf8ESi@B.kGe&u4"\MtQnQH0ePb:%C>i;W/X7StlcAhiHim0lWiC1^D$,%?
%.F:NS_ri?VB#TsgXs+t57"N=FU/n5q;Gk_T2APu`C4TPe/%3N!mVLa43d4C(40+_AqW]N3[(L^jQ;jcL<Mb)VkH\b\7QgdY`b]+T
%q_`.sVc;tCRQGcJc:[nUkL*5miRL,_JsKGAqMomu$L';./g>#OL0k=PAeT$U@G(*;Q#LScrk47V9VSSh;X-;7/L52/Kp#/p45$JH
%dT4PYU/P',44sh"ZBHHPm+6QI>mb.Ym,`*lT7%E[#4*9N#qY;nQV+FH`3k]6OVA!o#gJon%T6uQ0c?N[WU7V7+R/#UNgS,bfs4Ms
%?4baWO<1%Gf9!moqV=%@OMn.sgPK\hBd53oS13i9mNBb3,Xk3Rq5tAqJ0^9t##<UHO:dJGFcsaei$?8l_J:N5>e<b^Ja9TkA43P`
%Xb0T"57AR7'Y7&VK2,><.4oq)UX%[DV)dXHb4^oC'Yk`qCfV\(g75CKL%#`*h,N9Ah+.logtb#J4fCDf?SJL[2>um(<_7DiaG/ia
%A1:JdjBX8@(duZHHsM.HB6dusQ'SS:V1k_)Zqq:N8LLZnjP%-hk`e\V-Z/oUF4qRkqPG]0#i>1+9n'uoatJ*=dF%Eg6u_L/XXj(8
%m+^r.+X:ZkbT3LiKd>mC_MSQ>;4@cOFT*o`*Z=aEAt-P9aMEuUjQ/CLIHSOi0kpl>f=<;R_3IVu05Cqg>?N+V0Mo?K4'6P-b7Mg]
%6JkEQ^s[=4nX6Q$%p8JJQBcJ+!N/jJWuUI6W.jh@>(I%aO8O<g\m!k7gd0D$<pG*j]@'LA_8R=_@AVM?^8%:26(!:3EjceH^`(RQ
%3HXOgfV+^@(7hD)m<-poCVq-\SmFJC_^_>jWsDm4X[9Z0F#<B,E%@03`'ScM.N#e119:fb2e_AraP*<.X%Zg$lY(.o=Z\4[a%Wk8
%[>3?P0T)/r$[kNR!&'P-bo>i7\6^W/iOGBli&$5)A[BK9l$rQ3Y-uqZ"4,[mWRl*ZG3"!p^4ReH=Z,)\j9P0jT.Lr2W@#;.'o[.C
%75dq^qSXYSTEVc$<Wg=@FWF1.4DQ=@HC_<`[.WpWUfKk+Wm,r^o)RWk.V`*Ao!RmEHc:Al*_Jh/nBH)8^MWBK/U=*(PD.=4qRt1%
%#M#8H1#FEVFgg['h&<5H?<+9!XJ`I`p?5:FWmWc)6:nO\?OlNFq)kh<P.sX47_M,lanNLD(7)D76:nPgDGg_?8d[$R=f&9fFT>'(
%55UGN`j;=ll3k[nB\gkVfj!9Kpu^qkXt$iM`"nLodR%pRBI@j+WGs133a*tTSYQ93);fhN'5TqWR^^-[+%"+go*Y;i<Ob1Ks'Ba!
%;gsWi<N5G_JY\:4:eic[-a&*_>"F7*<_?XFB`L_V4#uIYeddnDOOkOKrKUHAnJ#4!N]#DE&me.#$E_b1FgAH;[#l-p?gAt[OQp\R
%Ti3GKSV."hU"3*Q@gQ^HAJ0dHnE@_:3`jLL/;HD@8`-Q7F]$'(2RtC#30\QK=u`L9P>RGlF5OsL%u1JibH&t7l0n02gc+E*Dnim]
%nDW[32A_lgIK/^n(Oa$poj;TT05n#MmW-EerlqLi#),.%+u0>dJ*?nWrg@qN5-+ZY5KWYLUsK'5V17Cuh&gfirKh6mp(baMkt`k,
%4+7&Q3r21Ech_.7:J!bNj)=o9_jYd^!oclP6N`C=Pk!bfah\pT)b3K:q91fN'q"TP?._s7r>+`^l'K:]p5phP;<iU=4IcO"%cuVc
%;Kg<QIcm%[3eZVieZj?B3-J\95KPfuOqZZ^D!'>(>?h';R&7c&gua5Ig(lUc,*_9`PD0G_DD"kpZuLeC&W?\_(N*q8hYa*E4H-V-
%#R<b,k3F:Y%<!\lc1)d+a6Sj8&XRm'J-cJKgrg=]9*NL/PmFA$-QGtM[;adm9EMM,.hZNf<KhrW&QYFJYKbJ'qDE=AIoYWFgW\D0
%1n7XW\P1E!`YI4@E"j")IShL7`nBNgN[ZQi*?Xa7i`B`9GHeE6\B,h@ejra4BqS18d==:p#[8iT^MeC,c'eQbd8'O(3*DW!.4P2D
%L<<5YORb!03k*97On;#$XU%1?4-S[1ka`BAD_DcYgW_AS[tAr$R%i4GY'#Fpj:=Q6URnZbq--]&q18g7!1Y2`*s_)+Q3Oub\X!Hs
%SghHLHPH^5C.Q-H]]-JC%FaucAr_>b][O<W[FB9BG_N35L6h?Eg:^;s'Q8Ft-m$C]:KJ6E1>tbm4]##K;'dD\6fERXWeJ@)B+j4X
%O:[b5KN_k`R;1L3[O>L^]Jc;3[RH>1S6*5sCMGk:U"p)H61O(RL#QO2rH&]?FG/A?DQsqOqDchL,Q#qcXo6@^?!0a\Ha/b)VoJ_[
%A_DI[[eb,]N'!Sjg,@8X]R&/r)gAhddF-#Lg&q4.UN?$b6LcbTI_+YQ*MN2)8q^"5a+6Dlfq0`6p>*,W;F[1R5ts\J6Aoi]D2U<T
%NB:^Cl#+u:2<P]l/lT.B7H+@,-n*sMU/3t2Z_),VLlP=/PQ$oNcLP\B9h+iSL84*^Ci(Li4ki[+6Z%>8,-g10Th`#<`j7[qmBr<u
%]_nJ.nT(&V1UT,I'4=`81F$r3$c23Q?N)MLVof(U$,G,MlJk-XN9j?*#5]HG.k)]<;I>VaCWp8CC"oA0CZE]>F(k>D4kGWo\GBuS
%).0(#YWlp&pr/nN(hZ'=37;?SOc"J#*Ob()8jo,&_P("m7BTQ^Jm(_`EO(aB&o)Vc1%)DcnI3sfSb\7C_g*NB<Ld.#qJ0h+?_KWe
%5AT6Q`LqGmB7C]sVnW1t5#/OoPYVBu19s)BCOEG)X%]>BX,3'*29'8];rp&!Q<e564"kfQ>>%QC5ellhZ0QFufkpOkF[LF^G\0om
%IPL%,`mLEtl)>:]+"(8Lb,9dt)4@"o[5\nN[>Qfka=O=[Y8o[CSC=q/)QKpMbVj5c9LZ]2b71J9RB\)U$d&QeZ^-DS"F>iCo_(^h
%L?cF@gA&d$C>>39o;sCk^2&C0DEP2'EQ%]3[a9aEg;lV@4'!`hRTWsDNkamZi8_F#3.*2bboO/LX1?%U/[>"tD-(fOLJJAeC.REk
%Ch@?brMnfdf2-9&O&_1$!R8q1hmbL"S!RW%(+Fs=h\@mC^:&r!VCF2-c#k[ND:Q)kF_TE-o*;+Hk(7bDoCEY8[c^kgff&;'ZhLpl
%TmdNS)HOn?Kru1k_mO!qCkJQj3QrE_>;(5;r)mVjDJF=DriBG7+(*m0l`=d.4mCO6C!DjMZo$P3X]73G.`?+gIFYHKe?,EI^P53<
%C)bpH>HL&WP>70.-06m^3G,5eG&qQY?)s.ZQ97$OF'iOjW?c933h%%3K'k^+<_9\TiNVR'4[;H;m1<NtOpl5AM7)fT<CuI"R2Ti+
%?A_A'[eb,]<0HXF6:5cZqZW]4Q\K*.HsNM1C'@eiCu8O!Otp$WBkXZ7Gu7/e[OBd3-(4U(%F#(DQ`6cCq&>Tp50U"^/(f('W[-CN
%QoB(aPuR2el<]??1'^6a*@%iBig;`A[H]?h_()F]fo29MW2*UJehl.UfW(`@eJ]?pCLpgOP&7k@L1^BF[48.(lN,8V2Q*ihfBBA?
%PKk+W:VWc-F4m]`)uH_IC0T"#m:Vm2)E,3mg,.>\Jkg%hdt:AoRS\'a8=A_=$oTqql;od=>sg$OpA8#DQg$7Z2d.^h8kZWpTcpn<
%r%^(.VUtP<;J%s]!:/7dC+R?W)LL":28-E">r7kU2(Q1;=LrcK%D;r,6LQ9IK=Oi7R/>-G4^.d's71_WIY0KWN<'StPTEm"GuG&j
%\(Q>__J0ITknebT-'_058_lIZB<X&ZbFogA"j<rQUs]3m3sL'P[)bDp4a6d/mJio/mJi>2dgGuCmJin,qnJ6<p(?QFGQTEe4ENIg
%;M)^-g_YO>H*EDBae*qn9jSKtafW(b?W-DUj1erqrI(p]YIGL>ei-TcH7:T_]!%13ml&=ha1Kag[\Q%UK>)sD,N2qZG]oX8@""4R
%c8nb+6(:YCKU+&[5'bP?-)d90l%h(kkRV@nOXp?F/)Lb;VF&^ZI2lY<_O555'qCaV^NC>#.ng%GU0F!_2@)3dH!Dq#r2.3TEe[ql
%R:9BT,I)#7+@E.6a::bHWEV=Kn1.1Ke]Q,MI:bqme!^E=s&p)4rJo#AQ<.@Z]gsMWpc7@lE.'JK&`[BElk.bM8d786:lR3EK"XXg
%"^Cj4)q?i099!VK0A7HO>Zoj@'7"gc'FaNf`:&2I`$WGbU`-Y,k?b8dFGeY5Ni2HZ2&_?J&m;ola9JmMlML45P\H%\`O_g)@F-ak
%WiT5QJaOl&[a@rE9/GBC@T7>)e>VME:tNG86:%m<`IMSGhWD7(Pp>r];PT+lh6s5lB%s%uQ!;JBe(9H$12$Sel_$^4<=-(nR'faX
%plN<Z['Y+<s%(fPQ"!chF^(EJ%1k+-d*^DRi]Z,p$EpmSL'fJu2*GX5@:A!g75J$\N)F]f+O*:AB_.[P6Tt.!C2O=+`\"S=P(g6:
%#o^]tZEGK1pRjEY)Ki-7a;7S0EGESOYuobl/:;UqB/VRi'l0k5<.#V7eK?Q]Bn6"U?Rh!s3PH?gpOYtRG!JcrREROJW`9r]<W+`g
%W?em*,"XAE#-8f,UhsnqLC/7(RLSeuGu&Y/3iB,0q[dG<c&"#28B]m[9Y,MR>6We)0N=Q0<MM*\R[Z<8"0rA1btr1^F'\mTP*f*]
%$PiKKq+s<pQ.RW#A,V`%)edrQ=SS7hoAikO?))Ms4NO`MCTVkF#\0_)QsO^pdcN-d*M0r>e;\jXMjho(Q@Z_Q`bU4qb+>T#Ra,8N
%@qX'*Pc_&'<>KuP&2aP0#+,mCD$RL';Pgj2V%qQD)Y%j$A`)O(=3oVcB3!RQC8ap`RTEKp6aIugn9To\,N@30mZ8ui<Fd#n>%,[p
%+hNM#omI<pqok%Bc\S&o^GWq<2;qYMk%WO+f,>+IL3*hQ*Y-hH,?EY`f^Y_c^K0;%ol)O"L1`K-SK<6OgJ!l;,N`KYpt12f[%%Op
%U5*'YrK@kuD@"h/j/kqV%TH075O#NjJQpX6g.VT@p"rEUFnbW3HQ0Yf8kmj%p*73+Vu0p)GM+3I[0Gi&'DcR;?Xs=7JXMZK>1=(H
%a*o9iKeu\4<Z%AikXup3=_%X6qg*S=qkhc<Dn%kKm;=$#"[D5Y)u7]IgWaZk&RSsb5X+PbgU2F%)8DQPR,+5e-hH^![8L^@0lX?+
%I8V:CdUV.2-TB#^h=G$@XfTl4L6m/I")HV3B%??c8SsF,OmtZi,RjE;O)1V`oZE-*2oApVc4UYW#>AO/'8TVn-eYkrB]sQ\-GcQ2
%CWYd!#gFoGH7q)0ofTfMHJ2RZo]loE1>d98D?>tT/,!W!UgB$LIh/)dN4i"SJ'H'X0m#98lBHO>]/AH4NOEfK%P^HJE^3JCS,>-%
%BNWsRLQo2@[\oU/d^Ve:2VH/p)d1.@REnZHfLHnXTuCb%_(q%i+tjBSb=3ilW_1LHe"p'Scl9bpV!7."l>U,-kRRB%UO$U&%h82\
%IQV%U4B#h`gY&&cSngY7h0M8%bDr^]a6_j;q_6`I1J9nTnfC8_p[F[.N-B8YJcF^F6G1l7$KT)5\1``SpH@CjKt2Du@8@U#0"r1q
%40Z&^DKN0eKuoGjX!VLV]9@dkCZ>frkK,F%KoUh7ddB'B4V*ckj"Ekb2R`4p1KMe%bQD[gY^qbbDa.@VJF<<9nTcIF[#8dO'p6+h
%^p%bs+LUl%q9aH^d<N1KJ@O!_oR.c9,%3;P@5K1oBLLG!M"H,0?pqk>7)EV*f$T;TK+SD#NCY%K80!U[(l_''NC_si+X=:P7V!Ht
%8/dIY)N@;Fk6jai)iVir)NcipOYdo;m@b-.CHi%rCDpriU"UFMXhNBo@/a^X.EO8?Lnh7uUa4Pf:m1-88VW?k*#>\%,rrj*5UGYa
%>1/HGiipdhe>.Ff:Tbp*)+H)q=LaC`j@]\'N!:Se#%\eaauUH*^<]U%PA[0ErCA:G$f+?PmLMo0%8%TL8f/"0(_'*pk=\e93`;5O
%U_SZ=lUY$)_Ot_?6.n_[P"((e7YB.`3RF)X:g8[:@N6/d6Z'B[#M![*Ub)br<\ocYdR[T>:XGDAUb*P,AuCUqdn!]'n2X<LL68p'
%,K2Vn$mTU,*n6KiUb*O3h.TL;BMeOh?_T.$86\!Ff?p7mUI"/AqugjS7bTVX']ZDON3q^GTZ#6N`6k62d@c0?T_*ZH6sHON[VS4,
%d@d;_T_*Y]K!l(4D&Gj$EEF&Ig2_[>9Wt:d[VSso:k&oh=PmlpBW?mCop\TgfC(>IV:ra%UL">@0S1*qnCAbqFTeo:[D:Ndn?sLQ
%1k_2bnG6I,\[!4$=X/lp`gZ1V-lSagGL!9e36+lUj0T*?:!MjEdi]ApAL!\V/n8hNcp@<3i:Z1tjK&HJLV*#K5K!\BZutf!p-0ME
%Bn5hpK0")lKE9Nc+f+/EL@dS=YdVEHpXS!umCpn=6@&mpb7X2kArTor!tcT>4mdr="P`rmK'c$jrU_F[kWKp^WZ'RiFM)th9-`4f
%n+28t[\63h&arN9gI0Eujnn;ed*NT:fBY]=599LTiR(2@)G'IultI8.,N80*POL8hn>A2d6eBZ2bKrfTVrQTORMuQ_g,:%!7tquQ
%7`%A1Dj/-oPjkR[fV&[]YLe>YIld#r-FK!*N'_04N!c36ppT=A`hYe(a;`(L+l[*m$qm5L*k"P\Vk`*eG8`J[OUOV,LHF8L-E8q'
%4rnbZap.TLD)>pD6fa"a^qG1e#0UN?5FMBokY"[@DS?>SUaCu'%3c1k7iSt%*d!UqJG]\7)aSKH;#VV7E<%JK5_TfK0E;h0!`_.^
%UE+3pX<@g=/=[c7VGW`.B_fKcN69ph\/l+]\C#j&dF\j8h.X_Jp27LiR/,/!$k(m)clR2]]&Bmhd0L0hh/M-R!7`5T)RqaDUet83
%%G\l#a=nOB3#\Q#@2KI/_iD/Z)RqaFUL@RJ%GW0LUbEdu3#\Q#@2KL0!2**+g;@CrZ14[SoH"`*Y*?ZHJW?h*q&qRR"Qr8DqHaDa
%ZA'0NnA5`C(r>Nb*GN]OS^Wsu@tkIRg@nf:IR6Y**2PL2hr*nTPMc-eg=)MJdH4Ah^Y?pb'^>M.W=*e1AiA-MgHocV`McQbm#T0M
%ToFG;/*VaZc.u1s;hNt2ZYZVTq?&)`ZYOh`0DMQFA*ZLeg-o,)oK@?JlZ.YH2MYAJb'T<h#Sa8qb4ei#nZJ&KJR*r,^\V6(F'8[O
%9(7e_7:+c+nu72i=6d#,krC=nh@3W4WfiN\.AhDM=3^+RSOO=A.N+@)hC#cH6AL6gPmk3J1iG5+-6SL:ne2nQV[WsC<]jQ_6I=56
%BRegTEl?Z"%M?Bs+XGJk'YS.Nld@C8dBd.j0\8^+)MfN6g_u^;)VSF"9#!<TkpqlCG&)=h^ACMcU(&Q,F&QKWV,OqhF9`NIFSh_h
%AjE_"a5-V;d_ph_6O*4K%(Rp5qRr0>]isjF:#Uqccr]N&*KJ*)SCNom'a^R%@^4B]@S=>!q;:g@M5bVIUT]iV`N&PLXSYWdGM(P[
%EF0"P_u/__kj*?3[cAFRcj]IY,dg#9VCL&7O7Ub`.W%=\:01"Ab6"'G[Ski0=Z?2:7,ZJgcr]LO*K@m$*:42j(G&:o`8/psMC9-$
%'dWt-\1RNBg:ik]QW[o99uGSsQGIrb!;fB8#`n,q6*+(__rJ<['l3IYIRj%k>K_f0IIq.JBQI0DqRnV3[*W2iBpqNr8RE]H1tmL5
%c4-#P;NGQgcbAL>l*&"eCQD8$pZU[7P=D2RLi+`1!CCjPRia?WqFY5G8-`)LGQ#E#@O#d)aOJlZU?[i+Z]f9fFjWaL(?uHg/Yc.J
%>%u?$CD^A%7KXU*X.`#,UZ1'1g;C3@jlOM-5Tj(]/c/V*%Q\8-`!Z+GWtcjU#0^d3R&,pVD7n'V.qS>66(r3IoI(4Fs!$c@,b!k8
%[\[KWe%Koaf2f(HVAAHa2tlmPQssqEmjf8n,('L)UT]dhQcE]'?`1rO-g/JBbs4677B9&@8mnCs+K?6`[92&3NK1Uh/coP$R&5HR
%(g6&lp-r+P!Bhk.D1rJ5&`6r+d(FVBl/es#B?V@=L.YMDC<TXV[Pc9ta@mLU(O`.6a;YUh>@A&_d6r8B"[ddm`V'@ie1MXUQM$a7
%$FO=WNp7tihO$?-BLW6Lh#g-f?DS'-44+5CJ^dcddHtX/S?WF0;1(#QN1.#VI^A<@]1:fgH.5pD:3_b%*\[ot8n%s<(K1^8rG`@i
%d29O;8/fXMhKQ9hSOdP,&S0c@eB"W^X7e395RJg<WWqk!L7'PpqM+-*?V,+-7jgZ2Bb/[QS<k0e,8#?qn"N=bZ'9A"eIYV46Pf?[
%ZkF1gn^aYBPT`4O(]$`e]#2@/Ok'(dSJk.i6$7ZYje=Y9[=5Fb<6fDV*T5J@_7Zs^(/1%5Tgc:h.@Wbec&9;2O)7\@MbU+C7TCDW
%fr9E8f6uDQ)&MZsO1q&P$=qAPY#;J3-!:XH##86r2UNV:'7H\ee^5MPaH$+M-)qcl`f`+GCUTFCF\l;BTsh/$]dV'Y[SC2/G3hCP
%I!qhSHq3e,nT?\;nrM!LMl[p7m$ZR-*Qr+&ngKm!2:>P]goBqY27Kb7bI2RK[1M%63tr/(Q`iI[(LIr;R+`iVE7;3_q]Du*I3h7\
%16qPBe@nglh`NkpIAI_46HP-#i[=4MpFnJ9:_6POVnEW6G@*orWgn(BMX%4kI^B=bX0:"qC,ES.!tI>9Qtq(aFe>>(3mHfKC;,G6
%^6W2-LN.Zhe5rY;Y7D+E?`Cro881%t2ej)VKgk=j%IbJ)qJ,YB':1[@K)Yo0nTPGj9hb1*W=#73W71jR/$@Ik6H"Z.$Qe<XUW>W`
%?LY&[s5VQ"F2[DUF]NW'@oapcf$AO)Gr4$+8*s[A'`P84WJ:D8gk;#L)BU'1K@ocDM@X8'4?X@,VEk!o0"SrtiFjJI&#gZ;_>UM[
%XTnd!`.:\kXZe@0LG7r^jG%[Pr^gPu)+1kdnP;8?*=ZMU08e`&a>MVOIVkJ=i+Vd2`3::!Uk<pa0RdNli*#$rk@oUA.<t_&&&Vhu
%]j]u[ij^Z4o$n+UK>PI`lBau:Si;Z7Z0>[Ja!S[L0HYbX;!a+Q0$hs]ULAUK9_JWB\n6e80K;2er!?fDB<@3?@aH?^nWEY:j@o=d
%"+;imUV(ETds*3H'_Zm9UTIZBg[N9WJt/GI[!:F_q(+uuMW@.%`7%T!T.)Vk'%bPt]>'(j0+-(>aR**5J.2i=M+,-@W:2o"iE89h
%'ZGj/KVsP&k6mcmaM%<*35$^up&a,dZ\11Q]I43`nj(;?9R&Z43F9au'\A,$J?:6pk)X_q?erK/rUB7KqqqB2Qh/V/qNk9UrUEDW
%/]hoYpE/;m@"$]_0eUISZ/<3_G/pdMRs+i(pK*u8`/"1Cf_?k^*!H.UJnm>R]hM/l7r(eG;!tf,ie-3rX3/3@b/6OtUQb8KT81Ri
%IVs_fQh8Ud]l&5+GdNcQP3M^"#.r)LX!aZn\rV*t9ZUmFH/b=;;8-il2(59bmGjK?@rf-,qkQ*e*&28-cL%FjAXffWOMQ34T*3`R
%\_KQ>r2Mp(7r\pILH)mt<t<uJ$ak7M!]=ViH$t)?iU#Bi&+Aq(0CODEI?(U?j/Vkg6hnpop"(9V1;;ZEqW-`4c'sbQJ%GMrM7UIT
%r=@EU^[R:,if9<-G6jD2,>"`W_kY/H;\0!N@b.Rq/m;@ZUfLSMa0HtUTnK8HOL)#3Bjk1n/kjcloT7Y2=4tt4k<_+A[g`d24-0;:
%$7[`Y?&_Lk_OU7i@-E[,]OeH5!Qp*pQngVu*0`iu+n!"l%T_SP(/A&cU%"Zs#_DVLQII0u^ln7Jl):dLCmj='SQ.;O1:hb"@j#Jd
%][7ecnhf+"7mACAMaI&WVV\jd/#R758JqJWhVN,"[Ulu^HS<`1lkb:[YRc#o4BASa#FfFD$ka2mQsr_ZNHlSf,ms[cHUP6l1<1AU
%XWt'm#fJd/qok0cHY-en>-qE/<srlkVSS>a%)l'W(:oRimf.GJrdS2:SuF1\eYb2^\DMKp#;J/ErPtq<j'(ZH("qh3M`ce/Y<F90
%0E%'ji5Df#],(!\AFcZZjE[kfO-Y]BZ2%K>7DdX(%Uh.P"J;taIqNUT9KmNScee]/Z7?\0p//OV*+g-_fVNr8o<</H8,fSrW;=Un
%[5m_SGZI<JoB%&1@I^DN**2SuX_&_N48=m4O=#]>"42u^(Zsmu_P_^giJ<8]gM!IC$.m:UNJnI<",'"nC;%(JkS5<f]=Mri/PL@?
%?7P&689cj>KZ;n>4->Wfh;cNgFcS[JTjI,]ZlHqdq\ant0MWPBGA270O=H:`F,R0cqfP-dE:iH7NI`2IZR`!5'>E0V_bmrM?aeFu
%oS1W!bg[3Mda;1<rD1c&L-"3R:?<^JZuq?1=DSNI>s/$%GAZh9G^TJI69*SA4b25bZa[*E'0J$O,b*6I38(.(M21Egc698>D$V5m
%DhYFeE7f*RJoR9Z;@'PO2VY`4mI*udmttF>)PKDF53)(@I@g1McNXm<=I@Z\:Mk"UBhpnsdgn(lJ0FU0[ZlY^7i`H)q<n3jDjUC:
%^die_D8R(47$ODACa:QQYJ"=)X\K4Yk4k.,m(6a"a()@E=km>En2\T)cA?\P&o\<,Eht`KcCf8R$QA(]Sf_C/f+`2P9`CQshtY'R
%,NLt:qfW_R`O3DHX+Xh6%2$cg;n,"7Sma>(@Ppl6qdY<IC^04`^9<h!q2s8m\=Xl7&eDHK[*E/J3/7-DC"EX#)=6N;#TLX_&P@HM
%qV3UIbn77oA3)hn>.r>@.V*%4525,h5JmBO7hD+I_Z5`qk]u^W:hYnDpP]p3eheq2V,pDb[uH<X`(Q0:`A9*nQ;W#5s+>h#fM5\&
%P55"$#JjpmUJAQg[=NC6B**?T.nps#Y;Q+EJk]imJ4].KFOpYe(!!4TP<Y>qL2=<k(Oj)p^8TO>?_DUXP\O'M&5G#'YRf>L,OEA]
%*7\T:H(DBE0uB]Q.o0B?g'$QUE-IT1Cua-m#JYpVRmP_IQ+d"5O,5Z"pYjFW6..Z]B,/=Q](b0n2f_LcN%hYNdL<%]c>.W.$)\0u
%T6*a"P3H!6@'ogV#[o<5;RLG'cmmAJhf"!`KUjl)cB2Wag^`/\P3#-k^]A^5LL,3m54U]P0+E!_6b"HP?aDRU[Wg%SVe\9plrhIg
%0SH""^n^fU.skURoGM',aj<T'Qt5CjXVSM#KUo";b+":cOa!qqS?ZHRUC"C;XcPGo*pX7kh+TYan<f/:Em;%`pr0SF.:2<P[Rjb/
%lC!6X>;CYEQ`qkZiS=@=3M)f92gfl%*/"$-eTM]#>RuJL&_=PJq_(+`ge.CR]jepVLDS`PS!2Z\D@Ggs2iG$gR#\k56#,l'A\60j
%aaC@<DLBq4TuD>-ptK5,2M5opqsA1tHk!TiG):pMC^.(ZrH^GVa!,g<3H"]E+sc8jpH1.r<!]J,obZc[bt%[-A`%[HYID]A^%HSs
%pm[9<h2_Hem^D'>_I9/ToZ[?Graf5J\NKTD_FG>?I.D.dijdcuW<8c2IhZiC&FS+sKOFoI"_$/HP)'^)PHmLRS8;ORo4V%#nAj?Y
%TmES)b2UYs^fre88p"QtH+3cgla[:6BS:8\h`nt12AUn;O5\'EfT4jn_Sgh&1p"g>@ZR+:0'jOokO[VX7MtegKMb8;HGh0_W`kF$
%&DPQbkHYqahPH5-/<5'cc`_Qe%dhm&TM,8()W/X5=eHK^j)_/XgF,8GIQZNI0a7l0L#KBXD\-:"fX(JFC\P\a[G2VE=T8-P_&U%j
%Q;,T4f<b%o7e?")-gga*=N-3-NW3,ict)r7s2676re3<&Y8C?f,P5Y\]YsE4Fq+3Eq-l/>$@UALI/[rKLd:SPq]nX%$=1'aW3H4?
%h!?qEBA*lomVC94]jr@=[;/To^ZG[pJGj.O[tR1c-bJ>&mI2Q0`f8K\D_B!H<lUoX@Wstf:5$7(ph:V\jN0+3GU^M<O1`A$G_XK%
%db+nqV`YsLBq"/Zc@>$^.IJgXgeJ`)]NSq6O85.a(plD<o/?e6b.'+lKcgY,fLOS[X!QMG.u(IubF"Z4)WS,/g0BebRXhHL?Y]\/
%)W.6WB?Z?>/HBeW-dBoBH6ICb2pP!\"Z@\D2o4G[lZcfTfjY"#^<#"3d?S?+d[M\&1C.I+.Z@bTf8ZHJ*heEB_\<\qRok:@<-[f`
%MHT'O,Nt;s[nC/04Mnm%\r\h4XV1e4*ZN!&g&!U9AFn><#aK1HTTbS=E_Q_]@tHk%4YjAE/KbuUa7?+fl=F.GVD%eNa%^,aI5:5H
%8!lr)Ya3G1g^4S?KTfX2qe(C6lHc?sm<lZsZgX6sg[SZd8fq0"JAJ[Y$KI5/7uKX##PNU#MF\QGOcP;W\M3CJXj_#OR*C]=L/fKT
%+crthap[0__t?-.6-J.KP"ERgq9NV$(:qch_V@7n)a`9YQGfC!6KTsCiR"hXa!-#Q_S',)H-_j$,J(Tu=Z2kg?M8H2m[:@pn5\M_
%CS<!?I<3DHANTEcag$+%DLB]<c62-`lVX4WLb2YtB_p)?3!&)QjO+U=s4O]MkhB..XupmL=gYCnapI8p1:,HT!4(eCFnu!*0[/GQ
%$cdNd"h)NDjN4?h_Q+)bPUR-V+n`C1^U(F;UUPIQH3Wi5gG+)W\fu'T)V=O&FKjT8P`(!"1=(g?NTT2&liF*K05pC$^Z7HS2=g8:
%rm-)oRYCe)BBOcfs53D=0N^H@&76j18"%E:!VsbPH++5D(/s__HdVN<9$!cc;C('3rl/e[:[ia0mT4MOC[p6M#TkR8_]Wi:PruoG
%1P@.:Rd<"X%#i9;a\jCPT<#@h(b(jr4(3D!HL)QCp'*MjR;('UGt(>EP3p*=+hL'#l,8<[!*_WHYUAC7m^AA2G$1mq>_!]l4BWqD
%F*?TQQZ$9OH8!n=m8`]NeUj/,G?;MOgDlZ;B=[$t'"O?>fn&XuT"u"@YU/"[1[F.+U+mEQ8A/u)`sQab7[P77,3&+uB;)m5I(W;p
%jbW?%(%uIVEt)FS4?71og^n=.,Ks".09I,.@H&Y[/u8I#[p(HDg<Y8kQ8/kkDX$I6KZ[d6Qoj@bnLFkNQ07;%NW,)$0h393VX9e?
%+sR'>ftHm%\$-mY)3>U!]Vj2"O5(uU0CNer[YQb&439Bl#[rCSE,+.\_^4Q/N0lu;1Va/3&HU1C@Z4PZO!)l=K,3b"SXX[K$]aPs
%M*ee+K]'kM%3SlH"-LGgbpbcAQkj&Q+a9=>0Om?iFlS1fN*I$2"pC@H[cg07@a6dHirS_)D4?=-'BLBj05&.),ZNREj?)D.q:%Y(
%G+PXk4i*XkMBH[?;khY/(a7,TNb.(F`i&[[%q;k.7Q1rg8_]q.#o%RE=9npipAI&<Ng%uTj;uDfhSFTMYcHV>]?\7iC.]H:$8hRG
%3g#mZ&)PYdNp69K?c*rDgDBfYL0:a=c/;?bp;A2ZYomq?a(nk3-HfpiR+R(7oud\tj5-@Bha@u;/eYmTaVQc0be(fI!lJfOpelPr
%,N<7"YMpID:Lol8#T_V2=RM4(__l7)hs)4QKk+=UNUU&F[(.8CR<*`Cec9"/ghNA#k66Er0XGfbk>nL_l)4ZClj=[%8MrE'h/-8R
%BumCeKt0g-ZXJ.u^GtiG1eO^4pFjLHQrAuH!=W?#>*JhjLT0Z#.$GZq,<=*qSkF=rnTYn%Wm<?HkAa!+_?`'1q2Y7%gB>e+1S_V"
%L\2e>-fm#tc1*ISXHP11#X9kf`Yf^Dr8"S-ho@lEfdmD\lS9K"AB8b4*@4?e][%fRTmKHMK/4^M4h^$o#]<Ig*-iQkS3daiHkkdJ
%GXfu4C1Tmng(1uN>/ONno6,HMa#&H@0OJ/Aj8mAk8*--m2M)<(!DPB0[N\_20CB@38U2^o'D=HC7ee_D9s<=!NnYmL!!qHc-mG"i
%DZ6<!-:\^2m.i$fS5:^ZI'uWR@90h\`2hp$?I:!Q-0R[D(>D1c:Y'fUR'D)eb/[@g=dEmdd>1*J`d7W*R*m5"WHQt#]YP*f0H'r%
%"o+p0C,rSAQpM/_-st!h!&Q(AQJBGOmYLr]2DAS$!6p>21dW)abNm!*O.Ufs%t;?#,0(Sp_Q<Ze->sc6Ns>nSNdUGDR(baTVU-e@
%^)d$irM+)RG29GLJ+9:J0?F)FJ+j4-_T4osIe.^?>AG78gM!]2Xd(i=>]Vg'Vc"<uK!</,ePErk#Tidk;"#G2_9\OE(;`%=mo-hO
%o0+MNY[?+V^V5qSg+E!E>J72UbnLr_;L\QY\En[E^AYmCM]VbsH^JHsJ.+sbiSp@bF@nZS04=nT!:3mTTJI;M83NprO)[T:*(Opj
%VWTME%?T_]WX)NrMfEgMXe>L,kI!te5]6jUD^SJgar+Ul=CsTD\71+0k/nojZT<b)\D#g[LL;%s,2q]_a"-oZjiCiZ`F5Bu$n^f!
%;<n4#r/hX)k5(QnH6KD!93rek@*'La0Wbd[m?h*-EDS3K'3>,!_MLu0jQ"?t,n2%7F)-AecD<>FjCugQW[AQ0f5$&r*/8*)\)WF>
%.h0<),!kDAC_6]a#`j?kaq7BuKHkSt%D+[Y@NZb9LGe3&m%fR<'7E\@YUR1X&UV#]N'RH`Z]I9=]Bq5$k8`*opM<M/BganJ\gGAm
%k#8!^Ih.ah2F4(PoZ6?=%;do-lDG1W:(ik@>(?_P@ITQ.`Fr^4&#%nSp,GG<S:Jm(`I;Q\lP.2^[^R*3-:NMPd"KoU9b<J-!5Nbo
%8hKtC9eC$k&,=oBcUN-rSf4+]6ei/?R2fmiN,2#<5pnR[N>#,0PngN.qe?010k">3Zb:1RnuV9!>Bhn^KV&4&L"p[YHb+?0%_`6(
%6Dc\%@2T"3\SJ]j="`$S^NjmubO>A>FZf2HQMZ4"11U#$KXRJumkuFR0'J8sR_FBgM#n+Wg2mcn./g`'1dK<T0OQ.r*1"WmS]m*/
%NcYQmc=_f:(6/.&q636E_HFg;[`^.pHL=qarNlM9_&o-Jb]ldBD;GVYkLa)H_f?Ynj!`eT4u0L@[_FL?G%$YlAD2K+NG2kF!Gh_t
%>]ATE'cC9rThYl]bB.jCicS6(#P$QP+@GC93\d`5Os-XDYtuXnqb:eCpBt#6RXJC+r#ML(.J[T<EM^mE/%$V$lAGf(,as4ONM`96
%iDJsLYhf'pZ.U>\pcaIC)Ut])MBuuR"IgC?M(R99iHI+D#_An%H.'0[(=h,$iF2(J:[l]S&H_h"MpHE,>Ur$T_,`1nQ+qa*gNr5V
%)(e,$NpXo,hc<"#BHe7u'#I:[R#ZM5prdi.g^6Lp`fd%+)'pGh_1$01,d$u52$/EMgTD\^bP8GU_NKTH/)9TJkdcIkde.cp1)W/)
%4<]u4N8l(2*]YC174e7=],'s/a@i^V;#Fa6H(S`WCp-c!>AhWXhgnAoUmt<0*PU-\SrYDB,:>/W+(6`pLmBUNlcA6Z#NJbn)qj=n
%a,@%Tj%R)@lK@97*bkM>YhceWTFQ)MUomLH*),PdqJ;:i_kiK@-rB2>(X-G(>5]6jPDts-q>>Y+/Z&0a'3K@]gGQ"s(Z@9-M*P9/
%s3.LX3FEg'?+nu^TpWO=dUe"eq_+1u=08Z^+b^kPiO+iR%geQ1_4ZI&HtJ@WU/8AGr.fFddI4<L5$u0$BIs=GYnV?lhDjM/*ld1h
%+E-RROE?mFCJB2KKX?Lf)1>#c*@7]t>r_^u#jlbPlG`WO<sCX@\@,TH_4;S1NH;ugh@-K(0Y=E(]``5'a&)%X=*!#]S`p/Rs7"5]
%S$f>JZ.<Lmk#G_'dS+&cNdPc_rb];r;j-sG&"#rPYP1D_CXQ/R4O8Hd5:%BTTk(>DL4teN0J_T6/6!:2^K=(Uak$e,q7M[UAIbCt
%rq/Lp5c,Y^,'VLRJksPd9E:]-G\JMKCXB/>]?Ba_;(2BX_2QMBQ>I<UZUZu!\RFo9?OV[`beW@[L#M?m3tk*WA>XsP'dp-+ZLOk>
%",hV4rpFb1C8Q=?M$'6hBOesN=TM^b1uN.Q:2nZGo0]KrC7_QuXi$A?k!.>UR]%"+0Pod'ms,#K*O8so^%]h)CQV?W74n9dpkd</
%5(8.iZ?Uc0-i<5Ic\*Min*9toZprR/,SMY/hNM_I)?BXsI8Q$7b6(ElQ#$jGm.DZ;1Ut5C'tG?;Bgs#bENQ)Do%<]\1ccUJ);j<?
%Yh*GL-]M$Ca64So0G7c$,hhDB-uZRkps,rV134cl$*IBcA$5"kD@Y/L"rq!W/c]Lhr<Ek[9IG(2QM%jP'Nu\LSog2S?s^Oia.\s*
%EN,HW!#Jf,&Y.#lKZ[aXiDd^Tci=I9Bo?_!bR6%A<K2W43`Up5VP";\2$R;V'u5EXGZ_s&IEE>!an$!EF22-sCbGSIqa;\EbISN+
%Cc<N[?u`*h`*#U#Z`.Ql["B?1h]X?t'&e&,6feTQ<shfKF>>X10frH,8RWKJg6r'MdB(uZ`PN)n=llF<Sm,tc7l'WAOHrPQ4?((:
%+H&QF/&#$AU#5H[s,Q\<K\ZQRYg>XN,8Lr>7DJ/%BC(/IKWm;[aBuEqf5Yf4r3`5PihpjY&kPkEq;,&`/Woe9W<8u\/_@nA'5n'g
%U5%6<.8hB;LIZ?]Bu4/;,H$n'4pP6:D5lsp-%OdP!]OWYIY-7t63r!FcXW'ZllPiIqoIqj.h@7YT+3Z-'gIA62%ZDTTY*csaE&b<
%%CI\`9_(1'[f[_JbYi!-Yf0loZ:i8!P7oIOk]WC/Q^A)1:47f*q+Wi9Iro&ra%q.[(/\oMO$*<jPf]iaPrK+?b\IXfW!iQELCeaT
%')Mga^`$c70`pbC+(68u7aUAr*:C#:!&f*rh8du/?O(eFkIU/J:"VL\.M-%rp^p]3a:E]Cd)i)>4[TK64G?B&ZOcm!gpF(^$r`li
%0Lu!$;fW;36h?&ZENUs_72$/C&XiO:#afd)1>cYK15+QBVsr`8SYJ+&1t]Q"44jfcDrF.XU_97;8Jqe$+kqiIg1]q"T-^bZ^PSKA
%4Gh"jU7rp]V7Z;;G?qR#X6/jgA7PO-(a7T,J^96d`qaIeRO.r)3F\_[?;ncT\mehi"E_19OTTe)?F$DEj=PY<j'b9)-sq`-15DV/
%WcGQn5Ydr9';.$I7UndOOs/Nt(WM#Zn:sI]Tm9/DYWmU-M]^P]L_;u`<Kg!7!AI!T,^XM;*qf_%#i51]@?j&h&(`ij#G)IQMq8Qt
%k+K+;*;^([dUM]Aag"l@20S'],+AXEL8@\a=aC)4#=n!17:Qb2R8B!M<Ps'/T>UJhS[J)*>VQaj2sZ<W$Hm*9fC:O,\Aie+-%'#/
%U?[pNOPNQC,BoEQADT96;n-K7ASb4!d,<*i\s]e&lj'aEUQ#O!T8-,D[!\H^N4X>eP,!%AN;\/$HFSR4b'A#H\9pp*=\Y(kPGq^Y
%X;0bp<e*Fe9Q)_5e\(7ekVkB"O"cru#@YgQ*7!OYJP:E\mn_(fE7C0aMlaqmfN"uV,BhUS7idO,1\'dW&.Qc,h1QCt0Ia<q2>dlA
%OG3Y6e;"O7SJ\c0p=9GH"]eJ`Q/.1fNSW\Mb/I`Z<.PDp[`F>Efs&Ncc3J])Y21F-GN)K!$tE:A(c7jhe:%hF#pg:2#`g;QLa(q3
%F0Yr#RqCSHPOWSsX[cs)d6LqGlE:_%WC_dlfcgJ<b;]K9[I9,9eB!8sYQ.c#N+LV[R0+Z3/SGGSV#)?3lt0GQh"C_13Q&VW(5SsB
%,`^O*a91Ya(-!V"S4eRiihnHRP78Mk?`W8p$W8C#qlr>almF@X[f^U,@'qbPYYD%\d\qknZTZV$K1q1f%98.1>R7kBX(ngIR\]`>
%qsV5N(Pt..2r["Ihhl_3jnejRPb`ug&OM5tMF,>O,N%t)#O1g7A,\U]G0@8p_u`[;WE`QG]C9t(A(;F):Go0gHN-*J-5l$d\PTK_
%_k/jGm!,9U&+0tSpAXOnhS[(OiCpG/?4Om%SDqj>?^55@plc_uo@4sAcX'Xm3C]@O;^P"")VB^75DLif5)7b?A!HGj6XSn)14K2;
%.#YkuhnK!>&akDTOK`0F)>7VOa5L`6.AD/`T9=,eZPa9h#+/:CUZm`PiPRi/ipEFI?64R0H26j^T0"hH\qkNWUsG[S59pL)I]GNT
%KQSCf\WM:oTodbc-b3dFN=6aL0lH0989rE:M=E>+CM=&99)`l_9*i5\hM("J>jYs=`+3F+D:k,7n@*>6n?SrucdUQG!=q'DK:pU:
%,YB*b$,T[JX<!/Jo`"@-?>rLHNjkN^q!ZKb^1:iCb1U67g:&&5U*4HT-g+44FA,E->#4nCIqSu4G7bAP,H.^5OAS"95mYg-^X#X3
%h!3;iZOobFD86jqR<;FA2(MH6h\LTI'B8:]@E@ArDjn2%N*1k"m0E'XNNf1(5Gm%tXL!]$@jK6<1SHn-64-2G;ajp&A91j%5=V6M
%'TJueOE6'`"4+uXikmo+LFkk?<=Z@rp2D1sj9uLNP2:?dr(Kb5##G`i!2sO0H,Pns^l\t',C$nEaH,fX,EkX=R6NobrimUgV"S<X
%ZCTDpMb=Qnc2bB8GUHL=fp<Ic-f[fW%@D92.fFcsrO=c@QgLLV<s=U)85;$NP"Z-.7MG2>L93g6Od&IC-SgqmEZ9eln(TE%*I'Q_
%G/+D`#`QV@YBO<Qq,Lu_ECIl[eS'L/a8LW8'RWD$''J0HWkY1+/q0A-!K$G6bFUX/&=JXI'tXD=aPe_J5^c*5DQ_AUh=N=$dW,!"
%2.bpM&]<`=XdYo)L]\1YiI0#"4f,1\bL"uP2KT,[VVndMK8PhO.JW6SAFOXE6.ZX-i2G"a_h9aQn;<TP#-d!<SNJuoC-3_OSo=iq
%?7#l;lg$X&NO7e^bb0^dUjNC?`&%p')P^%`'^RJPRfE?K_`^ru1$iq:^Y`\nj'$^F3j*H;3]22Y<Q63N/&jhM:-inWPthmC!tXk.
%YD%aq5d/Th&k#W=PYT02TdS%KB*:]`f:U,LNr%+a@5#C1`;P-6J0mIgo(t'&9iH"Vpd?MKIq`d/fWW3Uq`8E@#d6%/"X(IKQ;^Ga
%BG_;/La0B"J`qRRO[DE0q$e)>RG@fD^K$#&`k3==LDpYlMhZJVq:BPle5g!;GUOQdG]ZFn3h*^"bl-E&e&VVpl#AaQ%o5*0c[LtO
%c6:i_'5l<L:4X*2ZI(*@8JhSpZItG^KWqsSen+u]ZH'a@1$*@qg]U9gIN!da^3-Xd7=&I_SW&iX1jD-uU%LENL^^Qa3mbT]-4L6'
%[Wb=[BS'VOfK<?rBAFp%]qcjaabPS1\@)4F`]\R8S1?f.m>;pV3E?C#5_i+CIo[o*hB2k*J]\2V"[CTE)W#,[F8S^B?^]6c/@[RY
%(8qki;#j^k]R2\sM^G-c[L1Fu,G[\\>TT>QRI^r.JG@k]cZ)Ur)VLlKZT8MW4:aYX$4m(/ZASN[#20-nNO<Fjf/b*,iq2qK&[QQ<
%+iRZ&"B7UUGd8'N+m-$E-T*q<_!N\2H49k[2O6u6m[53Wd^'F@or4A?pUO+Bp9::CT'fO6)f%q64U]hlfXVCRA)DB2rQ0'p#3JNK
%,_8ib5cG,hQ%W-n1mB,;p96"r.o@dQr"8)"!A`_C69uR0M]ZrXbc2:)2Vgh.=G@Q)_G,7F6MoC@M.gU&?1f43Jq4,Wq:O;!C33VV
%?*"YKA;qdQIsAaN*FL+t:FW[J<J"`lQS`(DBjVZ%Md^947P`P$[k$]NEh*2kr$l3D!PBh$i;1+5WT8j62PM".\69$!.oqJ,b_nfl
%n4OT8/,mU(N^GsZl9cUQU&-jmc`pPOj@gTGQ`@==?&3=mcj5)gI%PQI7!oWPj,7(0>OD2VI6;jJ3KBKCLm0194Y`+M,e1O?1ibNI
%AVun@m"9[]p,)l[km*JZiX4*>3tp8mR(Q9aU0taWDWsMW#:1Lj)Sr,.nU[(l*`ml4U:SiEq!H"%o_6rQ0i.4i@2?(V\9ogN'!MKP
%i\pfpF9d(Eo,9WBj/<A][gO!TDX;6/ER<9rHgNC=]:mLoIF-NK_]ITR1*?=R.Ui+G>Q%O?9*"tK%5u58]q":m04$enGjO%D\1:2$
%p;;Q.(T?uK&.8&14F28J(9h!i"PsVB8#=`XB7QJf:b<cRH_*';'M-Jq$Fi,TD^.#g-%*KM,EQMn&E8jEl-RcL>,([]r"]XW9mG;q
%%J*E+lni!p;HgCHMUY/>(2>WY6:V_t#96mIp-CDW6*?q+)V%4UA8dE6CJ/C!ne-[]N+pLVRlVl4r1""p9i]EuJ?=KdFaV!6CZL,7
%"R`i-:#s:>M!8eH5!2QA'A%EW9ZE&%pW-YN$^"o4+U"ld+?YDkVVhPG!f\na<)%@1`O?-uG%+FM@p^J-4"u+u]Z%O>LHAT\N$D:>
%W]SRM.*Zp?H]!+#EfsL4RP]qcO<D2)oXQD0@g;_9-2Loi'+(#gn*,UDj',U/r&$C8R/%n=nU*0#33f4aW!:s$AAqLBGLRYW<ifBP
%]8`e;!P%gV#d\=Rp5c`n<YHN`PW$BdI(?Lue<J'Xaj!!n8f0e#YJnWCPF4ZPfDq=_mXXV8b:#I(A$?jPEGIXm<Lg73=_9[@Vh_Yc
%UI*%0Rp'=`\:#JO%]ZX)X'+]&#Cl6=gB[gpk-EGFi"]mm(E(e1HuPqkb]"%eV0I6Zp*Rc>Yrka?Ee`"Q9b-tm@_F^dC[p0kF7Pne
%dKj`c`5>Rg7\Y&Qh>bKYX'qR3ljo+A0PXW`dn$?In'D%mWc*8G=DaEmYrYQ^J&GJ:nU_P-do\/8n_1UtJhQuS')A3q7)m*u=I1_o
%"Tn>XZ)\G\Fd@IP%.uqFhKIY*eRc+r?jo65KTZ.,o(Dj]K+W!DbM#rDFOW#H$Gi/mW3XOeN\Nj2;s-T-S$:<]l0L=T<O-Gm9+i[j
%$fG2.K2W%gSN[gu0EY1[?5:LG)q;L0ia@?ZnIS3q)sSN0KB@!A9%R6hfk(7JC)&%2^2%QOiCNVS=G2fFj2Kj'dj73o's%(f6FK_B
%OB9\iK=Gc^pDZtIn8Vo?\&</W>C_;VmT!c0XXm/XWk(@*83&pN2C_<&P0st#?^8qR]V]<3,5Shj,e"eP8sEm/ha3_"_Q)._,uO9q
%a"bbME2g_]DAE.`%^9TOWY`ho$()TrM823aD#*57.dJ_F##O0t>=CO6!7p%uHPHfa0<Z$calN:4>HPoPA.1/\&64bTB&E*6/C0G'
%,sNebMq:N>3X$9M<f"YMGpK:p6B9p*h.hC9UQE*hW%\rNV]oXabZRJd<-^P?Z;k%Xm'ar;LWo*>5Y3lccB$'[^N/XlI6_F'n._CF
%m14sZ$HcLW+rAF>Nh)9D<UoFt<cBT"P*]$Li#T\Shob^tO1@hXM7Kj2],h,pF)*L5aYeOt#?uC8XVW^B`I]ibJ\&$!+uX;Dl1AD:
%QPYR1"L.P3c&CD]M,l(l11J"`%h!IkL9o#S.RcG17fOW*/:_Xq#rFsP)25W'Gk;\G1+upRY\h>4G4DMu4BeT6$_sl+j==-eG1,:<
%@2*dmV\9Z$Eg/giTifE<$N\#Q!PNgGdnKK`+l-CDjF?1PTY@TAHo#KJB8[@uB3jq[fFQ??D<l?s7YYr4J*U;/1\=!/(!Ao%<SiBj
%qCr()on:XtU-<k'eQt6A`Z;=gFjhC6DrjRPFFB%Z'F)e?SmI[$A?YaE.*5Cl$HmV$VaKVFWkHYUH6cj;dX9,RZKP_6!+BukK:^>g
%g5LBM#]`,J@`S/L&K7"-:@e:#Bb"([&7.Et6$[C]V7j=aK]@qA-fB*J`u]=U(sao,:c'Mu7qd#:bEi8@@@IBRHPqB(@([V;[_W5<
%B#PXR7SLP>nZ4%oPW=MoBWVJ=&2(%n=.+?J,=;A`YPnPhJ_[FtCEV#MSn(,oNX^dVqIS7i?#sbgAl]DqKUHh$()c&n)BD*e/j&sI
%b^A?Z6gZ4l&^E`:Le+Td1mY`TYj%g%S%_Z*BI62^<sg.V4_)r1bG+A!3Q@RJ0k_n_GBbA>'i%lIE4)WU:+m14T:o+d-hQdmi?%;]
%'YfoL=ron)5i5$r<c,kuM!8Nj("fA7^qJ^%30-Hh"/Nn0)d6nmXF-+tZ_Nqd_2bSm^0O?6cBBIi$K8t%l^<rYil-EZ=Ej#2]gHA&
%DB<TLg*.RNrKjtP-TFs5[Qfm`7($]fS(A`]N6q8i9&eO>$D05<-<uY'R#=JTJ"2q+6,6C=8(c;q1YHE50)!*PH52E);"bBkjF`s#
%ZqP&M\uCif7b%_6/o0O91T>$1^9e*s-1'Y*b%kjjf_<OVYFtbR>>ae:@FdnSD#;8m1St^>kCB9[PANYWXu'-"(Uf=2p_iS&=>P'5
%omWhQWRlSmD3M%!k$m$+U-?4+GUf>t_t6*YbNAAW`AB6&7QcE+Gs*aAiOE0f&Z,Qd"CgOG;XUYPWF,=T:EIK_eXCNZAR40?i%$u1
%f_3O>5c*;N4!<\'0YJ2(0jC@AaHJgB?=G_P^0f(cEm_(H9'Q2EC)-m<\QJ:fU-Wi&GLMoW]2T5kbaWKV;Hfh5,rX7LB.kb#+md%X
%]7S\t=_p.]eH$c':PEUY6^J:f<nQ@SXGb0oMs]*,f`GqM<TKd!gjpX(6R*#561T?R)cPn%l]$Xb@I-3el<54Ngk_/oq^Eq#LanQ&
%R)TW1$:g+u$.8B\`*-nn`,Z>b3h)_XKWY!:DFk="+q1:[VuT?GGXD`@3j7+M/<0F-aWKs.Jb\B<jo@%"O]94mWG)o`Ad'>Sq>DqE
%5M)pahCH7%lUCKH;dOVFFWsr&/aEdiRHt#A'MbeT=Qtr;KFh\rrGId`79&9rpPm0]SZIDdDlG<BWXi8M:hNu5'%p"\<7;Vab&Gu=
%BVS^_V>(leS]13l>[F3R4r&kk4Laib.d=?>OOZ[L]$A*+CmmW_5oTf*hb+=`0=5@.K@Y3+(YZ[=CraU=!o^RPnJj"X)'gVC>cPf]
%/XdDV^p>j2^D?L_DpaH@MG2Z6'EM;d%qEB88b^Yj]?[CJ.S+l*;\2oL;Ok`7M@GnFfNhC@FX5P>_o^.r($A%T67mXiDOfkG5:ak%
%@;e5WcD%m^99Lcng,qeOD,JQ'h$jfcVab0\CZL0!-&0j$co[M$-i:<n(5DE7`n<Zo<lq=Xpq5`^;g2L(nU^ep*Is>OO-B0o3nXU$
%$kY:W:9edLjkOE4<2G!093*rp:aOnBM&'K4NBlM./@/M#f7S(#$bn!)Rs#_iBK9HJihUY$3doZl!ZbqJEFS1'%c@tMXkf[tM]tRe
%bX\7P(eJb'2To?6j`eIDOQB1Ycq1/@+0H2`pQdPDKXTfsonG32@DL42%$*R,3d)2nC\B$bPCPm_N)7SU_!:d/JoT(i$r!/<"iP#e
%YXnJ.fMNr60R0oL.L;L*40YcjUJG[?U=?a>9oZs:YC7[/8Jc[\$W&(L.E-!kqh(T>U':6[IZi1X1R@2KASk'Lh^X:eS8hl7Qs<3t
%eQNuPTu\!')W"7T"!GJE9lCAKPSGd6>GT+M$DakI8p5')b#:]gE>MMsZL%^"D,L$=$Xkd47IA8@ImISnpdU%1hNreH+q/<==#-qo
%EXI79=/XL=((%'A&?I1`7ofMV^nPO02+b:dR$*7oZ3e=mItV?m0DAUXZRN7.3#4T5S.B#J[b5E*/;UqgV]MVOf/Z,h'fi0*;anOR
%.-LIC_V8nZ_]r8UF=2ZDhMgd+#QgAfI[u/2]dfc!0uGb41o8:=/IE=u&0!bp8qcCB*[`AM#5gQ9V"cr(T$l+)X1T]^PS^cp5h*hp
%"AhQVp!D8R%j@#I<F8?sd)!LE`5Af7ZH/b7(n'!<n+OrU#;?cN(K4#<0/mY21+uCjM__V4[="rt9m2q&)qC*e5/rIl"\[>T+WR%s
%ER3o:=dH/P(>d@*T))nNIoG7;T5dV.:IXsS@b2Jj65F;@@ZW1H.*`.6(Gs!Cn)`5f&*E/m\j!q"GiX^8r`?EX9*D7F"lYjA<3oXp
%8un*gY;T]=g+67[/8LBY?,_t+9*DVf)C]A'R^GRX;^]V"4/e"JU$!ciF'>q_n^/<^?p39L7C>B-6oA9?7(/DF22bJ;F3VS7+-tqo
%e<-=pB!MZm/F2gul":TgG]NQ$du(Ab,\NF[#5(t+galJg83uXq?CCP^-DXdU^Xc6t:%$3LU2dbGf0b3fQ"r-r)n@sJ+\3qc)h89q
%W'\6e-SipiDuNuRR)hHSGf*-1;a#/(Z'h)Z`eZ?2S1dP+_iW/0qCbZ1`<"*>a+l@*W!`73UC)<r;cVD=<s1[8CM7Gk35D+HBS0$b
%#SNKY%h;cXXEh4QD0>WQ2iaTsVK6"'&/+@,;?M1f3PZGS_V"=eZ.k(/UQ\6,;2",^<B2#+M'2)j^96aC6&4]K#E(9V=!HcT\-]sc
%"-Cn@b"8+,ALH#W=e^ru+Uj'96<I!B]LChG:ngcJo)ffB;ACh;kGA\B<*rQ,-EMtHqpI]-*o9ORg#V@m>#\[;,>:"KEh=7:30QAl
%I_V>h#e$rPKEoku?+qh6>-n]$di)V?o_Cm"1=@Dpe[Fq\ad7-9h5mG1W%ee2HgM0;*$TM%Ao26"c9aF+56.SMF)_%L<%ispSZiP6
%=3C3p>JpP0/&=HV&Y`HWJ7Rm1<7EJ]^pIO.W$Tn4:kBp2G:pO#R]Oo<P[HXgaZ?VZLKS1q#XRI6h6Qa^MhH):A`j/W.)9?b)ON[g
%Z:DP11S[F\0kidG^G<tt2"4W>1)O)nodOr?7u<W\!`!DJ!Ne&hNI9o[!)qW2p7VB@c>=s$XK-W^\^k?SP,@g_df.O9mC7;:8'2'i
%k'H>F-!S2ZBo'AhT7J0!\ocbn4'>YZ]n]@%gZ4cDc3Jr:`MeX*R/oFR_kpj8a2L[*-R2%VoXSo)MVDA^n%@QC!Hr*&5,4d2"6:lB
%%a,,84=snE2bB7&!+gNa9nD`el%@>^A``&0n?[sr'L2To%+$J\nT[PCRm9e>gCba'eW)Fkm`%H1*&%R$p,3u^'"(aG#Ej42%=Z#9
%D72K`q_b.@Pu.cCG'*%XgM2T$I]Pg%\:@9g;C8#^(gq@4Qs6cF-EXN$YgesIq!FgF6/?)1Yf"GOfK1umN-\?Um;UFtTu5_[[)2SN
%-<*(8$b0Bj_o14u3q9%($6)GM;f#`:,R;S6Pu0?,!:YS`HJ(FTQ0.:n)U.pp1C0TS$$+<l@a@,E<4=h7d^a/&EgA0$2B(P%3Nk@:
%i5-9u$BdsPCpsY@cmVio&[]H-9ptE7]U]k'9]rpG6g/tCm'oC#0QV4+"Z]l=hn@0KI"Z;W=Du^[<[du'bZ_VQ_2]Pke=O-;Xt5<E
%1,(@J:ge;K>0;^XQI0FJ\d]`.Xi7VPLeP7d4\-3Lb7oNFg>%%;L)UiTc7:Q(nA;KGbEcj2*O*qhOABnp?aYdrh+!JWa,U*b3Vr#c
%-UVT`T/&&5#%_#PHPM.!`t7<FQh]RafS9S/mQ!#AZ\roj'"pk:;/l6'r#]S!_]D.6eW6nlR<8J;"1lRj4PO$rp6,&p<bl]BA,RH3
%CE^USno9%a`k>k'^,>u/)[B.4;m+hD55'mqX+@#b8h!*t<bd^59t;CZmAACEX<Oi+?l*?tG(5PS'\l/LrRJ";U<,e`h%m*e6i;?`
%@^Hc+am2K$^U$,KXtG.cY/]`q+N0$"]n'3bGYV?:`K+a);AbAr>?7=-kVf>m)D"%FLCP^)N6mt9ElV!6*a;)sOg8"2<9UROc)*Io
%l^`%h)C%:h1juJ9k6bq/A;CsmfZe&K(IM<b7!Vs;fF;_bjJ;'&]iaW2!/?%!EsU+J@u.1$UFc91"Mn:387EVo_`=tLj_Qt0[6CNr
%raARl^@(@DAe1)-\HftTD]u34]j2cln^s=<&!a#.W";96oe#I7Zu09mniY=L,/_Z@.T?&+B@uVZU>!YC+`#@u`KqgsA6$+BGB.^4
%YZTNB*p@-7+$e!/E2oD3Ob!/^fo()D$iP(i(@+9!8I%`;$?ri_^2!lF3W`Z3#h`_"as[+Q+?`1@+9[*B<3s)H_tWd;*XXd>,Cg7a
%Ygjd-LmYR"6WRbEBtEa`S9T0Wm-2[XX8MaS>TX`'j(rT?\uN7t?Q>^9*^*k=5LjkI^FqOuY+K*.;)lpZTZ7ipnL`pF9U@Jq&ioFm
%G2:%[*_`;PcaOSAc/N=O@]"qXh1^(rf\VO(SK-Q.N)0f12fnF3WLdo+]Dtg8`BbMS\l73U'Ad`83an,anNb]J]/CRAaO+A5IZB]l
%hf4j84<<1\"AI(KRX>[T7^j#b7dpA"^S[G;0gQh2N<"_[M1`qX<YsS;Del9`AoonOiq:S`@FT)'e)'lYcDSG((cHC^+"`D9gOYps
%3Z^WMipofL@eI!Ylf6ill?Se-aN(2`,.5\>m@.oIN,l=0Z&T.5n7F;W\KRC[0ZhT'#0>B[9H+ln/)%fKBHmLjR;Ye'?AU<C4G?q_
%iZ,1<Fj^82+?(ri3]pIMMc[44<O`BH;;bq+),(0V%jW$DQ`Dfo,61X:FHf<Y*6^(Dbt*jlR:(I0JDrU^2tYKU7:Qj[U^R&[9@1Vs
%3J-s$*DuZX&#uG*Ub*G$0sJ55\ka,$P#^l/C,`&iE<J`4dp6q@/_e7DZ"%gXK&@Nm+;c4NMfe@J/r%gn%Lamnd,R%GnM:ba]h,-8
%\;sq??L?AhLY/*[`0)lgh-4:X$`/bk($F=s:IG3k/<,(N>fa02(NmjM7(KAcfXTRE#2,`1HA*%G;[KWA8NMeaRJue<#Z0rJ_O^S"
%ldS+=?MZ,KG4Cjenk#Mp,Y-H/"r]jR1.a$YEe]fH1Ui2OT\kM]^$qDZe1r0kp6mtR8Wi1"YFiF1"SI$tYWstC:L3!.oCZs%L6/0r
%cl\QXAr@#]XF)_ucZaZ92hiF%<nF95KM#(U%',S_FAPb'U@Vq6XMP8,P>]oY[N!5OJb=$<!ujP[L1F$WUc;3<&:8S5Icu&,O_o_h
%*^#1b]%'n!N^3;q-J3CRS!uEr8,fg\kTp\+%c]Y@0rHqD/q\KC>qWS1/,2.p^,tQ49.V7V\s@p78O6Pg+]?e^^=A/OAWZ>O&7A_u
%6U4FgA-hU"D`Th@kEA_XlYI4]7&r'pr?1I-;@.bXC%//of$<JSF@FP&foK!B5RI,Kf4hC3rmsndV<.$J24`m87>?lMY$V6>Vam-0
%aaBOd-;)GSF1W26Oo$lcMh7DC\\rE.&j%FHb4Lg_ARDs7$<P1A\+il\mF*D7_,/t$aU1rHdR^,0+OW^I5e!RX+_CurDW.<f&/1ej
%VM)D-#[IW@,MY3D8\,"HACP"P#Pkf4[m57"lu5gSOf7bk9/W!LAO4R5]!#8)%<7b(N6Lg$UD2,,GXR3j7)X7nC3f)Y$>eUM:0B[/
%[[mu-N)]L;^;Mk]otc8@nKcr%Eqb%R>Ud-#)oRa\f+KY;6J-fTH\if(EnRc$MT57Eb#a`lZ&m"9]O4W-\^I5^3I3WE\H*Au/J\LV
%?ta<Y,-j!\TtW`L^>%qI5Knh9Ug$6"$AB:b6Wu\Gl'+_P0T,4\.fdSBj2d+FQu/eOMu=[C$E(m]*9:?;FPh#FM@n"19m9%L#X#6[
%+g,?38`2=abQ,$WcOJom;J?/SXtRWKLZlO;K5>LLBJPM@J$#A^<rG0eWJrltmBXtemd;i;KP="M@#]3?="W/*k7p`-hdH\)ZDI.n
%FM*e=5t'kO]N)ni,:^?;7=<c*N,n3qXlc,3G1e?O%7!!hPg$@As22j`Da-[!6eu\J,n>]s<@>kk+9H182&L.Z&Ub-):Y;o9I*&OA
%9+!5%3dm_9Uob.lnIUIQMXm2I\mZ!dqsYC3-2s(34\d$S0t2EHFeWp,k'".7?"Bo#BUp.S?QC+o93Kr7]V&2!i0;fLT+:"uPOUEl
%9p0lO%FsT&AbY5L5%RV<SE?@EN9297;Um_ho-,LDaN>o6p"E:DV.p@]al\KccX*^e![>%[(%4nLWEKl`3o8qa(7/7J(N(<uH)D#u
%_8*%ZARLm7itFMHOs1=4,hj/1PWNN4d"IrR,&?/.o89Y,*'/;X:grFBAC`Zt7c4^VV:RbmaP:&//-qYO%pl_;CV`f=jATFjc#*mD
%L^)QE!n*;$QaWWjVOT=:lV?EJO(2u0;[6K&6nNAKXaDu#:gn/Ur7VWcPXF2jF0Pb,$RpnMQH@hs=6Va$-SBJj&=JCee3bQR^G;O:
%FH"tH\O*tfo&+Um?uK>91];HB.0ckLgm2#++F=sUQ0I_B3Rf=u)d[9kH6j=?Bs-%ZI&HsqMs8#R])<Za$K6h%hFH?>Mrm)WO%JYa
%8pOS8+?N9ZP=i9O-/+UeTi`aoE)Z%#I%7Fm*FTp6MdV@YM<5Z1PB2@*FHVdl\/DKor/0_CNEh//&BSf7To%Mgij:&:V;=HHYA))%
%rNJ*K@90Q*Y[lUmG:htASEj9bN<$O@(O#K(?%eAJN-_ZPoPs7)1kTtE@HFB\$P!]6Zao=VH'%[RJ&h6B1qKCk,s%,SL_+ig1-_<u
%RNgk]4j=HP<TV$Q=!BI#E#IJ",EgX4_Qcc?m&]@="SWmR)_]1mLXc=U@Os`t%:3%AR!CY6)QQ/A"K-;B::S:`':Hu0H9qSAQbKN?
%RA!Zomf)Er=Xn1Iar1p_;<8*N!&J!4I(;gA3Q:<_?`&sh1,>#S4(lrO;X?)^c'*OR.\<*ET]%\KNfYdCk:hi5091oAoio(UX%:'d
%E[WBYeb_3)mNbUa`5>7e*(IGGULT_PWW-uO[=Qc5<295-*[6@d6d4<A0*na`bWO-+&)PMlEV!-gi:)_a>Y(3.KI.,dM(-Y$4?u&q
%_GH!GV+LBN!jsj"j3K#Z=,T7X-JUoj\%>el>ZZcRhiHE%>Q#+Z@#ZJ)RF9$Iku]j+8O#Q<Yq=C45P4^>W1#2.jsC8+NPNm9OuI7L
%)M']F!jbTupPdStDk;pS94E3"2&L5Y%,_`#,TI9O80J+gU4)p&iEBC>qGhZ^bEA_2N:Bju$R,'H>tlPF;NS/<POcPP#qMskZJ*X(
%FYqi_X\?GRk&`JiUED<Wbc;$*>33Z(.SsJph@^5n"=C)T26<hUGa%T7UMa,r[<rEK>ZMNSK+3>UhZS./Fs]:dAPRj#*Zj+R<5>O@
%ZVa_g\E[(:I@[KOVmc))+HQ.#=XDOkF`7a^UT`JV-**0mas2IG3Ng7I:rVj56I_1J4%F'2UW[2s't3rB.,CgM>[@<YC3ZWn@0jRs
%pqe91SU#3A)jatO6J+Yj@";2"gk7;+KEjfZFkg'[e3%ipCQlE]#2gia$4o'lU$SSL];D[u:<MA"gHXPF:rS?8WL&%UDd'La2.9O>
%>`777$&`I)=qIN?jJ#1%IM!e1*l@Enc<!0o4H>sq>_tKb)I[9dfOuJogueB3mf11P[4SjTNC^KJ'2"l/5e+Y6\C?gIDrI$\.,*-&
%eD:].\m<Yb?]'l)?ZC;e3[AYo>U[O-(30XC`!'i3Vu:?HNT2Y^e%8A\#n-PMg&YUM.bHDCr.L0j[Lq&:+f'],(LhQGq:qhYQcgU@
%K*Z[;-N?9G2X2+%^cp"8hunI)c?+@/PEq.L"%D$J!Z8',%Lqj++ECC?BHP%MBrJ_7\4QNkca:=<g@YH)LQE+>/oJ6`']A>e`Nt?"
%6$i_a6V,R/(TkOi'q.(7<Ar5ocMYKBe9()W\4[L:@P91Fc2c*qMBDIPW4US(_YHE(5s104R&;Yk!6KR:ofSW6ZR>\b`#_c8eDu9p
%G9SX]_cu8*B6.;oDDo-j0Q<5^JU1u-O9n_7F"l7X&D;\bV7KAbYmd9j0G2./-tU7(J.im<X003M?.8l<pK:r[Z!<2`<:N!.*+=@A
%Vm8**AO;-jCnJ8$1SJliS.ghn:-55<J!9-Oai+/q+=_CNJ\/]>X3%mU*Wq:56C.RP-\p23/5?L*IMh#trX<j,3<s.Z#H:j2\C`4p
%AG'31cA+pkRZJLpK5D,n8B57IeL2al"3M$ceHb2@oQ>koEWTa>lZ>9^Ai"P.o3XkI_;g+O)0`/?Bt*s3*UD8/')S=+?-Wd<YIuA9
%,`WOI_ERB2IR>a*pI8'D]-BG?d#L2(4-@N$\sRjb\H[ltD*L"Lmu*EsruC[pNe#=q4K$-BDFI=o(>6f-13_'#hT+X>8t+JY9,*;2
%"staO87q4fc@tSeLtL"579[>(YO$6d(8NHm_F[Y=Enh:k,JB"9#pEhgEs_'E-Q+jMRuqSu?K;?#Ztadg`OGDeG"Lb;InG[He?a3d
%@30<Hc2Nr\:AAru_R?MET\W26@A=@>X"^,<fun4EONlH"2NM-^L;K[3EGA"+29%8lBSBs"G1`JCeC(6[ZH$fLmQD>PY8+J&p_HIg
%>pe`8e^nBj/lD2-&9c"cHo;1rns6bpNL/%IMOQ<Z\80l(s*TZGIs=GGf=W'G[W#.3VdOAERi0"jD5\Obi%uJm0A<a"f!p%3Y1)CP
%gk<s/iEtt>o"oQt9MqlD?EL122,!S5e=,r#BMG,5]B`iqL5^YZXu/u52XUUq.h4S@jUGsLh!(Ok<Agn_@PpJNF$!tAQ?b7ibJOgK
%k!BetJ_Y2,/6=T=1AG<',k>pB,@hErhZ_1]1/@`W_ru`5j&*1VaBp=EZ]n3f`tVm)-,h?+A?8%;L%%d<F3l^oMe%7tBY07.!M4I8
%;L^.f^9YPF/)$2&"NGbR9%QamddJK0QphrL48HINrI`LSMP0VTNb0GQE3IJbZT44dq#Vo#4?r#V:"Dc8YUiIi1tds+R9MoW]9JVE
%CJ.h,.0e!Hi3ehlSl8ok?hbc,%//_CRtpf*3E3C4n?DlROOpt4`&_FCW=@)qI^!Hn95MQujoN#0eX=X$mIZ<mG+MlNWMhgV$auf^
%:<^*I)S-%1WHUF?YKZLhYA'>bK6%MgOB3]%2$J;,.r\S)HV!]=k;)Tm:Tms7Y(E+dI.%^fDSj/)2*S:\.``n/%Df?CmgqK,Wi3Vs
%PfsFf!R)`@"[o+55+Qr)\2!kH3LL_NlME1(%GJ$,<bD\b-0OX:I*^"pFET:F#%.Z%[-F/aI&:SHWY%MCCs!E&!o=;.l$C:JVjf:3
%PUS\^[]W?u\D/PGfsJg`@hF-aCkSr'`i75>B>R71PT<3'n`3UFBeLl2JqUATor!GSG4J]eO(/0S*U^`!YCh.'=)2QZ6*s8o=3_;:
%<nUoe1N'U'[r5)6a39@'%9ofDY&eLl-QZJuha?Jf(JD)UWNn\O`J<Uol7DgK'"cO<0D`dCX!;QuYp5.aM'giVV:LdhdamK)*\Z\q
%l?&#*mJ*OeFTReIM5/:D.Wo%%-S[K]^;G9,X1J#[VW5%i??&7\[HBD<+Xbd^npiPuGj<<mageF#O!N*XnEO7)*W%lU]Q0%tL>5(c
%DI,EqIHq'gdKR?hVep@e$j_:TmlH=*,Q0/o38"UfhZ$MpI6(=k\I^XcqK+?C+2!WajC393L%Q7W(6,oigjba/+$R=7gV<@SZt=nD
%Knm!NIo8tqa\]@t;#R.=J-"_R'bSKr6`29WA?TRt@5n0e*d&shIQ-VBD19Q>a,7#P^B9Tme")b=L@n!hpVd.fW&VZS/)K8Q0:fYG
%ad))"AT][SpiS!B3,V&@Ri>V(&M41VG3Br2j>$<SSDsl5]cZ,br!0ibpNjAl`L<lV;EdOYc)](211Ynk"kF2Am^fH\XD]<bpe*<i
%?J2\u/G238WfBAloO8:#3YM7<?t]1gAXT;Oq#)f(=<qdsW[&4E8+`)f)!#r\JpJVn6:035H.2[he+.)2O-_G:OJ'S/4TC7Mk*`n-
%*<@P?kCRPl]HIMmG#2ZBe'U#qQ[G0NRk0<8W?/lYC2\j$dK%2m9P%=rW2"#5K70]5]EGX&2nt*f$?g@$+1o?b7`6;L<(ZM;9Ea[&
%6?nCC]gO9j@$sp$kUdOI)O8jSPf"l,Sans%c.[a+).of`IXY0i7D)D0ePh[>e.US!no!.]0D-cl8\L!aQ4cm7S#D#,fNo@5R)sKj
%<+`^@?b<&!!JI`bo2VMF<Ao;sdM]0I^:qNA_u#O2"EZ<-$oKPJd-\s'1p:m9\ioZ8aLH+k6`LT`!qYd"qqulamD"S-gcblq<;TXJ
%*d40X9[rs[Hp.D(b'oeA$MpRr$8]Kb.DX8b&3d>kHYR)E^D[iO',d@7Q1/i%QLHdgK%7a(`T%.>i=N<?6OoPbY&eCaj-0_X_htBI
%7S'hWf1d;o9VPoE4@+hQ"3HPF6T'dhppuH%Rp5$m92k.cKI91[I=Zm\keJs<IMq*3I8Wg)@7DI'K6#]61P,iT4KSJ['#-rs1-c%V
%A;2f2/gcN#hJd6M((r)YlW[DW^0-6i\X_%.]\*b:M-`q[S#(r]DoS=e6F)p%;Z^j-`tSUuQW^TG:WB%1J=$mj0JiXE5<&^M^.I_s
%Rm:TdMrY/?ZbO2%r_j-n4A9LBFdQR+pp$-phFeO(mCE[!D&E^C@pHQ:qaIon+=Xl.1W(q.@ni@gPR_JHN%SpLEW.X,/QnNZ=EG3L
%\*C<1L!_m/+TXc"@=]DHHKU'AftQgCJYq_Sa]u'>-8cmI"D^f2N]M2Yb#%W^oijdgf3<]e5<84D51+Ts<u27E`pBMb$=Z)r@VpGW
%2]l_3<c>!CfR==h?;sJomR4F`[TYVGV+gUL)Q5n7E@kO..b7c5-2J>AHo\9)1CP:_Cc[H"O:HZk=$2YRJ`TjY!=,e?[`hGaVDa4O
%99U)W/u8Gq"fTTWL"&:+b?G_%Vdk[jk:RgMI;V!9YgQ#>XNqY[BEq,Vmm4?#OAt\&SCiE,]f?L)H/d":!ui;:D/:tE-3j-;L^W&&
%?Di*6h)r!sB]:8?l08oKd='+S=l"'fSEC.S'9T?K)MIB(MhO#qM*N!9GRpbk*hu)q2c]iogrY1pqHQ2(;AeDL-qcX2KH^.MI$il[
%e*#d(P#G`kAE2F&8/C17#CD-dplo$9H_h&Vop[G'LBnc$("n""9O0$rfcs--n(:CSdQ!aT75;l4g,BhqiZmW\&P0Am,$+1p8>Fgp
%_irLqbQ/>_!H:UHYnuq04Y"8-@<R1bWXUg01pCDVg1_Al+*F>[)3M'3Sa*nV9XlFh\(LMjNj?W)=])tf[j)V5nLU6!G8Fil*Tm%h
%'Y9V>&RtXtF:_c@'G'0=M&B*$j%ek"-_B=R+0;BE#NaC`MZA"$mVBhQ&J\kao#3G>U!RQ:\hJmJGOrK!X8K#;RoB8Es3-7*KW0Iq
%EuEVfW@B<GA]B>$n>k8*15gl!4=#cU)d5aLO5j!dWRT,(.r:23'ZXkONiM@_cXO6<K4>W9.3i"=@t^$Sa#=c,0^ZdjmaVQ7B-(g#
%.*O;:UrVmcnj4)0:p\R&iqj6h:UR7Fc+#Q7`a_-:Cg6DP>#bg*_28TcDI$to?A&Bf?;Vo](IZ\F'(aSRW>6eIL/N&i"1>9&`VZ%Q
%3agf]l08T@bqPM."AQrO_j*$#2^Q!EHh6Jd0LNZbDN0bu0h7Nod:p]=YAY!pbmFo9(QRXTj!<2M\G-Q*qp>\.qbM@n0qfM.9bMM.
%dN*7Q'6@4)Q'm\?8OQetKG!sk`A?a<eLl'n(m4oh>DM.F?2Y;UYC8MnblDs%!1JHdJE#A<4A@@m^PJ@FCnh)!,kAT^'MZ:Zj(4P-
%)Rj4KS6W'K@jh,HNeI6r8$"4P"&$D#@[\>;MVmDJhiYM#god^sOs3m8<m=AeL\24G"q><(!r96"Im2<fLnemNI+>3U]'haO't&q^
%j`!<m9/G;[@1M4tYnY%I&u-s1h)Em7M-6#<Gma;,jJHO.bUbt[LZMZIHr$h9:56J7LX'490M+k<72&_qL:di>VjdPMGUJKp)QT&;
%^?B9T0P0:Y?g8q_p?Q3.S5]un]uHBIZ[>9Z83BJtLAeu@Qft,Mp95/",58k&M9i\<$PR";-Ye;T,[rYuNF9mP=#M54r1(G6[eEe4
%h_OfBQG>?W7s(5V^KEp3"<#F.g29$t6Y=dU_(aLsf-5cqaEU%,Ehma9@J%:<B"[dJ56j%N)`d6O:blHn>?G&UXR)V)H>dFNAf'Q]
%dW?[CrEKEaCgn]O%8aFI#^0A6i8Y7!!_5e2An<>nU:WDr&$i=^@"6u?Ipd;A83-,2&';)B7E'XdLkZZ.eR47+WAtIf/2shb0qq_B
%`F]j&bEn=P?7&WYjDqiIR.VL'pAXQm55o8a9QatYLG$'9C!I,u$o;1C-MCuG-uDb^/l,pI=ghNm]%B8rfDqhq74X8C*aNE[^_5)2
%1uY<uk7M9a:o.m7HGJ0[TqH,#[=(,RiR8h6DWM5"Lb9Wp6=L)9_jmF5i)htfb5([f&)YQG=D?Uq@W&X0":dCSXt2EtIc3)lNY99*
%3>>0IP!it(Wjte<iSjT(@8m0A0o]i%&RD$O58hAA@V)$>a<t-$DA&Y$A/FbsEMqBOf`Hc%Fk)XL;6;Ztp)_LXqh'AoYffiZ$)9I[
%UJ32a2eVm[_+W!O1EcP`K?Yh^"HlK!Lp_@OoNYBeIV#\`Ji2](aa?<OTuKq[aNN[G)+C.6c^o@$YZDNdP#-8!)=l$\Ga^24ibMbP
%FXIl9I#5.,Y.Uh,-kaS[lp6]:-UmA4nA=rG@>aKbR;rNeo#k2"LW<ts@6m2c!]hS.hO`8=";rY!Q&?R?*ib<.']7Pu>-eQd[f\pF
%o!=P41NB\MlhD.]e4]SpGiaBch&06s&`ih^r)b&1A>!HK58g\GJ]9fsrs)nJ.Ao""-esXRnWJ+FlP71IS1Im"X<@7O(i/]b5VB[_
%Ro&LbfqcE:6<3oBXcWoY5E8DjC=G@;IUh8J')@%GLn\SIdWor7<5)U(\=r'n2g,q/orN2oV:M7l,D[H6PR=NS\n53/Bb:hS79W?/
%mSXbD(g&<]g,`hdcg'#cR,,.NAen!'EE$i5ldsmeL1+u>LhYCqR8&q4<8imNn3:E9,_p`H01EX,g>kpj]&M`6YpYeSF"3hBlNCA.
%XeB28g@sZANKe\Q@BA"u\iOC4)B3>NI<2Ya-FpihV=:@O3l<%]jP!WJk8E-OVGI<(f:K<]otA=r\g%M!muYg(H.n1JXHDbkbnV=(
%"SO"-GL;r0^@E\Ns,%K)2Ojs=/JE"G%5-V]np,k'NQXlj;#8%bB2=X#(cI?\Ft"'p_HVH8!:$Jf"Fcnse,A[Bqgod?WfJ`?L3uUB
%(u&Jj\F>U;*MFCB?-D[IPP;eR13<mb?eecE'K!Tc_f%==gr[>1C]D]uFkj\ff>M`1lf2uR>D(B+joi9+<r+?gD3`)+X4UI.8eeB$
%G@Irtna#XbOHj7,./*&hn!Y;UIRc4Aj%Lq3YoT7i>h#ukgruPeJcHW4j7Vr+?PEVmT*k01pVSB?h"Y)9_7@XifmuCE@D6Wb]2`d0
%Q\[1'0'QUD.bj^`TJF@]JO@#<d:+W]8HcbDfM3[2,C(GCOiLK853-OPqcr`kC<>YY1'K#`QZ`(C/J6-3Vh=O&=X%7--e^k8801</
%GD&B1@cLFb[p4!(r+(2'SKdfkKM\;(:H&3FJS?6`Un1<]lrduR,(?CfF&]G/APm0BJK[eK52]u.kFe*F)Pt`^'Q.3qoWA6s[#dSu
%C)>GQ48W:(=NcdhZ174kqT52Ul*^bS"tR!3Ap=J._Iclr_eh`_'[+@:P)rr9B?C_"D(([J0/]GK4nq$,ZqaDm(V9V?\U@`3-D2$2
%?^g]Q^O]dQpUDK8A76<-#uV0.:;<3SBHsDfXJ`,BQ-Uc(F,;IFO.T,5CqgPci=S?eACVePTh!3r,NoKgHQ1ml.ad`DbZU5]!h9lu
%s!QoMjeL/QBuO2qFFJ5e^CPDc!^UZ`%d@?sKqF19N,l*6(d<p^`^2Fa,h-m2Zq8hX^kK5N#hpsR58iY^`7>7M;>I*6_l2dB^I!d%
%Rctb[9D(,lfO5SF47"t=?!4i\AItIBn<+!h7.I`1keq>&QYr@"[=\4OjaA6NI'CI;LRFoue0j@V)R.J?!.f7pD2J>!?W^b9C;(82
%s(hhF9q-pfs*YAiAVQa">TR3DU6T.%kUA6c6S#fE?eZa8g(e`p$D+Rgo+Ih%%6Ng3O^7L*%f`'`%@&hVdj'dPWZBu<+XaW-_fUb-
%a@@O3LQUY)c#/A]$in=Db/k*O!fN-24Q1]dDG/JU#HVgbjinDR2tE3cA^-24MtqL=Q9#RS',Ho6V01n?:Ui`p]i;0m'de<(:7i,_
%"Q&=NPl!hu:L.$>K_OHPh]HCBqNrm4;o,d>G'._R#HaI0aYs5_dNOVSk1WuHM2G-7V^=g;7Ia.fZmgBEosACI'V/!K[3kM+V.W.O
%[[,$)-X"3MfM7%nc1dPan+Sa6-fstcP:Ce1l$drdRAak>Pp2j#fo`3pSNKD@`:HgkIf"RTQ%4ltK\lFO;&\uLm4LB3bUdOb+FORM
%JrcO_,IQ4E75fE3r(#$t@M3.OM>l(ZYk'EKWqJ+=l:EkSNTL[0n0ekM8Q<(c1\g#,4>eoajG5".*d3Ar'`Z[L&2:Pd$FQF^N-QW`
%mGUW5.?-7clC3)!U^d65%VPO[bF3VF/qn]kYs!MJ*oY<`"ITb>K+Nn6fA;(&$eWBUH;d]$6a?GNLDP&5@Zc1JhE&;>j7q%1SOF$t
%q9g#ID4IqZ.Zme%Y\2AT:W`tm4Y63UVm5b5<I:oAR$OS1m%aP>PA+u^(=QBNT\ZSb^nrn;NPot.U7WZH[lI[e=Kh,mWYRIZIXd2Y
%5C=>R)\<-/Q@&dIPeE\EF\IFWQAY0p$-*A%2g/&fVgjpA>:P+tD(jdRn/iM[6Q4D=.>5IB8D.BrJ3%6eTj!`tj;6c=Q<Kj5H4qoC
%dl.c]q](&i\qTSo:5W!Y_QG`0e@CWD.L1DNp3.%DlUI<=%\^Pl53(l4d3_MCkNR9Le67/6eWSX)7:=:sBKn!4Fi#dH?\PkrScVb@
%e7ibk%g('qEm^eKrq=o-e=[\T=]Vphfuo)G$h(iT5'snZ?Uk*Drq]-Eb`JC*<R]R&Sid"l^CP_+,m$"UE_)H'?u;2HdY=OPen'2k
%LYi/tU8&T]S^aC(@a=2q>'LRmIQN1g+GW`G8'_!qnquFVAApe*r$9PUKm7qdkA5Yt:5G6`d]8V>AB2$]8fT]o\d11,Ym@rJpqce$
%anQt0gOTf`Jm;=kTR[_;Of;O+!(o&0(_7edZd3[@p=fA-N/-`LrPStm1JS/eN2LjI*a\+n"%R4FHi!8r3U:hMTlA4QqY3YXl"J#r
%S7uO,06I>4#h:3(lI%MoRXYl]BKtD,-B3JC=\U;Qa`jpRHa0YY>>oh#Mcr(>8bBEE@25rY1Dqm.G1p0TLR<r[K*Q[fRsVeS/-7*#
%pPekXr]WWB(,Qb=!K6)jDM_eid)gLRPf_H.RLH(UU`uq,")@UX&.TqIR.%h_iDe=L5g0qnZu*)P73TQ'3R-"hRX=05P8`djJ6)W5
%l5>l[+=X&H)I^^7Aq4Y<C<7`"@j^m%1$c5SA-smO89^R".@cHi^)jg6'1Q*HO*9+/7K$Fm[:aJ7HPJ:fCtP))o3:&Prm8mEU`E;L
%NBm'*F=<[fm/_!>6$eQ3CPnu-Qs%s.*=MD2o*,^V7CBsoX*7''A(>isNRKn+2*qT4Yd(?<Cl.O!#sFlkCqRkZ-F#@HNp0fX`dOq3
%OA6Se+o,RTB-P`9Q^qR!6bq^DiK?tq/(O!<SJlN\in:IE,iT^+$>"b&0EtW^Bgk!=ip2$L$WCraGT,1omJs\Q^:8iuDs"Y+H:]9F
%KhY]AENl6fUrLPUGW`10HR%ZMgOTsAhj"nObq^GY??kKMls6%]IFG:3Gr>`J_\/A+#b_Z5>#lJenn,r%3Q:b\`']QJ^CZus*rY^_
%0Y'4dYggV$SjE#L@fI!;V3Ru0e-KS7E"c!*5n)1P[2Ll6k^5qsd:!-.R<[[h,!JfA6Aa?[(k]gPHT^%ebgUP+FNBmqpaBUkVt@pg
%L$dDRO/W$&(k$!*J2-WqmgG@HS1RdFk6RoVK;?iS,r?IK#t\BR<[i\%3dM%/6m6K?&pELMNkf^TI?A]\S0IQZc#'`iob8W_>jI<n
%n7Z"N'%c!`3A;I3fVSiJLNe)2G2N1Fq'fmTVLT)^fkmX!<%O(bV\?UW,RpT1lVM(YJ/*IaErXq@md,Ga3Fb>j!_/f38\#7DJHCR.
%j7cRn>kVQS+'CgCBig#(]E?\3jl\O3`K%j5A<!H/Pdcl)./d'1BjI<@Xt^*[)HLcj0K;VcXaJiUN+6%qmOd8NbMT4FN((.jZ)acN
%L+s>nql@?0@6J1]&?5:0;rFQlZdlo,AUHE-YReDFeY\c*ASs`8Bg]MC&YZ_6bqSR'P8fDAfH2T9FoD@1PB"mj'_X+!kQ1?*.laI=
%r4C&&,WlM]dcTI'@b0[mm[D8F=\e<`8?e!e:EX01qZM@QF2OE<d'mY*gB28u?7NQ8DGh_<s7):Mo^]%Q:['0UaJ\+A-],:G?QC',
%.D8IkHb$]"f*RHP71jChR5De?#[c_5+8ijB0"4Rla(PJc6-`s-[akH,.Km/\X9`GGLJCqFPl'Yh96DqmT0iF(n/&.b%3Bt]S8?GQ
%Bmc[8*7D2j^F%acK`)&C=2!%sj;G@3!^iMTOa+.F",aj#'WT0_5A@?JTn=a2pZB(m:&jSUQ)MMq.rWXnZFj??@R;q-@moe[+:ue>
%+M?A37UDg#cU"$5&$o2-Nb3;T4;hYDQ8.r,j8_o6@Y^KA=jFGs66a59$OLNKDhR02fa-Q0O!=Q-iriYUVEn-LJ8O+2]?p.YLI5$h
%ah<>-jCk&rHNOO#>C<i8#6hQ"ABK^L6X='gI-ro0!O0nW(T0bYaaQ+_]#l*r(EH-a1it1N@9+ar-f5t(9K:Lk@>8e;'o`qc2LI`S
%2]u\QF*D3c.=#P6b^A%f9o]?gOb[D_<G3n*o&5'9q#4"!''7D%m@oiGKcP&7HbuN%:0@6qIPOD+_k4X&5H76UJG;TY?eCS+_X5(`
%:^VG[@30IiUbqnE:<$7F::)Z":a4"8CDb3Rrj'!<XJ`":UCE=;XcT+QS>M[K?C?FOPl*,u/n7+)fQN/6/(Sj:nU/miKm\B\F7CfD
%U?77tIo:aT<:3XUZ]P)1hcR)VEUKIo16d6>-hHHsY9ee!/<3[C(>`/mW=]D?`OpFnhbG5VfbY4;IAfra=kS75D**T01WQ%)6?3Fo
%i"Q.\PEG;UA]8l-XXB=UXRCq"o%Tj):6-ubA7KJ"#.;;#0B_^=IpAW+bHbn=/-O+ngWR=6.!hNZMiDrVj^\5\Fh[b"s%#Y@-$TWM
%X>5PmTjP.=fTdR3LkJ=F7pH,DmnqgQkBn6Jr:4Bj6"a1\-J]AL#+#pT6'4$cH8PZ4&ZFd,ocG(q3]tX8'AIsgd[Kc4,4BS4(8lQi
%LV$<'%/cn@_(U"9,@tGf_U4>,&X&R:!YQ++HA!(rNlb/V=P4%sgM!:Pmcpc`Y`as4pDnTdjK+`rG6n@>kfcM-0L6`F/;Q4)'p4"O
%4C>[*JQ^3KCQ,SC>nX%,`QpZ3iiL2`T8X9(dgZ)N?YRo3Rn#-dg-jtjH#@Q\Ghsu%]R%)j'P,'82\`#h+=W+jB8b[nKn8.KTmu_a
%p_H$j."$;VT,nmLDn!X;.:S>rSn%AH54sLR'$ad!Gi!)7:^Cf$?ag3t9gc!]]M/nC<aW=nG<$cFb7ouF.8&d,0EXLMD$tC'He[7d
%M:J"+NE%X'nT%6J<tS6E5*Z@b-jd%Nm&s,M`/q$4$"%=g:Khm6!djq=pJ.tR93g)jkFBth08%!?O?*Jg%TgDhi,Re%1h;?O8Gp5L
%'?CEhElhhT6?4`=dpDFb*.D.I;3nKSA2g-D/*opqQ?S`H&2L,"?)@rB0RdJAQ&l17>WC;GC(].!D@^Z,i:O*pa6?al^@ir9a*'W,
%<A%&uUaYRXPB;KoU-cU4q>=p>#fXIWmo/dL\nUg)EoE^@Ne/;g:?(mV)s<QC4/Q'_,i"?#I5?XCmchCpNp3rBU:VC&=4'?(I-9JZ
%GV>SaFtn>WH;/gUJX$,+r%L5m9s<V/>M7E8%b%B;bsLOPpC$Q)c<pV%^\Y/5c%!A)f73h`^]1eCnXogLs8@HF&-(lYrPO-_1Sk'E
%+9&bLj3Oq"s8&r!r9++Lq%%uTRu;cCjM-u[k-*3Os2O>Lrq8SVe\Cr.qa^W;q>^E\s'u)p^O,tQIm11<r*0'c^]3\Nra4)lJ,fGc
%hu6FA%^,Ut\95(NmBsf>V>TA3gjk0G55[B-Hm?6%qTh'\s2"],rEoQks5JRTs!)76)YX@qX.WV8jGf&<]tr@a2'o$-:`S9*(tY6g
%/a7rKGE>UL3sY#)1n!sC/7KpY[*)J>EWnRgR8Fn,+^T!WnWRs'VBma*+NL*a=[":<I05n]YZ<M9BP)>u\h+fV2.6W3(U*sIonC$7
%OWts45GeblnUi-5Q^ibTaboIfRBmJrH_7WF/15EgmO2<:UjUb98p:F5ZVtnM/A;7*5u-]O[r6qjaZD_N8s2lHc3LRXZNlt%A:,"/
%g#>`U?HA)dF@#+n9_eT"p\T@V>OPWD<DQqh'B)S;`Op[T].`_R]&fbQm-A2+`[BkJ*$a;Xo7QVb8>!&rVlUO.V:n6T\WC(dZto5Y
%/7,jal;mnla@F,<h=mn>V(,*C5)8N.cnk!_m4Z\aQ^;]><82#giFNuJ#k%G<Ip=Msp^F6[k^rj5i]$%(dd-[ENY!HJ@<`pgSs*aZ
%(RpIKRqNl1Uno-,TUFS7Dc=8\?/c),Xk0Xq;Kmm9QEk@&>pO(&Gr&*5\O*a&(0(G[jgO7u01:Odhl#u(dSOEa?l]+HQ%hVB^-O"S
%qUAJ6,?'I9(4R<`7S4>WUa9NU@7_HT+Rd'iQE"8i1bYt08`e0$h:sJQ._E2oafKBs_;3SL8r]sKZLIcL-'>=BZa"9S1B9<@d/suK
%n347,emEl)ZUQC*IGfSSkbJ%H[DO.%WP`4lY+NGQ3IdS/F2h1-NL*74;?[eE33l&A8EmJ+>i(2qHDt94V+r:l?SD[<&f*H&km*h6
%M%)L.1&UR*EUKHD>\,g%1<9!Mo$bmAh2:f#T2hpJ$(81tA9T'':[koS3DXeq3At2%b/Qe0+Q4b:=U.i5&!tb8/-+#L)e;u!e>QK!
%Iu3cZ`q>tHBbli5nkP,sLsk?-@Y_'D=21-ZXP/]m+jDD#Z(p+LgGteg=ac&R<Mr[#->u"Ld`ViLQGj>t-+C+^j8?8_YhOiKh1<9=
%O?E8(3Sq$/Pss7SGZ+!O];Ig''X4:E5QB/mRM,lc!3k/1!7o!XQ75a4o5*BMn6+299[;<"i3tGU9^JAB\K<q)TfI`XM,tMM4e;Id
%r-Ug*0Nj-$&JN(Qk/7"?S&2:$d/%g\]/1[4_+%?7Aj[5$HG]#9%W4E$,1&AB0X#i\cnC'rfu&/Hf[7\fi.%04+4oL8*\7M8/U\=L
%D;qBij^bOLnhZj-rap#n8='NSTKS]V'mkc%a%q0Sj8P4ROiscLlV"tl$(c()eB(YG`;;M9QeH[rc1@9e:,e`^Djk(-%7+F+YA\`;
%`)3G%DC?/Z88.ncK;M%_T.+'1f9UA\,NR.1Co\;r+mJnc6L3BMpi1"r2KIJJ+=4/I',BGA30P+HXKQ9_n6*EIkK,Pl-Tn5G3SG@o
%m&Lm6[J(Q/afW2<ek#t44>D<IITQkoNt\R4<8W@FlpJ:G]k?VVIs@-4Ia'+dM7u12gXPX3P<2K,VnCB>5*cD4?"E5@-RmA0\/.KF
%T?"gVW4UDoh^sH9p;P"]c*jRcfJ=qSo:MMbW_0"HSYh'IhVrnuCHu&Uqs@<kYlM&bI%FDh<cUAf_BKZa+s/Z;51-@6>A`"Y$9De3
%hkk@2kcUM1j-j8OJSoK^pR-!C(,,S0I2phbj#(#SLo9!k)&+E`MpK\ppLO^3SCrnD:*q6(1s;rJj'uKo(OP2I.=&@H->\"p*l-^Z
%YE!F;4L1c'l'JS9k\^@Z"mp@b_f:C'o-Smj-*;@LiBkk[#p`j`=m-Ss!?F.MO1]'6#,?2+OnFeqs'M>mX^2Kf^qC!]n@i$7RiOD2
%S9;3%N8'ZT-G&J1gh(a;=_a+P>=p,j%W):2Lg^DWGgU;=bH8$UrW4.n_jeVbCbM.R79M?8!Z/J%3`:QYWVuV6Vtc?9;C;!#9=!r-
%jtKr2nc"YhQ(>9h4CoYsYR=aqSV=kgk;Pum(,B7jXi:'+6ETT"?u4u!$Bi')IG[nY@)>Zr\k0*qkGgWn%(;@%Wo%1Fj3iISE[[i3
%e6>sRAl`<io-?E+)fDl&-]LIM2<n))NV\N#Z@qC)_Rp3r_lB2Tk@:h(!hZSYG%$U.j*3]`Q.nDuLQ^K:hG4Q2ftgt$=OrYuU@qP]
%3:gq?L?*.%j_l_rUg>O\MgfXZ,\75#\MiNuP,Q[WAi"0Uk*fq9XDm271\i6P;hInB3mGs^:p";'4rB)"AY]WZQ9h^`b=fC,6i>k_
%q(N)nps8L,S4NDN/*jYI&90E0Q6A,h;mSsQ5.c#R](T9B9fGH%90=gXh&8,>q=t^G2iQ3;\uQ-n<0Q6I/Yenc=n>t7q)[D_ipV#I
%ofM;Oa<L1a=e4]f^KI+R`Ss!6e</8T&d\:n0EWYhGUXUHU5IHS,XV3=a:/6(Roc1I*uI6q%'pRlol'#4:X>57EHRig==2(*FQupY
%A>d%-7[U`HVr[cE*Fi,'"!C`Z^EtW*B<Tp.B2(:n@:_r(V^lMP!Fque!h<nS.SII%<p`hg1k31A@F13%rp)m`(_\gUJp@g->Y-+L
%/E],U!l1lY79)VEbPJs,E1NsUHZ==a!*J"69@Y"oZ)u7%Z&AV&UKN,\NiHUF%'*K3Z,Ce\q,s9VhC%mR3@tE^Xd&5mcRBr@Z.UF$
%?T7H-gGg:AV)QnnH<g7n0BcmVTRD:I=V5df?M2CSN1qC2#.G&"Y=7o'<,7;I_Wkm!3\E?9]S2`dP"Z]!$kq3rC#0*G\f!%S_Thee
%l>KB*jA-/Nr!2=;5.jE7b^U;#;SFT&pbo@*dbE;o?Burj=mq[,($DN5q)p5V?6C6;K9)-JRN+-U(tflqZMD:C)mS!HaSHBqNGk_l
%=a*BC_76R8=:UN2Z<O8cX:]SOB<l.*KTgS.3un8I:B]U<UttfS_t]_\FE9WM:*EnK?<nR;Q0(Eq>)(U(Xk*A2gonalYCYn;.:dP6
%P@-,K.f>sPLN-g[1[#CFls7H4hh"_ngQ<$Eb"hI2GUf8KR]DVQGrsN*SqN+=m*SKb*_'pA7k@],l[B^S5?aqO2IBoEehO3Pjo^1L
%.7Qld'jX^Q[c\:`d8gFP%<,Kd`gouVW99PAmh>J9Bn4)mIANT+V2OaB$a`1&FN(p;.Ir*<9T5$udu_jE(,J,njI!/$33oH8YB)Zr
%\#ts0(])ZdeZBKafN=qL'n/C_[5F!!8]jgdmH)]7D.sRA=B$9YZ^SX2HZ*T#FPPlZ%9]6U?f^N7*44:)M7.+LZbJmrM;G)3B>_26
%i?X_2**JMrRB4L82L4MjfbEa+iS_UqXl$&GJt%Y9QUc;B6"oi0HD.+?UGo_,6VdtK6e3d"+F*.D:fBKtM?inV9AWV."2C7T@cYKF
%&-en.>?I@b4qt859o(q`:lN$Nhi@3d-R4+G5Pf&9fJZK`V]S?TcjMmSk[%GP+>?dEQ.[`"U$GB92N5,&\9;lY4O_DX"2%Ap92^>t
%#mG]K024W%Zb[8L(Xha5:9>n]%cIqX:drlb^fO?ZiaM;Co^*WI>`3g="0YE`?`XSL!@!&'"iH!eFTdk$."$[1qR(R/'s36=+$N2W
%oEXi+\>M7uT5R@?X5XkN4M=<*lM7?hfdmX4HnA+Rn,]#kd2d+Qkum!?EZEI#.@f'k?EX2lc#+V_KsFn:_,J.hWh&mj`Huu2L0(F!
%fo9FiLApFgREYPPcop(#)I66=>e[t,2Qu(^&L=G4%H2'<A8Cb!M2H_O>[Y,<eg;r!j/UMhpu#m!#-*gVLChkGH6[LGbX(RPW_*q.
%oEG%Qo$f*aCa/F0lN$^DrN`Dkab;eOrp\FTHuoi82(\E=Q'`=CC(;`lI:bE$)HtUrNa@nj-,Vo==m]&LPa\r0s2&]_-%_^8!7L`T
%`a&N95FogB:AnI3]%_4[_(c[HD*mt6_gBZ_kt+ehD%0!;>)nVo_;S\PnQHl8hAatnI/s2%h'eQr0JJ$>D.fsIa='Q&Z:uJ*.i=_1
%kbQubgh-Tu=?0B59\49'6(N+hAe]*..gtXk>\VH+Sk@&=6F*6afI=ipo'0hhUk^e3";W*W61_Oob!eN0e-pWr;qGINgBEL^eOt1a
%%aA4$`1;MKgX!.;`K&NJSEhWkY1@(gAHu;s=smTXW*<Y3`e4Vj2mq`;qWs1f]@^$J[#U"3<Y;@<F1jX.ZO/JuK3sNbc'_f!0kU.\
%f*pHZB7MuiVVp7J(ndkVWC6mt;.+M5#Sk*Yh.l*[:!0'"V/0pG]DGhZ7tFU"VC-?b3f&iUc6i/)U<D<PR4co!mgN[B^,UhA,*Zi+
%Z(@n_!m&)g'/*p5nAZ1V1C(g8m=fi($biE,:rFWHMS!caV,B[$>NlgHoj\c_BiW6u\*]R\5S*rtlS3p4EM'$p/_O_m.@;L_g7mP8
%#`#dC,?-K$BQ*7XMWu:CJjkf^AkXtC,;88!U(i\hO^U+_&3.VGO5@fY0X0Pq0/WImmpU6;IlX)qgbYp-X\j^S!Dl"-%Fbt_rT!7[
%*#>JA]$f5SXOEmUINA!uOot_nk9)?[):%gda*(gYSUT8IChi39Kp^WWQ3l8uQu]@#`VlqWm*SXSPtiDEj"`q8W6<nc85Y(X!+>-a
%jP7D1Y7>7s&IR]V1A8?M-DcD0ULL-sKPA'I4%?puJ:CXC$Nm1g\:4L_>P\!AQ9(WVs$C0D?9Tr*QN^s4WWY-")U=?-bZ,fs1p`bP
%>$cj,]"\X$^RY:.3]f6rPs>LqM(.)JA2n-M"&CBD_%DD=pQu.l\&)`@C/sE9D7Wpm\^d)7`1"Wh!\+hE1muId0Xt^5\tmNr"$".m
%(:Lfh":[M,T_OqKLR73eZVAtYaGE[4HpLdlcS.p\nHpci"@boB&YeNg>Hf5jW!rN#4(na"M='91/lIRi\^N#YHRk#*r3C)h^nW.1
%,/oM'Rs`^87IURuA/Akl?/o[1s)j7*?%a*R%<?`!Lb>K,e;c@+>;LueI24De&;BYtoK!@s=i4^U'=\q&h8X'#&%'MCjUf:sG3AT+
%$EQ*!H`B$lQTa,(9oEIfRtEOQ45AL/2IGG.GJ1(R1Ke-Age+@!-qd/?qqP?j-%,HFEah4FFO6^I003SC$,=uf;"43cII1s"-%D5I
%_SVpj9Zr:onm&!!@3Oqlou3Oa8p]<Y_ADsn1?8R\>QV`ueL1pXq$tuV1Ci&DGhFu@E;#,[6a?l;XF`hmbB(rph4bj%)j;?cB'Wj*
%iU<j*p>f`i>N9G4W.Rg)S:-BM3VY!rF`PcaeVhWu*JLc3pSlY=^$6]KN&E=h(!d&(mV[#t&[@h8KTB?I4!PA]jWtf-]3cW73&In$
%S1Q[gBZ@N4%m-p\a-lu,P9=2QCSrCKf6<;AdNY:J&Me.Rm`+?8T:?#\>M?<c.'"nN8(]cp[DRbW!p\QSCOAsm1+t$dVaEY?rS-l@
%5R_IgH/t>)Dt,q\D:##olN[Zn@l"VA_#^hY-_Zf;_JM;!I"/X%0u?t$Vl#2QHa/aWFs]h:+5rC-IFF!3nt0*jlfV0r%Rci*joA\"
%=cIjSiE5;mo;NqBbE,/,85>J4.(@`C_BR1,#3?oCY=4aN<V]tBl/>VpZ3eoucAl4:'J`88UAA/H?)Em%&?K;n>WK8u2hZ8mCBT6l
%cnMXEFK2bV<0)jH,"/ZmKMsq*$%;(/`!Za2\X^5n\P1".'7u.^U"TqAS",-C8GR^2mNe)KJ4E2-\!_L0h'o+29%!(b]Nf%pen/7@
%`JsAs):9WA<cnrX4lNRGlJ+a`q5F=[]m"7plo;/$h\F!-cnCE@*J;qGH^4CP2D'\sTM(*H5<1&;'OWjJ_?(Wt2d-polbCTcb,TO.
%"rh6+i^WOXKJd:\UJB@r<EXTM\WVV`ab\#J:BY15Bgtc=)orcD-mdt\V9N;nU(rB+g`m1dWJU)8Ndnk($Im"=2aGiUYQ4BWDA]C=
%/?-FMoI?pjc!9gk@0c^V\edqD(80]cXq[[<V/DF+q"3KBE5Uq\7rVcK0%*r+eDI[EYK5jHmCqe4=+PkZg2=G`]O7=FfYoI4VXuSe
%4]Rk;C4uKb\.AA#.Jb3X+\!@P"*Ik5BJis?+I$$@`:9C1@-9X/dUGa9+oj=2(hEt'Mm]pfqmt;QYh8&$q!gXd7$bWo?kEarU!#SA
%):[GX*@q3T22t"'E]NZ4!$nS'pI$#k)MDJIm+$V7MGEE%)Ea2%U9.tT7C;o'DuCtUd#sNU1_R:sYX>+*Ku;M*9aShggDr4^9kI?V
%!\H0R\84n#\[RR?PG&G:5-NA@pgABK&ZigUrS00]h4^Oj_KbU<1"DqR!R,-RhQ#5n<XhS&C4jQH,#p/b<`P3T=?#iJ9`q=hA@uiN
%h%FWHNCW:k-GI:e[G$jR\kH$4`c"5L:H.gDNKXK-'o2Pb(I]1*S2Q.kQJ#Oec4Z0pUINY!:BO32gp'd=@@9cJf_`Sm1OBl`FRY`e
%Hh8"i^X<j4/`MV+e-NF"Wr4*dTdAACm"CJU=6s+m$87gY,3^Y/Wp`8#D^'m@b_)`?Pt,nR3#m=';MA`/=+n/r.AUC"4sV<Tk7$BE
%`k]`&a>e4"m#W"%[=Rc-ALMEiI$lCf&Q`9aZnsb7PS&p2ofU$[o`[sO]?UHN47a[o(J</8+c[*jlF>1j8JlqSYZ0)q9cm3,LCsSf
%>WD[cVo%%Ae68m7d0X2_hZCj8/F$S`/@]1*YhKY9#;A:3gf3)?gptE[)Z<Lcjq6]'A37@4ApDZM"-1c.2p&-U5\qRiS*OTi!2;u?
%OrQ#'Dr(fBm1,0-e3dCRiGBL=Nl6+c!1B3'B\*YB+kAr>825/^;!Y0I.4^(tPa+P#i+*m0"1%d\"$BH[lhS5L$-3nsED8bghClb,
%DBlZ%BNWfp9ZW)O!:\9Ej\Sn/_Dk5"LS>)o^.P.sgVT&[L?]Uf=0Ve#ooK=iKm6+i@*B0>b>eEr+ZtH-fM]5bXdP1j-k#_;R:d?_
%dHh%k!!qSCPK!J,1:S%*1a5f%JC@_1Z5@6XK?,18/U[kS?WL!EifpfY,NfZS'0E5!;Or.QBuHnW@fR=tPg`9J6?P&tpD!2;a97$F
%:>L%$L9/l$,n5XZ8YN#A>c`6^&V.BOS?5%bE1M(oJ>e)J2H_=`X3]114]-hWr*gQM\7Bft;CmZ$4/HqP-S\Aqs+qWn5ZETqCS$I6
%`98!O_<k)8WtM.50"'?L!?G5QIA6A/V6R"D:U@o>-+-B3ct7</2"?uGp^i5YFG+$FTuDi_#kVcT=Or:+Z9B_=H4?t4jiS7[5Gnsb
%]K%<VF<C'CC$4VP,/G!M/3t!0UDf!6]+YB5.`@-4b[[uj8_89J![c+'k/#i:B%DlJ`1LapAnQXJ==hQs=1HY(3]R1%q%0C(k&&Nn
%LMD$i;4%'1T]?*$[u+/dEiQug^qCra*(KSV)Ggo?rM>X=?ED@WjO$L@U)*$l`Njf9H(T%C,qoh93TD!HKqCloE\t'oG't<!;"/=)
%Ak3<ONP5U^/[;#i*"##c8h30A2$t_0f:?&h<LXH:A80el&?4cdJ:<A6UX9[JKnQ#`<Y5DM\'09TI"Wf\gS,-*&19-U5Sc@<1S_?R
%=dX)@'\gW8ThOitB^cIa"W([;,HQY*WtPc3UIY+bSWdJda)QPD+gX:b4?0C?o2ZPH8'G[N3&f6;gSNl\/d)T1On*>e`VE!jl\g#?
%W)ZZ/)m,+9DJ=QA'@.>ljPp<MA%MTf1l2Ua!lh!=-9[NePi3-t8\9`^dj-kV>%j,;Q%g(rg4XLbh%5t>"P0U@9EL^pO2&m`,V/D"
%MXq<_D@8GX!a2&/`M<%5'c+*&!AlqrX#ALtq>f8f"*c?ZjS*GWpMn7j"d4R#&Nhg4>(hMlMgJ=daE:tD!)XDhO?m6-`_WY6H$rdV
%OUTNc?m17eBT]gjX=:Q.PTb=,rb?1^P0d;95^c'fB>f$>%`Jt=[BW1tTi(HuD@4p?@]7XC(qr-<!^mmMd6Yru.cQELY1isfAV+6p
%;gkCBOMN<n[(@o4ZsM\M:*m+f!?]A:CdEti:#tKb%uP[HLCk%O"W.m!`jlsICG9qCZ2fdq#^_+9cfmA/+C`04LJB7:UK),<or(6^
%VF8ZiCBhr.U!eoV?8"!aZ]]/pT'46:ml`1F.1%#PT?(ka!PRpArgPYJJLj(i-kP_O$Yge$<A)*/cN+H50EH_RFp9]K%aLV3*fS&I
%*AK]SRjQnX$OR0j&b![]O,I!qHV:)DAHFsPT'da(&mC$"jit*U>+hm:9+s*]WlFtoj_0e3,lAe%(p)jhX-%h9-H$&62F#@1$oL^J
%.`0"7Kq+C*gX9h3(Sgs%@B*;)d+9]N7c3Q0J4n3XUIru@V`-4\KO8QRcu9G@@duI4gm`qW-IP)N%69pXppFMTI5g<Z(jK08i/B"u
%EJ2_U+4".DH4f.?*J)rETk5-990H3g6]\65_S\]IZ5mX(J@rW7grb!%a>7II0o(V5@+^#Uc`$U[O(Omaphd'fCci,e&A`3!)JRi5
%W9G"U7V.u8i,(i[bt0R^U';-N=l4kd*l[B&,nltr:hrok;A'27%ZB@7b_1?qC6=@BR*VL-n9R$UL5\=DSglaold2KN>IV$r=u(5/
%/1:\]['>XqJ45Fc'!YS%FlGcb3T,php5gS)i\Wo(i5>`6ka0EV9tGidba;VYMPV[.r,PRci$h^h(\G:-idfle1LiI6_!8<h$B;8,
%99lCT;h>tN)Q!OSOY[28&pcA4lSuc,E6sO<Uo4"Wj.1`q?u5&KO!Kt%1,:k"*S-"Jbemia@3Ru@N58_B)@Es6GUnF69?-i`Zn0&g
%(KBXe7\lu+dpe?9mD<OIO-(fWPTTRe7$8qfA5>qbZ\F&tUZ`B&3#"T0r(+"]jB0)rkEB42_?tCD,JB[VTMNr:qRMPu1)`fB*!$mh
%GIpXO)`)_5kRp^@=#^"^5#0B`!X>If(F,!c'dKAVFIB65R[[T>4D.rjE/4jc>-H%Y7EqNc.jl8qS3FYtebJQ#&dJPS5,4)@mIt#p
%;n\d?CI;AWeY26H17FZ<&?#^aYo]6[10g+(`I+peOd@t[+p?9.F&q!!5\N!5K2a4?0":`lTc66ub=#0TS?O(h7S[&DHpIn!iGBuF
%eF3N8^sHCEY'&3JdETXT$1KHM$["d`TZC(S<lB9fi_X![C8gD*('[)9l:!Dh5["u""+\IVM,mR3I>t:]:Ei;jg)H;p=Q"Q@B5E==
%QqWDo2E`c[QN[6l_Qr)HCaRYETV+$4:BM7ro!TC6:g'PakQ)36n,p@L\3\:;D1p[Y0W`ShqdU>Q"[?G&gG%W=([o)`5k!WjmN>W6
%"[0Br"ujN,Gm$ChJE7=69bVIs.Db*6Sd3V0"&9NN.Ka31lCe](jlf_F^m0@!5m=Z.C`YF=k&Hr"rC*Y9_IX9NPCjJK,H/VV'-a_)
%9Z8-o9;#$!$)gN,]S=6KTeL;PJeh`+g__);1a8bEN>"_tU`V)hnai-"<li]n:t)^3C;AXpX/-9D9a:Z&YS]u'#'qC'>V_pfkkSU<
%)p#M4.,I5p-upjPnAE/j+gE1[!GW$7U/Q3S>10>Mq8ip_gATB<Y$nVZ7sLt&HXk#s^uKgpLO2Z)B1m9/4J<)h!8`g>1-V.d5f2Rl
%4,<H8j?PZG0drmQJ.Mg;/ekW'U*Wr0!>-[Wdbns.ns3-cK9doBlmQDL:^9f1;'9:*5dI_J5U*m2j[4$$WSM.aN$IqZ/FhETV;XtT
%d4-^..FVH*j=_4#WAqS^&-Pis*.[NH(mE:p522.e0SgTtO`%bpLI\WA#gO.OUGtcY<">ul#oB8l!O.C'KJH%.&:#,8Pe_kD6/s^@
%,IA)E$bGWN3gu&0/DEUUD&-HZ5cF6pDSj8:6metT9fE+!.CL)oc$%(b913>qOl&rDLXO'J5gYG_qMs.5QBUK\)L9t]<F8jMQFMf=
%`ii015<m/3O1=M3#m\Xg:dDMjRU!6>H_``s=dpO,@`K@hYA=l7)muBl70*i3Q>Tai2hgk:\I-aN@u?:JTKH(lI;>+F2[!Qn^gcBV
%V`PCrN^Dk37,mEiHQqEr/!tA%*$LL"M-[L(2+HW1$dr-^Kujb";1D4`A<b0d.#I&Q^r47VF.$r2gWgiK(28][JB!.uG"s4KGC5(K
%VBaT*QI_f-WDF[]rM^+J6Lk;8'd[=o+Cm?85r"iJ'r7DT8Af\>A]Pc(.pS-)<#l90%flT^>Nu_$F[G7eDYQ2\[YSFT0Z!>=N/!=B
%,0O@ss/9bdnes>@)XFaT-[\Le&hDM=R?5a(;@Rmg0=%"?%WduZa?aH$gaj'V.@cC`6;/:174UDa$?7dK>7gGX9Dj2nkW2OR1^V'>
%CTS='6#]n1s(Jl"aW32EMEbbSAOl:1(.E-mTs`WSPnGOYjFQ\eIWr'@3mgPJQd'!ubLn(2cL.>J(>((sJ<r[_8MGEg`f.]u]1+EZ
%Qp&\P_22cVa.X$`BOaI5IB*RJ?G-M!_>lZrbqDRX[1ioLC,KJj;u2qU"ls(qiD-rO@,-ZsqaKKJ7IrW5hF:j3bs8UrY%e'Ai2t3g
%L.>\+8MR5:BWaLs0DPdhR:NEUZJb"uO05gR"V5R?*8h@Q<0S&DJW0YCOYb^'&mE$RjSurLSu?>gAnUcr,S]Z1jp9H15edK^0Fm:!
%RuA,kiiu8!)[<eSf-.id]'()>1oe(.HmE`DJ#AX4oMR,3=tuh+&%>&^A3c!cWD$;0mR3,5kS[rcZ:;*@3]-f$U;<@b9AL^1^s'e!
%^kg<6>)6pW7-\X:h8`5bm-i>eE"n]f@biUWG!uKqAR+Ft9Ki%fa'4Ol(31',`bHs@%&2pd9R`^A:"BN".qYVmS:lfcEB@ST,bb)(
%43RmXK7\_n(]3LNWZ\#Zfa6j%bXKrf8BMSNR1#nT#[+O-:]tI5/fY<:dHj!G4s*ae:UQ$bhTV3O.&)cq5S>\s(:0f$WJ.n<Hd_m5
%Q(Q/l2?HBOF\`@!joS48cBg7oYmMsY$u"/W9-f?YM%IL[,lX-iTL?i-"@@:%69afli&)?cL75!64Y@VeLAQ@_<fh\C1adDfWVNub
%7jRJIa1\@@3CnmFFOQ7:@:3]CTJ@:)*s4jBL,Ac24E(I&=;>b3RdI(I8\fBR"]DD6@QYCMka/83CKtK?mhBiDWU*dBgs:2l04,F*
%9E">]9)ZZsN<s1[0etdkEgQ3E@234AXfiAnDBlF3]q&$>[1%Z+4>)t.J0Y%Re,hQd\$Hl)O'5h!eH9>&9VZX_CsX_`Y5+/&cpl)G
%<Z(+0%]$sGS0SY+M**?:::"D=G;rfWWhif0cH"Gpq2jFZ7NR,MW;-gM(kmTuQKJNs=k48;8>OG`!o7Up/m>>!R156V?NmIO-AS_H
%TgPU::e8*H0+jV!K&m3LT;g@E:=dCL82<HuOpCn6NN!Xc)FZFkR*%k-#dn68%U?*f2]9;U/s`Bmf(:N:`d=0:8r1Al)lVe%TNF#T
%eqM(q;ZTPnL[6fMR%\*m4,lVJ)qKhr)2&o=H;q<s1.+d%CP7:ZL;sIX3XXEQ38I']VNW/;+,XHq&q;"Ki.Wm43`B]X1/q>:O19,T
%;P`A#_pJ`5SH23so0Me2cg(B`Rm/Y#\IJr_oPb!m3?MlfMmH`1,9`899HQTOVU4^rL$6as3I+9^FCu=[C8FTNA3`DoPI'GQF-,X;
%HcS]RblHC-F7^N!(eYR)a(X.KE-t+HGJV3f;U(()^a\\O?-<Mbhu04b<<bi1!?os(,[:VPJ=N]^c%N^0f\OGEI@gOmV+gIq`!DH>
%_jOB3'Tndb<kUu'WZMZ4#6W0<rmSWOBl(V47]%&q-]5H(Lms)(,d8)-o"AoMTMJu]`^pGs%CJHVF*KDqJ(j9N;$sWLXGEC!;dk9_
%Ko3XN:9?@FCEU6H+aM0\dcbXQ@gHA2R5&q`1;Z=_\^C@=O=^p!''ou=)OUl>g\2s](/onUr<"u57L2d1n&%/E1Jaep5kk*%jiP+@
%;8Js&On>gW0qmNsKEfC]qZD=uHFB'O1E9]MRT+2TPGV2/l+]/9Rl6CtX%2-&MIeV@E+iaBMQne8)Nu9AiCUP0ldec>'T)Ft,I(mh
%_qaDt(3J,(9H^`Nd)pTOR@D+)NOQ#PgJpM\eq0(G&WWtpO-3li)XF/"etNM"7MZqRk:/EhnPTcmK$$2'\$u^++?ULW8j8AHAEX:a
%9?[mP\r(ca!5UXo?*shsUJ]XC'gerh.j%*YQtA;`-[k.MZS;=$ar>qlOQ"?W*<0sb0.%%G?r0maCL'6/@8]S*ktOQWNTbH%^^q4b
%+S1tRl30Z(i"J&YZb+*^Ma4+Y3/.1aJZm\OXnV`;c6=otj-Q[PBc=i"DKI`u*+rkJ9c:@Q;sSa]b7'J&ZaOBi=(dL*cj#bU%cmFC
%)7F/<<pRh_&?a/Hoau?0Bn.\@/:M!MG38L-->hQZgltcZW,kE/2^=EgXf<mJ7btpH3%5:$9P7cBB/!O.egca>8Zj[bkYUS\^bH4d
%*bosl&K'%]K:*9pS+9@1j,=M8c)K'="3*P7`],@-8Z*n:MAgET=MfonK/CE!.)_0gRN%N!oSX0D8kkjb:T[;AZgLfi+3\T7R:N[R
%P4lG<(hH:TqF6XP+UQ4Q3(+%eaj2ReabtlAGB']G5<-DDJ-%R3H=_+AJc_P$>N77i=0ge77Z)h8(jf1+ULKJ:KE!q?G1_F-fUE3^
%b!smHYL"f@6Uaa4QB?PAm&II'YkkZC@>5pl=C&.tZ+$^I^mP4G9n>oTP6VH!7\0+uBir'B:,HP<pd7?#$i%!"O@(KNE6+EVkb`BR
%i/uc('UB"BHE5=,$6o20n7#SWhUo7t=F>"kA3)b"Nf5I$"g_eg0H-9,^p70$j@mF*E>Qk+YHCW7\C1RJAX)0hjO&PH4AiQ:GY1F]
%QtD#)/*!-p5>`CSr#FV$T."PulRNeYi+0_rd$(6a3X0ckps0?5N7?Weq5rW52M7nQ\Z;l,XoY";eMJLgW-(d*nmWeBa,ksC@f_K5
%\j`"KLudDGNn,%ETVD@VptE1-(pJOR_!nEa`dfUZdd$IjEQ1dR$N_Vo%B^gDh,ZG4BeC1]8<u!.ibTj*jg)'+h_RS&l?BHF*_o#8
%7X++riKsRFs7@tJ?[_Y1h:o,_GBS%KroUU\5<Jo:`Tph*ci<t:la*Y`=3k"HXNR6TJ,Ei&p.OsLs7kt/5C5p#i1;Ous8Md6rS.A?
%s7BZ(p?f3]m+9S_n,HU`^$:+;a5:AsJKZ]8oLb,FHl2G'ICWZ0Vu,N0-6M9\VJ6!preLKFHhJ7<R["jC8AW-mF:JAp3r)/R5!FOR
%c+apnrO9oO/fRf2EajQ#;I&&#cOWg+PV2AG%WP^F*,lic@s=iRAKr(lTO_,X[mO,]'n9-i]EQN=AmSR!?jNOJ&X13P$)*i=h]k>L
%[EC:/Imt'*b(MG\:W7./CHb8t<Srm,=fEU_O?(=h:\HR7^h?Y;OV5i5F%X;Y/Qsr;_Oth.kj?@1KS0riTp.R%JZmVY8j@GdBP6D#
%A$n!'bfh3ed>X/5+=r,;/d^oF!*J0CP^gi%lS8L+R@$f?(gN2PW*OPueYM[?/>GJQ(Vu,4bqNVb1'*FI3@+bS,*cgB[k&YSK>eQS
%q9k0s%<q3[?0>a/@#>.6bXO,0YY6&##g&2_lr+4FZ-a92@3^GYF90/A'1Lb%\nZFMe]890[PFO_iHGL$)^:A\6R^cPUeXhGZIuR\
%oL\K;;mZmC'e'$@+>G;9K8("\akBRB@paaL9P@=EGei+VX]TCMAnA)c-B-qF!S[r,NZeZaSW8folF7,4$581(UX==:!H99Id5mPc
%=?B>Wf+Q3Kpni?ma"Q`!d9u)4p.c==3jN'(?rnr7.WOnP8[X-R+2r&r+H.4]::q-C2ND\o-NIne0B+fh&K%T[0\V98e*b@e'dL]@
%-(`1608nd#@J>MeS5eh6!8&4P@P@eiF6Ga*+ajs&(EL#J"F_j3(i>JNi%"ITL6F>q:*XHP)^Oif":i,gC!'J8banXl9rau3!(m'i
%@F@Xup;_s;CPIKSOIi<Pb]0&m^>&G[&A[V1:q[%'mL0#B`,)?g'TsDs'2!m2P@7jL"a*GSBTT\h64p3H*fG'8!:Dgg-`P3$/Nq.o
%T/rqb\?Z,b`??/#J6sM',.)J:aJ@-QB5<)ZEZG^ohJ-.C@[b-U[/A`aAO)@"#o*r@5/)mjY2q]W<#M`m@fpR=li7&;YWO?TJ]O@@
%gpJ#UP1fI!0_B5ST6Rk*UrH7)&@hlFG-)CG7UkumT$NHQa;BnR8Ne8G=SOJFRjlWA/-DDYKP(.]!.Mj3%B">-.&J]?h(CbEfel5A
%b(1qf*Xr71CjuCYB(9GeE\qH@a<8%V$UBBDi>O.`#%?rTD)O`ST^1Zg13=jUT#K@/Z4QlCAl)04#`;d-%+QmHkWR4s_L>=FJFT%n
%K2F^fOIQIsaGEuYn<jTK.;6V/R0[05Ei?okJ6%CS%WGu5RWIl5'!$\to^.Ho8:U):Z#O$o&;Y\SS5[LsG#%*Q@1ZPmg+#OEbq>Vc
%6VHEJ&0l^,#oZ_N;4r5sU(mkg.98r.EbhQQcqr5(ZrJm3!Jj<X';@0ZfEe7cL/Z/(JMuoTpR6)_c'WD`kGnN`dK6@PMQKJ6O;J42
%,%3+)[@nJ'^l67>m*Fnc90=lHd,*U]BZba@m9PSXKg(aI[Z!LUV@!ua+aUY#7u"iE'89,A/M:PtU5,:^UK$!#@%m[aTA1uaNMugd
%5;I6E=P"&PI$)dej!=R$;PCT[\m^(1ULBD:->$X2Cd-n+nP\kl6:PNgC==[QM("iC.#SY=LiPm`(p$`QeB*i*L,(P:Os>LM6aQsH
%G7$["XRBO>hR$6UGGKg,8KknJK>C)FLEeOp@i9NY0nQhi8_U".7eImQl?_0gFb;H*&sG$!@BpNlP_ZJRJ[#b';<rkB'8[kC6cBX*
%*,)4X7gj#L[GdW0J7Lne]f"hI#X'nXWU<MjY)@7d6A%._j^rh3UlTMQ77R>p/)^[AZc@oOK-$&R[#JI1QcIL&"o)@i,T=f14D]:p
%T%)0=,8G8WP@a:jK,O/2;=U-S":Emt!d^clG;i^]I%hPcmmj@U=_Q%BUPP&0AuaGudHBUB9<M;WdAeL[O#&8q=GP18T`Z4L\ds<D
%Sk$TQ94gF$g="pf@7qA%DXM7t1)]Wr+VTDY4k)<4"[+_gBK0nhDA.m`QK^8_CiKP-BiZb+;k;7"#XM[\bTA!k]*9QerJV2FAe1dn
%PMC_4,$K#<kk!#9[nfjKbrqa>&ege),1%,oQ`G6:!ARhJdlC`SDUSlnTbg<9:=H!q$1`t]jT<g5H?=%mqKetrjUONbSX1dm$.k,D
%TQUV,#kJZAe/V8[h[-tB//eA,"ct:%EB%*D)M/T5qFMl@,$`@U_]^;!Z]dEG'$po=lNJUu/$"uM8`PXqG7jZej6oM<JuUpibVL,K
%V(TWNJAY-*i=Z-s!@EY8!$lZZEc2F9;D@qm.;Q3iqUK5L%Q"7S/W?*Vc@u$L]u+\'#HMD98rAsN=O30(S&Aheq+fMafuOP7AEs?u
%^Ofm_&;"MHYa?/U:?EV)&TYcAA#3\fc0i"!;]rdqKsO*HV^0C6*8=pnD34eY_,HsWD+\oIB)WpHS>4S7aOVjtG*ADan'3'q;C<@<
%:!Srt5M`/]1d6a_ALt\RRZdcmS;G]&':Vl)UqkA^N+!#Rlt@CIGVmYG[VQsHh`M-V-U85m2!cEB?3=XHh&ksiJ?iSS,%*b4c3Ojc
%/OTt#4?>!/*ME`dZ^Qe5=%ZEo0's=8-O>:!R<jMHMflGN&Ha]fY:cgmB<DsMF/@#M^GK3*;k*VW,c)"(;@bfq?_aU\AjWi8\Lbl-
%NolU#KYZ:#L>5%#KV]ld3&s[N9/Xr]d<:-KKF^gdRmMe,3?U:]J?;d?I,OL&UHorjR`!W!jBSgU\.Kr9eI8Y,n:-C_JUr[4Ju2u<
%VH#.3l*i3e$2bn->[RSHSiRDYaAG^YF0ME".@qmNcIp9MdOgjIY`bF=a7+c">@@N02=f5M'P=jCEY&uR9Kj2!<s:N+%H1,19BoBc
%25*/Z\DinM(^TkM?P;iafD3AMYRS,17?%ES*B?3$(+*Uu:TI?KA&8uh"&T\`8YNuDoG0oK%tloV\n\rp]ncs)8$stnd-45sjm7^S
%R"9;4ad&j?'G,PXGQQ$Dr'^X?N)&hR$F8Y/no5V0)-7439J:G)*-b!-0;>/Wd&9n`CmQtdqIKdJPIsd6_+Cg3GsU`e1Zg*S"r536
%"*p!T?ECC=bOaBPehV24-)XJZ9e=MRZ"B\C0gq&%Kr8&@g9c3CjO#W&d5G(Mbcj@2*nAb.1^P:&7h4,--Q0l0;oIUCj.;(t,cF@9
%/(t7gZ%uq1$uO&!'-V`=[C,Dj>=#rS^#<Y`s(&Y91<MLu9IAUg$0N7KLf/o,$V!KYp]*m+RQ<]sQ8$3S3)T6r5TGpkK8JR%!Xc^Z
%TT28_%J]>l*<fV95_X8%.P)?B#c$j"&S_R,W7Jal[#7PF>:W.:8I$WG(s[:#lJpi6oJ;1@<B*.Z]d]]b4;f.PFh@:E\!hufiLUH.
%l@KlRSj9%aHJ!QZ#%[l$_Q_rc9_gSm\=*pkRVMt&T<(G2>$s8C9jqqBadfWrkH&O`Zq$(KOLf&$@7+!N_US,YY+X/u625%sDA2\'
%aX\G+UQm/biR5EB9n*HfjlU@"7c8NMN1^u*Bp4E?ijpbk$g*,=N)1>TR67WNCR#JV/fbo?C7FI]$.+olSd`.%G"7;#T#=/aOY31*
%k7AedC8RD-J?V27,<37,AKgnACTs%1)GMm&]]>W4O&\?;2"uHq:+'(Yl*E6ZCo00geQt,B+X<&:!:H*R?UBqu2-NFE!iV+X4ogR!
%`>#g]_bR<P_;)('33"*H/1U9'L4(Vh#(UEWX;,Q2Q?1EEFXK9<,*S8?fa-7<-1+DR9+E9TK8FOu@R:Z'^IY7dK3=6,E/J(J&]s%B
%BdP(&?9R=&VpW:+=[mM'>?\98Sk?lD(5MP!8.O,p$m$TF7X.P?QRsYbR]^\@<^abB%PchT$4Oq!hq%fk8Jr?QA$_#OBY`gn;&S$o
%:CfU,Ou1gV\"G?%F\QU)8d5gTe7(4:=MGIZ'/h9t*`\c"1$\\DK[D=hA\0d6*2/[KVO9^f)KtOBSjG0p=De=hGR6?DlBBa\WJ8eh
%NoX@J`]DmE^h,u4MOnnA"r#\5D1CFU$lW))eC!&*c(BR`JM)<=]3<,_)RC/%f_89fdgUgq>s]QZ;e/C3fF#$<QlqAB]uFV%!=V'3
%k\[8rBN\$2BNM#s(6-UJl?HITA1JBOegg9*=&5h3\W"NgZOr(K:VbOO9tVII(\!(,C7TEgO6R#$=;6o`c;#P'bj7l"P[';H1Nq8>
%Cl1E:#0YQT*m"D&'l`%UhPZ5T[#H0c+uH(W+o1"IAs\I%UG`./NfRj<hHI0#.sC%His;F1fj^>#4?J%2?'-(KJCP0?X_eA,JfR$d
%/#lK#bJT6h=DOD-Ht6N]a4mQ>%CW]]5;sm@\2>fehU*mGK[qa1e5A)Y!4.6:!U9_nB>Bk5JK:(3adL$9BbEn"2hA,_MtfhhViK'\
%bm;e^m`Ats`?W)4,m6h)B"K$`;U`&THE3OHBoCW93XLk=[@EK5QY&$@j4ttO*#eq.,ftA(;Kd+dMXo&kMr+S94s`^4?umCob;G.$
%YsJ;[Ik9rSKl&GE7((g,ZkG:.%L<>TV-EKW_:QIu#5t''B*>U2-9?+,/ql%<p47/5S0>W=<8.[grujVZS/A%WXAA&OQqU^XgRUfi
%ciOK'8jcrf(Q).+UR!@R4@RN>;1OJ"WSB'bS$,MS_R^0e5Tl"K)S?+qDK@-9%t\"!&U`Ug)rj#sZbbRQZ%u1@]ci"o+NAT&JSW9E
%&2=9ok=V':DdM;BpmaB1R,Uj6jhbO?V(0I:/QgqKGP?b>2urCE7^s)k`'AP&@#;BMF,74XI6$Wk)_C6E7h9.t!\N;Y6sj+Oeqdju
%Qklg]krA9&3Ks+EYtJO.e:<&_qM*@q,G(uu`ATcfC7&U,_<_I2*L\15lPumB$DSJ**?e0T>6&MDS3Yq2rR[p6/cDfV)[M:W'8M0-
%H=nC*O@J#MqQ4:'Gd[HkA%iY9:b[TS]<n`Cj:I\BSD#G_"",D:e#>%\NWUDYKi#N_0!T,l=S*m#!DXdC2`K4B9l^5\PAE9#7!%&7
%ZJdB<IS[!FoG7bU7Zt^.BI^XPN`#h8#.?cH%%A$7gbh[=ap,j9_KF`mOZ@4uSUcud9J,O#mU8haY>cJ.]om>1kci;OVEsf>%pPR@
%<4`>tA-4;LWmOIn)7L"kI7k>28d;M:8W*Fi:I^eucig#8#/A(Q**n&V)\BpF7,%q+h<#<DiuZ+uIa\5V'V3+![/29k]4M]J^Pu&p
%h7j0bPe`.#g&mDb_Z$$aYV\c&;=E,"nYdeN;lS+V*)fai?;CVI&9tDRSKSFG>FgGtC=4FTQ))W%jGJYcM,b[4iUfr:pOFp`#==&)
%]c2[RkghlT.l>],<9YGPWB?<&>.=?ZC]gi;J"C(f/OM\nYEg_-XV;[!FMK3<#AJJC&>%Y4([C$r$rpa\2Cdu^QI9quG7,&?m<n"q
%]?\l=3*k^+JMIVB3aGEX\@'MB'MX1G';9W[#Peqs*%^<>8'm5bW7[2&NR>WegB\D/L'G,5lJ+q4lKa77$*&M&>hcuqY>ae91np`o
%,XfX;eD!GtF'o_RkQ!l8qTr-Dqf06-!>Z'?5iFP8>p&7P][i%`A+2"XiH,o_dOgBNLbs1p,EP"llinbGU.4>%%mX/fN[5",nS=03
%2p"RI4NU;`6L?U/+q?L;915"WFJgF1ZXON+AafsCa&7>4IaS^%0[$'K_sh3EV<)KAN_E$t.g]-3;@eU+OV$mcU0K3%0L@8/)/Q]0
%r4G=^*+#qCd+FLGB3E76491'd2Q2tL3@.h9o<sGm`t(Ydo5gYF#&&`m/fZgG`q:H,;RjD`ZaXa1KAq$(@-(ZLfi*\3AhFEn]3CY8
%!?cB%9h?0HD""&B=WWY>jcJ"AjC;QfANSt-Yh"[Z&u$ge!<.k/XT0HSpp#[N28fc!"ZOP/68b'PaX(B$)RpEDXi5k0ZrqMlO)0V*
%"W,W<)UUXc$^2-MCP+?bi74O*6E(sepM%Sn4Bhtb.++<>!&RIOFZ7W4ZVuNcY6f8@W%qm*gHIL!UB-K"SjP??s2E[0ZEkq51k<Ij
%eE2+j;\E4"Jj_^m#\62f6<#5V"i,O40^#S&J;dP^=4scXX_Dqmb7iscc])["Xh!DcZ/Dt7F.fNdr1$)=8;P\T!X.hnmPtX)7qEH!
%3`.b-0`_UZ@-Np0"kFS%2(-os\GWQG9!X)N_JFo9MbORN5,Gb.]$ae)&\4iCrC*c-n3_aRPYM](85[Xi[l/,2&pqSFLS621U$Zs]
%(^AC;Yc^NWX#^5De='AYbVJ([nbco8.0G^Hh?mpL?%,fVC6!*F6=0W1'aBRP9emVJZnf<$50dnbWQX4Z5IY4GilKWjR5`#<2&(fp
%,`-maB*4CW[MS;NM0cmM_Zr=i7dA)j02<hu%WXke\H9;N@!W@i]+$k4+VK/S9Q(b"O==#"pU$8n$5NY.F?WebY^+D,&]RY$DX+5Y
%FhFKbO^aZQ3K?OP36'/$UkMKZE;b+cMGVMN[J<g+^s6-j&5XnlF^.b,VZlo2ZqO;e;dBUJ?U4l,cu9dJ?bh8f:*BdqN>Q9ECJf3,
%)%j+X`@,&q`HU1Kp*_oh'40@b%BP3\`(T(_M'Rg"W1HY^Q8mB5]9aH3Oeu)^f8FpXETgfo(h+ZJ+e2q;WjI$_,Xbps9>f)Wm<(*5
%HARtjg)6K`2l%k`W3qJ?=uddcfjWqRQE/R:SN_IdBM`Da;_E4d.!`O;?/*j2[`b4=e`<BJX#;j$6=,lf!uX3`;c89G%cFaO@&L&;
%&:-$L#]^"=l5ZTX6j8I(4==!%+jS6X8rJuUaMNfLX#EnCis#sVr%p&&Xa"?o/9s9EkQ4Lu'.qN$F(1uhIDK6B)i?Tf$OpaB5qcBY
%a?VHSUk6ETEu8`\@h)h_na&Xp\d2%`fEg\Aln)LG[.BAs[A5R&'Af\X<5.:uHhA4'Pg[hW`g+jsW=IjGf@`fKq:8CLIuQ,Gl2V;S
%/(Yjgl:dJOKY9N8O?T2NR5DEW0%n-i+N1>,=9Lb(S>;La#Y2RP*]5ZYU@j.12P<Dn^^3#)B\EiTKF#+C9f:dP*BBQMlj#cETRcO_
%AXpQi$TS)3s,u=!&]Y'Fm=\7gfM^p&5[;7TqQ>fanK`$4/0G-B/n.6sHEdHL=:2";#//[m[.e%?S1o72_;_^uR7B<kiJpi6J4hjj
%N0+jK[pBH`<0P\CAfg_1)ED6ed_KXViiUUI05L;\).7tOnfme0aHMUFin2jPVi?)0Ft&Xf;R>XmDhU4,ZO!$uTg2RFPQj(;h..s/
%RNRW"-kp@D\^AR0A19bsBc.ij;uu'Eg9Vi[nPEUTQ%/TihEa!m*\<Er!p`2&8-\,D95456;k5RARjBnQZ[/]`G\02*P6`dN$JFO?
%$?#-ZV--j!C`@eN1iS\RZ+K?6UQJdp(k*fb9-[NsKu<&+9+TuAH+4+'b*lai9WEWC<XTBFg5s=bIh[\6:UkFmoZrqPNB"!=E`;9O
%!$Ro0&]:R:G$NH>IikbWE:Ht49#:b812)FRU515]?njHs`MmDt(j\b5p7t#rq+5Pe9u]*cC-r5&+DZfKULBdo,=+)'<-_DlC"d[%
%hpb&6E/%hA<gc5?#h@%;1Cu`$AeI2+U`c?8Q!nOWhcHS.*&eh!WYA9LE^\s;jO%.=cn7/c2hF<T1g,d.MI=O6-@n"-Rn[j2e'j%'
%cAWd<KN?eeDq/2_/l_<aVih[1\;OX0D4MK$Ed<T814L]5GCiun6qCG_X><+7>UF5,p+n[o"q-\G%36Te9sE-d?X[mLO,9"D:D!jk
%0s^<Vl9nOg_4t]*q*c>&A9%T&TmBh4SV7E0GD`l/$nDR1AI^B/44U@@:6gIRUg1)s5'W9tHEO#3"h8,8QlpKL]!kkPV'Lb/-T`J\
%K:e8W!t4?_7VWY/-``VQ%$puA*o>Ve$HD(_3?Li0,$-*EaT#WhAO::-j%([9a[gJ#W5F1G$B?o-L:(4OI8YgTn/fDd5bld2=)ORB
%Elr##m91[D!Gt\```XQtblH0RR)4bqEcC7G3+J-kPo0!n.%XfPjet]Xb+Tu"SEAUA>(D#g%b4b&(N%(%pA8?3?F#;@B<j4p9^XUB
%U):"%(+XF6a=DR(@O>U7eRpItC5<Ji1sXu9,7(t<Ke^1W<5\Na/!Ki3i3D"-,[;J9C2O^A-Om0M8?Z\;@<i^YNZL*KQDTHB*C>pd
%/MD"0g0c38;_ODm,X7'pK1o&0WC^u\'HD3S]k&2\$0jI2^n]9]?R\i*1rS3Ij-nbVU,/YQB@5,_>%+Fo7C([I24@!3n&R%$cG@5!
%N)R81>P;,FDaqE+n)%=DeV`i=CR*@Q`]8H(ElIZ)E^dcKU=(4ZNE[b!4j-Xqj@bVEj,!n\75Xu9/t6=boSX81$?1O!M3t.M"e:0V
%]br2V$IL0(VN4b06buH1rZ0H]4%s[/in$mtoMQY?!GXFC/2:G+l8$q]BP*C`4^G57oeKgLXXB^*`>On4ZGK"li[cKI5tC0qdmo.`
%frW&H89\eQemeA*]Tb;aKLDNCeR'LtP_]8+N/,h-^9b<i3Eg5Qn"fa-4pb<*;FsL!_e658nV)?KhGn-)brf?r[g^DNbl^g!F!1]q
%Tbts:Mu'[jEq28CilaolJ688hi-sKd^^KO7Z+E:]?RWRgJXC;%`(D$u&*!`X/P"t3T4FZ\;[\^SmXjRK3oXrsF-ftm(#GJdD#ha(
%W3G2,,GBjoJg/VpbHM8XKA.h"S"Rmr^`D#XruuE!1>D+3^nV[+Gki?M7GPV8#LGeY:616[(c6\Yq'+X@bc"U*03T+U=.j!6=8MK7
%#)E7p'?_HYhZ*0\:"!amRlKu7N><n3jPH]p^m`1%[at;lQiM%MQNTfLc%Y16UiY45Uh7iqZ?DBHVp<;?&(>8>"\N.G"aaTNhH.\p
%bc@!u0uP3JZmeAO81t,"$^SHfn&2LSjhpZ.3#KLaJ]j;+hV4'6Pn?i"r_lie`[f-\n'2^9,FEk$.KaZ>!U:t+6/eJ6l:o?Dae**.
%b(Zk"4EP!sO$?+%ZZVMMbWePdI<f`F(t5e>b4(WH6?"pV.55Ug([bP*"Q/rR8#XZ7lT^B%S4U-0e6*XB>QCF/3^'Q6%1,0f3bVVI
%gr_%*b%^;!^dSoCVl&]]q)*?$EfqbEqB</k?B^s9KG_g@d1Mi<Fn/UDqiHKYTf=7+UiY`In>4Ap+r<7Th^0uEO>\FgC3)eaFqb=p
%+,qR<Z?5KqLDLZC-jH.FN?710lA!dV-S'kPKX[-=Q*#=DASe6hJ_@:sW!T8I:e4T?qE'^H0'iA'K*>Kj\+@dK%:/W6BE&CDRk<tW
%aSdkP(rH$I!:je[c:26n?fF'.$OkC1'0QkV),\)HjL:P5`MtR-WJUlhMBsGBM5?h;"9)7%/prO\j_V>8H-qOul2jPh;=Y0,LkGt2
%=p_nl7&<m"NC%!B9dK/KP\9?i_uYZ*;A14,SQ>@#>9eF1i(D=dW77q-Jp-15UO+cV\&F@56C]^GV;Y"['P6G?^g0nNaap"X?5JM`
%%+Z@mF#mSFkFlaGlJ:F:)G#bpb/rO&#B.U`YS'-G3Dp&IX&oEs,Ye#rE'dW0HC-Z<F$V!Q4$q?(W.npPH],X-Pclu7W:H2Y^DQp>
%e/$%`/@'eZ>E!W.ZuHUY*eE[q$GEM1ca3\F:\?,6U.N2RWMZekDd"'];6,heVL][4D(b);'SVtP-+9V`*oc0G7;)`o@4K8G<"8Mg
%gAE-FPKlRY2_@t-hG3$=D#'<1oaI\Cg2:Wc4u;U`F9!oBp,]6l_&TD8>IrGI4HVj=Pg4JeLfX>S_(/,&.@l)'WTTge0TNC`I23uO
%L+#(tEf+=+4mcFAIF%k'cb0Wa)qPGPTaJfG5Y[LH=g;*/*?V*bQ%W.&;(Q8)SV@!)!02F\,Ui=%P12)V[aAN3#2t/X1[bVfajO#;
%O*6[M974,TMfi:s"R]gVjI69`?6]<I0MDi;2Pk%58nk^nI'jq8RA.!Pq?U>\UB082K2$@J7GDT[nhpngAKpA=P>H8")Rs.m'bg17
%M]mpS3:[kt3opQ@@TV2F+>2d'p+[83o-8CcZ7*D<s.Zh.;/cR<B1%[%C@")3HOKeB`lRD@7B[piL..[b;7)f/?VeF*PoQ_N10*Q!
%mg((co\otE#W97O",VJEmHH)eKi)&KT5`"XRG4Y@]nW5oe\NX#9Vlf4JGH+'gq"RUAhDmaEQ;s^Bn7$WQ8W+r"e7H9:+Anpo:,n@
%PC-:`':4UMoR,7:I>pm^'XMIu"^!E]M8knDU+1Vsb)7+5ejF%7NfneL#e1nI5n2tp7I9`uK=Q2XeIWmj>Vaaa1X]B82&5#r4+Rm5
%0]-]4QoK4ib$iZWZ3p6I>Vno4Zr0BWRd'1kjMfTUBLm%+MCBP[?(&;;-P*8F'*o1u$WRZ1&Q4q<O$8cf3V;3t3)GdC9Y2VWitGir
%'c'uAYh&am]EX:+d=.<(pnX-'f!e>R9.?6_Y'EU/+k_06Gs[&_.IW6rW4d:;2C-4sU,AleE6qC#9UYKQZC`ma-fQ\!S@&1$6ZZYp
%[Ofb5'J.KUaK\j#m:'VU,eY:b@-iP&J9h;qGc1n@LRo36*jt=;WeT&Z1RPSF0n'@b,I)eq`6nagd5?doDY%#Q3Wk%t]QFDd)(m']
%J5Q8:s&NNEQCpX^$#bd1U(WRnD!I+ZO9E[j4ba"AC.U+i3:Gb_d>!L:<4u.B:OCk1I.#Wtp-nJ_U3>)--;CJpZlu,/1k#<\h\-oH
%nQI(gY=?XpWHjcse5/tOm-!pMHK>2ZjW:JMPe:67[&^T43X!)Kl?P:qN$p)hVZ)cJhh'7L;k"B'0Lo*-OT$8l(,LfR7HOh/-!G(=
%n#V?8<i*($@9.Nub(77nE3H<ngN3W;bbAL6FVRYP5Y-n7W]8ueJi\GLNY+[WI#YdnBJ>fATFe;=%W3aklgpP&:2kr\@dB?k'l=uQ
%MGFQP/iA%'9HXoN41U]Uo).R"jCS&a$8q-:eO,&G&34VH1QF9g8?C:F?BfkkFG/"HZ!S=?o-ug6Gn%=Q$9]"9eQgUnaI4t5NMP``
%E4GDFaj+VEEf=fn.3W"Kk$ZY8D5*"[f1CiLM#g0A93NlNhb_coDdPXeC?H]V!7#@JoJ;:9`?k@p2mceS\ap*K'sr$1nfl0p;/.6]
%\d=ZH;:*Z4`l%T2D,Kt/fGE&")&c]S0aQ)]P+JJ["`i;X/u(3m&ahiGU"Mm8"$$hK7W/efl6]==qY`:.>I*Fu/-5-S1uh!^+%!fY
%KH6&A/fSLAFnUr<VDO)9qGF>?=/OZ:-f#q'Yq3@Zc@5;.=?0e#DqdF]"a8(_O_<K,%kYY@g[Q%HF58<OZX:JffNknD%rLN7%IR6^
%I+=7lc0/O+&6=49gDl8S04it3\]sqQop"$TWnSMtF`6X_^M_j6XPa5W>>;_A#3.f+m`?'sS(3Vpg;R,p@FbJ$.uZ#2J)EN4*l@T.
%FnHMV]ru@bgK3cm<K#foo4#r[=g_FN20%3kTiJ_h2C!"f,$VD0DDUq9XhlsenMX<ebq+:QZ+Fa<he$i2>3Dr0r%0i,RX_R,8_iTS
%XSO?GhTVED^/]6XlM0*d"=K$2*Z:M6\DK.GQ,ot&]"D6qnJ/fee\PUP##$t57nEXK#/2k)pu&Se^X^pfJ5pZ!c*4_.$<]/fDDQ02
%/YQ1NC#-S9bo0eDh,]NJgFU3!lZ(J!]Yu4'2.5$1h0#cCeUUs^[;WIrf8TKIF8n/U@+CBAFZF@2:GVbt\fu8!-OL^2#cP#+]VX[^
%k[YQGhQl-IBmoKLgdYU*kpM'V&t$$";l-/fc5D@05_bZBgTUSn2=7GR%oO2JcPnoA`&b].Um;NH67CDV-tP1CMId\4(bSd=PeA.)
%)r-:']h1&AE^Fi0.a/\`)?h"X0$3)$/g#%CqXF&sU`MB87=%<r+K94"4`S@#,u5jPq3p+@`Ym>O2!SeMa"gaVSbA8/.FW,2k`QWg
%XA[pd3/&CS61.n6E@ks[Hkp[i=U'bu,Q<+aZ4h1X>fr/U<,gYV=S3ukS;oH3A_*WV7[X@<F%]/g8g6XiWHMXKSDt:.$n8Q'WQ#-9
%O?dN;8A[43YZ4l+p.\;93":^L[<(.HK!#]]n.^3p(n5,g/4i=9#eto#=52*^i=eeX$Jc#r9=;X4/DSKdT7OV7C:OD+"(2F7O<t*#
%F@Lup@]ZnD.C=Ak#eT(n0ST2OTU&k$S!c$JZA'@GLH@E[E@Ngg;)T%\bZ'.-V9M<h9i#+";cCu-aeE$Y(:Z^h[D4X,!f:/o,':Df
%P\>-kl!>[s910T"f/FQrPq*YlSZDOKQ%2be91eYEQckN8;-6=VW'n%Xd%3&ofpT,fZaKEu7c;BZ`eop%-0:rZC>!nBnp$>@c%=T1
%LUh_!S?-<c2H$I\@,Z]:*J+2b^8?)P4ILO_PL&7,*[Edi!?I@CZA_CB.lQ[^O,8?s5:HOoWV@6+l]s]K#FFRPH/XpT/99KBQ$T-)
%4=o1^"^+.#6b,O&&0VI)'D#X!%H!>n(-=Y4HR`Dq.dZC]"/m7ja4o,-]$=S]d&X2E2SFU`-*_ceXPZ1A(Y.f9G0BinIT`g[X1-m#
%lPK8s=8SF$YfJ_8WQ12($Y<Hp,GObs@%k,P1bh!'Y)^LZ#uuP_0I'HuTtZ1L<7,^[@F?N$=$jG?7J:]bTd56\>Z!o3<14f=4BaB@
%1ok[e#'oOf=ZpH!8+Mu;]6`,]e\Z/aj;*HUWgZu]fW*A(=-'iTdT+8uVP8"XkLArt.KK(]eWFu-C*4=^(cB2FhjSF)UNbn0TR].T
%!LB5WYo0Jd%./(NO/dA%/uCD6SSQK;Da97kc#-^oYu\!32:HEjH#<[p1J]H(/_lW0:t\H&^5S:(EHm<ZYZ.SS&u"G?(2^f8P9hc_
%e7UC.fWe2Y</8Y3=VhIILMVH@=9+ZA!#jLdWJrgi`!7Rp<g'MtTL!*IOjFim$T0`^(c>nMlc38oX9;KMBp"p,JB+rLMb+[2\lpQ`
%P*RRM$r5+W*YGO[""Ql6o(Q"="@S/%[:<$'Md$UG"fZ&e^'Y9EXu("l9^Ta<cDr"@Ba=ecabQb8WDmUQ!qm>-OQ6>Q!HT@f"K=PD
%K:%ngr[#-F63U[-[SFDHd4o=0916cG:<3Lq=Q+-$igNc'a+iFc?=<#FXG8uX`59CSEj=g`_$(!s:3G`p`*.RnPT#ojLM"\]f9$.6
%!S)&o4WJCH$<KsC<FbVYbB2!f>r?kFZ]8*]l#icu2@Fr`S6n/ODt=PNh2,.Pj&RgEeYQDiIW"bAKO.Xh2F<R#h!%fU$>M!_Ph)FL
%K3*9,mhDt:^.26_o5-R=m?jsrW*<'Tl;:hMe@0+A<HYRL=DlSSCDptg[G@P].hIjrc4#J#<p>cuh+6QujH48POJb_q8?nC0.&#S`
%\c<.61I>#W$ULZ6+Hms(g<?bEo05)QU"^Pjp&_`bXfQQe^fOtEZrJYdmeSj2Xqe@L?'m*68mr)Z!bSnBOM,S`/;Jlk]Ca?/Pn>%3
%=EL-dZ>nlAXH?jNN=9u6gS@e]N=eX6b9GZ_7Y'%HO(qAHC",s.m2YU)'stpghF\SQ*[O]N.4$k.#c&ab+F%Z:7:q)<d:L6VM6p44
%7WR!;Ou^1jVDKXHOMp;n_P7q"N*5IQPikDeh$iHD9eqleQ9^`J(d)a5K8TmiJr6]M/_[7B;Y)2$NH:8sS`ULAVhJaF8O/_sA6QJ!
%!n_6JTP]tf/PH<pBF)f^A#Dl,"Ve]P,`u'U1oP@!Fe$.BCctnl.1o^&DeQJlarT?HROttY:PgD[\^.WJo1DGgCmo[:l-70?A@H-J
%`_!G?Rn!0\V3r7%0Iu=F.*\FZU_B&@]2#^X-%Ue.Cf]b)8$-:K[\NJfQ[/f%;Jbk(%$6I.7/F&SYmgD>';:c<[WK,Vh4LE`n_h1m
%9(GRUq$LF$5oWWTQ8+1Lk##$<5Ya\J3%<eEmcA$u<XI?V**5K,oM]1d(;Y^=/2q/eUB@BrK:k)r+MZPkg.K0sdB_]+gE8t[r5(6!
%=@&Zt?b&ej\,LXQ@"LKQoWKJ-0#>8"4LPJf-M?o!H3Z4u@$PB@!CCT'OfamR,usMa;]p\DUaopk<*(3A+mPpa7R0W!^?\6?NA)6S
%iT?(fJL6mQ7HK_'+$B2h$o=N")811+O_&X./"hPGH;BZ;W0A-(B^l^bmj.@'Zu)oTWq:h54[P:)`DDpWiV`R\j)g`l+btJB#qEhT
%EA^bc<R15;MmY5tWg_.^$t]<lat#gW;72GpEL*#rS=+(1X>D'd@72+3$,m8.U/aj5h(2nhi)d&Z8#h(lO&,kZNkuO:_J0fNI_$m;
%:-.$'jj#BNl*#:]T\ZR,AI;AeFIiPF<l^\]f1Lc/NLE3X'fc^Y;s&GX&JtcE![Df.=<H]#j/J#C;;.n62qRFhPETgB%:fWI#3bUp
%'^;!UBoP@.[*-V/?5T@B+]d[(pO]!HJikV6:@ck$3Of8a>,5G%nA*nBYV-=(%d?osnp<$KQD&jO1FNXb($)>^*=%Og#LA:3eJ`7A
%B#%lFW&8-P$>ib#+\^a"TV&+[hWG\0h1J5X1O@W?=]ZeV*W<LoqfP;(KNOSR8>e@lU\=>!.D45l;\5-I1h#N",.SU64!0BI/mo80
%3ElZ1hb@sVL=i2G($"K$BQYVSBk.s9m68;_=dW]h7UWr&/XBH;@K*';K^GpO*oZ$]?d?A2*F:0W(eSE7D0m^9^,l1N]A%o,ME;c(
%AX([.\"3H*g\k\55SM<0XDtHpaL_olHDN5pR22;(HVtd$RQ)`aLMj_;4tVbq[$o!D)Smb3!PF+;$4'.+`>uKL.s)c;?:KfqToME2
%SBO-AVZDZkC:\6uLXnXDJEk=Ti$JN1Gma/\hKV)[bYaceo`n9gE\S<<pM8VH$1(E(4=n[[/jRN+I@Q3bp4"bHZ]m":q5q16[`@Ra
%qj&l_()_OmKGmL4I-'@5N<CTU?kp.$.uH"]0,AQ=qQ-VM2_<+orD1tY@&a;@.]7'@js5r2';Hg#lq;%L!HRKfV>UL0O>c_6A]dh1
%3d#Kgjr+O\;dc,7p%JB,LN!Etojlp)hJ:Pkg2P.k'tlS9CG5.q*KDrmAnHb9;E9fOE<+^'X:oG9`qjNG8!f=Ec?H#X)]tJ3);=&O
%I`M8^##dL&q'I3iX7FfgFG4ch%MIu>%:N`ET78J\pIDD^4QE@kVn4$0bRK,;KRuPHl/BOHJ++Ldm-D%WM,F_=nZlHJP2nUDO;/+X
%IBraQp/a<94Fc[:Vdp:p,G/0L1=L8GPN-HHCsIY:6'Lc<DbdU;6c[T-.glTj;Ke<0Fg%%R#\fY=6(3<N7&n^C@"abSS(.:kAB@3o
%;gu[S+M#Kt4\%=/%<>itBnVAJ3KfAe",GiS%e_SWEG?^gVpARk:C]eWKS*kf]9"k"4ujOsO1F?aKjdRXY=]P:b_L,hPUa't'g_r\
%&"t-A($)VfN=e0d0K$QN&VCXRcl0X,(,[HH,^1P]H-n@JI43.S_+-:bV!X,Ro7QlG6^-TGa`FV!Df#:T"LJ:R7HsfH:XbQq#E,YA
%E%/,`-b(oFrl*@"m7Z[2Cn:$Nj<W<&-m+YS+=Z"b,SJmRp"Pku::S?@C4(bobn]5QQu1"&.\B3R66!*o)hl@3=mD`TM2CbJHF+N\
%JO!`u`kB.-n*>&gpNX&I0PP/rnDb+X4Q\I`W?VtNi$:J)\4Xt1@BOF"Tj$?9#OI^#YYMOQ;u$F2k+k%%)d4Kup&P:C5$6Y&G]Ej8
%PID]PgPD.`l'9>9YAc`9Fm%!<9TnD_&KK:Y;ZsIa*43Zl=qXQT;:o*tUF>aj-\;jF#R7Pk'^LEE!VHTj+@jgT\-tn=jYSO=^Bi7(
%:[/58U,M8^Ke06Z5dO?>K:b563'-$7ouYTHbS,FshG5tg`Xt"W,JG\PF8JaOSb36tTY6A5"9mDaV*)NEXBT]JRsbA9L[Z8iXsE-*
%oN9UlSQb]CHH%p3qIFAVWA6uR%BL%`Q_U`$&W1i:1Vr*:a[QG71hibf,FEki\L:se(Q!0-djs#k%XR0fpB_>'5kIqHK8"^.7$GuW
%5OP^rpbCf=;fk`"8%q5o$ZO,Z(3,I;jk9l<'!]qYAHiIK$UJa_1mGMX/K7+><=QmQC`]/,4Fkf.$!c3FC.o9=1@7Mo.juJ!k`7>c
%&ZhAci2kUmRlb(T,D\]48%?0.\eNMcOAEHdk9l0G,qpBPVsY7>4?lLK9(7(e"PZQfI5lFWo2&[\]Ar<-.,=bKW)IC84"MX6F+`84
%BA)+'qh)]]3kSM;:nZALl6OX2=.uEd;0s+6pl;ST[O9gL^'YT&[CC"p;ANldI[H-CS:PA`og/MKAS,\1H-6;^@c4sa2^Wo+Y'LAM
%)-tOJQVnakB@0p09r[>-L5/3RR_mkmMD.p;Mch+PJe@Q3<Kg+?h6Gd[h@B<b9*71.ZVO-P=N\!DK:kBjQI).HQlA8H:g4IHX]kV=
%Ao5mqf5DJ%GjGb\pnD(s2"i*HW4G0ecdgXU^fDaJaug:Sb[.5J<1t`,?pRTAW0L..'[rEV>M?mK/n!=?(3N'7d!(eP'J":%c!R8_
%V+QT%V'7`s*1PL/(@1$C<H:sK1bG9?F&<DnH9@Q^QnJ:Nngr`e=re>7WLTXXMjE:''+SpjWHLp=IIm&#dD0f1;EJh$3Sss,IL<Ui
%eYsYpM(_ICJIRQ$+;$4-2Fu!LD_K8TAu$t-2C!b\=n*eV(ZY-lPSc:+a_B$]_SP$?V1ZhVgAO%UbtYF#BkgDI9;d-KK5en8>=D;K
%pdf,(:<97#C/V.Ve7ppH0j#\?96LOB*a*b$k#nbA3%GqifGWX@b][,^[R/DC(^V!U)SBaJ_^MJ>X/!7:P#J84F&fM'4&+;;DP"jU
%q'*sEM:YW#?:`PdlFU!L"iX#/c9a$Q&h5W(NR2H43P/=T#:.Jj:rUAcV+n&%%giQ'#tuAfhR':j($t=d@?n29WP!>\m.%:cX0`ur
%eCj%R`-GUcodh*K42mOZ9aV9/!0p;943)5N)Ls:E22]XIF'&iG2!l?Llc<Q<OXBT86u/U_kL@>8KLINPID#lrm8kZpLZ[4Ai%aX,
%<L]g?f@EZ;/jaN,0]un.^ifob[#BBY)d+X(%@NUFQ:hmmI12U)J:!`hDAF073NjZ$Y4XVBP*kaa4Yh3>[(*K,$Q_ng8N,7.B61"H
%AY>d^)qKNj03U7t%2,LZI9/3n1#WU!RJ-WfOTBig&tW/bV<!OU<G%aV3V00=d5KoD7E,GpB5p-Ukkf?7f\OW>1g;$qZS%mI/1u)!
%A_&sEN,8-+[!0"^;)+h%ZaImtj8((IQ6+DPWtH"`8g9>?F+rnA%ikWm0Sb;ulFcdU7;ErC&Ti".<S#qN)*N?P:7[okLaE75EQJ0\
%&uXNk3fmk'Q*d;FCnL0n\VK\Tb58GX*;[KIi9PAY(%<?09`8sC8<;E:H_9OT629]'auQsm'QY,5Ae0lB]=_8dm9oS\Vq[#^f?=4)
%0jYmCd=d7Y:1bPL4f_*)&uoGDb1'!t)?F]Q!c6E/^rX>_96NuC@KYIE0_U9ERbp,1KcR'jV3TW9Pcc.\hBck2EsfIPc6,@1188TH
%1VA]8`e;jrqji?$/FG9#r(<#>TMYGjL<!$D1"Ym>=l]oH8jV`*:B]H)4hTo[Gm$(*IQ89%%*_XlI^J^:!WZl[[dmX+[7jS#KVm-/
%LlB."rV]/o$!pPMMa5\S*#DW+=ZL<_^P_]B@I;>3SML58NN44SH,:F:`Hf?!](=TL:[6")e:,#R"'qC-hl*8rI_jh?UMAKnC6lQK
%IS^^YdiZ*):"0VJ!H"0K%+1JWoYW]EJ@7Bc^F6ph]L[1)[:IXEKmBqX1#u^LA'ccc#V],L5amK4\g-Eo=T;]0[UE<q:cXb=Rj#Q-
%;:jqXo1YW<:h2u&>Ve<"Ei2VhBsIttLt:2)JJqLE":!JA<2@47#k:oaBmNA`W5h_g86,g;`_;g*HCBN$.,ugMUU^_d?^R%#<]U5g
%3rn4iQt-!#+r2ol4I*j?VBoi&p&^"t\[R<pbs5&J=+ua,&=hsBO?J`.1D/*EBFm[(G_+J)Lo33.VWcD<N9S_1hDs5)M35T\/q"+Y
%[qBV:@lm#!0AR6&1mgudF=!k^Dfl+k5NG\o3:4d>S@5$]V;aspH"n_$4#N3j15V>dhD':I\lEC:2JUkZngAa7&Yb=9O$f%N"c?j?
%(-tgdc>Gq;ns*^0Q`E5H'X/u_2oF"Gm"hJ&VJTs9B+^jI4F_\#302ZeV*7L9($;KY`Ao7mEg-EC:JO?cjpW[-mSGb=25:J-5HL+L
%6iZrK-RT6$AP\^V?AeXR8USom^n6)Gb;VAP?bF%^\:/l"k.>:+9X::_/8R?_pQ*XLn\rbBMq<H-p@HToqrQ"fn#h+hI<.jgs5UHc
%7?;mis's?3U3Dg28!!N\q`%.p.jIlV5SMc^0H7d7.E4K]MWrN`B:W&-A>ph%N"EZJ;,*%CWCbR^kf).)5<*f:-2ql2G\m"VW>;1g
%&C4BUQS8Hk5h+6/<H(AXA?<B?I>q2_V;j%cU,mt*3B`t9"0["[MhFk7N4b++3Q*$smE<1C)fAleRH%8&R4aqBj2Ogik[MfSPOo/E
%iK@9Eh(%!T7^[dK[?C<mEk`ks5#W=?Z`\TH'rGlkPYr:h+a7A<VJ[,c((L*PPMlq%'Z\oJVg3E:8LM]@i6>HGGL!o?Gb"4k*MM-'
%d=Q<O+Y3'H]J$46*gI"F6rILu6A33,qAP[!eN"98XrrYNh710g(m.c(jVGhdCBpDa$ad42kp#uU73m;e'$H8&Q[X'm+2c(<&jE)W
%T>kon(^Ud+,!>Ys-n].H:kPEfCE##+A]dM6ZQTr>C]-r/[C$o>G-V?jJGV;sLol]C%0AsF.tOaUH1=3&.-F7JIdTW:;"1Bal</1=
%H5J.^CY0G$A8oI^U)H^I-IR!^5O?t;-t3i%TNs&'W,%@'M"L\Q$9]l'`Bd9:+i%s:(4#'i2*qdAT,YT,#]LUan>pse4e+r6A2LVi
%S1Bq`7f9h/AQ*j)'$/kd7Z%Z==ZNk;qaYOHUF4tK.86C,,q2:pOd88]052u%'$A)`9auPdE]PD.f"I;4->e\.X1d^E!&qS?@I.H2
%Yo9'"DX\GZ!>\>Uk,pOp7=#6gp5KDTpJX8%JuF"uaZ$Tajh=+0daZ]:K\'%^/7^`IN;s*:JS)I]Nti.=G#M^je:dN$`c:UCLn(<T
%Dm%^B>=SG)kUgI?O-DbPK)-OfE$Atu)d,tJ!/nb4MY81Z\07?OM:`3kMG5Ks\8XoEjC/G`"ge9b8LkNMoK(/GnX%VJbmq.*!kUrY
%EDag41J8m#DCW*S70L!T<?;_f>,,E#K4(C+q`&oSV@ep\-i!hj[e:,<W3:d(>=B`aC5Yf,@:eLZAjm;CMb*hO,q(p55i:AeKB*D6
%M)'NT02-$C6Pa:)(oS4"or+b>WX\U!5J_\7@!UOJI>O^]"#gu1d5C8S@$laJU4LVkk<3#Ih]kne(<\XrT@J\R>0Q#'g.&Q"P](\X
%HiNcDc"-BHPC_GoPli_\Bi5@pG&GC:)J1;%IGEM'T3IONqPW4U^]%L\kbaD`Eh[StQfe>=aj5G-%KAAraFF-I5Q:=W(RKQK:O`!F
%qe)AY0E1b4e)+EF3i@K,q,],=k5)QfbLc\WT$[M!pVi>%s3H0X]6l"+h*(YS^V.A7rNA0;I3\cs^SWr&h];^eq&eJ,q=<A'q<OC1
%J#D3(F?K*al\iqfDpIHKr*oCNmS$Q6q8L+`^3J="h`K#RholK)T"c*UpQ%B*l*7sZhHYI(mcOF!5M6"Z(j96BgRF+jQXBdOifY@q
%gF?Q;J&-WA_):Y^Aq-deT"R;eeXQ11Ib-g2GB[=Dog%Em6MK':^XUm(Y($9=k3T9qs/:C!Mk!kR^VVqmDr4jWgui'_E.M-0s8)`X
%p=K;oq2=R>Dm%u(gh^,5?@R%qk3V7,c!A*3`Tmt^Ts9FPO)XXc4\',U]8p$4\?*<FlAOtPDdK%8l^P5!^:nj&alV@?@"$,A^AI$^
%%i]mL/(_btT(IX6[^(fu]h^B^r0RHWVdEbZoC^e/g]j*5o0:UuCoR/shV@p)^]*f=c<oFUG5^k%X8^U]fC/O\5KZlJQF4KiYKnm$
%r:QV!q<eH*EIVF0qht@Fiml;#N9JNi:"SkU4o:/`cbFf"l-U%?Hhj@B]fGD%oAsnn0A[a5d>u<]h;V0%k`0?3i$+5Bkg9u*3hf,7
%o]V)P*RPtS&`)HkGB?66Np)[/gIL4Yrp/7L[r3qF?@R.omdE#c&%QlOBC^L#MqQg=R7uHBfc@0+2n2&Z3qchF=.c,bog1qM:Y-]C
%?,sXLQJ[/ae_B\b%3MfUG;efrpiToF(j<+NCtWZG74X\[rKQ4tDn41X<`QY,*Ig#oCJR$>n]gmQGF)r\:<?W'lhGHnJ_sa?]Y6C+
%UN<J^lHX/0Ug&i%ZG@RP&0LNiD0&E%b3FKE]I(D@&+r.O<".mUc$,Lu:97^#:,mNEI<keRT>1>.,+i(d=h:I4oC(M)YKgIGJ+<*r
%mOR-<phb3q#HLi&r@`Ztk5+cHl[(VY>?pI0@W#E<MsJu5DpIdUg^UH1XQ<kk(QJ1DGOKhTBQF(8-J'u1oV6&]55p1Wk:G<;j#R]C
%Q>QB>*ArV$U9ccp2d]p_heY'9H+O:VbBkEl;t=gYl_<&SXQVf*d`,AL<`Tp+Z?]!I5?Q=(ebUUo[%bb4G8"=ih#-U,idGG=;n\'t
%Hs7UG/,P\'YKu,(q<rG<YPg<VqhFKg]C1bSB+$nNCO@trB>[@9;8Hj/-=lM^D\?^RTS1->Qh8+u[Em.uH@G\/f4V:i^O7k;<;-N9
%`D(fd`rU3tF)<!&OR(NMDnc&DqXXL/hei2'HZeM-`!5tXg>TbaUug.Gjk1soG`NT;h;X4e.0AtpS@uLYGA":iHbMp,%]nXg[f=CE
%$o_<TF&[lio><^r)'2f9'2X7L7i^DRrB1lkn*V=`P>,MH=!A+Je9>-p;NCg*g#/ko-mj89SbW)2UikCJHYC,F?:eq$n&V<pSo"?P
%NJg;>db#acp[OV-2L-2_iHEu8V>W^3gZKAk^UZIRH%'o8qW?CBhe`(J]>kZU*rO5oY(1kjV(F=c&`=n'e.E3ZNbhialrkS,.5TZ:
%#(4$h?h3$2YKpOi5/7$Tr:9dI4lU7lgu&eUf<W0F^O>$TJ%rhM*j4V]QeDhIqtftgJ*q4o^<l<.Zs@)p>PhS7G1X/>eQKMbGp7I@
%lI!LfH1pU_+5P4,DK,DRl3#:r/UlAC0`AJ*$%A!#s!.$cm*+DSou5J7VJAN4]"#DcHW]\5r-u-l:m4<fI/Z(V=&0]t0D"(.e]mbc
%%_L*SpK."PIH][)8aj3\I[gP_]+oD;*r?CBrf0t_GG[h*;&6aPVYqfb0BM<!Y@$+2[?h]5cd0$*/0>6[po;h,leVHs$$/6+obKFI
%]T@b7^3XpAF7IjD0Cd:ILY&uE8mBDpSTf/Kk3h`HbAY_@gS4,@FmLdN9Bs05B2a8;9@FWghrafe,HY1_7NWf%]#A5DK'T^2O6j+g
%&@Z>KId@K!G?5J3\+k4iLe"Ha>ggO[8=TNT7m,33O7YgBgb1USh)s\ZN]gum1ShIHP'B)WdO*<#_sb'/?J@t<'#)X<P=?)VP;g%R
%7mJ>:;F`h\OgJ['n_o;"/c&jF7+)[0F@7DQBOC)A%bi>*UlUR-E^)QPdO)`q,FJI7[)/CA,3]?@qmRCsGQbX.Mp$F"K=")GE6OC!
%W\0<*QB/tK\B4>iA?ai9%cR1g[`mn)3,kN4!*"%NSrZT$*^6Y1fbRZ]_2P*AY-0KCgFD"WfF.RITt7]k\&l#u.9-=R(].!YA+-2Y
%C%)+'\h/ZSm`nDu_#^P0?JD+D[f4_k?]SOI7n%Z%KL\K+BSnK^E)diTKNige7n'pZ7<ngoqL,307m4@b4h*q=B+'%T?YEL_mD5P9
%4K?5iJf<F=]sA_:\AbrKo[Vk561fO1TONgeOo#20I^ha&J+u6FnPpUUeqVLOg#.V<kh4\LX*X&Dlf2HOHZOXYrBA)m%5H>f&(^0?
%\PN1pbbb<RbHq1tTD!d&s8T"q5<R]YRVtR!hh1+:D3C%FnVH&_h#IA%Hf/CAH$fDtn[r^XSO]!T,Knj0&t^5g>Q6,7B/cI??*R_K
%IWbY?`TrFVVECd,ln@uY6tc6N?(cNUl<V,B]5@gPGu%&GD(b1Qf]Mt,lB!*PA7'b+rUs^LDVfdT2"02-)p?O^Zg&)Dm'lH?o/@Ue
%-$SJlfmXFr@82lmGmA_Yjmb'?O0^b]2d]p_he[?%h6'3Gnt,KjAG^7`>r;G2'tpMIGN12o.k>oVb%07Lau'!J(#<#nDfS8sMYtA1
%j"7G'dB;NsRe@9P"5C7Ap#/oj58)i=UFL6>qVg:WZ1HfB\A,ZNg\Kt"0$h9/djEuBZ&j-4o6\q`;]hmu=k]TU2D*uQBBPYP5:5P8
%,<='tJ^X.=q/i[8ig>gWn+qK"$2J)c[3+p;*Y\+bK`(L\3ocTh5:5H@#Z(5_OPf9=NX>NRCdS-mMm'j@p\+NL.%g?fNkXW&\,;i:
%I<U-cH2[-.IsuHfrqb*Hbg&H?f##CuY<W!O`V&?gc)5L*?[[8!k3Vc5\+g"G_s.*?gO3G/)E<"6XV3V&e>)2PoK63?ma:Y(&WOi+
%kP5ea4?pUEhu<;nWNr+5eUBTpm([T`6U,KDBKiQX5[XN:`RVSIOL*LiY0RmRrb_GJL*'`Y:UIr>[+[k?h4(VEh=nm:3k0$hidQ(l
%lZ&5;/TQdFrLINdYOOg-pV'G3_6r\akJ6PLA+npY2.%P'q6M+nAUXG>I0K6K4lNjf!rX85kDO9(?ZltBbqXNfN1SkM^S+bt7*d]S
%`^-tAo^!DX4%@PVdBd?Tlkhmt5"<kYdBcR#Dg)_^>e[uMd:U6Ba-beVEV<=i$%>G3bWWYtfnT`s\i[46Q+eoOoN$D2J,.hXh/^+t
%=D<tkojBM`/be+!Zn7mC_o8^EIJ8Pm@D$GX>979gZSD),E]\ZubV2icE#gIV\,Z,])?b&<,<O+J@u&`HIe$q60Uqu0%q:=IjGG#&
%%Wco8o=M>ep\=ebofCrI;Z))Inb*:QNgK;+14G[YnKq=ZUh\Z`MB;.?hW!fAiATQ(s7i6+H,GBdOeV75m=>(PN%H+9O,]au4fW0O
%M<#mEgKb-r2G-C1OjLEt)%M`Q?,ksrD`>(C\@)pAbLiNnIir%:Dnl/6mJ3'a>-GZPldsg!Ior0<r_%b6T%e8F/,J!f*Q`*REhq=E
%SA3dXauEiJNrIT?i,:c8^&R%qjJ2NG+%HZJlb;m*?_>$Crq=E;ro5VRh_@;UNCTo:kVPJle!N)([\M<-Y>[CTFWT[%DK809Vt!@E
%qP2MaF;g38j3_T=@@bD"?eQk[rPJisn&i%dk?E;.93Sm8n)`8A0k9bfG3sM)r:Tm_X4o!u>?J>D6*Z7E`I3+'l5le]EKb1e2*C8f
%bTG]Tq=<A'q<OA3MCEcq'Dm.@R2%K^YMNMkh&4iBI#I+OZ@`$th-Aic<Engo61[<s0AN+bk9D?;qss+@q6/YFs7a..Zef2S*]_Pq
%^i^\Yc]4N.]1Y8,T)I<bS2noEJ,k,Dqeg?;X#FZEDpBtbF+(=8'$;rqLG=k'Hn(`ZgRF+jQXBdOipuNil.=Non/lLdKfc?g?g9d*
%K<6*$HV<%!l0EOp^[7rbYBU#DS"sD[Qa(T*g`ud)alE0cFOSE-6>qnGfe<UgpiUI-b<@ZnD-0k%C@:7Pnc:[^gS>_^$"j@#;<8m#
%hquJF\X=8@[>hN\bT&57pK@L=:Vub],2hhX/:T^J)dM<3q]?:/US7T2%HWQjXWPhf^AHIN%i]mL%tQZVE^:cUDAq*hTADqVF`_?s
%^+RYt!)C]a2sK?&S@5u:,J`R4APmmJRC/eGqEAP6Me!H]mYbt&O[idNk_gL1d3%0-4o1oIg=Ji%FAiQn$t"+7dH72WHLsXu`7dB^
%?hB3ETA1Fk\^c$$'s2X)Fd]>LbniZ1R+>i,T'"'glZ.3_EK-f2m1ZU9N[)O-``@1lX*N-[fEVG5Is$$brEb9F8a*lMoYfUFl?dmL
%h;'$8Imou#g1:6TQ^;><s75D1&RBm-p@@5*]78[LOB^?30TEBgO8;_oId_aJhD3p/MiE1][?L?Ia0gCpp[t(EpeP@i%kYQKl66':
%X5n?d&UI&h\%[eC-`Zh7`S6lgf/KTG_0l+5qN=mbaXWhr7=BX<kAi5mfe&M!:93#Si7\-8>eRa>r&ALIcXD`Vrt59>p\'?R$Er._
%n(rG7p@A->QY1Md"1J"#GLs*;N8/32>:e"S=iUFZ0D12`\\nA-QMKq"gSDF5?d8Rbop!/"Ia(sS;uWd%96lmR]j:SXN-EN9h&"f6
%p1RVn^1k-s4`[n\O-\n]f)BAc?p?7/"MN%Zj_s$]^HTDfH*YE\ICP[!QMWC=@u"iFQoVVB[e<4Tm&?gLNbO-,i,B\[s4dR"7h)2b
%l0Q[6c.?%[gLQAV?'G3J4]$g2*as]eU=gWikWSXf[LFaUrP=BJ;n]s9D\Q5QFD'.<aVCrAoD@@bQPVTq41fa0$h.-!j6aie+*\Mb
%&^^=C1-T$a:[U!pjGG"#)/ms9GgL$7aV>gLj!X4X53P>in>AAAU4%DFi7Nt]A,B"srW#1"0-,N%,?NLSpJW0E\iteJlR0Og]ub*^
%j,nK_@EXVtO&bBC;-<m(^@gfurnQBpP3_'6MqQhY=hbeu.X0JdcPHJ/C]@q.%B^c<I$fN]f05t=mtYaC;>me7p%^o=jb])jgi!jD
%g_9UBgiGtDS&=9pGrD/(e%V>gd3!TMn&rfgGML)m?[hkd_IF*XMAop\0jUj;l(^^TdKcP,pkN]apHCp$kt,QP#A0F5m)9shr3`l>
%7H/uU?YLJ2-BDa%]1o^YJ"Wde=#\Y6rSc#SlaL7"=R<Z7HM@9tml,XTmh7^o3W!i\.X=0raKti+HUSJDZRr$rFr#,eF$L]6?]Q/q
%Bl(TJjk93@M[Oq%(B!O/"eWjOF<?,Jr;0U2J*^ddY:e[JEBcS@q#0EHY[]BM#mPGreahc2ffcBM[p8%cTLdAJ[H%oYr:hc.I[air
%kPL&#[!"Z&aIiEtQ^8Y=7<dqkrfG`RpM?e_A-8fd[%uI?P!6B)h>_\IrT_^Ic8KCA*';TjRd\pl/o>Wa5#+VZD6E8T*U3R^QiH36
%5Q/dk=4We"AVig)qT\^!ht9u(B@r'`5<Jo:`U!?7I.FW$I"QG65CW.YeX+mSFJ@Z_I<khc^YbSH4*fD2=6FuAh-9ft:R5Y.r8_M6
%ZTip9aj8glo!<gl8&iR3,l)<WTB@pcn+*gH\IU<Wd/Tg5s'&)hmb(t2.A/Qup`9=fs6fpZ?X<BmZhWn=ci3D5>FrOn5Oc_NJ+Bq0
%]"%OJ($D2h?^Kq9p0k-mSt<QU<F2!TSr#.G?`/ZJ(gW%DN31Fb-'.!]Pa4WHQgd,g(?f16ShFsf?'s+4Q95ZsQffeuH8;tm[BueU
%`:1F:`R+s>M4lhV3;5Go6:1FZKq)8tT'%Ciq5onYDnV5Eb4AYZjH?.EXFFRYMlM-lPK0?DPsiLa4GQfgK,qKTQt?mR$Zl@$,sV9&
%4KS,9qhpPelgrp,-+)):=]h'ho@B5AKWt)k\NX6n[8d"fBn3G+r\-L(oCM#]Mpc\8"&GT.rY"IbKr+fGECEsPni4foKehE^6:*:e
%$26R4bVQ<6n#8dKVmY]GO$&33b304MKbjP*m,qPshIf8aU?1S:Hd^\S?Vte5')EPg0sEA)[h/A+pCHADIUJ>*,ris^pC+p)<&d>q
%c:1oNPW>u'bP'b?f[k4)Ce0>&E:18X]UsGc$SC&BqV:n2G*h>ihp=RT^B`rVF4Z_do?pn-%qk^(p3QUEmFs(fl!)4K@R#PE[-`6P
%QhjHPfh]5rV+PAbl,N80lO7suNfVnOO?^D$^:ss2G.(qReFTNY2oa^FAD$)9CF",?:P[q/jSdu)CHEoejaQo5LslZPg%Dm'^OK@"
%h#<SecH5K]VS>:N:I>@HqT%k2'SbrFM2jgucn;K3^3t916P$a,=o/d\qaue-Xrj&P%7`b2LLR2KP/YqJkNqZD:EiQ1iR-Y+f&,a3
%%`0MP&c.TnTkW:5>-i]Chm`OJORjgbnrWa_:gmV'$C?M#`hdqmqS(E52;^VBlfmEj2rotgp?liMoL8>LrTu7l^J?1n?*Uj;D_7+*
%,'e$j[q,O&WRWPlJu22Hrcqsonf]"o.G^j%kH\kaI#3;K>\Z*1,[KR@+14:!iQok.GfhYtYf>k&Yk%4>Fm7YJ:Guni:Ht23kH;n?
%)[_5C&WNFjK/R)Y3tF":eWSf1G%pm_VW.=45`2nO/+$#t<-MJmhHAR\Ij%gap>5sX'K(P#^GEIeqGBpJ0:+<2ck"4sQ_7Qi+0;$:
%f)KMmfMZoW0AXm2QPn"oJT#tNJYnD_R0$lVYqZ&7mDg"[!BO9Un#=G+!d?Oa$0g$q3>O-28"\O;A?^I,?`GVLq,4"S6gem]9'#q;
%b=U59%XH[BXg(Xdhm/+<o)1F-r_ST=:kkS+D_E]DP.KHA&'>F7kA=WZ60BNeF!B<npuaL>^;-(!hj.6&j,0Q]>Gfc^?uW6*>3m=3
%Ha[jlDPSRUMuD+]Epeja/1dXtB,Ml#kG;cS2dMR=QOUo)lXrZA+"hk&F>Y*@<)$"cAULiS'UBGP6a=;D8UbuDr,PNgn:P<2g"!61
%l-#+a7-(.XK=oL4!n*6aI#i.Un7t[=?<HC`0B[)h)bNkJ4C*l)5*XiZ]\U0'X,Wjria>R'Sfpb+J'5oKn#s"h_l8B,5C1%D<<W9M
%nD9on+k,bC@n[8KokkT<Mr0G-=LuU"B;HnjUFtt!RFKH;NpeGQk5&Cr@DH06]"uj&_U(:ho=@Lf<7P1NCraWNZlbrY%'\#kcU29E
%].[g]/&rW#qn"8FUh_G\0<OsB_F?2HD5)?gWDK=:Ui(G^=##E3VS-fk9$00[_u5E?-IG_Db5.#m1Po(h:7uOMjRp`MY$I[AS+15b
%oY5.4<DFXN+42PCBd'fh'Lnq&,.At]-&T0]`?ZD2^f'J#p#D6Y(FPQCot%g)R3:h_];4]//JL>PrBHWS@;0"ik;Yq]4Gge63OC*3
%ibUYl-+bA%fo^<*o'b'"Nc3^UOnk*&YeN]Sb,:`pr)$&<GFRd]Q>H>(gSrN4s'ujimMhE5?D(+Mm?$U4fI\a]Xf9',]n"1QKq60U
%P<@Y#c\\43StO@P't&&ph?$8!'Q;.RBQR[t4^bg"n[1n)Z<BH0lL*!kmEN*\mC_$"80N8<dH_ThHIaiS_G,]W^Majug/R:Jfo*CP
%\.A5'oVNa>=.H!NCT?krpb]=]\5pWHmJBS\2Y@@>]XoLKOWVkDs6t&`q_p,[f.hl8E'*qKU5i*MahEJLlereCKjBVi$gub-H/9)1
%<pBUUcF7SdWhVlkF`X<YfOWj9cq(jS8^fV52g:`0,lM8R$(1SHm0[S-G8350JD>uB'O_;a>ga[,.6PLd_8i,/5]2`%Apr-`T^Su!
%4=*/=lr3,m7lLFMf=$N>:lX>Hbb>&m'46h0/1?Lld3??^7TNYMV:"1Xl6<\8AXh)&?0"KB<XmkJ,U>0!Wn(kKr:]mR"'cK4F_#>7
%pVfjI&uKP+94X`Y<s_ZjY2=cA]&+l$%DJ2uC\4f)k-?u?29BLs]:*P6=[p.9]F1_sZ</)Pj`DZ,cu!GDNp"P:L's%.Ld'S!J&.7I
%m2[:s0b.Ksh<4;i^ITCh)dds@UCl5Z=r`sNbMK7)[p8g4<:ptdHtfm7r"A/dH"o6Bk$OpF+t%q9W\?W/pet^Q,rTK5>Ji:*0cR.F
%![@!GL>C9P8$tar@Fq^!KWVX]p"I#.d<7Dk$+l\Yp33V0Hild))Qn5?oh4glk9,j__CE0qL-1gXdd@\l@1'1(*6),@TA3"%Nk,'-
%].HAn3$2fpclV7%lNm,RfMseF%?!k:PS1[O54!h),C,<cmAN+PZ27VDZX+oFRWPVu"$H+h_9'3^E,!hiY-oA$9U"jj2"0aM?A'+j
%glsu1?1L)/"-4!];9a:kann.K3u8D6qfLiC'h,t`)[H,j$bQ\q!ho^;s.)LEI;h97,n"5#%4]sZ$]>/kn9P2)4l`j10AL.;q"pUd
%SV1nW%PRqIobR#pNkI^8,)!C?=jR;gZIF:YK[,GZ3eko=I%7Qu=uWh];HbPD+[diOl_!%3#eS4K9B]\q2_Hm;/Ecb\ZT0qcL[@RJ
%'GEZlQt,bm>t`^rPE=)4;Gu2Q+)/S1EZ15jSJC$[gG_crbB-ABNX\W9_-D4T%;WGfXo=pI^1BuIkCSS"6t\KCZaJUR8ehfEA"($t
%CaHXRb`$bG/SBF&*aBoHE')>Gc*guer$fmSi1NWd)J_("UT<EWfb)nW:hU!P+(FeQ>^s\I4hmmFaPchNc9;m.a6<=N%Y(M5:u)fS
%]:RWs/S5f(T5lF@r,aThIri<]*5.Z>f2bkqj[d:%<N.uKMt(PH\4B4X]cRS%VRZ6e_EKA<.]-W'4Hq*JUN=ecgpNN985-Jq;f(af
%'tK+``M^Bu:c,r%5YQ_kGHpYXZZO7WesQb+GRNZnV?hehrj0,ErDPO+0a`!1.J$A(7r\O9Q<bY]G`>8eD7Ujc3s#PL=$[+:_&9/C
%>;@`3Nbjl_^XssSoGkIc3shq4!Zbh5/4l!t((qd[bXi;"K9@#:l@rSa<Bk4MiZln%R/)Z#YRFZm.BoFp(sWLK4>dm;c<ZJ6[6sh;
%gp7S5q@@k=Jf%KTrt7n,B^/`@";Z$PH0'`\-F!ge?_'N+FDK3RMkt@c)O'%bENFO`q:,H:mo.M-U3Ku>knVnO+H.;2mQV&gP63&H
%g(lV1/AbGo-G=YIQD7(clD6>b,&Rk/`sU_FRDKFPTB%hcQWkT>J?KV<jBh%J'8MqVS5"V/hSLc_D[f!^X+mnP,gAUo,SnL@`W!^j
%Clfk:(E0^3ct)`Cmadt7<_UAA;5;BuX^Od^Q1rV=B_8`OF"[Q_edWf1p!S4:s&/B8"8qlr,DL4rHrTa-ZW.Ssbp46sNTlo)Rob:<
%=jCGaPHP<F:"M^P,'T9)Oc<,86.n5GCVWS\NV-GhabjXD-r!bhr^]$S%AYSG6/hSYgK@6hW31uig=7FIYunrVWChqB0%=HFKPD`V
%o.X9QoARRrB6Y=QLaLiH"'s#+3_UAn]%ePZ2-*0N?>aoc23;r[;@P_VN04]3aN(Zs928-pR+h0]1m$Jj_s2D01'M^qCspUPTKmB:
%X((DeHUAgU?+F<feg%1ea]2*#O"Ep@Z@8^LS]s5&Z-t:qQMN5%Nl<I.rU(+VB8b1tMj&gESO*f@2\,H'-^K7d84(Qr[j1:2`3qTf
%5aeEcYT,&#auVDf=A6V/Sk]B@6PiTTX.LQEYIHR<-8*TjE[7a>KcPTo*K#<`j>]<%,8BYPARm[r]$N3\9l7.9-54*9!Q*lOUtLo#
%2o_i=4n#^0kM2j?(M*1uE@]LT7Ef5#jQatc,us`O,/_!L2:c+PE^kVC.7N-4Nr4GV9c>#&eiuWEr7:^/_9&DCW`Xr1QRLP/k&C\+
%crcTRke"DJ+#`_jI>^@)FX4p#SXQg#WNu_cOJ!e[2)m%0FT<GmUDspnPHmf8GN]H-MU2V^?ugseda#`<I13mW%SIC=c.;@-JTPN6
%2==/*__,M5@:ZulPHF5c"MTO-a!et9U\h4O+`Z\q;P(&[QE^B0kU%n@"cn_qrIXHr<kn6Oq22@-mdC=Fo-H51SB2fh>E"7KiQ$Cp
%JItl)lLm@uZ0c;^lAY0LW@EnP*EjP3H+L$5M%j&D;jo<D]']lRJ285^aeT:;!6JP&%'/M+=rtEP;V:C'd_9FI]"$QopM.g49;,M"
%DScPeBp5ePJUNt(nd'Z$l<Y+#W"ud_3SS.K\gFCuNaR._m5a_AkXlHdBr7D:<(".feVkbZ$W0-GfA!!7d+XqKWe_WmmJfCtn(M;T
%EFap_cSEt!3+gca%H^DO]H8B1+.sme\u-f-:obmXCVu=:"L?->9i`%pl<f%Y+3Po&3@Ckb3e3=1Zpk*]OhP>GNe`Deo&]3TP05C^
%LEC$Lf;g=\:EGU)*Kb+kS-$Q-0#'gVBQfuGSG(V]_c\D9*u2UjZ@r7!7;.j953+$>-sb1?T'Y1L#6a!dH;KDi:m]0#FBBc0_hs7j
%"\O40,Sm(hKsuqJEg8+d/:@]dg+^g<W!mSI]HuX/iU\/)f,6tLff'&dpjU>"P8p6jRsI]g+s17]26sjBp<_>R)%+:g5PeTBG]!6X
%JC&X<E-OCrp,.`g;UDjLp-oB2k`.aK"@P5\>h0>*KWE]!ZP!k0j*A[3^@-r`A@1E'jW(a7\Da2*C`Z1?;XK8c(ch-G=$]N=M\8Oh
%*[>>PCiM>]'_]K8YoqN'_+`lkS47hq-;Z^W3[6E0CR%V@N7?K>AJITB)D"2^?$SXlW-iF=fbHVe(aZg(&l(dD3kB"i[QX%lcnN\:
%EI>3c3l`L.5j)d(HE".d'(%5=>Ik[nBL,[OpqaU5\0t>Cr*scj1`^bHliqQ$=O<]$^;EDQYE37]6e-N>47f6U2.RO`A3X7ZY,XG.
%cTi=Q.,i2`P;]I\gtgKo12Un836?rKZPt&K68X"9TV.3[XSs%nZH>*b&_=2iFnR0"FUks6YNW][!)AZW\bKA$RSOj_pg_?\>QU!*
%(TJLb!QW3Y=@7)AkTj<K'ZOLsKS2@!)S-lW6d^I@3LYM_+mb)el/MP"7r2pf<t4@>NK;IkLkS32YnN+$7^i)2EY_>lcs4\\QEXIh
%iF#@H!km7mC&Y#<;8+IiZ6>)Z.TV;t9:b9VdAU\ggB0jK.boui8#fiUrb75*lD`Am!+BpO3(GVM%Tt8]YCU"b1-3U+e2q(&DXjif
%Kqjto[ehpOf-sCeOVE!)b9bd+4JTNQ6<qS"^$@)VM6gZ:8rNTZa67hD.r<L?FKOT%c7Q)nk9=7Z`s6W'dcRk9.(Dn>2[e$`-@TuU
%qFfIcBOKF@qr145KPp5m>9e6IHeTNZN-f?Q6;7mmkc+j]m<NdioX[DkSKgKIn%T/4k_b>']e[RiEc3iu&Z/!kNPjpj/>'_$98]=^
%=9WM7\bYLN)F]4K!$=I""q'Dk&3gca?Ym2d%YIY`SH6=L(W>=k;C2r"&*TO9FGhde_Du&HNLqKsag9`LdYX$p\I:H4+kXEORN_Jd
%\_#r^Z*iHeAf7bgFj2Q0\\R<8&dknGJ@_c;?.q7$RVZE30n[AUPG++1.CIED7)Ps<2gZ>GiY7&T)]]6S?j5_Z8G4rLAtJ]'KZ5Eh
%,bV*HfocR&>23r;*'TAX?k;E2e.K(gJ1[k4&3Uq6K<'J$*$KTgd;KL8RLBJof^VAHkg9XlL$X]4B%]<B/3Gj$be,q_8N7.8^,]"m
%(h'&_e!K'3?+l\,E0H>BDB17?RMtFI'XP/B0gU:VY-HDh/20WBeZDuj>pp.q>I-V/7[0@q`aGJ?*HhlJD.ro!DN4"U"t'Di`d0oL
%7?q"2/tW2<([ERDX`.d-X`Cc&3#(NX^6"^k,QnO*2$Z,[0(I,!4&URYf/0U'=tQk\GBdV\;LGXiHCac17"hSt=Lo2Tl%49=1Q)P>
%JJ8-kTdqaYX0kZ6R6NOQrO=p\ZurY6q-%#\.O>9`L[mR"Dk"oN4"k[%1IH'nj:"oXgj8-sRN\nZ61Ng)Km&mSL7qdg4b5k=4H>m]
%'!6B^aNjYs7HgamgRHfW;p5_2o&$7=q"h8iPo692*\.?f#"ksF8_5m_Zo62NJj'cG?>i'G'QUEC[IF;Z>gu[6KGUhNp-Cq70LU4b
%kTkqEjJo#ICEE7M[XH4"br(_4I>*jXg31'9mqFp)L)H^q+0gE]q2V9p3c[l<`@'tGS&5`A:[su\m#*=2"o^5CENtB_GP)GblBAf/
%4dJ+I>"V1l5Y)s[Uu5fD=3h&(kiQI^#j$<e'!V)K+$p`GOU)Ho:4i;p&ci_iQ,aZnCo0!VU;,/'_pCc2R@4(EXiLW)/NJ08!9T#i
%hQ"`<<r,<grlug#YA!iGoXi0)2ngUs2G5hr"9MWbTrVbbZZ(WWG%GZ1*;P[P2E1X,MpL8[i9l&`FSLd?-sc>KTDu"]hKa>>Vghol
%#;tQ1=;'P1DlNBq?HO?FrJ$lq.+?KG4um>jN`unQpO14Q5Mi+Bm8q]!5r3>UCWMVb<+Nhf/lEQb6Xs3I]hXZO'Jppj"131$jckoT
%)QCb=AqJe`)<NE8?1oCf&U*]1WJ30O:e,r,ZpTPO7I,Su=^2)BM0.R0S6e0`<tSlHTTKGKJ=U&8OQR7G3?/;"YfFNB4.KA4-Gbk9
%rS`MRS=dR+roEd%ng`A&=+_l2bp_WMJnrH6\;9>k$>,U"hI(p#^)RH@+;T3fOH,<!$FTqWMi%^=-9,;^:#(?&KR($(R3>=j2gedl
%l8#0:[,,r!PT[Gn8;;:bUcmUVVnHG9Q/GaQ("b8`fW!6>TIOP6DMR2_*pBj>Qa'!#',\u5%Cr@\&E$Ps9V.D").H3H17dSLl'8X/
%Z6O#9:-9[kc3Lo(Z#N<Vq0i`*&>?\ZHP@`k9ums:NcZ*4"f^l0kmM!GV%48Z/%Vf#+gK=$Fn?Y1I-eu6-a2*)6@reb]CKn\^=/3f
%[,f;$0HN"cEhJ*G@C_SChm%/`L@&cGq/Sq:Y)TT)f<Ai,L8rf?UVa0APf*\57Nkak'dd(I&.-<pC%G>M5p?J<2T`ZkH05T9g/f-6
%@raj_P+4=<Y3$(Vn)._d\ACb"L_!")l0MFG0M-%V8-`c8R\$c;<LNTf2["Z1$<Z8&aVB!Q>b!!YGl=*oje=31FASs(/h@$k[,gqh
%jr2"2q_DU6XtX4Gph=Hadu6).DW7>r!Za/s_]i&9SF<@W\D`HX;bqHEG[K-mE*`FXlX9:S62)J9a?AAQFMUtg3SNsFrI><]EEAOp
%-!Wg7"2PeW*gfo.hrX4u]+:L\*7&,^8$<2TTTafV_fYLF_`&3cn8"N"/Z;$"&o@:\E^c\M0KZfr763SiN\OEFBkrtF@c*\aETg'b
%lgs?h8#@WPOp:RmE?l;R$hcO3q2cp$Pe;h;$&LXM3OLeG,Z9>XFQG639/T]0SC"(t"c\:+WF-=684Uf/k1u,n0@M(4B=W['HaT=r
%]nKi#BfF8AnO:_T"6q4-E,._'\2OfU;rfW#I9b?_n*jP/`uCY4/C;o!EPaS-"4GW];Yr>A%:^X"1@:C)859Ek3pI#&r>d\!0:5b%
%RcAN*&]lKg(;q<DV"UaH2<I1,M+rQ&Gnk%@L@!t-=5a\+/r9&JE,1FFE4i?9C71nMapq;%qR.nae-!@HM\\Jbh$&n>Huoe2j6uK7
%Mj(Y!,[7Z8Yo0_g7s]M<k7;.#C22okJt3se6RVq9\u:m+=*WGO]=jr?6\<k1:/BbL;)@5pf=Mh&ahgG6N!l.k\dm!RkE&n57Zp5K
%.JpYWm=Qd^YZW8XS:lQ;WQ69^Ebf6E:@0dY^<AVHS5(lb)DQFAE2[%bLQ4':F?4T?#TGJ:'_&2IbP$U88P3:IMRm:G_b1&lACr6E
%L\F!O&&1"/7P2o7g7u_A]nX1F_hb;6lsUS^kZcL>`r#Vt'q5bl1ZOE*2A&1Wc#9G*MV_I!fuCbDAN,nu]Dl\.1eIA9g"0b=VDDSQ
%&5@c9dK_MGfud.4oHT'm#JHkKM9?do5Zi-e0/sr+^XDZupEb//U0!eFCWJea5otDndF"d73ec>I.&)*H.&-(aAuFq:T+TTq8B48e
%4)D=H*e@[2MibZBSN2Pe9$mmSEJ[j*.ZLTkO0<I"V?(fPno8sc>I/F^XqL:o?(FQ((K/EtPG=oB=#dT#h3-;DB"59tM/flr12$[,
%o>S*cjAjZ/.+cTV`B>t:aLN=H9hb)^!G&`QdJ(c>MiXRPJCm8iHkC!2Hs^n#K[(b3A]Gtg-mhCsOcL50I6+JS7X#MJBT1go^LT:L
%\J".OK"Pg?cG:oVf3\URV53OK7%])8!H_&sWldAH(d.$l6cH3lSE+I)_UK<4Ws3.^rlT$emoT;ukQr5ZV#*eU;,(isd32k:D1A?G
%:B^5W)%C]D@q1f;(*)!E6:U)#T*!lJ,H+h[YQS8#ak>)^4gC*n(p!K?3V:rC`TXYBOe;*KpJgOhgA$oqh.WF<.D+G;"t_KW[BGY`
%B$AK`^gTa"LuZ.@W0j2\_1tAc5Ue!mJnH3P?l!o?_#B-+njUia-*c%;1aE,7\e=rZn#:$mLSLU<f-iPfafB>Wj:$]hp#mI05<cjL
%.V&+jkMH+=mk=P5l!bm"UKAh2US#<Zi^/Oi:<3u#_>B9d!JeHZ:)VV?W15Gt.sQX<MG:^1=K[tT4-*fU0=2tFQPfELHZ$"1T-bGj
%KN>0tAZ#Af3Lfi9ADK7n/\-`k"E!^Zk*unGS5k(I"&FOhpXaXWN?s\4hI;k14ONQL)1H3<OCCXB,i@)"Fe?,*5/F:Y),q+":\e$U
%EBVB[rZV*/SoGb8HYoBj)5hiK9to"NiL\KWX5k3__I)74T$*$H+80c<DtR%f7uXL(jBFb]T^.P"h`dC^N[;``p*S\GDmtLWjEl26
%E/332%T?^nT5FHShs)S0ZVk-Vhp]KYrH.hi$I&0LH]uq,+lN%-reKRVMjNY#rt!2[HKM_#,i@li^<6WL4Zt\F*g1I7/G&60q,Yh3
%k7>ZnHId62J:+,)=hbKhp[l].i;raTceOj.P&L"Eqq_GG4Zs9`d>-e0qr-Bar+(Fk?Y1=T[KJfjI`TY.A4QPQ)]t6DSqC0/j^7@M
%aN^Irq;r:47"%V?H1[g0-YlgkkN_cg;ndOq15?s7D]aD#h]BI)j3=>8q>,niH9W\44Shl=*kfkgp!KgfqhR9(+-Ngg5,-pU]hJFM
%UDNag&^-nn8A9BAU&HDT]_:7&(>_NJ"UqHj/kTt'&+_Y*I$[V>q3*se9`e7BZDZk/q4d&1DfM%OjA+,+DPi!4\P.RrNVpniSFUr(
%0mh(84=";+W!Om(N."&i7Nj7N<#1#&oq%[e15S':^7R`!+-K";P6^_u[^ENl>s+Z9eWls?ngAeTD`oLIO"To-3[R1S6sKjrq=]/3
%Cse#>a]6ZN#P>4S)ZF8qlUAO5Mac/`o$&R'dD*D<i!\01XiW'DPbcQ.XRaV?07"\&n%\Pde)md1I/E<nUE>Y;htg1L*,rd`qK2eA
%pZ-Z'37m3no'M2le3>$<<GeVdo'"?*=l^*0#7nuO#(0]El]/<o2rApa/.]kS7j$.YQCGF$+Jj%?>41D1er@`Q6jC2>/;.7\\fHiK
%((MNtr2QG1aq+,/ff3BrfMP>G`"!'q5n6*(IL9&.iHTmM,6aP@LkutEk?p!dA((QiR)%e"\Wqr<<"Xb&W@K@l!gKgp.m)?VV^-Q6
%68;^k,NTMaifu1'&9q*/VgLd0NAIp\qS3XiYC-DTQe_9EIHZIk&.=GIMj$Q2<!+F^97$(%-br93V2BP_$S[qdE28,>J/=)clla1m
%12"iaGE`[iE-(S'HLT#*.\nkL"ZUi6oDg0L-H*"hhSQUN]K8VJj\YH92\"\en<F^1^2eKZ3'GIg?dtQ<m#GBIEVO1;0tHT1@,1]j
%BM_bRI:)XPdjg]??r9fT&S;-2[T:3ZjseE',LV9r\/sTF9nt'G[Y47.84V<d3W6kk#qPEE$bIj7ZR8"Z_T&AsfUh]K_#-QI.?@p'
%2rT9=`[&CE30Hm-ZQj+XbA$a[$am&\p'n3RE3=hG6)fP5Rk%tO%>+b;3>ctN,Hs$qnT+r5-3q$PqflQ&3VkIA->7j+o_Oi?dTR+>
%"Hj'0\gYp)9'?hi?(!gJKKJWh>4%"gbjrE$,\Zq8!s`88N*"3I(c[m@0I]XF7DUQE8g4ck2KI-&W,#8K]XB@cWJrk>_t"C<@'=rq
%P$]QQE@%Z[<Wg)f%!$&6CSDZh,s=*n:.cS*R4+<%&#E%LIkl"N=CD6A%sW*R&.laQZ+//[#FYWfoVS2R/-6",\@b.iI3^bE0-jc)
%."a+(kJVlm4/!"FMq/(&;ordB]\AZX'VhrS,$U)#&ME,(9UIT/q?:EFRVP_/7Goo>#q/Au8d.6;!lsTPEOjH#3+kT?,j.TfNT8^1
%,3%Sj==aS&epP(4g7g@g/+dZE>LBBRHdE<G$%^0]]:qdabN.EOTb5ca-9js^qaH<Xo*s#BTrP5`N553#>>qACc!\!%6nA@)(Mm-/
%!hee1/``d39J?3(RYjaf0"I^@FGCAemNT2UZ?;^SR$8@9<*2!#=$kQ4gBauiD4-TjS5RP9*]0]!,[2Hl>&R0,85mTVCaO$%.kSVY
%hYq5c36^P24@2H8R;AEhiBka2e<NH:-p!R\B4;ens!BL^X*L`2b.U2`_1q&43GButqSX3snU$kgP3J=FOAji$9!7K7UH:`M*Me7s
%S&6$,S$'%c>IsRi@UmPCH'hLIkAFO=c"K(^oC$sb_W[fI_js,$hp%&,+_RQ=-pAj6_OF<S&8XXXm*;,f3Q[a0%Q2)E#h(Db7&;4)
%%JnG?e$\HHl[*Jh(\B%(N,@'%?^$pm<RO1#I3?]UPYEJd1!EVAi/19sU'Qk@_8kab!K4Wmnq#F5S((1)i<)'8]frS$Va:P)S>Ioa
%4-8Y7W-138iL*eT'?KMkI*;dd"dtqP(im`YBd#m[\;=N-NTk["OhR3ID/j5jbtOS6?P_W>8*)aomQm:U6bI!I[LgD'e\<c)jMZ89
%bbrb=(2,'sMFU_KFJY9[F/P"mqs,e)5T`KOT8DD`#cTJ>-1n.b)7ZY)ZrLhS,QX921,@O>2NK\kMdB*KjU$,VKNQ3ncHtTuZ(#&*
%`[t$fqBOHQ<A<Bj)jhZXMO@nH_m:1Y@1rrHiYbfCRRkSn:l:qY.1s`bD:t,(NQ.KVf*d\>39G^j3+<$j7P1Gl"Pj-J&Yot[>0ZX=
%JnC$F-Q(IN;$f[GRCeV-p7!q`8mdMgr^:%es5<)LUskFj\s0jPhP=TqA`Qu:>!-CV"Bhm6Hbi:9:q=50=E'K\JZ;uuU2Xh0>gj#^
%!TL0#G,-"IX,qauL;nj.)4$m9(HQ^[+.toJpCNdJ.d#HnnarLE<hMc&d%H5XN$O@-Ke\LeYm3qEWg8_hV'#D>fF&a=Yr"'JDdfh-
%L"gTLj[^*n9Prm"V%a3#]U+;#I>cm#$5g%P=+3UNC3h-394*A'#6c5d)u%cg5q/+6,@h4ABp`r1AWtipoL@%T)R!`\J_4!FcZ*WE
%(bU+#>!S$+6@8'S_M.N)Q"N_,e\R)]c,X:s(*i7"/2Rg)Pe(_5#]_u&?&*BhpUGp>*I'95Js>JDZm&],?dulKXTTj[g8rS3'J,6=
%:eL9^f$mIR]Q%fM@-XMP'sY<%K8kONRRk;@\L2[ng0r1=-Fe?P%N?;]ggO/qIF+L_V(m=Xe/u$smo#jp^nF\u^dC:CDYC0F%ISW$
%4"*1fAIsk@:j7#2BGs.(>:##p\<?#E3Md4Ul4.uT$(L!&h*"bO;bBd4[BWe$g.(HZ>W8$!9hHkJ-lqVR-sbFGW,QX<*_UQg4C?=^
%mZ#'YdFc_`T0Aj$*I\s9jt-YnC9!1sKK]Ne-/]i40e_i\=QkE0KDKGZ0bmSaV.B>JY+#nhCmCF?B$-n2CjH>4(96YbODq)@==Q-$
%?Zn'j2_?cKT:>S63A+:PN-"[oe`2<b)M:auC*eVmK?&>c!,`]i1<B;aX)N@aNSK)VO=h1ais0UXalF#P+F7j0kW"JWH(-YsHRT>F
%OjhG:r$&L3kT+d"\5[D7KFeWH\Le/cf_?=Hap7G3"Q(o#Obh/QkP5Um@2:"TTCB,&OA!G%r.0suQ.?,[k<;I),:,6^>OM2oRMQ+c
%F<jA0(p'u@]&[u9V^\Anq&hVQK;h8dIUU*eH09-&2;SUo]NPTC&"6D*D6,`Be;'Ig5D:(B0Fa+6\\V];@5hU2M@0$8N`#kqhSLYA
%FKaJeUfQcun<F3\gpsEZZMIu3p(VAd,k0Ga3'V.baP??`@*8;*^TVe5WV3d.[lneuJQK2DqG7[/2LW8hl&J/Ecfgt+#jm6U,j:o+
%dU7"D:>oXpDWE4G\PW`PekI5gBGtK<QcAXI(:AMLE8o""W&t:.!hqS,=NrZG["O4@F?>Y2,uZP$#X4l=h<"f%bWM^`)P`0\P\B!h
%OEnq6,!"acZ'DKHFp4fJ)PT6((4KNJi_MEP1ffnY;Hku&'eJ>UKhKeLU6adL)L'rq9J*C/dLZ3df8JL%N4[j8C9):oLK1Je#SKUJ
%JoE#B'h4]MZT&T@c1cnp(M=&'AJR48+l3:"p`c?mcI-r@93`6A.jV9a\r=Ok,O:'5<c%G$o-UYq>7X5@VHY2$ecW'a&ggjo7b?+?
%0N]?YN>P(/oR.XJ0g0Wk)-lhaZjA#b,Fc]hr)%pS.tWI;M"KkL3dJ@!d=d`V:?2o5QnV6?-W_?(=q?kdIbP]iJ7'YH)e#-#XBW4^
%CQbp\b-O'E6Gf"Cl+?=7Pd6J5_:dimXus4M/=VP)[1=<e[C*9KdWWHE/K5krVOE5g#><I=G29O6qqKks5g.5inZFuuaskB%Jc&dW
%ZQ45oqToE?*Z!HGdCf.[0i`+JF\hBSj?D5?L--B`r1[6ZLM\,4BRNG#=YUjco5uU!pVu1A'?F>?2G8G`)Y0gBL!!DoG`p1C5AP(u
%E-gB>Yqp;Y#ecba#dSHND1lnTS2PC5P<2Da-f;Y!d#`rH%mn`AZc`T5Q(3KVW\]W:KL5dO,T.mQab>:^D61+#>I@cSbP->@605Ch
%W^O#UMljj='NVd8d?62!*'MV8L$fX\5L35:JE0=WSh4`@KK2@$aI#-#0-Hbm4p1Pb2"#*;&Q)R!#JrP#DB!k%^Dj.hJ9N=+a<"mp
%8N?Zd4:VW5JMi"(O3@j_j.U;#h)9;ODE%DU%3^U0m*2mI#)&ki[uq7?"4EjfHkd"53shh>D4+.p6#ZdFTCuln1mIt>AYBHJ9$che
%dTALYpl9*(+XBD+F]hF!.+!6BTq5*i<r<_GG+rAQ?'_p<rf^TjP9cCB&JD)kD:r5pBRPDH`>UOH[gsBoaTmu<Njl.GlM=8HRk8Do
%Is^K+BF]D6W7pp<'ZCKOZQ"B\;()@c'n&j+n`GedI;MZ%o@!?^Y/7cOX=6Ri[mb"#/Z#i[.^Y7fmVWrh(GiIG@rU/\_soAX3+Y*t
%8<1Tci(L@PHXEkK:N(FOPi_Dn`d7Co*'X9[4\pt*Kl;WcgYL#'V'36mp_8WrpL]1V=gic3r2b\"VD/RQK(FYK3./khpon"IMktF&
%_e2j$p$gZ.T\JG3Bo;LmH*LAZNl!7N)*4V4lAeqbpomR*T<]G#/D%e;i:(/`7O_q4:KXQN:K\/LiKrp$TJ=`UN5K9YS;5EkY(mOg
%e\`cpnDX+a0I5f>,NI_6_c_\>TO`!UDIo"=I3[@]LVJlk4pgBYInGVZcbi6[iK\f;(l(o(iPWN?TNF:'f'/E<q!`sd_^FD*iMl,T
%ade+s:\D9tBB+9/!5#]Go5aVBja-^CZ77O.[<r<5D*<:;EqjV6%XV+b*u=/#PNR5>QG%bh5)eO+K>JO.4&YWrq*;5,5-%p!T2k&d
%bM(_.hX^/=#<po$Z^'f)+_VQ`G#T0OYA@GC4FDCRfK!B"]:C@.g/V7APr5Ca8utXC(%PRT:mT"3mI$kAHneR32[60$50cb`7cC;\
%2L.1+Dp0WO%<tS]/m/nrP*CXF+HWBB,;1GFIcS;e8rb0.?el!UC[N/\VS%XsO,JNBJcN6C^V5q$W#@dU05hfM3*gP<=]m<rkHc2&
%hS<Ng``a$bX*4@.[XI??DdeXC$H0l`Xho3#<]OepWA*;>bk)5<X<-j_gAD^3\$)l85LQ48)B:t@O[hrU6@)]4W\mb%EH?3&18R@I
%5G.M8FC-9>I8U<q37gteAKpK.nal8j!,0G%<"[=U#f`XO'i%0c7a@SR*>OL%l\8+rJ:@@=lk>\@TT(hQ$/QDIWbJaq!##42l+'K^
%d5^F59B!@UDR?Qh-`PT\M.I:Q;WnJS=W0AdbFut%"\Pm`/dH22VEEgrFJ+k2[njF>*Yp*G)+C^<Z%@c?YedAF==d#,F`,K!,qRP9
%S:):anhD)!j_OEB.G/qkCc*c2AB5(e'(H`6]@j7Y2R^(YFlq=lmHEk'3D-GoGrJ*9BOr%WeA5J=pkO),=eX]KEG=o*05@DHq_2Yp
%lP<icR"eEV_(`:j6%u0:*F9Z1='O/qN5LKbO,sY-.C2E],JL5j(:ad1`<qiOSabGFZ!ra_4>tIHcNq@^EH2d=&5,5!-KC-@b,r78
%Q0Y6J>YQP;Y>EsH\6s&BhPE.!g:.^LWbqKYJs..BQ&Cso>EC:1l9SpVNS1=#im>+E`8?Ta=;i]`h"kcdE#j^6NWYcDmL@3q<L526
%\;5*c]nPTCbV0V:'>Tu$cNG$7Z3[QC4X%=LN@P9pGphg):Dec@>;`L&NSCenJmCO;MSZ:Jfhk\6i^:rm-333)Ai1Mf*&NH&KH(Jj
%,AD0trhU.$L_Gi&,lX7_68X*2#NV@m)@-3V614_%oK]Hs;3?JKj_$3.Oe@laBuT=Q+?1+iX@<r1:#d3,qG:/Y.V(k,dkKm6pQDa)
%Wh@#.r%*ch0R^[;DCq2R_CUI2]Pi')fkkpM'j;]2</oTi<ka'P,\#5=A<S*VPt.n+\S0gc>C2jpgR^dUcjNG2oqAlffRuIrDK^bm
%Rts7M_9:o9Hs8njfsYnK180W[<G5(nX#R9X0[L_hN*Nt+(Du8fhkfjjZUO9\.%GShPqe\qB#h.YjP%&f-s(M'NY)m2h)(nuX^2l!
%j@\TRMll3OmYE\=NOA,"ETVr-#jYC#DG%OM]KKdRGVak`CXHrS(#$+Z9$DXA.FY&*[sGJ^3X%f0@CUOj"e'P>Bo<[VND_=Lr>smm
%fJH',g%&UQE%R,1V$_?WTq9L=bk.E;Pu.OFiViHWQs%^,[ZaP487s4e8Z6iS'l"hZS_6YGiq>ctT]Y]\KsMK1,,`(KM:o4=8_)'+
%i&Q6DO5+n2^@QT0"4&9VgORDc6FfnW1=ulcBedZUj@i%H0.cO"9$%Du$Aq9)cnoG'LM^P/P";NqI*0u56.O84ilbll$nr]UM@0rk
%d_uQe$_]5jH%ZCZp)8"3)Q4B)_,cs"`ZB_6o,qR8=Xn7Z382FBlUu32ag>Yb`<Yt?,c+OVmA(,J;E#?sk:&#$BA:El.Vhp3SN8'p
%O:lbY?Ym"s%pJ:AWnm)EH^ibo+$MUT1puR_H[YZ\E%rZ^WaWUdc'5qa_^j$l'0KR=mC@)(L#ucCCI7[01e]pbdSh`7&mBWpp&W$E
%@5]ZACV7BeWBD)Rn)4*U]7m9[`-DY=>._`63me)CQ`$UAKZ](4j^rF0<R^&$Y5*rk>=oX44;0_V@1B:-5NR[n=*(W=Q#,6q]Em[,
%,gbkbnb<HC]dC..9D0+BY7*:Y]7p;t[uIeuoi<Zb!"O<O-%`OAg*D9X^=Xo?7q%Z5ClF&LqTX:4RF>m%nTijb%[ukm3Hj;Y)Q`'8
%-,6d7"Q;Iq1^/,<gq`YYq8/j&"/-6Hl^RGJ!&pqnr&&%$G>%7=!l--kSQDJA9N@7VpQs38g%pjCLE$S*=Vg:e-^QOt<GW2?#+2k]
%XlBoM4G<og]ksiIpmd"u=6GPCY]Gt2T*Os:RBq_<LL.Lsi-skdThC<j<eX$&[Z.V$Wp+N[WY/)NQYr4WS]SF"!nLA&E1RH+,Xl3<
%cCelU$36R;'-b^0S2b6F(XN%+X\hqV0-n-AD<qF,SY`p@<gJLaPa?H-b!RcE!jligXh?=SKMr.DT-\:HqXB\jo``h=$^gHY;jsQ*
%9j*/@'G@M>[W)pZor<0B[1@=nRQLotri.jaIXTt+]R\_f%PNgn=#RGkj)D0N715<K=S69LQ:X`VOW&Mn]KT+d4SE6\E(""C[%*A.
%<%TnB`B^Y4iKP*Sj<@Ql3b9-6()E^<0*",_TO)EO5`cP5BZ!)OKa[Nh,6pu'*Z"fK!2=>Y<c/HS,Y..cVD1tU%G&<]9mp;%&7"3]
%',?kRbu.mb[EVTV[s_qUqRUC"Ct@^u<oH(LWuM[5&o,!hR8l;:V7s)\#[o*<EKR:+[fJTVLppJ/GXQkRaNmRjA@!0]@Ok\+GT/Xc
%GbeA=?O[/^YD2&-$NuO2TrgRS'm@O['nWo[9aKTF%L=,8NFomCY^o$9OWQ+c4Pq^]Fjh1qYD.YeM5-KB.gfaV:kjRpfa"FI!?6:S
%Ae6@A&3QubOb&d%)C([#:_9[H76tbOJDehlMVpf'"HS5)q7<:C=KW5u6U@q[c$VBV_n*[c-jZuDU.H\)j'in.JqDWIb*)Y5aoT=_
%FDa"=]cHMm&&EDH-OO<5"]infa3+TDn/e@ZkDFlLq%I#dCYUJ7F]#aXla!gn'Nhn7W<!sh*ipcG[C_pJo>ODjhADc+$01;-`DAur
%mOOh<3A,=e8sSS&B'sFh8:'"N^(s@@8='-F6KM4hResZ.Xgt()g_*&4mLoF5a=&WD'F$>iqdCQ@rMH70b;5]sT]A'a`[1AEC/+E>
%`nf2j[#ufWQ%KQG8uut.9li";%_U:@>Xr1e>P9Qb>K-u*lrVn%OD)7<^QQ7l7?4JPoQcbL>)aaPD6dNL*<hqP?ogk8qfNY9FgITI
%bC6S5R$0)uQ$,4H@+Xbs._pgO\\Tah@%t!of2]=m^J9'EfroOP]l\V+RGbMc^K*EhQH$mG.c\a%,tf#Xm5=c`:8U"W?]/>Fi_4#;
%Q4b,qfrr@MZSmf`nUWkHqfNXVfrn>GB(kQ5BkuD*A\iDjfrrBc[F39J/b6G?W+P2'Xj$-5Wl.rBX.X0]2kVG>Ibb9rm+74:frl?s
%b?hTcZ+]h01C$*\Z<p\DV5[X88"SDBBiNhGfBcSMB;`,gR*JO4`L,@Z\7WLYE_B>:eQP<*g4qQ_Fm\\HGeVn+G&J?q4aT62jCmRr
%aU%8?<!WUOb>hX`NX8\Ylgukm4-Iie.]62=m40Ad.g?t&q*;HcKl,nIlcqMa\J\A(>SgFdVt4)^R**We`-KfK61ukZO!4]k.![-U
%%bk%U?<aQAki,Vn;3'-=&%\tVQZ!eCK5#V;NGobiN?#Phf.HV388f4Q;o6)`KKG6g+_;cl=UlU67pN![_?k.s6L08MH+/c!Y=@2V
%WU:(,c*-.]jU9rZn&)HM9V.OrSRZ5n)OG=%DQGB7TN"Ne#^.GO#2e.W_2fA_4<!?%e;r91q;aRFj(8r8)EVS%?>:l'$*K".=2fdu
%L$=Qn9q::U<8A6Y*=H^F,L^,N391>XgZJHcODBK9L+/1kRYG^]R[Qi@bBae[d-bg*J?4d,P_6&&o43WX2I"]@(IAn_.r_i5*&MO;
%E(ORqQ36*/!kcT1#aH4.S,I)?F*m6EB9%A&)!^df]Ro14$GU)J187B*FN)G-d(W%hgSQh)P`U5Ah$B@+lp[MB!pZe-H3<<io9'^"
%FEMF]P=ZRMHNS4rjJf>;,$0!#2S"tu-^<F5TpCMtaV^*Y!$6b<okY\=L&u-?.itWbPF]kF\p>L[,PE)q(Ag9TH^n]IB965ZYXqu@
%#Z\caE%I!j7=r^A<eP&C]V6":j"W@jU:b1[Me/5M[IE#=pL,hD09+q$=^J3^SsOR><]QM\<hWj!P(Wj8k`>n1>F[@O]oPEj$UJ9Q
%,W+d[(2=@.N@+>3`jDgeUKXsXVD*\5A5>q1U8NcEA&SFh/ADr5$!MJpG8Oh?Mi7%KLMfMFL6>hrCTbf0#>&]8dM%-8V%9!1n;-)1
%+s4Eq4_TeDD8]2pPGT:"T5KMkPKDHoKO5Il$qPapZ)3-AK8$`ZE,4>f/frLDL?`*!KrVbSL+2<FoIA'+U`lV.H=5<-[Kn!WgdX=h
%aMCI3!$H0Pe_OIg8SDCcai/nP?6-%f;sSR%R"R?S1e`1r%Xil]c'GcH^V+L:Bc6am[b(2Gg^&k\YA_mt=0,.=nVSm)M%sMr#E?c9
%ReG76_J'g(jU"YT1^X3O[KgM68j'_t1gXN?PlhViIhM7E)S2+rA=7#*8kXVj&L,4)]nFsKLLSC6<!ngGfoi"QZIHQ;$!"aL_G]A+
%ad_j%N1:hnMEDKCeY6P'SABC#qd/;P&Sj@m!./L>07g0N5DFn0OT2gI#*sA+[Y164oq;PZ<(l9._)5W([L1W+=QP9;CrV4"-C05+
%^gb$2oe!,rb9C#]V6(u5M1q>'/CZip_0W//NTgY)")tnZ3=tb$D&OOX-lF]2CQ*'0."Ja:4`H3n^-r9/]kB;,&`J*'AEo!)$CS`a
%qCq#9.mXEb89pKILqfh@3%Ok<QNKc<=-gkJR&M[^J^R*J]aOdX5/jq*5qmHc-+7>XLa>'k%>8[Acdm@&E)plBXcP'E9dl%DZWtsi
%?"K+-U2#F&k2RSV5T2_kXW0U6E#LHCHE9g,/h1*+,fq,bArjE)(btIcWJ!uJO9/@`*5\c1Fk>>bE,U_^Qm84+c$t0:71>)MO<.)>
%Xs'P^3nbaLquSB8Y\hj6S2oOn/VMi53A4):hY9NVZIHO`%r%lj?TPhV?=,]f36'f7aGBi]6UfA0[!CQBoBu$Bs#0l<K7EU_ZX;TP
%rUf4EkI4M(I!G2CjUFWHr:A/L\*s<D*,5%rrq)PLs3(s4\,-FBM^&B1h<nXi5Q0c,rFM==^YA_aJ%4=`U$#4Di1/BX+-fBPF.(_)
%-jnB+7kXN*(^M1`7Yl,IGi5AuU&"jR$9^ao`AKsS5F)"Wc5(c^,"1<fZcO/k.XN]#3T\2n,ogIeEDd&]r1)J"#Y"?4(W`6,Y+RF3
%Pq59Z+1DTbDiYtWk7sGk(-6OA?"fgJhU`;h-Ed/)p(^^gc!/E<'u[:!PUjEd(O9H$?Q53Z`#C\8FWO5!>!8TW@B.E_'YliXW-2\P
%TpK5h.QLL5fFr#]!7Lp."ndk2/BNHL.2lKb5qd\pN:g21k(aRRfR0iT/$m)#;=:3e=@FsE3@N1tRKZ-Y)A50.<9^[3WdKIWPj3_Y
%hG?CDi`@QW^0-\L,m,AVKK4fK8(_I_.r#^*=;<`;Vq1)9F;]Nq.`3'dOc<?Tjb!C:jSGS7M5W-t.2,U*5#9a$9!2S!ZP$?*5lr%F
%^A.W&d:gZG<5=Ml.3aDe<Jkh#7HU\bS=]$+/%JW\MK20lUKZbKXm[Y2&Ui*+?\r9e8VDBE+Q`o+*)\)YWYSGSZloZ@CGT#iNKAdj
%VI@VOFO8C1W`Gss^=>[!XKj"ncGFMC>7b(Uo@g]2#^^b4Z_5c8Kf6_@+u!eB"56`^/jtudRT1+P6,pW%Apbu/6>bK=L/7-6qfX+S
%.p]3B.uK4f9Itn$BRRnBC?p,\1h&8fdG<]*cE/4$72_g<A3"",e=7f/62kD%:;g)VcY3eN._g9ps/aQAh&`=e0$_0j4@\Q8I8;?Q
%;O*E^V+SJp@EJgO'2JfgN`[tj8b,uYatgl#PaDjoMs(ND['2u]\hPe4DU&9G2d*IS:9I4rogGOGk"R*)9)i:e'/Vbngmm7hSdWTI
%P*c)ndQ6NYUdmjG!/_DsBG-jR/_T3#9,Ci3%HDPl`e;7j-q1/Bg^!4fK%),nDSu;S,/S.]iF\c4V(i?Qa2SpT)c.lr`'`eCckacD
%:3p>)_8>ODU](n)drD@\)h4LJqBVsKQ"C`!?2HrOdd\<FL`#e1q5uRJPA2EA]H/@M9\q@O(.ST1b?[Hh*bkKgG,1W/da33L/5sIN
%;IuL0mFJ!KK2\R<gCR90hdXQm/jb]/Vm,)V`^iK10?"cdi.L.[]g9A[pIQ(Kf)=*[I*3_clRRTRaAk0PFI.%KGjnQiKLBqH(FUV#
%ZriogO;JY,O(6h<TdLAEmkotV/ofPkgB)/hV&G0;<UPK0!ish=%'79^`_fC$Z(,`X)W]fr!RdW$NuUhDo"N%$Of!_=&60='H`.+]
%pl,B^03K^,jJ5-2@-dXH85uD-UfE`kN^FGM_Sl];S.aI2mIZqOKOY[6dW2VLJsi^2X;7jr1+r+P3(dOG3'+uE.MC6sasQ\-8Iiq#
%etc]^\sC;L@Ak/Zm6R*JC]S1pk91F"PZc5LM,D>f?Dt$TGr>p$pG>,30WntmjB:M8Jb\K_/nhij5T!IfH`j[cRat+,AkJ:^*H$8S
%[j:+0^9?RTDI[_HjTBl*ClJpuClujIgOpH6?cqDNf(5;3Zdt-cOuC.;9B.[KhalcW`Bm_aMP+P#^0(ft"e;Bb2,gFa*);j3P^#3o
%8bgcBBf6-8D=P$!EZ7omeu`7h8n080c$d<NcJ`.?3%)3l4Hs?Bk<Y0I(Vo/QQZVS;:dbnThn8rn*[mOM@"4\6eaE$NeitLuB8.aQ
%:6!K]8DHC8eW(<bX0>P-Al,*,Wo4Dn)c7L<QBq\"dTU)b,873#"^q[ZXLbPZePIXtWf"H4=fRVP7-o>ud[1C(M1djTa[gPKD$Pks
%/j6;PX2Pdp:!0pmReq+l7#K1/UV)tbWh9s8,c\N#(Q1upVm09^;K0gFF[\;G@9!DT#<?V?.nt3YfZ!*nb7YRX[$%#f<YM2WIN73S
%<22#2TVkk3H:j=RW%0G[3FZ.4#F9,o<2EhYQQWg*7%*gFASe![1.ac,%+1bKb_?1iMo+VNX+^*LC$Ujm6jaV:M1JL*;9%#*rd0['
%EH[1d+MG-//u#27=:_Fmji4.'WK]D&bnZfI?HMM'A'UTUTmgErKc3t"5]=`"b$J/'`go]efL!5'l7<3E)I82AEoOa&[Y\BXU7&(B
%2JoNH@^N]11o2iCftO/]QQ-eN.J&roj9&RJRAONRXh2P4ELK"@Ke`F8SiSS5BnpeN.RhL?%dF/4X$uS:BD&"/H/k_mXdf@c<Ztk]
%nnO>77.+/n72IisZ9fCoj?`"PS$R.rOfh7AK-!@%aY(c"Y%VrT:^*Xm]:#=%)ptFk2ESie_Br*%GHtMT#Yo;CNLRGofjGS90=l/$
%KWVc,0huq<bFBf8=/Sfi&m2J(':Xm?nqgm2gQ=hR\MVk]]R4fX:,f.I&t8/Xd;?HU/$gofs!/sYFn6<D6'8WqP&=q\!b[.i*9F.k
%6]oUPDAQp5:aB,SM]:D-pu58EZW&^tkCP>=8sh#^P=?("H<-LS,&IZRK\*=_4'c4!q>Bk1O'_C5U^t^&a.u!R7b!2;4'/4eUY8\J
%C(=+*Z]<ba0,12;.(WQ3FBmMD_=m,LD3'@g,%MV3mC;N4DlLp>gqZ6%dHjaFkrtH`_`@/9ELq#h2-(1:-=uC4IB(Drk1Wg$.Y]^:
%=fc@8J:i\0qk?D4-!m<_d:*<e6]"B&4]!hB'u#B?cndNg$g3/`pE@>c`-05)EHjFdOg=_!H5]`)<igJc4!\(9VbP4`+d^F%&N+D1
%B2r6Bmh"en1_NN^^(@(;SI"ib`q28'>0J/E-.u[l]O/g?*X=-7V3VRQ$:,X';;`Ch_,WnnS'Xc)9/^Q35WVOud^E!R">%8s@Dr_p
%2G-o0#oJ2fX3iIXg1,.+ZDCc8\b'n"Td9uLJ1,%i/K1)"fi'7;a[GFSCPF%4.iO't.!WhAihOa'15.l9Dk*;.'Vg4?QLouF)R>ab
%Ns(EuJMlanDjX+7aTA]S4i9ec2pp!jV"![5Cr-J<Z)<aIG@bQ'3^,aF[6URl"7G5r&^+0Zf]T-)TQ9uJ_%%!+&.;F%m0Ys;F#utQ
%I^%/\[5*</ksok>&8Jh.4[;4o$*>LlA`r3FnC8/("Z8ApC4K,]\!JE%'?oo=K/@#0)Q@1k<+iVjccs>X1bXq%/ObAOna*$<o0XR0
%6E!`K7bO7[kp,p%XCenT#]`/Q<#;iS>F-XQhBAM`Hou^mB=E1rIB__p:5g_9#$DXSg@&?`eVLQ5Y6EIFSF`]fgSP7q_aA0a!tlan
%<G/"pcCFEn8R,PLX^sEYMX6e$efFWmq0JF.</4=X/eo6?2dDhZ_SI?;[4.e1=SGD!&EccUWeNsa:1rcJWY=YHQIV/MB8I-OX2De2
%n.ehXpk6e$bVgWY\ZUW)R]rs"Yg076:#'&;)&+Gh6J`QiX[_YKaK_nIeMK7jabL(F(WakfGT_'tT)C"J#7K5T1]&;m78BRmq`"Y/
%M*I8RCu?@RRm*c`T@aWG6"<&7M*1ifo`e'G))Z#&L-?bO2;k)Lmp-X1O"=CR(!>?r29[fWj=g]!8b_N)Vt6K#".@qd%=Q$tWl>Q!
%o'Br?S*e;`YQpLjoF9n3S_26#(!^eAmn<oJQ(G/n!5cf6.g"k5I[r>e'5SNGS4sJIcHLDF;-$#3f\%o^//MU<Qm<FqEjDaf=,Rq9
%eRPck12T&iCBc9;_hR;f<IXK_[;9CTq1:B[\clUlZW&em`("GA,qU-5m$GSbiamO0b:L,^m)<V@)E=aM[nr6H*cVgj/q.sV;Dg,*
%b<=to^CB2cB">KP8HZjc=fntuOdjY)9qGEb6,V9SRg\0iGXQes0a((#V3IEr@0;GW^TfmY#F_kLUH\P)]US7tkj1F&=bA69pPqZe
%i1g]-aAb%NjVguqa=("jb,QR]8dZaIh&DPlY.AZnRqdP[2M<T4.`!#u%I7[!hZ>*(<f@<hn^;Q[(kmuO+#;$'dZjs:@Hmqs:kF#V
%=dXh]@g"Nj7,CprK.W4cKL^cY_humI7Sst%5bUc)0>Y8ZoS`OOF?1jdMmpC=M:6Hf@32RC#i"QW@WBg1EQWf$0s71d;C2CdahGi;
%cZqse6u*3\(Wk11`KN,1hbo<8F-mWhj0"Ms>[m=uW$r<hl`c^@(SZMdBenr0&ujq?a>!9N5^#fFL=ReE[EAPk[j4<g+q13Cs%C_`
%!m'pdE7?F[+59MuI=^1=U$*XSYD3N=WfS`QS=H?`1$9_j%:,/d%&>(r=]8-B-^$#WM&$]60ltgLOAF+kb`/]fNeChMO9=KnRDGcK
%heq>Q_8#!^Y:2&mpfCDs0nObK:VhYH<-V?_ZH1"XSDm,SM%HeVF.N'R%X(E;"kj9h;nb1@nIZR9^<]S@N^]?CKcDLI2e.q2NqKN!
%52,%VEhCZs<PYPKgm,g<k+e^1:;hL<S28!6Y@=fZ1(;6T0EjBU$EL_5JP,]^>Xks)1uZZG@";;-0Arl94$?)$=`"C<>.#'j-7g;u
%U\/,[_]i,T?O]+3p!q-`CuX8\DpY:ENOWg;j<t7LVHK#o63#bP7.>I`[6JQo2%#O4bJWJA$c=RlG1j')K1+C/=5ai>QM6WJ.B%5Q
%p_L&]TV;qo+_qd8agj'YU@KZ,pp@A=$(KNp.o(e-B@\J<=*N7CQU1>s+k*9-2(ceqn-)ZGe.PckS@,cBQW(4FKbC7ONdJXq./LCg
%\79<?+I?iI&:#ks.?FbZF_=c$=K2YRUu/%?,Y^-1`97I6V7b@fq;ImK<qnP,h1jXEKVU>]/A7t%e%/Gk;V/Uu7A@Tnl/hRGX2-eR
%Qs?W7C64@Zi)L,2R,"'Dl?4@jMcid)Mg&8g-kaEA"mA7Eh$S`@(Otq%"YP)Ac>J\6[\K+];+@hra*.+gNR`/:1KKIrna4>.O>W2f
%#jh&?1lcSlMIt]$W3O@#K!BsWm*(FPD*_Eu2E6TTBNd]Do?j"j%8ssFkKjG?PJM_T3G#ue%33O/Onbah\("F\Ke%J?)B;S$$DW@=
%>Em87;VUJjc\Uqn]qA,M-d2i?<"kpM\='0>`cecQ*;38KF"kiBNMSGT8Cf70(/>rOAl`*1jI`M;s3bc!i7gF+D0AMV(GH`K/?>)a
%`C=%X@"_Z&&P!af8MuQtdQ_\`]+9fCUO*l<@r/B&H7Kn([QR84rE'o';`qn%VR[6Yq!.o1F`LWINLp^i&]V?O3bmQBbt"YAofCPp
%GF#e5;/a4Sbpc`sTI6i<mbj5#D:RaNQ@pl!I[4[bVn3`e%./tahKoj3(tf#V/F=^ub:</ho_bJZ3s11=XR<6?q'nD$06+$kP3-M>
%FhXf2@P#<5cngN>7<l_k@,P9Q(0VngKV,Fs!MnC>H3n/cFDiI7,_eok'4rC,#t/_Q"LIm&'T3HIRH6o4i)USW?sQTJ"r$Oh\9($l
%Ou*>-rRk&NJIFGuMKa%`97V>fIaA\QlcuFn.AA>aq:5QYAQ)I=^/U(;`hdX4h@I,t9!ECTknjFk6FG#J7d<gg2d4aH7bGm*9@+?r
%aGqc(6Vem]@"9/PS&th=(b(61N"F6/BX$2PZ.EO=gdt0m1'Erf%B;J1<e&HeT%'u]p'di)hi>Zj-`_6Qcm-f@[`OL?c"u"Y?_9eH
%$"YW^Pd?aCX)o'-%aAKfQa1OiVG$mr5Qu:OGH)"t$Jc[`63tfAPas.<@08(_9Nlf^[(EOaM/c3%`St/kcHEr4b_p8%Yu/=hA@*>E
%B"7t^R:TIM"p&M=<Qa2MEZ+;XoKb)DOn%+*9gc)_%-EumfQ'9UQ9MgthW6RYQ7!d4:gbII#.6nE6_q=44(:c`B,*Y2EtAJ+QfV,I
%*G_Mq3V5TICscXW(L$bG6k["7_W(]%L4nPrp\IO)=I`=nfF'M(Lbaq"$Z+4<@sbf&%UIp&g@hC>>LH@OOr5-M]MQ#r@o253=E5<a
%S<9Mj%Okpn/r,-0cgr$$$-CF+mV6b45_(8rbDm\`g8lskPdH5,+^'f3,]b`6Ccb_ZnNfHgb6cL^';phPQ%f0l^O':E:c1oohWIT8
%->JW0=n^==rUOpOo-Wdm@KtXdZj]tX9m(V*kY>DpbijeVH.:=a#T#"DNZ5uuOBg0BHn9uE/'DEm:9aXVIq7,3b(tTA%d4-(`<jY%
%;g2beag#O!,5/=P0boI/eMFNIa=<'K'f_pK6HSlXA"OSEN-0h,aac1pSFoEjeppnAJj0kk=6!__9+(oR^cGUao9R6H!HltSg4X36
%oWm<a]:MnO#A\eWL_pfU!^QAfQc@<M?\Z(7#&#Q,#P6bW!#%3e9iF>?h#0BmB>i".F\MF%fkNB4ku5cA+PVU`dfOp&M\.>DkYY"h
%LTmUPA&E%r'fka,nt80?A-:e*j]9bB:())#-o.\*6TJUA$`qRP^2V)H*_gPH8<XOHJhM].,n.,)P%\(fk14Hkb-LQe]nXK?<M_--
%?LLnD\4J6bRq^#b0f:7$?S_g_i2JJ%eM6P>+PnH,>Q29[RU$$+*,RL'VuUH8*FT;(%f0qI+Oh^X$J<;["#0L0'hG9hpAfuWNJKWl
%D+0>LXAa",L<*j4A\+`XMigC2FT^%B"N6(VC.Hb(a>l&RJKrdP^NP=";WP4N50E\Q.V'ncDm!&W^bfR++-8UOfpE6c3=WQ[6I_Y^
%T,]lcWBos],hG)4*<5,#6:-ZaE29ui4aUeC&sD9,aCCX3!N0!$)o/J^8N>3V3.6]sQqWBHo2V(q#D[!#GlL=UNZQZR#MbXSOg-c?
%ZGr7YA@]q><$t/B\<Q1mHjt@f/Ybc<"52!G!"VD7FZoF=iYLV+>-&.D?mgYSRDl*OY^"?CYWpKO6uEap17O#ORol4M'Bq\*\Imo(
%_aTpE#bs_q\5\&oLdHekDEr-+Nl!8=(G]1-2lb?4ah41I@\oJ4T<pL%%]YZ88>:VS-q+9'.f62_*!p"CEeip@+S.=5OJ:ln_TrQM
%-1oCQ3KUp*St;,-KuGTMk&\W5o]d#fi_ob2A)ei4Y`%ublZorR^nK"YTLIqCNgle+TUH4+*&9?3NiU@Z_4R23RV4UA_Y-N,/<DcB
%bN>X<'"\d(8</VqSHN;j1NFi;ngV9RNbKiY';NNgC7b[:,I#$!Q-jOaSM;$$p2ZD]V-;cnM]$%M.0c80C]gj6MEI\B.l_u=O:bV-
%UNW$jDP&-^1HP%cI\q(KN4_pYfk'!Ylk#)<pV93(1sk+`$Qq/*:#:"emlUHt@UI"E9`385lAn47FK&+3UMA;j+hrRq/Mk@c@N4r7
%V$EnBL9a5;7AtYlY#f(C_^&<ncD6:D[:2rd$7Opd]PJIe@>XSk@K6EB'#OP`a(8p&r1mHr51Y@hpnS0k*hrtY1o/GRTa'd=-ch![
%lT!T7!dos"#3(L_/;P.QC_''R7@GDLq5Jq5^a,SU=>NQ0<.p#/d#l&G^j69t16EqpJB2Vq\f"?$P$QLhTmDbY93lF&WkfpW5QCfB
%cTFN,*0HTc>QtDO!jup^+h<UmY\)Ll7FA=lSHB9lSK?Id1YRU1#$[97TaG=6:lt&QSW;.fg^\4_FcE2/[Ki7M#8j?[<t`Mh<6H3@
%1YMjW1Z<!3#H(SdeZ)2[*g)26;YLrGiZMt<Wi]g].]GGGGgO5fc"EZle=ceMg@m.T/m-j`Tm^[`U8!YtaC8oTU,;$*/;GLS@-!Q6
%:i^"NgLgbo@/HbN:7L&8#\Z[9J8SaokKQ\9Dr,!$]F2tjeH::>i1&fW^'OY9O_RgOS=hu(>jV9KUaB(U!,(N$4>'%,5P[i;aafII
%"&0IaKL<S[(;6NBL5JAV!BO*O;$Z&N2t/cqZXha_"=D6K_qBsdW6c*?@a[scWQU/Jo5'p!*=a4'ek[<W3-3fr@n90`"mhhEfnX"H
%f!o<WFc4:JUF$2=DiKu=fU\1u\q$_k8PFBIY[Cc0,h1T`Jr\$&NkV2CMM"HTdc;pFogK/g$#KN!L)>:j7Mqt5fdMpd\b-X"=[?2\
%O5PQD%WZWJ(/ugLSl?.jU.?KsJ5RoaZo#:?\I/K;TS>@=l%Ob@dSiSY;5KQ)<Q.kB,[O$Y1/Z6rW#n@R,A#'Q[-oe.bL-@rKKg&e
%6]O1X@6JQRRNPia%3S80/0XurI76-uEUtb.BpoYCOt6CfYnjnNOC[3JH]&'O9)*''kBBSWN=P,(og.bc\+C-H>?E'd9k_B*Zi)J4
%VmO=Z\uRW8.DQ23ko7nXOUrg7P4&CL">NsW[.VJ,CKa71p5*Z1aKMIn46V*H(Yq#P.4HCDXVK8EV,'@ie[AXR0@6(Z>uPl+8"gc&
%JAYP`=`Q#Cr'*<$c"[1:ZEY'<>m?)?WFBND/,;aSO?32m:i.nt\C@tTG+*lU/sf($r[nGll#d^!4Yr0J]qlqI<4uCu^dP*1B$FFk
%R_0QM?n$G&6Z[?L;G,k4A.7`RiUqX0%9!b+D*4uCKOV;a_d6Y,TlheO6;lJE>F.tPU/W;SPgu[b*Rn/qXSQ-"QK1a.Up6/ALG?oA
%1lgC1k7bmQg;3ijAf-58>R"JM[oeM"!B==@)-!pR9In2^(P?01X0M#<F=dU>Hl)[3Kq*4cf62dBOM<K%:e*L\UWSM2\J8,l/a+Uu
%D[Dnl"[Au?OSW*]FEQ-@B8&g2;"7J3f:+D!L)!LU/APs]Ef@#iK]`!Vr%P_1K*.th`h5l*o/EngQ.hg&gGps[-qpS=Q26;Td(6hc
%9X.dt#,TELqM;>L$'[OjNhk;YOL@G7_Sr?b"\Hgg3PViQ^2t7A9[dYZ1&86,Tr/_h;ih/k2WS'>P(Xa+-:amnES0A*!ApnrB:!si
%4,]p,5>kBL#WXU;%@kg@^s0OuTM8_W/aMIb76LR,;=j#)CM7p"4UHJPKn1nsqN7Q8Ik2Ef)?sin3kMP(qAk(RPi[GX#Tpc6d8\nQ
%oJ%"G-=5:7V[]Y"(D#]J:L^R=K8-*Ri9q-7QBmml7(R[n1cDBL;SR@+):oJn8ade(b`KRufYOZVUE0nbkn'@_9>4=8Qkb4+RNKJc
%R]pl)rQk=jjF#)ZETUi3fQ<+?R&L&H/N/t6nh(cHTL<EfG'1`7+qF?LJ@*.(,s"rj3AZH5IBmSj6RNPt;IKM6_%]3=7R.W,#ga+r
%S3">E+>&1L!aQ.2D+fS!_ECo<[k.053+ipK1P<OOVt".HT@$_cS<[/d:14aCYQ.iapO_L1j].^9Gqdq?oLL\e5f5-k6$nl-Vu^-R
%6LZXQE'UXs;*3pZ_dOJ5*Q$\d6A+:WaiCDh-i2b1__hTC(ao[B^a>CV&Lq%C4riBM^-Q7:",jZoN]M3Ggh!+\a88HuU:4iW=OM?/
%-seae`&'3Y"_&[BC%5"?':Hppe$P"ebjcl6"Jo4<[5Z#D<G^#<I3rXtQ,?a*>dE/5CeSKucmPUiWFoNE5mmg<dU.5nTTVE1/W;rt
%M?[BN#I\e#lR6UQGoXU2S0Dt=A@qm1%@R^s$R&%ZZ^D#e=E@^#%(8H^WLIEP>sf*Mo-3<*<0nPcl?n?*K#EsXPC\`@#pn_G%WU4C
%-$:DQ`i<o<@r##52krO\WMp+Z\`,lok("9lJ$%$&q"]_9q'GLM,G-eOj8L/<JV-T.k)W/i/p</*REg5b+F>6ZR%[7QiPDh/3IAlK
%8&3OTfP),;V.frUO#93`\4D@4!/8lqY-Y-8Pk0Fe.9ON(n$B\1AYmdg]m/W_qrt`m]mf^*'gg&-4oP3&MG^F&p4E:%M:0ED*1n"]
%q!=]2JR;0?)Q_u+a[%COSK>*VDa-NUa%92t<1Gj<jK#r`2#5+'?dO<$X7>9l4VQ\B099;b,kK36,C9oSO2h2r7$eC"o&#MBIuS._
%,Kd<4m^d6tRY"KgU>0!]6(DP0>!%tBU.cMJ6<^f`O%AB/`.FqBI0LI?W'M]XPVKlbF!-RRT;AHFLoqMhKJLTV32J(`N6:kTVb/G?
%EJ7NZeUfOt,fbS#6/noG%`tK/ZRD\+TrPt-ahTuHHh7Njm:&(IJr"_f#X9JV/onR(,=?GlBih,Moa2iL)@.c'#,')<kq&(r@PIuE
%Y7%JL)Y"*DC!`@3R1DhXN]!dDPq+DQOg>s0QFX)9;)4?*"d&B-;?XOG$Du:^(L%#h;s2mVH9]ZfTB>#)2tp'0G`PQo*5&1C:H::.
%S"QkC`$m273,Oh9Ng$=h%"M8'WouEZWlh5&BsL(E)c"ue"5r-jqD9]f0jTX#f6%0BC'2"If-!J9f3!(7VK48^:'h;a^;q2jQ3UZ^
%LKJS%Ks.9;S7(&U28$j`:Co5C(CK`$,f`b7R;[sP,0-=YOD_&`jIi"(*lrin]m:h&fdG.-,&/nnCcEY@5V9Z#4@=_*/rHIKE+^mL
%?SW&2nb3[NZ2iP1iMcE$\oQNpN;Wr53CS7V%hcm[EV>Q>a]1<qF^_M,a5"rHZ00i"d#0$!ROadO`T?<=49sCn\L39E8?11c\XmI?
%Su6_1DB%PtXpS,)`_L8CnY?kg$C$3q9ka$\KPW\5H<;&H.)mo*Vk,5I+=Y>4"%!fYSfX+>f.SG$PHi[c@1%H/&-X`>cRR0/`a@d@
%l`(F\d/\B9''@5Q$rWc-QN<NEr$&BpkG/h3:?"a.:VV.:#[8YuRaXMij<UV>l(H&oUL*ku70P"p7A@CO)=OZ!+mNeg!tQ0@.6ut*
%=EsW1e%`7m&OBc0Zm.IZ!*LjBWT,S:Y.AnV5un)c,L91V#SJ?E.E$%oO!Fe1IbjNi>)"nHiTCf^q4tSG,#Sjb<eFUH@a!sR?s8@A
%#m_Y[l_YXXO-KK7&kJ3O`@T04e6#+S0tD0:eADN-7Cc>kIAGDUVmERYAsKTtd2V,3d/B2`bT<>gK#o/d@Bp.ZIR3d-<O&Eib]NLK
%9b!P&5JC!5L0!/[d.LVDNuC2bF5Uf?MtAN=.3ueKd.s\Mi;ueqWG?#r<+($/'+YA'?t=W7LpLSFX@$8kYt<ehNW\8S,I5N"$4DGF
%9;,n($brfAg[M1\9Sci-XJfL6)"9t+$C_*OfI*mi_:XO;@I3Y;9pe4?;h95H-mfn=4q2VL7!0ha5SBebC6GYc(32lpD',u[,aUc,
%?3$naQjsSK+39Bb.Enua<!V</SJ$9qk42T;X&tma!.@I6TdH*E_6F'?4%jZ#!+:VV"#tOd?l\b=<MKnb=\QImA`4QVY5qJ&#W8A7
%a,+X,aP8*VkPTC//[Nu9+T=-Io+ePml[/_9T3`_mo*p@'V?A,`Z?ufSE!T'(_gGNgp?2="CL-2\p."uACJX/E+=M`hKTMc<`"igZ
%LgaS0:em0F;'hQlUi&/'8U&D<N59>UEmur@7kdKoO'g<VM/Y!nE%<AOE<\$iE9756/kg2Y-B+/DFm`DTJAil^M^0tXLq_BRaE>\]
%RSKWFoRpsi16t4=.3JSn?5h@(1WdAEp1+SPVirFRAjlfR^f9'2eO])[&unGb0Zq=r-tlU+b4MH%"H)\>+SA<LSn,W?QM;V+#tk[_
%J?4NN/#:f.P:1+]OWe+h5p=G:,_ON9XGI"0TfsI)D->nt*Z;H;\<m"oiWLSp%6?i#0;@Mbe;'>E+i`=A/0lNmd7+EDl&'7mi1*j"
%E#CMm7KTtTY(e\\K&gkeXY">6r2puV'1CR%mrm2*E4khbTDh'gb9!m!>iUSuj3.5hD#T0J):JF>c4&*?)Jb)k3/oj!3o6;c6PQ'1
%SKY]ZqKc23bM/Of4<H<=G_]ZihgQj#:B0s2qH#LnKpjNq>dNc`&gG4P>1kT%R-T4O0a>!V5EOYm?-643X?XqF+Y$5siBT>j0+(W3
%H32+cTXi5mN)o;(&-g=YkRErq&iJ^3h>3f[m284K^!9K8b*rkrC+A)gfcI(=-XKf+LO:5kE=*qHkV.1!qF+'%&KcN.\I*EBWDEsq
%B_dk4;b)ik@,aR^;NsP0Q8ip4W75klYDANm8C>8QIeX)6P%OADPe:4RLYO0%E=+da\F<8Q-P?*Bdl_oQAO;Q]<E,tdT,eLK<0/)n
%O6?n2V]1_g$ZZt4aIuYCQoaI6O.r<:-:^="8)[IgYZRX[.!4c'aQjZe9QYO6RL7[UW-+De;C$!*HG.[u',Q>fF)lA4=_-s+$lYD*
%hloZJRL#AoWY/KpNnQqB\FBX@<Z<(d)O2;b_r*KnN'/HB;8h9fGb.T*@d?LW%]_!Nc)ZEsI55Duifa]?Z57_AAdc=PW>TB4bMA3n
%9;M\JD^C^n:Q'(MKbG!+BGW$(qu*ls`],_GJ;udgii8cK\^B7oiF<Pt(s:q8j(tmO70IZ'<fXX\\kEW(drglj#4).#@MntF-W%^R
%+/b4<5fY>G0\CU,Sfe4U:8*IU*N,%<bS0()Bk#GM;i"nUitSL1d;^(-%!9,g?-JpR\)3,u#(q=*AW4mj'1cW;&l53\_6.e[E=@l*
%;lF3!itV&$`'I1mO+E<i#\8Hp3e]m)3_gi\5qM[3)AuCl&s8-O3/pN7p>@B119_!D$Ua,gO=F",]`L6_g(!<7U6;BmdZ<(GP]g:g
%Br>`h+9oh%9t`fO4`[YnVa=!c>u]`e:%I7232pd\G^k[87T>mI8g?CRQBk#>R^1E(16c=1'MllU4WCQG<^EEjpd"U,AHQ@>TZ+>:
%!5>FBa8D\;dY&/Q5E]#g2#h6YWFQ?fQt[aFg3oj'ah%+F)B8,PK_&4s^BA&fRB<7+E];s38n[D.gQLeP.c-=`a#';OW3b]4CJ(-d
%a'4bm/3;XV<l]<P5ch<U3/(N@3Y'8SnB2,\ECIi<Q#WMWm;(a>L=<0_6H:PJECIo^'lp#.PT%*,j.n08:iT*u>h6/e.9D3'.oS("
%AnX7\7RWQDIdXH/+=%&$l36U,IVIA\>Z<SS&>`ohAljhN]Pi]<guubrF:QPQn4c7>WZ3\F.lpEUg'\q!PjK2+V\SVg5>EZ`Mgh0o
%]GL/lKns!?XK.&tp[X^&)1lL0<8)Em=Ne0r;V8$.W=\o^A*?M>,31HOJk7tk].Q.%H0:AZcpUu6<T$CKgP8(faHRhRP4aI?#$srL
%W]QX_lOsIolRa).(b@-rVGlT3W,Kthjh*Y=11$fP/ct3len$gs%0na__'VFa$BJRq8DI&t!:,DhQ=BOn$#<?r*PaO3\i<+A+<I/O
%+'NTBM]-rCF<"4Eo8\%J.t7sJV\MH4'iBYA^'(b>q.W9Z7E9+RO@@3(KoeaD8YqM;`G*;Q7E9-(OBKV\"d)6o)jNhj1KqP-;.S.(
%6<Rh]nV"d#(o@s=,NDKn.?9@)S5LCG3_h,cN7iPMM.Gg0V+<?Wo*JukU#M;'ak5?C.?uHr]GA8I?^rtq'3?=p?0[9O:nl>_Cc/@V
%Ebbur.#SB:#eCAD3%YUXF;>m,aWd&O[S)8C8O?B?Xl+UN35_bJElo\TJ`%M;8u"gc.CB5sKpN(#+E,D]1%R&=UbX8%d(SKIE&u7[
%1eS0PnRAl.VHLAU$G^\(9fF/Gp%41ZfrHlF.Sd$#NMH649%,HpH:=rMn3SgA;cPTPdLrLOPcT\nSOtAI5K4@:LGD+c_;5<';k,Mk
%!Tlp3'2gD_2jFjGGY>`X%U!coH1D!#<ehEnU#D6)f;@T1X'VhYF&Lh0kW#F02%5rIp9h(m`>_glrpst)L@qat^JcUi6cUW5Yg%DT
%TaE]lQZ!HUG1l*EHu:(>_n/;>o9o!K9kXY-+r`[d*&\Y=@oYn$GK,8Z^nca0WS'&@X)Ypdj$NqQ33C)U)UQ^^]9r2"lW*=qmWkcj
%eV%V?(an6-7;h=f;N-?ZEE3-GDct"EfTQm\.QLasIp0#j%GZ]2XCNLL$8ltk.(:@!BT>s;3Nh+H6a^ho6)[?Cm-sp&_<RFCS"e=c
%Ft"NY_H?3.G>K45mWopca"a5TFJg8@";?o.qJ)UVB=XgHmO#cU*!is\lVX6F1B@tf.JK5\O"jn^?QUT44A)/iN+Wf!Zrmm02oA/F
%5)bl5MOEG?hD+>lk?-s.WImi?1*ert#U+k;;^PLh$-?6kqfpO>mP5ER=#t-d7Y;k\!:!]n,!o3I,XZF:=,Pl^_]+PP?%^#SVYsg3
%&T!%k6UmA`$QE<K8mZ*"PC1_,f24,"2&J[^%#Mdi/hWbB/@;WraS:UUp1D<c:%MmHSTWXQ?4/a#KbF;Sc$/OEVcA.('lRIR*@ag`
%r,*SN'5G9LLR."t?dr`H\]c[Z+e`tIIk/B@2j&Vm_&/-+K?8[+Ra7qP*b4]>,8e6NJjP]!<><EElOkh,qD:,(QANB]]_iCSc2&1d
%Ac$W:U#D5.p<YP&:+`pb[j_Kc1,tq"NmQ`Xl\f_-'A&*s5*m.U!e'T42l8j-7mAsTBSlbgadq6]7LUCb,@S"p3[@?XES<"l3sFj^
%FgZ6MEm,0_fgZ`D&a04dmClg<kSID!9U5"I\QD#$=>B!s1p7i>gHYBaj@8;#_?HcqmAe>\AKB`<@W(BH_kGnHC;4d9%XY%NI!$o0
%V&=WCP'AdsB'I>qSFhpLT/qh9n:p,4/i\X9pJeVq2b-V6'VGqB4J\4)?+msZ5TV9.LGDuS>Mb%33FeUEMaMW5X[\uEjl0o6j@Wd$
%e;UuaT`o5'KQQ&o)q,ZSO_(q=,38jsf9.,0]X-pg5o(%=j\X#:p0!+p2IZ)&EYu.nV.b0SF0[/&TeA\^$ZN8gdLC@*n1P)1R10@E
%T$G*GeFNYMkY3<!R>'E]S!Lb`)nG[%j99f8^HS5MZ5mtnG`_-EkcoCiBB2/]7I<$lKql+S8as?MBTBb\!4!kHLTK5Qk;04<&H;eZ
%P$.D+)n+0d&p-\,^V%`Rp\t=q!Y.j15f_7Z"@l*"lrQ%u%37rGM6dCQoakjdLIW$]9q/8L8(?c*'mRi=,&RBE;mjD.7;.U5bP":H
%l^"s6"tU1ck29*h@h-mpM$MLL=:sP+m>,8+-L`Xd&Q11]RY7LdnPr+<9?4cKp'g,H/aj<^(EM:OI"kOa#g7!=+lRlTeM"U&0tA:%
%po12)LKF$P-g<"afYB:Yfu72<Uhl,oMBJXp8@A=$_'UdPRR^6F?QJ(fX=.Q,dB(R'#P*`pB1WK=3uKJ5XJ)6%*k[ck@"\I<^i;VJ
%hP;*G?8[H:X6R=d*U3+DTu"7?RBn@O(loLqJ9Imse5;&Y?\EsOP12p#=/$CV-d5tgFXndk?3&AXMIM9#Oq5=n08_/#*@]*6o6OhS
%.U1#gVnFtL\l$j_8Y??9;i_?Z<k?pCG=*ulWQFf83k-efe&)W/)?_+HO-hhU@3pip'A[MUbA*0f);>OL\k5A_.^Cd56HUq&2Mk:&
%;Hr2l,.KL.TiC9UA"p:>8^g@=:=<-4_`?P8OVI0A<JA[aKUTc>Wd$'gLK>l-s,rTS2'Bc%B!+Y1!]MCK@DUt.pm1.\n>SHR5_``I
%n#7<aa/Q2*DtF-aQ2(Y:WC)*_g\\@n\AQb(X<\'e2f.>!k8lk8MNpS?ffJ'@g&;GMI'p'+N4aE0+%]X=`&:Hok[HFG`tLCK^9#`q
%jY/']LP%34a^Y@!]O]1^"c`t&gErb30YKTsKp<X1K^(gtCBE>F9gaK(MtSW10G;_:f0%I>UoU!6G'mRL%91O'CNJP\&JKiOiL2Qu
%5])@?ihD6WK8W+mN*g>,k"SXJMY4G[6u(,BUdjuL[H0HN;LP3A4e-mrdBu.raAp9BknR:tgC-pI:(u\]5U(q!(KW4%=?iDrPZrph
%]8kZ!"]qi1[63"A#t%q*Ef[dnpuRX8JlOY"'p$$kNGXQn;b'AZ_^e5EL.hLg$ak5d8,`c#f5sW:M^RAia"J@rik1jbPS6s<8MRrM
%EuMR&b_!EjR`p^6b2)Un3P.q=\P)XmS/elsfI?]DVMtC-qrSmV0lkW#'rktC6G4]]-VhEF#Fs`_,uEfiW!/&OE?NDqcBc2iF,Fk9
%G?_+#-ph4742bTu;.`KUEU8RXgWacWQI,/[V@o"F+dX6sacVa)U>]d6\>,>MNg6.K_hU.RY5TgDAf,jGPlCl^3\KIV->&;Rg#\<5
%,"*Og#$>jTZmZ:EEQjSX>UaR$AT3VeASJBrnE((]5^"/$j+mU!8CbJMo`:*g',2HWCC`U*V=:^b+`n^'J9\G%ij$@XG,QC__g&7l
%iuT`Gj/JeE7Q=>eWHmG*%OXRmddbB2>_.KsW%R6BKu_/D6VIL)Ejt^n<Rk_oB<jPZl]NIPN.EGZJP/%G`RV?'fW*KDW0G4DLIeOd
%i`"j9;U3kq:]ogiQc003k,tP><k5RuY56Q\"#k\5KR0W^6oA#0h*uKgr]SXT#b$\dHf]7G\<U"h^@G?%B'm5]dLVjM-f>#re_ogr
%Ft',kYA)rm6VUk8@DD#g>-4Ypm;cBncspRd9Th=lGg5^:=rp9+h5\<OCS+neVbgb99QbQ<HGT"*s6#mKh)c_VZZj%QgZrL]05dBL
%SptnVlsb0eqt/n(h>a9_^SLn(s8T"sQi<K/qiB(kmk=*H5'h3uFa8&uS(kPNTA?'O]XZ_qNR9ugJtDMcYA^"]qXXLSgFEOn]_M'g
%#,6<*])2'3h;b]amd>:[G)pQ[DD'6'DsuQ]\_DNtm!=0X$WH?hNu)3k@og<^8_'kc9CYD(G?kI<bEOf*d4d;HJ0WD'W&p:[;>.H=
%G(VkS,.=]U;!aVpNK6ed,h"HVT`b^jGD".Z3^BFTS/JL`(KmJ.[,Nm3E$E^.V/`h*'I>PC04@ZHYR?]D"s?3jpj7V7l\g$'Or[No
%nAs"WpJ*_<mE#I*.Fi6q:UtZj;2MBZ8!J4AmsfY5GBrfAm[XkQr8@MN`UtUfpLi!#4,*[S^V5:^jK5<4VdiV1miGil^3KL%Irael
%+uVsF9o-EDM\Im+AL8bEh>c?(DLP8<s6t-*&e*&7>`q+bN7FfrrZn0:!]#ILn'IR^Aaeco\(Er.;R@&kT;9"JFK<;5-i32(>F#Jn
%RBBN%/%!FnLe0nr]2m&u^CiQ]oX]0s6_'ir@E$DRieVl[8HI/Mmtp0DTqQ+7/7<3e.rm+%*1ik__p=`?o3ZERcE8glm_6=qH[9rl
%[]5qUj^IWM"h_!fqX4s0*02Dlo_<ob(RRrAm[0%edRW@?"GU%Gh=R9<F?TX^m)H[7mU,^t*-r[Dr8BZ\L@M5e*QkR2?BR"^LY)-9
%dVJi:n9;5Dj_r5(hoAdhlG"KXTA1G/^;YFrWl$fUq7Xd,#eLU3S<Z!qd\QDiF`!XWE]`6=C,OkiIL^f=$7fbcQg&jVM18#ijsi5C
%s3-J%T8be=nX]Gj%O#-?S<1KUdkHJt9od5"9GbYhr??^mq3YqdmO&!(F1kM-/Qs,4N8,siNH#H+l0Ka$g+,clfd%t\57DK7o-:g)
%E88`G0tZHbc#*S^'-*X)PtKh-q@!%L/pQ-;hG3NAhrp,X@Zl>*1;>VPkiurU==%:\:;$*@>RBZ&IpCJ1htpnU$#-UAj/VY/&)ZMT
%0c;okrhLbde%^D+qqIU$`rUBKcF?B*<6cl=qTI37pA8M#>Edr.^3VO5qkML;F4`\:XSUl>mH5:t&+<ges(_;?Z^\9S0CF!*h)ud%
%f'@e?afgcOY-'Ct%"%]ujgd;J_sQjAqn'@bG/*p-/ACk>1jsTBLif_J;!8F=F*2Z@48&oKVSeoDD+2KtO4aG#VSDoiS$T/4;pfUG
%%t[/m?E7:P7(<2LnSpe))0Y@JS(>LV]_ZsKl1s/skFZ*eTWRF&n1X4TDpPS@dJB>jn`.UEnL'-Q,CfBAY:aa"h5T;EGUcu2*=oUU
%kF9llB5F#$XAF"8oA?+pI6H`:,FSjEIeDtYr7fn$H@C3`9C;bPmrE^Qp$Vd&GOOc)*j^;WJ%pcHnA&\6.50/1-QN.:bsVJkr;X="
%\lX+OD'*\;=J)2L5M=G6$NEWjp$_#,F$[mra1hk)kHP,Ls6.(E0@,[Uj1`\pl>?G0p#UN?ppmd!eJ#]GFnu^Jp\=<#?^.H!F$V21
%,C8lMDuB=doh%6QNi@rk*KK=.f[=2f8DEZI49,9is$r:9r>cEDs"7@"/%W0uPs4!:n5nuumF`$E/cG0eUEed7%aFFg*L?7bCZ$^.
%?snum_u"cJJ,e>1:9'))Z2X71\31HHmTTMH]='kRq<WO>IsLE'?"4dm#^kBE^<MtnjgXaqTAI>q\p45GT=t9>Df5Sq_uE1aoN4SL
%cS)FRT"_g`s7`;CjR.<nK4/>@F(&qBJ#r(ZhcsKI\(3c*]=cfg'+rE1l$[F?5EGitVtXh6UgF"4+.bX14C91QHh6mKjo%R6`uSR^
%rl=)t4SHhU+0T#B]_,/W#3#:TPDf%e@C\V!?UrQUa!VrF`9.rOroW5&USgo@,t86EFG+hpVC[Q<id(Q*(LQNX\Jnh(`tYf8?gbEg
%]Brh9jTjE[%%5NcIIY;JMgLn[?bOW'?iK,Wji@,@/t\,++nKY0\\S,fB;=Ga5@!&P?+bV3K0$OBoB-#i^M;K9s2i74^YcT9]"DXs
%UC,E9(XMPW0cp3Fp?DP3mFN/X*f[u8EqRhN2L]Luhj9)h,I8UMGMd]#NjMefo"rgL2BKFR0b;-`H/K4r_=FsOn`KC6J+M[7s81of
%5s52Dn;HjU^]*5NZ&LmD7<-,Xn^mF%AULOScCS@jL$G?qs+=).pYq6`1Ae-XdeKF>kO4f0J!VtdVtp4iq3uj2ZaWL[-oRE*nD7ra
%R`"*rSA[WdM8,0%OcG)#bs)#"pU-Wj`/f"4<'o%Gese$TUmq%0;^23H*d$ki2n%6H3rS$f`Qck1/l;#CLA=Q";Z$tW9?W,e,sSNI
%^UY*3"K`7a0usZgT&=T!0>kOtHS`>%NTmY-deIM/4C-D&P>Rig<J^>&Gs'sE'E7:bp=\l_YKi`rroNVg/jDPt%6#3^oK*[a,<k0i
%[s.lNmcH9Eqs<Yh&fKeDB9r\<F(k1@eI.LM'0SLjq\jt(9E+O`)u1uLj1`(6]8%kRFoM=,r5!='C8:G;WQ'`-mNZ>D/15q_kN>oj
%J))oVIW%`tpmYXjf>[OnlAb__.LmJsbN.?)HMb\[O4SsZ_eeun\3Sqh,QD!;$hH\1O?;P\B.>t0Ls,[nNHG(:%sCgm&Uf:k1qhF/
%)@q!grs$*6I[n1G*V3";r]T\9^V9^FpA&ceMd9WFr.r3ahpFmO#ILB81oIbJh((Xt5=";g%sMYFcbI!']0>"1m&/[Ccd#m;2-Ntl
%YmlFNi?!KL.1frf5I+SUqY$D:hgY:hrUY4lJ+ig<m-<TPjitc9r9iR&X't]$Bku1;lT]jlRkr??f_e/6s(M7mDCEg`Da(nK]Xcpg
%I<Pgn^\I.s(LQ$)k_$@*q!Ip6rBI&=_jS4\6$]neqtT1=r'DL8s6FS^^Wq$d]6S^LIJMb:)iO:L`V&9GB9s,;bb'CCg\25iW"PZL
%A0^sos7OuK=+@&&fcN5<COUmlH&2d[W>sgR<;(6Q._ce?s.`5Hr/Z/P\P10?HW'n2>GU.0;W/_DXSM8:h=^0[bMD45X/iQ[07H$,
%btkgan*O6Ri@^1WQ_O2ucHDuq%5e%@^G#C3s06qErSK)S#T$:XhqR/i]:'?%+(e!\T-hLG9Si8#1Eh5$,2R!&e:3i'd=-TPnW.>C
%$GQIks7>5dp\P?X"Sg$GES4^7%!mqDUF#;f38qY@5eOefVn_-pI-3md;tup<X5DV1rOd1u7RMK7mrO!/4,<8@-MmnZEZs^FIc^@I
%2iccIW:I,!&gNDnIc\FFr5!SPhrP7Gm<M:\GauM"M=D+*\+h+j5@U).h9Wk$H^DLPn,53,?2,S(GcLYa7so7F<?JmQXaT[\id:\>
%&GR[snF&_np>YB:5LsVuVjH#]Y3%V+&6n]3rr!SqoOBQ6E>ALuCb,7LNcFpaYA^!bahP%*,6%B(lJhgB6@/7nkOJWL^N]\UPO\PA
%q`C[/q[`NuIsOkn]+tADB-3aa?L=;5qs*bO@O#NO^bP9;I^a/iTuO9c5#_@QIV%Hs49*7;%sod_0T(AYi;$H$5=CfeH9J\[r5)=f
%5`nD@+7ekraAk!F0+=AHe@2:a*hPTBEIN@^F)-aZKo&ag/5Y22W7gWWcbDNq[S-7c*5jr/?>Qs=2$qE_63"a8T%uQeI<+lMTE5)h
%ac"JPg.O'Xfj9CG5CECgqUsKEOFSG9DkE%_rAnK[,lR,Lc1A+kDq:&B.do!5J%iG(])Bh+a/-Vkh<!,?Hi%g]mE+HQ"f";1G'EiC
%IeQW^(Df%-m4]+OEqXU(Q+H_MmqB`@bDWEZBA1:.s3]oZf,&XD=&6<?o2F#qdu1P,(T\(\NdQ*rkI<L`fmS,<iaOgP):!m)puU2C
%$N9e0B7DqR]KGu\pL]=Jr8j(Y9tn3rDc15;:[cWt`YS@H_e.cZr9E;$foBBPq-B5dRXT=%nbfHDPI#6S#X+G1oBRni]=M+Yb5CLV
%l\kYD?9Z-]c;"65ak?:301JHuq7.B?hjo1@EH@2/ruk<gaVOD2GHrI[YXpDF8L@_abQYFl4Omi_q=(EePrm"2>^\-IpmXuB5J=hA
%\/J_C!,OWp?D2;@q*l*k3o^YGA8L"m'11_:](Xm:1<bVO^OGuJ0&F"LCA=^3:3Y_hU]5`u*LjgrDF<mje(*jKB32`gamm>3p(Zq5
%6240`TnC,5hju`UZu/28IsGjcC3p:uh&lRZhKH^7[o(=arV.$bgOS2Zl#q1jr;!V:qsfI5bdN`2gJND^)2Ih'.QN)`39&p\"Df-3
%]`3B<%llI+jO%nf>d@pu,uss]D*E/VT3j_\5;+X4O*9QMYnc)#SdX)uDf8uF^CW;m0BhnRkK1]r(\GHQ0cBGDcgJ+El8)epIi[f]
%h4DBk*kU.0cL0#GW=T+S.GS%0HW8=?B5KlH\:=$bCs+bE^)5a<p[RXW(XJ=o2blcuGj+Rj(\c7q_)\sX@3].Y2d9TuFZmLQHEg<?
%qRlX!hpJ>$RQl)\hg]k?o^]uoo#lM6eA0-$93b]q(H964s*,M6(\^!HH-l_@cb:?ns7u'8h:!Bck%Fk/ThpY[B?u<ukEjdRY#a]D
%K@.lXLYZ9&:IV#5dq>$9c%dh#o@`O0rq"F</t_UUXuR:l`k,X>St5,BknfujP.J4$i5PYs%3o2dk*<UV$QG6jDYN?6SoD<HaNnbL
%nMfq:l$#pPJ,Ak)WL3_SV`M!(GlQCge]hdtM#Q^P%dWWhhjj5>_C`?BBDqf.jYM8U#BtB)3gtEO(^oWql'TKJ75+RCpYqZNELhMA
%mRn?!XSn:RjN#Z1+*p%u3Er&(Fa<ZPmc)':\MP<7@+`[VmOt0di]/p]^\M6_cfe\/)s:Se>CVQTgZpitg%57:c0P9(cMqtWr3Pq\
%T)\A4[VOL4?fA?8=#ou*pr>=@bOZOrmr,CZh!_fPf2p5H\"=W"CQH"Wa5C_<mdjjiN<]C&3bn!(*1J'P\*%*SGMMLjo]Gl0U%.oY
%^Ed.Fqk"hbAj-+fGE"O'Z+XRjrl&7D\u4faX3:+LYG7?>kgS9&GNTba;T.fir,R-IJ,/r4Ek,O,/$)eIO(p,VI,O49rG0A7P@f8C
%YOl2B?g4U!E^%4bHZ;3c+60E\*KIhj?S7s+43MDGO%OAffRB'gVlt(+m68:u+84BOM_FK_]"@n2o&^CI*NmCHW`M<1Nuuua4V"s9
%QXfp)4gD`5f3"OhgPO&o.X"59I<2[j_o7,]msb6-o)A"IbH&g5Ct'b0%E!s+;`hbk;V].E3!ZJ1q-`6e]/.Y#[<b'0?iRNKf06iJ
%na+//omV?L"0!=(;*R,]TB,q3GkU7Jh=KmfEgu%,f^CGbhd2l0?OW29I#3,kl`Y5]Ptge_0CNf'Z+5=neT#b]FnpuSi*BXdf6Fn\
%a4tq=RQl(PYC?An`W'<"G;^hp.h-tm1\hQTGHg>F)H2hbkTPN(+eaU1mcXT?rq9EV]5aU9\Rquf=R8Y\eMcf@%so.k<VsaqC7"[B
%6n'V0BKqP-FDqnbj8+$(=m3CWqsS>QYu3$d-bt3_dsCe'$R1nO88Ac*DZLmM[Dm9=ktO"g:?d#+3.`Z:']\'59^*F\\\m$dUL0]>
%Tc>PZIW[M#C5Npk$2F]&M!eK'`euBDDN)N:1*b/!0*^q9:a7U?W9jX*#PN+GaKo5iIbgL@iV0jOceXgH&fiG#nB&ZZAi3etdRjVg
%"4'NC[bM>dF([C[cL&DeRm)=*)kFIlVsX;p?D(q7gXQGJ8OhNl0^fOaq._Lik=(#Jm3SmW&.d7-d663$q%<9-LhP05]U^`1V/I(_
%d/;eXc-r[j35C@+IX5$6EE%WHfdY8PN.@(I*l1>A772`JI47keUO0<$Sko\\C!_).3KZ=.dUUip!H^&,^-0#fkODDsP/Lk-CYlL0
%Z7H<8qeUSpk8MA3=]f^TE:i4qgT-<"&/>EJm)FQpVp,K^J.#4!%J.Z<HV"a:*2`-;YSgQ>-@'XIT]9Rg4Xr%I)RNjIr`(-_*47jZ
%h#Gn[BW6Z&ICS8r6dhqR[)mcHE$O[6EGBG,htKr5%#=EcLE^%rL'"+Qr`Tl"*QLZ&\a<c5'qnZ3//4J9)6orCm\hBhRA#hh^WaY?
%BD,[<6ih=5C)N8kUofI5;.6&0,]GlcC\D;[M6G_N^0$"CEKk#X4d9Td+L==Jki1Tt+^73Hki$!LjP'@Xb#R"%7NH+hd6O9@+s+?9
%9kT6L$H+e3%F($0XFg"i"8D\k,$^/rm;+M/-#kCYHFhrTju^jld9mZY=BVV3n9QuW.@jS7YWhTrYhEJ.BGnVrh2UsgTLaDhnA*3g
%<?&Ol/V"]rB/DNh4Hl9%F>eoohDI%prX;?9'7<a('gJB%2UBO/S\O[4b0,$K%+h8f#%^%1A/9toT*.aiNRfm$U?XuJU6NV!8*tN@
%Q-,-'@:0K:m#-PXL[>SudnjNTW7kA2DG6l6.Lp'$hgTcI@RI's&^8Xb1*a/bh5Ta"4)djuitY'ZB?/P3.jBM&Q<iq*S#"TBZ,Ubb
%"WIeAT78P4[/m1$BE\Sa&X`Erp]J5JLjS)bT,!-&Jk04u;^6Qc84rWmJQ"&[:"rf7T%<O2hX?_o.NCq\jp#RN%0f2;Cs<J,CA8P)
%U"Nk$R8bIk-gCr<lbtAD;"><EC\W37^jj"thA@2-K6c#cB(RnOR5OieEXWKK!FJmh=<)jlF#_HgW/IhVlJ^+MmqNAD_H,>$6`1Q?
%jrJ:Td]4qf`\;h&^IEZm(DVk$d_@n].]k3OE;sn1kXIoNB"AtKK/'PL*V4Rn`4WJ<jZsGMaa!_pTQ#_<<=!%]nr#cNmTK^ETTW*l
%V$h0b>bph6[7/J0W0Ls5=]:3A+<bM'3Fj>TV=j\DN0E&uL69;?F/(l59O>uRL%0m\hf7L`$sDs8T9954.oI!k8>7gm/+!Bl,^n?_
%GE_,s\![i?J$r>1f4>q")LrV*TL]&("&km_7C=9*C:j.rorY&2(1mo-_rtG2jAN6Ek,16#+fkgu#e8l?)s8s6?4pB8mr5bC8UP-P
%F@k#tY6*TdMDZem=_O7:70+<\`;nXTbLu$,7B41`j/?"1\i2G%rE#a('CHnmLI?;qBaT$'2.*V/?.+U<VEjh"+9D(E%]=f"LYjSZ
%qh&Vkc#JbJA[PMF,V_N!*`a64H'G"`2kYg,E`Ec,@tVBH\N\rn!95[O.-W+A9J&\=HD/^@L$KGCM<cSe/r\M`YZt2]'3)^^;-HrZ
%1tk\pLFN7>91qc,WU2J4o26Mkg@#b$.Ek=lFp(tKTb%c<M4GJpP*m;5j3aheqKI*BC>`F>=OPFZf-G"*J#fq;>-+$u';3YsQDhY0
%mj\oVQH?s<F_9\-CA*^Cc"S22a>@]'_m.?S&fh5IRCl!a?"b)[895+2np,<W9Y?lYdjFfF3'ttM3'RAKS8FmZU]3[MU[9kp/qB%T
%7n<>3on$P$NP-<S5D)s&OPkU3Y^^l[k<72>Yhj+aR32bm"`=?J-*S")E]sS9lqb)u>FnVP#\#Q9?6M[MoXl7D$SPridt@UqcHG`?
%=i0Eg[KQ.i3A;/U/_KkTR,)Z*TjJh4ceDf/r9W!(>QB(j=RFWR5/mOuBE0ER\NFfMgX0c<(kEHA@[$I/]j;SG8AZR\ctuC]'C-G1
%ITXK@fo&HS7thSI:#>9M"q6`4?Eqe;1(hl*'W>uA!bj,jkV,4'"qG"X.^FV%$ju6Hh:r,KOp5Dt3^H#JZ5b=hp4c8B;J^DrpsBpi
%F&oYd=u@A'P>IJD@Vg'F7uG%]>Z'KiYIBpJfDV)7Ct7nq=XQRBpTYJtA?j?E`AWjQ4V('Lfa7p[em"1-ne_T`'Obm%OhY,WNM#*i
%4?Ph!FHn5c@bfO.,?H@K"2kT\$U+0\hTUC<]T]S<7U9Z[B7=o5dtbeP)-q'$AQ%]u>&p[+qe-DHMYWngRVik'0E+qXqIt4H+3p&]
%RJ4FK9t9)!^p#'R6S+ap0c_4CmHM-%InUq7?4T;bN`C3,AlSSj>nlVTFPK)rjAq,uKQ+OTM[Ne?Bb)<p&YpioqC%kiT<G?r_r]*Y
%G1C*"e2T$#ae7Td&q4=<qm3_Q!#f=,Q,f'7N1n<Te?8O11X2H%/WZ/]0)Cins,paRkg@(`&5L]BZkfN[J-ODZr!*'ibeH34loMiJ
%7d&Id.CT_6hu\d`Ru%GXrCb10Q4='(9_t+q/-\3*ao"YnVBoO!(&fq")D8pnRRD?V4TdO'+0/n7T*4H1gsSEG`A8j5fo^]*IQPt<
%98h$=cLte\Cfn\(PL2&]ZuY6jeKonfa#p-D@:f@sXp4!%G&9iS>R/=43E'd^s53rpku`5q")*:kp/a;]SQIe1`(S;fg3b5JToeFs
%pLOhu'(5OSi[i.W;*MDhj[,89W8kdmd8eIJ!h5.`,ciW]/@uDB2UiXk<Dtq[MAnU%B-[K7'ge/]5smDlgC5.mp9Yq7NX]>$DK9Lo
%91fEU#.Q8`?mf(66;f,9^UBenB$g7YMW%os(W%tcRn912irII0iI_/_Jqa7^fN;MOUH]_i1/<=VGOcJ`I*S/[VP&3]h@ec)0'5\O
%o1gs$=sRcHSO>RurHTEVh.1.,i4W\($lUfL>@sf&`D$BB-Jm^[R3-hnct/%W+ubTJ.=^h3pbU#KM&usWpJh._UQNN_%?=ZcG``gi
%1X5%BPc5NJ0:A]h#?`/_qW\s6O/=#pmW[s?;Mejh!OiPf3G@BZqbUf]Xg]P;NVjKQ'YkaB*(`N!6gYM>%++'j\>,VfGKXOnE*0RH
%d?dT8m8>pJ3X!8/g7=8j/i!u:;n-p5ko!ArRgVL_1bhM[CaFoqT#Jj'./9urXXHHVi-:TK2,F'BZ[=f@;H'rl4OQ$th`^2]G>0L7
%rnOQ5QrN8CaGdKppU8j4q#6Bt@rXRb3ujdCXHn[I1SH56P+u4%%*LWi\[^spKL`K1-;$Lr&M40b>n&al2O2M@+T"Lfk2e:O=2n/o
%2r4+f,aI#;6?XACF?&3p;`4*-/N+%Ed3J]10TXm+;><#n!3UVf$6('FO*5]5o+d=UJ5=Hh@BUbC,*&&j<CE$Ql+!5G<l\2OM,%-e
%k-Z(!7;cD9=k((bBDUEgRI%nT."@I!XG]jsdsU)QWG4)VL=8konQdJ(/&+8D!LR)K_+aH3[n*utV%K++f=M#WoYoeN_1;Co?rYB4
%8IfUK-2hoO)p;$-FbZ](gt>=81809eR)+sK&2u4+p@O?4RPWKlV?k-t5_C=>It2>5&pG6ph+Y.hG4N!PNfDA1bI5u7pL`I,\%>'u
%_:[#N4QDq$'ES(FZ2d$1^Egr,qtK3uSR93n]+Q=MbsRR@gU`ArWDN:ujCd0OTC.4b>F`gZUd#)3IJO2']_)78V0GepC8.,?4o0o?
%7Y8(]b;o;1fb^u['j-KpkE+;LhS5p"^rtt!pb.ths1q&lAsc@;pb\=jhk^M6OmpU,JfdiWfjEl^ln?ba)Yt'CF*8PFrg+kgJ+)kk
%Jf,2Y:h[q_!#HQm",,#4QS>r6F2(6Wb]KdDjU`+E9pT(!P+>X+q2U&mA'rdOW0EF^)Fr;NM$?9.;M(O=iID(/0#>BFY_1CU+mT1R
%:aCI#Tk&DKiU<)\rbC=!d8&&%\BQG+oZFGr-!=+P.71.pq_QDJQkW8H7`0,BBJg^:"oXb`6jg3irhRn3Z\LS[<!DUIpuR*K.5\@&
%U1g,5:kZ=CL)aKQa"p6V)#@^<b`A\u/.BpJ8.fVbKier"1qbgf7EEZSV9#!5B:6f9NsnI'pp1*M2CRE-Gq;4seP'k?9S9:8Us[]E
%+0iH(qb`"AjUKFi=?FE5JK0UHNW%@7(P8Oa9%bSkjmc"n_Gdl7Q9Lg4n!V2KU_i<W*AI)Gf&4Rq^ObMiY`?ktjj"RYb5&dlPl,]6
%P07]m7@sG]\p+tJGoq86GTW2eciOV8>FfE+1s9M:?O-/B[@fN>)?lqm.)$F]pu!Saeic@R#WW1;>BBp0rXfqt#rAC3(+U(W`,o;`
%,)O*j=+hn7ql#[G5ha[2MUnmQ;s?0JJu>Bii1XInUuSV>SgZZ/!J+/T*)L<mM2YZs3q@!K*A<5:4^Sr*Q"PY-JA9P1bLB.m:LX_P
%<=&YiO,U/SJ;0L3oXFtCm<b/)3_t*Hh2uH5rYRFM4M&SW791dQksB%m@$A7b:AKsMC#T#NV[1GNJED%Q4&-DI>4)Y*CV7!4MAA_:
%\p3b/(i9X$B^l"aGoSf%NF9\_iB&h2=rM"'/A\!M24MOE#6G(Ud*Sf///cc`\ljC"XmCRPotDQI&3pnDIEa7[]RF[A<jdCB5!3fC
%5-M](lr.Y>-p'Z?PGU@8Abr7@'g`GJZ&a<sep56*_;`]MYK]%_1R9/U<5cXb92Sqlp\jJ7Ptop:NfaG6:`cco[h$VF#B(s)2]sop
%N'6@moSt&WFqQFq*(56gPoLDp02i,O4\S>$Cpj!f0idGW/Gc0E[Z7%kbXDW.AZs9,K$1\DS?G5j;'$Wq#4(HMiQ2'Ms,Munn!Lcm
%T4644ArQi=M3j>9;`\:1:c_YAl%.0ee?LP)MZ@/gj=Sh/9Rd&?,nAdR9,F93MUUeR-`gtL$ohYW3V@paH/qQW:2;I+oF/^!EXYU[
%^(HfN4,;'*\Iooo3;6+7[sb]Poq/Q-mVEos_u&O"6F8tu6t-lIqk2%jYK?60W+hl4je=pC#julS`mJ?'Tn`(o$1*^BNRSl#S`WUc
%5fW]kCWJ(lF\tZ70H:FM].;Rl(PgD#XNe;N(knG5aSpK!3pm#6_Zi]F`(X6^c)t\^4L`c3/O7*`lNCg)B(D/C5;V#UaNl"rP(S&:
%6>#L/+R]\\aq)A%_2OeJe_P6]GY-qOkN2Xu"!ROEdD8Jial(Ci+.iZmNQ8O7?f]4A7?s&V=d-J.Q=J.2$16_>1i+uK0B=Tu1!!O<
%h<(=h:Ni"-p2f01#@G1uiLXf>0m4gh?Zp%"0Q6N#"%9slQi9WPB$=RbcC+0H^Mr5P[M(D`'>!cu@d_eN.$>q"LEfjb(ZMO5b"'XM
%Z'uB(al"ZRE&AZT`2DKC$kRcDT9`/,pXUJBmo*:KqYIh`<#EZ(<"RVcI.'DR\Y"*6?I"spB5Qfsd:#E+i`k<K9b^:sE.%i-2/WHQ
%'/-90l(QcNi0&i`S#B;0Z/#(ledlSUi#>O^39oG6-;N;#1k'(TYp<VjCpWEENS+4T5PAImBQB%p+04Vk,.>XTS)ur/GnZttCJD.?
%5n4@dGB-g/S7%G*/3Wrckni\p6k:N>70"t_aK@mQ#F*T*eO/T!@,.27\0C*0h+l2#Y39[T_A^D2\l[>2X.=c<KhpA,<C`eS3[LYm
%Lm(18<bSm-:*VRW%QMaR^YkMkkul:9h[GG]mjZo,JdrdHkofqk`FD.gq$_P8c5dTPNZA@-!";RkkF"q2Fqboo$N><[hMWQCL5?oL
%JjW],QTt)*PW;!.9"IKfB)3\"a)^j.M;6Ork)u'O/%mZ.T>tUd9Hq)mMA_)]ip\MJm<L2i[s?:Y)ei,fD[KhpRjSjtI[,TK/%ti=
%<HaTKOPX$8*p]2<"u<lS&M$^Bf&64Hcs8=?5)5PCTf"%S"l.7OU@#<Oc$Skm3jS\-XMJm'?8CuooH2sAVs!1CG&>d$$%9g6l"K6u
%($bRAZV30]]3ma>i:elDYQ^^0S_4eGIq5(>*-j*!9E]c#>WA<04jfmo!`hmXUq%aad"=p6(?sc&#c!%*\nMt&D4ODPbY%Xcc$&A2
%*Dc*11G)BKSf_/<Z:!>20A):]3G)C8"K>N\OL`Te!rV4"_KZtrHgtFZ3',MM=0i/B:M_ID*jTQm0,41XqSXaL'@-ni!P+CeDW?;$
%Xu(4C^o9eJ^A%?fcY9`F"7IN55[h;Io+$+dcF;TFJ$/`(4%Qi?V\;!Da9%4@pGl,%Isge;$q7JJ1t`!lEjMJ7.MBLa`i6]sk2tYa
%*&tktkW1(L)q:/d9ER9aC:"Tb5B\iNb=:jFL3j(.?fmFlIJ9lA?(Ie;`5;#s"29V7P+MkonI1^7Da[)<2J[Rc7/<\0"bO/G!j(32
%5b\Q[;A=h'.FW(\I@Z"Y(J_d2m!]W0K[6,0]T'[^H#r<6i51tJ'QQHi?AOp3q_R/$E70p>DZI058EObJfgf?N__Tl1m5m!go?BrW
%o"GYVarebe!hYd[h$!frIP\^%S]JH^?\nW)5"nMA!MfSDa;`JX=?Sn5Ur230L)lg,_2ig;#adQ:Y*?d/lH'hugk6YEf$,p01kC_Z
%RllX?bFd)`;Y)APXV;sAf1P#CdbN0C;*"\nh#:fL>:!0UFCE&$oQ'2Ffthi><ZGC5W<B=I:NfIViWD=X2RWD%.km9p075Voa_ZLH
%cnWt?#(<KHO_KdKF6ZNBS!^Sd^Yjf';I2-@e?e*E(`d-]8r>O#p:At2Z$0],\=_%YJbU,bZ$-)p!$A<<=G-H=G,#TJnGK,)EW='#
%:WA`od<'d+;(,IpWr]Q#jh6oVJHJd'XH$h/QJI'?Y(Pg0M^]jRlJJ=U(kg,H9WNp'CT`Z?)A(lKc83S'G=@k@\>Hh."\s23TA;KN
%dcZA$?;%tT_:GbUne8*!M$^b"QI(j[?s^B\d2.SAT4p2XFY:hQBV=-r^:p7gM.GIpb\_n<C"T+&Buu%!V-H(TeQO3`#kQ`O2EFLi
%eGUZa6m.^'3iX075I*>R&@FdK2GZT?p@e_(g"^5lRpB-0&C%$[,&T7qZQkTXZ[Ck?_9e2THC9!5!RW5PMbMjsF`akCE^Uig#)84^
%4Z*'E:qB?I76V9f6_LSHbB`CP#[S&3p8/>LcjOOgZaA>8l"+jH?*RL28GF%;*sZb3XY`^-k_gi*4P/K&^dN'#R?NqA#u$A(@D/4C
%rP-fqN#\8W>(=gikToZip.fQ0RVa1;Z%Ya5E-</c4A;Z:-7-ES-f7GLg&#Z"f.O^=kRI:D6?1"910049$C6iZFNarg[GW,J.DX,!
%/Go%N2*s,7U>0U]"X1k=8#Z6S\&P!%cW)[pB92.%F^%0Df0hu`*g/Kqi8*N+,/&oU<g.AY1aHH0TR8K+*f75mq`4BP5,F4R'&1jC
%M\%-pPXMAGonUI2-QZupX$I5L+(j2>iUf&L?OSnflN6WWZLGp\LkRK`jLf7rB!=s<RWlEqc+kFG9\Hpn&/)%%r0q;q6S&:)IH3?c
%;b`&>RgsLqbrQU)ZQ$h.Ian&d8T31@NB4Zn_NY!SOnnKnOY<F"0G#q[]N'h6jC][a#pj;QR%DdobUt[^M?h`A_)B2ZBiDNUg]fds
%ggG@S^"DJFd&m<kLWN437[j`_d;K$0\H'M7BEsaRe'VMd$ZH=]fVn2g=$&U7cY"'jL'K+@Y4!8QI4bN\qFJY*fe[>(PR::g_P'r'
%#S`ES%2d%6K?$n%M@[QCG"[:)eutgSKOMc]+NjGg.CGHNo:;fMHpLD"V`2VhNm6/Zki)Yn/Csttp(aF=51b;hCutLYYl&'XJTC5T
%A,p@(Dp/`@nKe`dUkKr#__1Jepqk\:=V-gB0%/JSBA704=-F&9XG!M+oMEnr=9lJ76d/)n<OgU$'LaZ[_A$]:<;2E36+?J!-/XWI
%0_V9o9NOjiF?)Dm9_ID-[+h*I&HE]uFen'Ckr+#HQP.Z^qskj-].Q[F5)bp(*Ul1@X^BsThu?>5Z"8C$PWJr[kaY7:jH?gJgc\aG
%^8&])X46ne"Qbf57:s1b9VNj70U%U`*WTP;`&r\^Fhn1Z=416%Nb!\8"iei3&t>=/C%Q$n;DeAl%t*'70+@W)o78Z*OLr=*=`HFE
%*=g3039/f/QID,?0c;U`4)T*5iG[liT-"mY,^b]e-CMq#-91K[[pU.kFoTj%KV>o\#P0o]]`*.=)Y9eoV^sQ`'RksppV[?Ya^1-Y
%l?+B/K1hc[=%qg_*m;1@Oo14)9Ja>UF"Vq\!"Jj\FSi'Mn0,%qd28/s?ZL(Cn%kgC)g]r-pFQ:-]:;3gEI3^s5ObYW^DI#QGRTej
%VUlaN).@&lC<"X>hRI8?5*(UU5TN$MOp.E0J+Odh(qAOVY7i\l(FDs\KAZA.B%>Gli=J)"*55mi2pC<#=OCXk<euJs>eiT&h.>+c
%M=kYH/]qN3H@J%<3NV8Y^uKss=!GR>f%7"Jd+Y\(;HT!75qjgE[@"%N[VZUWKE`UngU`EtjR#AClf%a^[G">ph7")!N5SV6)6?,V
%0cZZQ.#+$iY.s^fOj.]JEijY.+#Ua6?J[!5((@gT#V0t6&7S;Cl@4p@EpN3TnWk>!gBE9=qMrl93*F&Cr4@l8N>`rJd"lHQMeHo)
%btqi.Y^us7c3pn+*PU7fG8[L0@A#J`GW;cYDiR1IE&D!6Z%bC4L.*"r>\?,<UQ2*+eli@!q%u$(=ROS"m,9^%"&#+04"Ej3p"R2#
%n^rT*<[tGDgY,N?n/"4%87BKY8j+\W2/"ZI_L[p[efKbr@H=TEP[(B*?qcrgZXlcBCS;eeb>Gc_G3RdT$>]Y4QUG.*O2uY%d?8Ys
%,24cT(5JBpT7)b$XJ*<ECUNg27:Y_qXJ3,>X2TVDrP9Wm/GCBI<B'T41tIih*3Su^@7dP=lWK@f$MR#G\DmMB4(YYi*E]*5GF$6P
%nI;KDRF4Z8KmV9"X\,nBD7g"@hf;g*XGmZ5dTEP&6ZY;q`t2;4W<ejF*[HcO=PME[E%d">"m`Zr=XgEP%7$G-FOK,8:6N[?cK7A-
%l]8b_c,sGm$t<S=D[4-O`@HVbI;Q*8US_+j,hBf)4-[^qS#*1o.BELY7/VXbkGs7mOi\BAn"/ej.BJ<BX33b<*W'ZI_rHR*o0.gB
%TYX.p;aDh*U5-'.LI&#e$`n7Qle`iB9`qJRK*\M&]'D@jXM5?/LD<EpLtFQQlRDMpc1^Xi:fb5=q:C&r@WbskfiOM[l\j9nf%`hj
%iI(XFNNf.jZ0%T$\S.BlBF3cV7WT<<>b!eeiR^93lFFhO2!G[e@M*!"lStsoU'rV)Dt\$>/N4EH]1#-efd64('\66a=qspPD!oVi
%LU8V:XD0cp;t"Fqo1$3!`oOWLE&R$0e'24qWS[mi:GOVfH[5Z3nZq/GMF=AW=2XV![lcP+_ER`c@+DX1Mk47tqi;FlI8B[8Sl-!q
%Ohn'H8l4s=3UB2d$-PKV@rIRZ]A1jYf#[f](nt:GkW?%=gRsaWlGf:W(TZ??!7oTs\[eVIIA=[iB3g<7E%/2P=M(D&:f#'Nc/10a
%m=d&:oopY(^P[/mOc8)A?a3?[T9FV*_`eL&0=duFfN7gbc4]MR^h3rMqO'G,SjoqM/*<%BR`:)u@>&tWk-X(JGM=VKR@fPAGi[WV
%,4fnm^pE/(.8R<j"0^5IAXT/dG51C,G9uj&C;YB_'smP]^gPoU`D7S]7.VI83fC-<MOo,G8S_2u1o#+.dn/i(=:0@MCL,_&ro'G8
%U?,YRGJ9,MSMhMAh=6bnJWpE&GJ6ENPm,r%b=]=CZicc69khqqOs?Hq:_1++`(*#ZL7qr"#pXLopEZ*KH7BE=Mt_'l_\r7uKKR`g
%T*9Lu8E)p"W6\%$cV&Lu_*!SB)'4l'&<ucGNs/huSlK69"34!*5DJLORR$cloNk1bk+^?4oRhBTT8tk6KRV9CKGEk`6L=/`&Rn>5
%H?/;5`JXR9)6CX="b+fh@&NO]lgK6P?nJl44KMJfft_#b^&a/BLTjZo'MW-%)oNSpKscHPH7L)<^L?3-!gaLCb@3oS!T-ZDM3\Nt
%K263_ra&qI/"lCO/&DY?n;.R$"'M_P2jh`rS]P@N^S4==g#XDF6O%>9#Ruce*7h]7?ND(kaq/^D;a?sgNfRMNJFp@=L2jR\=OdQ&
%DlZaq.(S<=#)1GL_$MI7^`U&XF'LD1oU\Lk*@5>8qJp45NB:@SPPq]2pZV^p+^Oj?;t]P163-K@,jL2ZCZZY-@#g/CEUb<U*&*f-
%IrJINHioeVnA\4YJF4S;L57$R!)54HB[smWAeY.#W6;NEl0oU4K#-A/J`je."l=ja8]/_/'E+QpAOfUQp!su=bcLoM@ST0U54u7R
%jbtn0rr?9#Y`eRIck'C<a@sdFG>eIg,fQThLNQ/\ZSL'.:*W,SHBH;IQ<[imVnPLihn*P4Kh`fF7USTu88TT$%u4dZ1O[F/O]p_(
%h.@`JZVfULR2*^])Ru"TRQ<:g4Zq&nL1:$HDuU[R_WJABa,qE7J_R0M,#gQgn9Ct]$bM$tHVpI%gV"7,,(SCX(LUX]mn,$^49DaK
%!Y5M(U4=VFChCVWdcB^S:Wh-poF:YX-6ET(8rt_+g"+7OETuLT3Bg?]'7>d@Wcp)@AIpGRgD^1(Z!#=gVQM*g-k-qsgSh=!9Wa5^
%)BmiGo%<=(gUVOCp70!mO/GdBisQU.aH.3S(#dQULPRYJgrRrV.'L.cfr=),fnX-Pb'fC\ked+>#;i+lJF>-dhq7frq_r^@5SAgA
%9!Z'#>n`b\^^,=-Z4b;0,8*MBpZn?OYR?cM;YV=sG:IuGkA118,)%4<!6pq>dW=DDbTT&&Cn>_BRJWJsQ+keFX>?\inc)m2bA[0+
%ejWm'8P<Bl;@'A)H^%H-PUQokO@n(L\&efYL_Zs>V&^=rCLI(IJ<,YTiWG.>hh[<Q@GtcPO'[[J<L**O"`O)Z;O3mf4!")<n(bu[
%b93iK\a<>P6cL>N<;e[(=rR[jHRN=d0gsKpN?W[WZdH"RPp6F@\C/`QB'gQ59+^NgTa;IXD9s\-F3@qbEC:HYI.n7j*jpGZNbD8)
%h$f8QK/#*M;t?"@D@n,2n3aWGO;1@==O)i!XLF#Z7c\8Slg,h.Tda_uI)OS<HT\Xj?i<?PB+a!n<0TE1_O\-W'$+^E<N;MCBg<[c
%Aof[Om@L#IGm1-&FK8#IStR=:)E%%-R#+LA!)?"q=!Kd?<Z^c.RiBH.eN+BChHWfF=TF8Ka69/&_E'!(k]k6b5Uk;*?#L)AQ^D-i
%d%%U*31.ue$-7`r?9+As_B9Nkn9uCe.cCp%XU-80gd1`bWS&IfEtYu[?s4qq6UX43,RS)B!a8".:J%T8i8OgDKKhIJf>qmP3DoVW
%n:QT!+_G'7dMF]Xb"A1CHhN4/XcU]h\t6<qRSP7T"ZYsV]T(%MkMP+f6H"JV\alsTcqF).952^FH3k+oqspt0b36(Q\oA].eOZ@Z
%(tIrU$9E.ej(Zh6=htic`ofnO<&d020L\-d$PnM%Zn>*[&T#V(<4ht#ju"Xm6@?eo+"$\E'k/>,7TC>!C%!l0M3cNJ/`Ui4aRHo-
%8<h!7B9[&H([sB3-D27t'Sf=l_E2>JfT)1mi.WG<AL"Rh;pj;jA81p=/X(qaUV*#>4#d%od*fX^I&Rm!P*ukKF002YLok3%[c$I?
%q/`mG#Z]o%MbD^Lij]s$.jPff'<sH[@s?)cOQ6+L>pn-U[k5__f+oB+'Esa0olitE=ph4U7\oi*Bqo5$ZF0`YOAPbp&4i"QCB:@C
%(@G(eB':60g8Z;mY3tIr)cB`VP"q][[(K5i>d+.:i4T9#gS2&QTE(Fm:E_h_\2FYqaKfdJCt<qMT>q!kqn4?_6#fF]@IjZ*!9CeA
%3Z#8&#a"A`HNP-SLd8MYR2jrK3Gc,s9=3I7Xs[=59e8Lc#Oh^MFnJ+ICDo;k3&cOq,O([aG5W&#1GsM:?"WU8;^LZ4r0i.qB'<;+
%%JVua_8=YDh--=jPMI00d]L43.buoamif&bV&STE!b`++DT?,A,GY=Pf=sU"?#nY16H(P)%79$q'&h[#[=I%9Vk\3hMZA$5h1*ak
%k=@;>,]+V/_VK1g*(ngT]GjD&V!UM3OjQZ'H:7JMW&ji[b@[\[jlX@2P,(5"S*K8S>IU_^-S-cf-1_9?[&\%mq2)q($Mdn2XV.P@
%fALXI(\pZ.)t"]41NfI;?s)?)_k2N)kO+0n6gB2>F1[.B'F76F>*JN&Ud22?;/:WLU4+*H$P'F^*9jLdT19ad^/dIAZmI[[3ebog
%HVEpe@V>c/;:bd1T9OA\MVK\f)m38!cY-9n,Q5dfe/EjXETqTrTLU7T+[F[IeqK%B!]TF8\7mSW3:un?0ktigoHX9/hD>f)ghP2s
%?mbi9VS"H4[0*L;k!B^+:#9Y#:m3u/E`[M$O['6P%gd8DBX3CuU^4>toAN!!&M.<."el/Bj+)a;CqHiAK9Hnr?,`0i`>2_TW2=9C
%A;c@5`l'o,R`_,ep08e9FchW&KpiWeFEMq&RS$4fgm_\\9:\C?<W8L[o1R@\krdddg'aTg;Df)25Jk8S#25hs3SW#P28u780,?0`
%;`3$*E5O;Lm)MVm9OBtfaNfVYlU93b%k)3gMrbWmjroM')97Bd#O:,"Dp-#/4W4rfkrDO/N9LAr9\/c4ja>4YHl(r'XlXs.8u0X6
%50ensZ^ah%QB/WRIR#ocE\/BRd!(fI3>?9)T%MK143RG1YgTq,4OJF]3M1=Dh\0)&G[EJ'4B>S-pEWtSG\&n-E\3o>"`?!V;m,5/
%@VZ>>/E]s7jeIGWpQtJ#fCJJ#UogZBAtP/WU/CLHkXm,"bkmk):H=8$o:4GUJulj"N$(j&MSan.>]M@PL6fFTkS$;;=IiCu!TKP:
%pD?d7"&b:B:g-F:;Z<#.C]]ZVIF4!q8Y@1<82F==JO93&R7B-<:n`K%ZYTc&Pb"+T0n]+g0#A.;`GL\diFV2J+jd&N.\YMB<4mFC
%"/Uuq#PkFk94XPZ0`<q5^\k,0P!"UZCC(Pf#WE:bb&/lq8ZU@>I2^TU2>N%jQ#I&Qm^/gXW0H,[Kpf+M&Ate8bni:4JCG79(,rE?
%`C0C-!Y@gF^P(cpBQ@)Id"HNUMEVR<&I>%d8h%d:S]J)J"du4>?)rW"HdBk3TXj9/U`\mT$t??JfeSu%UiJIA\m)cj"oom7hWk8\
%6D=crNR//Y$6q#(8=R6r)ahfFf<h3Dl3-cnWl8Z1dj&W8#A7TWolNo&Tpe\fkJt(8EtW*A>7raF+rh&([\-)b1%YD3?(tq1^-G=C
%oDYbY6M\F/eidR7"]4.KDJ1RL[g84_/YF,Qr;F55'N_H1!)9<Jk=VK-O!C+'b2>IXq<fMs0O@Gdn5>?<[4&$mncF.N8c]gq];T%.
%bT(u[]"KK%&hFJGe79(NjLCLBbXM&>IulIZ:+=_7cIgZ&[9P/e1&r$M:k=`k$I]V%[Teb=84fisor@GCk[HtYhlsPLCpBPr\Q'rr
%7302R'N$O8[8ZgkC3QRp8cEM"#%I1%k^02.`'IpBHG>JudhT$a4@94!H<#LUL-e&KnIYQ(nmttX@R42a[%GcVc9A%f=bE9BNDrf\
%+;([&;F$LHf>W@&"'oqYHL`3cKfNF,Dtm)$B(i%_FA;Di8\*LBWp#GZS=\5GE>;"jN8>gTiogh&Mc*9]eeYsPPVkjI<7BcQ`i.F4
%GP$WMWg=fn/@[,n+uor\c>UB[66X'Ohj!SjhS>*e7;qr;.p(9=WEcE\U,U<H\+%J'*tc2;Kn>7e<DF`>YChT5dSLs[Uni^![-,l!
%hH,q7A%AAZ"<lk8l,rt.4\J60-Ii59XaZ'ZeI'D7ZdM]nXV%5KNNYJY1,N+*m1EoG(Wd4)qF4\GhmKXNPIOga-%6@QaY`P9=Dgl2
%XCs.m1!%?q7<O(MO]0e?bf8h5a=S*n(@dqHpeHMfZt[6lj67`U*E9/bUP+WX[(VqZo;$8D!OP?uk1uU;HW=XK;DRS@/+^.0%c1KZ
%pS>?AnZL"s^.dQ%k<6C3O.XhM]Wk4"i]N)Ko)rs\eTE()/+]A3,?^NahOAjBo/MJ:M[s38hURm:.Mp0%r49;J[1(Q/P,j&kf<&a^
%]`c\]C4&H,7%>Uqjp_Sjr^uC3_R#!*9/#CQWL!7296ELg?GE1S=c<=e^$JtT-#MU*>uskR](,a!dZ-gmq$"eWl52pEOU?:[mGd`)
%s3)q@:g66kfElX:q<=Y5ep"*XJM;9NRSoh2J!s,oghUl#`0FZ\q37'>.Zl3#K;f@H(E`4J@g)#0o>j1j&#3<O[lPX+*qtlhgNa>Q
%m=rBWeP?RBp;K+5e6\B9PV3&<-jk5_d<05.4`<cu)qI<g9,:9-.FU<g/X#K`Y"6"mTH`(8^W.&1id03dMIZa\#8G9H-k@biKn(4B
%,RZ-e[(Y[,\r9CoBq,tlH+g5L%4+3!_o"nE+oI?`N)+JtDqB.R[2.k\e=(3ed%*UNU6$k+V#+L5jiJ/&Ysirl/gTm<aqOQAQg#r[
%.a$eH\a$$hf+mCe8JXofj)%514H#>BEFk-LnPR,T]Ai5P[$'j6?^H.IM;PN3V2gmDGT(Y3+LFApq]fFsR>n5i"J-dDP6Qe;Rq:%^
%^I%b9RgH*\md^F8(JN6Kk$][m4UO5H7T[[.O2>Uf?>4joM'&iM";U`8oGS>KK`!1_eotU0F]F2KeZ1`4fJV13.kt;l,i1UDB7&"P
%3JZ(\cJHbJiMRS6Qd`Jp_Z4_P]"]Cl5:(Kfr(/\g28ZX\X$YKFc%GQ.bZ)>?dG7EU(?:G4-<=5lB,qrKIq8uFCnF<OoEHq1/KcOT
%b6Hj7YQbPgg+76sh*AO'YFl7o/XPlG>r_IYXQ#*kKk>LJh3Y(g92pdL:VZM*MTY?rldi*Ff"f_*mb%9>`I@em:T<\uJ]VB?aKM=c
%Z(L:4diL`q(]01+YSOIA/Cq^Y;)X6754OR0FJ":q99.(gV6uW5U4%aYeqNUg:Flm,?dD[4U%GiR_bA65rEDT99":*'H8lFbq%`=:
%eJBP^F+V5HSQ:l)<I#ORH@E'=\?2/XioGJq&=*g*hH7k*QOQiL!\@+cH?uEQhaOYY:/jd7I!A?,Rd?MlGSseJC9K!"MgCPc-;n]a
%VfDSbqC=A5'KX44G$>RA%c5lAO&%5+."UidTsL?Q'aijm/C(np-jWXOTf=?(G#!-M<G>X:8XgX\7#=[HVL$rf<V:i6c0:(%]IBCT
%HUD56e.eO"7C!FRm#r[JK+%RPm*mEYDPafXp.6ir\Vf<"lFhn";H8/9pRX;[p0CaUH#mC9Dl_M=oj-Nol,#V5hh9>&%k?pE:V2'H
%@@sWaIV`GbVJu;.Kmcj!IFN!Q>1fa;2>"]$^.TN9(7l4UfP`8+P>Wc(m(4>\<nJcGB;Me5mjdZ;b_`Lfj+gSU<7iQueOPsh4L21e
%C(E`6i^X^V8QGF<%"/@;<@^]5AarcSI9Po!+&LT;<RpgDU8bL1\rp`q$i=Ijp?9@WWEU3C&NmA':C7(:(O0V%T@>%IKiB-ofI'\L
%pS@;q$oo.SKmci!7)J'uKmcj!IA/^n,7==DWqqBHi$!f&;Y<7M19\rbV9!dCUA/;Z_Bn#EfI*+$j!.1QibJ,uUW8;`+Y+^MGDMFY
%1tM<@[IKJ5F-8FA8nu%%79^nlrf(gS-Z*nZe\t=a@G@!s?4lI.r03*%pigL"[B?*i8[T7JF=!?P]K#S=]t??Sj`P<Oi2:]mFNTD[
%]3_V8P!@KeWNM@_Wbm&.k9M3e^pJ\PaA:cQ:jg:(YD;_9SsUuiOiqj7gS?-3-JSIe\l>`"S,Z(1hd#mT].3,DYW05ihd'(hmEP[p
%EWqa-Is2$5W9/U(k<j$"r^Vf?eU#8_S,YXfp/J'js"qHe=2+Lf"[d(JFhG<]hpW>/[KC9]E$ImBohFOV2'2XPW45E0gg3uu+0@c%
%R])r0^I,+-;hpt$RGA<2?:tJ[7&*f3GB`3L^*976Dki;Hni1J,5TkVE2]cHiE\"/)Z<k,kY[cSXRSRT^bsk(Bk&8l&QheTDjkE_9
%O@SfE<%ITeJpW^A;'G)XV\&"f.p(AEVRcssf,"3TQ='_YGPAnLTNn'UWPgM#J?J:W.A&R(Tfo.(QZ5,q<5NrYmJA\<\W,$DIJ,J7
%T![$pWgeGKRU&suM3>r*b"O]TYd)_H9tmOii-Wlb=ki>egL9m5eKkpX%X[Uf+6CN=Z3N:3Cd#/9A*_,n(l5"RHZs[TDq'S<We<\Q
%kgB\!q@\ZYhie-6L]UMq`@JfD"f0LX9TU%5P6/&Q&KDJg2uT&c@UPC*Sk&;+]d6C[j!!=Vn&kJ^)-``*RA0@:hU)!m,h"AMs4sYJ
%l+VXkRd+)Rr]Ot1+F&*%dhC1qnF#nHf_81;el2\+f_80.fEb^]>m64SCW[E1TY>nOQ[NiqP.Z?d?auZ:6`'mb:ShBh1ObqFhPCRQ
%Br]KZ1k+(=!W^Jp[qc'O5*N)F\1TfJ$Seiep>r$$@R0ZhqfY@;3+(<C%7pBn[1l#A8+GDYf+h3""IP+KSboGU,uSo,<%^[6=ef[n
%O2HTj^#p-<<-2^*[=qQod:=cV`ps/FX1We:BM/dpM&K:*i5C)P*D[+rah$(?;T\g-_h4hQkp[EH7BLI'H"CiDlfrB(S.l@1Sp9^(
%f3!5Y^::dDh^M`f9G4n%]%_%FHBr%UPpUoW8il.L09o>C9R_0Z]lgdaRc7PZKU.U$h<ju^I5=P#U>6a9]\Lc*>?n=M6euTT;$W!%
%Yr,6K,?m_)$9!.TS`F>>ALiV!hM:CdE:BHXFMV?FdXu[s:&&(!kErd&Yf&5Nl3uL_C;e3fUs5V?d[pY"EeblW3q*Z[YVi!.)i_oq
%s3nld#hbBV_ti'Si\QCpq-VphODi#aC,lRo7Sp5\Ti?jCK?I`CaSBU=(+VX[`ll8V>Tr*+WARti_8@b(OZOJI1L=W63h?Bs-i],E
%G.F?i4I^^]+J<[?^'u/p!A]8K'd<hk`qPI:+BK*KV,Wk,oF#ML;'BDbq;%@UC7/3l9=]@6[k(R1"sC'PA=%X&[ZW[SXLe%jX!u]Q
%=bOVP51)Fmd+E@\duB*U[_[6q<?2l4r!i5Q2pjVI.RGgGYb\gj<h-C7kVFG=8"&S#F`X6Man%eDR0<7CSFVl'0+/4lM<gs$+dJTI
%Q_1.NXpO<QOYQqda^C!3hBV4tf-P=VcO!^jbhd#*B9BCn,*cLXF@B[X6:9auC_0_8'_[CL'";CC-+&/omOF:(bBdMsQcH)4Gdufa
%.8Wuc&43uQ%8:bqP3m*#;A>CRmB4S4"*8dO/Lug[k.kc';pO3Kd(,"TkKn7gI[@%D6IBAV'O?@h<O(d9q2R3*#J=]YkIg#1FaHPV
%rj/`nEAK7`eDM\:+*10+F5<:c,:L0f%YJ%':P0sM2r/tAdWo4lik5q<=H=kZ"mKTaW]&R9q>Ns>Qq^mF%8:7oD(d^NMr4<kjj;ZW
%V\]6],&Ba0"$PnR:Tll.-5fk%*BK-'hYNs!M7cSS084WMCP_M;_Cr[_4VBZi^,k8@jNZB>"jW^'9^og&;k9pO7l@9p<gTcU.Yd7=
%]uJ[:MF"t'SmF7OCJArfS:i%`V4p@I8Lr::$H<$^[AB)g2(babrm=tTHB>-?&j%.95Z90gj+F(jZiW)77REOjL@tg<;s/S2bLBEa
%U`GoX%Hqq&;f*t*("!^Fj"@@!A^*^?H:6_gf1dl]Q?kqGgjN[(U=OWY2,deW,a"j]E]rD^ETl-r%<;l*;b<]k&dn;fK%/ZC9+nZ#
%dM#iuH;dBZ:G4-I,;PS0N?sEblObR7E-"UF`0)ArQP;Pr/L?5dk"89]?-#bSPs"sTRME+:rP*2MW#2si>dHcmYh_[9'oJ2`s$t<@
%,q^JC(X3;@^?>Nt=lGR!\%t5#=eT$]rI^OR,,0X&h9i<#32`2*0r?7=R[T@B`NhhJ6Y0?o8]+c71c7DF:f-kAL5/_of`U,H-/J([
%g=4su)]gJQ462+_XskI(Cj;nk,ala@oaMEX\*>\d[Gj,-<)-as:K5otn5)+WM_@-[C3Z[jbu^JXd;KIP4B.;*Bak1n2`t'bPnI\Q
%B5_^5-sW:P\(rX@:<A6Gb$=cgeWSpXL5/Y1J<*6U'fA*Q5/C#eopu]YHbrcR5-+lZ[bIM.::i4j$k"#>:*3OSF(`D.X'VB?Hc&4M
%M/hhLSl1a!:fEi=/U[s`QRFA.4&fblXUPdu#4M"tGc2%)WE?^CiLt3ci^,pKd<U/X6hUXSFut'a^H(Q0L53q%0m#PFre?1jAL9];
%G&QecGc9EbO?mr3_aCS59?OCR3UE3WaAc1lAR!5XS_#e_<:4r)#Ut9B*br:_^;&X#16a/h:Z;6u(\6AlY:Lu^Dg6M<.EQ/=_qRg:
%\2R1kgo,Ql/sNsg.eksS2*?7OH(:1TLW[%h)sb/GiLt4"@YaLi;dH]fi=2[\/I`5%TX8q;]=@cnLWWGb2"W60jZJEn:n4Bq1"0=K
%,2_caCLN0:_aB2g[mQ"1'u`KMfnP:6QcD7hgG?%fiKIO*s0W:HPte5*e^mN0Cj;n\:SEO.?nLaLjapjVS&.6**\'Mhb-X5K*f?VH
%0#g=TiU%'b-17V:]I!R2L53o[0K+0*Do4rA_CI(CG%\][d5"/I]kD>e/%ccA[!MI/j7^3ALW[*#I%oHIn5-?Y(YoQ9I8:_(-J@nX
%jqPf#)BLA4N3jOHJ&=W"MfF,4)8qSLGaMIsG"=V7%qp3dI,dS^l47QQW-IQ]8q%l1n1^iom8.mDFaM"n\`g!YMe6jBGUPd(=:HBH
%kIJ/5Ld5%c0!6_PGN'SjiM7nsU%2erCu1%q`"?GISbQ0B1*I67\U8m(&Z(#Yp7dWbfUuE.Eu@DnoBk3$l%&%4fK-*rI[d*(b!;_O
%2Ork=LZJ=^m5`//)*H\gGV)KMJVLt'/lYQpXGm]Ne#1*bK7P8<APcXsgkhY^,F87c39%4;Stijmh-p-WNsEl.\=sgCW=p,Z>?.pp
%4lX>YV:Qkkh96\fgNp<H)DAf1eh!rW=R3Je@r:RcNb<^#3+Et1gPUD=>;kh`XFJ+lKC0]u^AC[X\$'S`^0du7_r6^O*0-Z'f\qd-
%gP>ASCctrgAnWI&T4"Xt`O2-MhhnV"H+NtIZ-_1KVJaWqNif!8BW<osAb5KEUt8+!Y?&Pe@Oh0uk-skVQ\aCa\jYB-\bEjfUMZ\3
%n1nO\Bu5h8.JU'SPE[BchGg34"S4So@?#&&kK<Mr]EXdGLW*q-L0d_ATZHp>qi22'LVp19+hLd.`c(0(i]^!R,I<Xd7a<AmXRPqp
%3>r+<0s%;'d0PqcGt0(Vg;c>::^8KrlWCkA)P[4dR-/>K'V-`A(d0U]\9rJ+DR_)HDfM:*@Yk,0`2p;a?i<$Pa3o]R^kC!(KKVAo
%/Y.XRQ$&+urY;)WjhS(h=\@l"png+89=Lk+ru&Um7t4s9[E15;^@s[]&2iJ@*$3;*7NNPPCRC,^FU,9>AD[1r#+lf\gppN4_5HuK
%F%:b+Ie@UNF.Y1m3FS<*m6Q4g$#-5#rQOWd7n"BIcua1$F21!\oUf!]$i]Cbs/c'2!'hTqnrqtG#XT1Q@@>BCHH]>LSM))r:(_fP
%acML/^gBGaiSZj9)06,H6-dG4n7Fmg.J*V68X;Ko1LQCu1<bg9E;%*JCmo'tGmXj>pDk>u+m7oLi1Vcfgm%MSg4=/=F9"Q1S+l7D
%EsBtIEV-.^e^B"5CM=:R&D<*%444FjfR`uab9Fb(Kjkl)enQ$mVDk`i[5SVT8389fq.BifZk-J([6^Bfhrf9!r;+4TRpZU4E<CUR
%!#XK1bgWV5[/"=\I"U5cI^f[0-uP%t[[%[Hchi4e%*d:W(:nY&G:Rh#k,h)i+fYND"I++aVZ<'G[g9.=*3MfK"Ysq_22TbGDW;%(
%fYn__DL*=VdrZq=`DXfn>7Y-c-K7!=C?0$l0]KFnprs!,jTIs]D8Dhr%lt'U;]!?leWLAhlJn+;lkp>Ha[jM]G&BG5TheqgJ_#]=
%^)@,Z`>8^E6+oT!`8RULr"!tbTL=D'DuV.9$H0'$4_D2`/+%3SJP@fYD.Z:n&ua]B*N^Ci&,;`>](]q>6SNne:4>S@D>aeU!,d%c
%X]-h!g$om@<#=ro3QLe60B)1X^sPn:R2piV!14>U]:9ho/7$EY#63@9)`g61UuNjg7PHA!H%TN:E-V=^B]6S.WRVnu%WiC:`/<^_
%d5^`'g.?:Q!?)mFJ)D9oc'&lLa74(kXl#;OF.^@+EdWXJ8d=4I;qhPq!tK,M-no!KB]hdM`Q34R`\"[7ai'do.tn:&M1W+B!Aau)
%4tHd>J/=[g3Wc@,F[a5H9X/hf6XN:30?t#<TH5Z"m32p%o?1SgAN=,U1*f[0nfU-QpClEB``Hc(pDcqBKYt,*.i4r<fK8C/Cc6b6
%87fr;<F=M`n9RXB]s7(jKc4hJo7I$QYoN(]pHbI)Eccm$_ImVfGnR:L$k;j"mUSJd!+<OV"Ur/Zi:[sC)f09C&r/h`BBQ=7AGX8N
%P^e7#4g-`ko5TGZllK*V82(#jAs(W#?t;D_(c^2#i#FQ"&j"FHU6FhE-!PYjT04];1l:i\o3M6Sq6"p,=[R+3LX-fuJ"r4l9=8+W
%SA_*;::9_+Cn,`do?N^^[Our8OQ^?%Qk3Xsd""0,VgT&X\TRr1)Zpi7+Me08NM_RSfW;(OR\L=7J]]kTB4!aJ(V\P>`cqX9$S+R4
%[TCRGfQ>(U[A3hQ8YW\Qr.asqAr*=$MX,G;!&53.TO8>OL0P+.(V=_o`]*A"*44s'[8d//lH`g&1_Dej-p^gAjp3KN)*Rf?T\d5/
%\Kl\plXiC:D.?rRIn\4hI)H#(];,E\q#\p[ZSO;^lD7l:9`c^JL[6:J,#F^5%3oV1hRF+tfDlH<--7B8WCcor&cgS(mgRT_BB3Ti
%j[\0AETTq)AWZODe=mqA!s`B%H/eR,(VK,=%L(!K%]#Eh_Hk.oc:EM]^/3$o\0.dMGXDkl58uD\+.O9_o"Pgp_ORkRs3I<?8@1<U
%ItCJ\5rutlP%>Njs+tU1r'.6B)#qoJ.)Gq)O[q7r\HPG+%W$nA?4qr'"A]!rQmi4eDe)8&s,MQYLg^5O[;D!;UV9<IOM)uG>b-cW
%LnHm#?^LlYqhKj80H's"?MXoXed\;<!H#h#mg9Rt%I227cj0a>EobWZI&>$*`=(:j`,9N$UHJ2OG/R17cEVQugn"EL<$rdC0*H9.
%Yt7TV#1UMPJR7Z9AQ%))1[18[eNCZ.'ePZ@aM78tHiatu&Tsn^[NNdo#EpK^)593#?"XsOIKD@n0VhEu+pMX8L,&/kXoQ\Xmd]:f
%]omrI[K49f;tepfq%1LH#q,09%9Y)DT!F=b'rs88mkfT[%pQh#SJKr1'S0M[;8H1a]+Cg;a^8*aq)>W`."N1/_$GH^&$;UbeHB,4
%P9;uZ<M<d>Ma?8de%sSS*`h-@*6E9;lnc]Y;(ASPg>eBC.gl3uBZuUEflTD60oEhL7f^uk_MlliZM#E;6b\N889fu8QeuGa`s]\g
%.)F+*Sf`19\MQK)=itCtS9>lh#:42@-b*`9mrtZrH>S(;$1/[:Ad0msg]?1J*@.o\l(('dV0D_)'*j/Z@:U#R;uOC"3tfS@$b%?g
%4$n+t*DcUY(]5Buc*EZHpd%h3ci/!o^I[dHBlneW1[^*68\m=jM&"on6FdfeC6UX6RI`ZI+mI?$GU``!>_9osmQeD1"EFeb*OOm1
%ajbGG,6.d_$f;"Xo[_*MjbXCS5oC@7AGqUUn.`S?lSE%6().k)+p.2UL4/%-lR8$k?Tc<R2(7K[CG(9%LIRL@&%:4'2Cagnnoj&'
%(qQu-#+o+UX"Jg<,nDik"`')Y4KerJFE,"&9sY$-L(h.T0(t:*k^#M_[4ZoYIrh!qR$<k@(:buj-,mSV__NU5WL^Z".J19#r["5;
%_7>4#nVP<D?#erS;tja?QLkl@-XM$[I@aH@MaN)?;/m3;.];L%WD=mEPd1#q,OrY!=J;6:YkTb-\+U2[UeVm_i44fup)XWoo,'$)
%Q?,t-T;5']m`bL4k'@W3PiAlc'7Aa-/CJe%cQ7aW*/Qe0n\,,B&cqP5T#+ed79<[nIE-Zo^udNh/O&dl7gl.n_0;3t]\hR37cBF`
%%lbAlnae.Uitr;@RFs#07`p:'U:I324u.">OV@fmg'^_3Lhq9k_I,")F]^EgH%b("R(rmT*qUg1jeDf!@Mab@S2A]f5BC]VX)PC0
%o/Q=.D@oY,'DP4I)")!f"F_jS&h/bfn,eWeYQ?J6?qF@^bQD9qiB0[&cr>8k:G`5%L)@=l3$BAd+mn1k*-nIj,T"cGTN?Mkn#@Ee
%+50Y<_r,f^d*]ZrbDUt+r/__V3[gdpLV.@J(M!B5mIV!h<S_<oX]B6+(lX`qO=K7-n4f7$$P*'"MALVV7^nA;Sb5Tg6QQ(AC@BEl
%4.`d0D4Xr9ag^UtC^BXN%ZDu&d4[;LTF%s\6qM+nm^kt>>S0euB[Uj((^E"P8jm`gQ9"Z0>D=X)9Ja$B:a*tth`d\Mg,A2uQlpb)
%a0OGYZtt!A4g$hkO[pr+0Re4E5tH5AWD=aeRgMi0+Z^n.i0im3er#e2!W97b=e3Y4Dcl32!6UN\fU,T6gX07-Zk7BQ#"L0*^XC`X
%Cs;oMLJ<=06JaI<Y7C>EFEGk6VOH?b_9Kp:^tE4Y)#-rIUCJEj#_5olDA5'^QGNlL*i1NOM\pM<bU.Y(R:d6b/6`(+f)IZrkmA^:
%TGob#^N7i\[?-SNEUs;EE!AEuTW\^WlsPBa"^5dYS2Ue"2*o#:M`2L=!uQ>GZp?T".`Op.G5i*"4cEmekHHlZFCV!Mrp4npY@iX"
%_eQI15!,D9'79S:-W@nPeonVL&$oD[p4"H!2`YeggXC69fop.28u6KWQq_bQfs?l^+>7V["[3.0Pomie8)3c3mQqp92SJ`m7bbek
%rA2`J^XP%Wk8+)TV=8Yq0MKg^`g=a]5JN9kOLTr:ZFW.kbThi!U>\6i,3Du\.5nUcqrT!5bq$X].[/.<SG%)#0A4]TMat8qpe?g,
%IW4E`Vau'8&^SYYGu)Cid$-To^MDCh1XCIahRgVUgf0>PB%*@3'Tgs87L[&>Hme;#`'13U,Zo<c'6nN.1!f2qcA.ZCrtE'H__WrM
%mWO=H]0L26h/n%7eP3^Z/`of/2q$+GT`U"'q1Mu2SWK,&Ye\%CEDC&F,PM<=M*+$;)J=LgHB>/(d"%=q@p@->]tpc%p^\RH&c9A[
%Io(8]fEX&.K0a1**`-N"*r`KoDSc<CF<Kr"=l=_[ZEd!ge]E<Fn5%^B-n#:"2NSSdN"SfQ(C@tlY;gZ"MlCpqB:TQ\]Pp-qf'/ql
%0nuF0+EtQdW2ofP.ff_^FUt6(T[a0^O#d^dGXVn@O*<0V*$.e\^2j%C2;30B09&lo(sD^CfsQ08cdX<5.T%YZ)Ap6f3*R_m'?W#.
%r7%h"<[?_JE(*$araX@Z[pDdJ#;pJ#)/"Z,O74@B3#brpO(f%1i?li)1bqZ?NBD_?F6r"VT19,1'k3T/6f$gLM0]Z_gibgP*DW70
%J<.HQ*4LPV)Q&-,LE6<RUHSu?_$.=2gsnFJ*FCH,U0hh#CVH!\.0DD0g\O_KEZnQ/jtV)O;A=(iR%%)%ZF@5UbBm27A8$tVnfCef
%(g<E;]LPt:]-C=i01%Eoq6EQVY34O9+q9l-;Kk:UhA9n9/:-<hPigQo+q9l-FL'+rpI,uElI9+cIJ6/K/rQZ5[eoKN1gCfQ3UN.0
%+q9l-OONX20@FgQ_;=k?EF7d'^F\C#p"Xq%V"LnRcMJdpQUTCEl$`:p%e\!h_<'d<pI,Sbb9Dc^hlH4(1gCe>kPid(+q9l-,,3n8
%?R3-4.W;,1#UF5hFX+'`+fK17/)?$II0eOO\B^)DhM6VpY')%mpE?36\_<%QhM7b[G,6-t]aoZ\j4CjSfD?-+<57.H\DE!c@L?kR
%E?h+d$s](Tp4V9NJ!&aakkm@(G[@2U4Z^?;a^l.)U*#r`7PXO(MAltH_*ABeAI\7c.6igrPK1L@NS3R/7md?qltir\<_*28J5j@W
%WIGc[#QG<'SoJ]Dfc(3I56C?/lM0U.<]'Xj[lmfd^`.STLD-q]S6!8hkj\%^'ReS]WO>F;F7bk=4TqNicW2_IC^>cJ7lD&J)oA!Q
%TDjI+BAe9qJ)L@qn3:Xt(&3o[&:"%)r2U5irIFA9H1jJ;4SQUpkNNY)#(GV@53%+lo7m,&%6djcrmRP>n-.b%rW!j%I80_B^(1!a
%UZk!$0ODg>:&b7.NaN,4oel`=!JHC33r(IRJ:.hj=6\$CqK#'sR3$E;MhaRqi!UG\obe:f=<JS::;^_!d>oKWO&.YHmQTD=m+DJn
%RP;5X$'5'*D.]X3FS:4V(QHo3n1XYBfGJ?B\l1kYB<1F1gURqDXpnu#9=#i#9Z/J7(FjGB/S<8FBXNSb\N#WK4*r#c\%C,Q1u!XQ
%c\o^-#b]M8O3??Dn/M-Ip'6,ohgj\[rrKhOrj;~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 555 2454 a(The)k(free)g(end)h(of)e(the)h(sp)m(ring)h(is)f
(allo)m(w)m(ed)g(to)g(move,)g(and)g(w)m(e)h(need)f(to)g(imp)s(ose)456
2571 y(co)s(o)m(rdinates)i(on)g(the)g(\014gure)h(to)f(measure)h(this)f
(motion.)60 b(There)38 b(a)m(re)g(many)g(w)m(a)m(ys)456
2687 y(w)m(e)28 b(could)g(cho)s(ose)g(to)g(do)g(this.)42
b(The)28 b(natural)f(p)s(oint)h(to)g(cho)s(ose)g(as)g(an)f(o)m(rigin)h
(is)g(the)456 2803 y Fm(rest)f(p)s(osition)d Fn(of)g(the)g(free)h(end)f
(of)g(the)g(sp)m(ring)h({)e(that)h(is)h(to)e(sa)m(y)-8
b(,)26 b(the)f(p)s(oint)e(where)456 2919 y(the)28 b(free)h(end)f(sits)h
(when)g(the)g(sp)m(ring)g(is)f(not)g(in)g(a)g(state)h(of)e(internal)i
(tension.)43 b(F)m(rom)456 3036 y(this)31 b(p)s(oint,)g(w)m(e)h(can)f
(measure)h(the)g(displacement)g(of)f(the)h(free)f(end)h(of)e(the)i(sp)m
(ring,)456 3152 y(and)27 b(w)m(e)h(shall)f(adopt)g(the)h(convention)g
(that)f(a)g(stretched)j(sp)m(ring)e(co)m(rresp)s(onds)g(to)g(a)456
3268 y(p)s(ositive)e(displacement,)j(while)e(a)e(comp)m(ressed)k(sp)m
(ring)e(co)m(rresp)s(onds)g(to)g(a)e(negative)456 3384
y(displacement.)1050 4254 y @beginspecial 0 @llx 0 @lly
91 @urx 41 @ury 2160 @rwi @setspecial
%%BeginDocument: springmass2.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: springmass2.eps
%%Creator: Adobe Illustrator(R) 12
%%AI8_CreatorVersion: 12.0.0
%AI9_PrintingDataBegin
%%For: Information Technology
%%CreationDate: 5/5/2010
%%BoundingBox: 0 0 91 41
%%HiResBoundingBox: 0 0 91 40.9161
%%CropBox: 0 0 91 40.9161
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%+ procset Adobe_CoolType_Core 2.23 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_BuildNumber: Adobe Illustrator(R) 12.0.0 x198 R agm 4.3861 ct 5.530
%ADO_ContainsXMP: MainFirst
%AI7_Thumbnail: 128 60 8
%%BeginData: 4386 Hex Bytes

%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD52FF7D7DFD1EFF7DA8FD5EFF7D7DFD1EFF52FD5FFF7E7DFD1EFF
%7DA8FD5EFF7D7DFD1EFF52FD5FFFA87DFD1EFF7DA8FD5EFF7D7DFD1EFF52
%FD5FFF7D7DFD05FFA8FD12FFA8A8FD04FF7DA8FD5EFF7D7DFFFFFF7E52FD
%13FF8452A8FFFFFF52AFFD5EFF7D7DFFFFA827FD15FF7D52FFFFFF7DA8FD
%5EFF7D7DFFA827A8FD0AFF7DA8FFFFFF7DA8FD05FF7D52FFFF52FD5FFF7E
%7DFF27FD0BFFA87DFFA87DFFA87DFD06FF7D52FF7DA8FD5EFF7D5952A8FD
%06FF7D7DFFFF7D7D59FF27277DFF52A8FD06FF7D5252FD5FFFA8277D7D84
%7DA8FFFFFFA827FF7D7D7DA8FF7D52FFFF7D7DFFFFFF7D847DA82727FD5F
%FF7D27527D7D7D7EFD04FF527D7DA87D7DFF597DFFFF7D7DFFFFA8FD047D
%52F8FD5FFFA8527DFD08FF7D5252FF7D84FF7D7DFFFF7D7EFD06FFA85252
%A8FD5EFF7D7E7D52A8FD07FF277DFFA852FF7D52A8FF52FD06FF7D27FF52
%A9FD5EFF7D7DFF7D52A8FD06FF52A8FFFF52A8FF7DA87D7DFD05FFA827FF
%FF7DA8FD5EFF7D7DFFFF7D52A8FFFFFFA8527DFFFFFF84A8FFFFFFA8A8FD
%04FFA827FFFFFF52FD5FFF7E7DFFFFFF7D7DFD04FF7DFD0EFFA827FD04FF
%7DA8FD5EFF7D7DFD04FFA8FD13FFA8A8FD04FF52FD5FFFA87DFD1EFF7DA8
%FD5EFF7D7DFD1EFF52FD5FFF7D7DFD1EFF7DA8FD5EFF7D7DFD1EFF52AFFD
%5EFF7D7DFD1EFF7DA8FD5EFF7D7DFD1EFF52FD60FFA8FDFCFFFDFCFFFDB4
%FFA8A8FD10FFA82E7DFD49FF7E277DFD1FFFF87EFD0EFFA852F852F827A8
%FD45FFA852F852F827A8FD1DFF277DFD0DFFA827F8A8FFA927277DFD43FF
%7D27F8A8FFA827277DFD1CFFF87DFD0CFF522727A8FD04FF522727A8FD40
%FF522728FD05FF522727A8FD1AFF277DFD0AFFA827277DFD07FFA827207D
%FD3DFFA827277DFD07FFA82720A8FD19FFF87DFD09FF7DF827A8FD0AFF52
%F852A8FD3AFF7DF827A8FD09FFA852F852A8FD17FF277DFD07FFA852F87D
%FD0DFFA8F8277DFD37FFA852F87DFD0DFFA8F8277DFD08FFFD0E7DF87EFD
%06FF7D27F8A8FD10FF522752FD35FF532727A8FD10FF272752FD07FFF8FD
%0B27F827277DFD05FF522752FD13FF7D2720A8FD32FF272752FD13FF7D27
%27A8FD05FF277DFD0AFF8420F8A8FFFFFFA8F8277DFD15FFA852F87DFD2F
%FF7DF8277DFD15FFA852F87DFD04FFF87DFD0AFF7D27277DFFFF52F852AF
%FD18FF7DF827A8FD2BFFA852F87DFD19FF7DF84CA8FFFF277DFD0AFFA827
%F8A88427F87DFD1BFFA8272752FD29FF7D27F87DFD1BFFA8272759FFF87D
%FFFF7D7D52A87D7DFFFF7DFD042752FD1FFF7D2727AFFD26FF522752FD1F
%FF7D2727277DFFA8277D7D27A852A8FFA827F8277DFD21FFA827F87DFD23
%FFA820277DFD21FFA827F8A8FFFF27FFFF52FF7D52FF7D27277DFD24FF7D
%F852A8FD20FF7DF852A8FD23FFA8277DFFAF52FFFF28FF7D7DFFA8F8F8A8
%FD25FFA8F8277DFD1DFF7D27F87DFD26FFF87DFFFF27FFA827FF7D52FF7D
%27277DFD27FF522752FD1BFF7D2727A9FD27FF277DFFFF7DFFFF7DFF84A8
%FFA820F8A8FD28FF7D27F8A8FD17FFA8272752FD29FFF87DFD0AFF7D2727
%7DFD2AFF52F853FD15FF7DF827A8FD29FFA9277DFD0AFFA827F87DFD2BFF
%7DF8277DFD11FFA852F853A8FD2BFFF87D7DA87DA87DA87DA87DA8522727
%7DFD2DFF522752FD0FFF7D2727A8FD2DFF4B272720272727202727272027
%27F87DFD2EFF7D2727A8FD0CFF522752FD2FFFFD0EA8277DFD2FFFA852F8
%7DFD09FFA8F8277DFD3EFFF87EFD31FF7DF852A8FD05FFA87DF852A8FD3F
%FF277DFD32FFA827277DFFFFFFA827277DFD41FFF87EFD34FF522727AF59
%2727A8FD42FF277DFD35FF7E27F8277DFD44FFA8FD37FFA87D7EFD44FFFF
%%EndData
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 70 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/set_gvm
{
	currentglobal exch setglobal
}bdf
/reset_gvm
{
	setglobal
}bdf
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/thold_halftone
{ 
	level3
		{sethalftone currenthalftone}
		{
			dup /HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}
			{
				begin
				Width Height mul {
					Thresholds read {pop} if
				} repeat
				end
				currenthalftone
			} ifelse
		}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			/srcDataStrs [ imageDict begin
				currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
				{
					Width Decode length 2 div mul cvi string
				} repeat
				end ] def		
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource [1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx /pop cvx names_index /get cvx /put cvx] cvx put
			imageDict /Decode [0 1] put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{ 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		DataSource 0 get type
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch get exec length exch 0 ne {pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup /filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		dup /arraytype eq exch /packedarraytype eq or /DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type /dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{ 
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		dup /CSDBase known {
			/CSDBase get /CSD get_res /Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5 {cleartomark} bind def
}{
	/pdfmark_5 {pdfmark} bind def
}ifelse
/ReadBypdfmark_5
{
	2 dict begin
	/makerString exch def string /tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
		pop pop cleartomark exit
		}{
			3 copy /PUT pdfmark_5 pop 2 copy (\n) /PUT pdfmark_5
		} ifelse
	}loop
	end
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2005 Adobe Systems, Inc.  All Rights Reserved.
%% Note: This procset assumes Adobe_AGM_Utils is opened on the stack below it, for
%% definitions of some fundamental procedures.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 201 dict dup begin put
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_in_pattern false def
/AGMCORE_currentpagedevice nd
/knockout_unitsq nd
currentglobal true setglobal
[/CSA /Gradient /Procedure]
{
	/Generic /Category findresource dup length dict copy /Category defineresource pop
} forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_&setoverprint /setoverprint ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			dup AGMCORE_gstack exch get dup /AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup /AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_in_pattern known {//Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not AGMCORE_currentpagedevice/OverrideSeparations known and
						{
							AGMCORE_currentpagedevice/OverrideSeparations get
							{
								/HqnSpots /ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
						}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]AGMCORE_&setcolorspace
							false
							AGMCORE_currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup (Cyan) eq exch /Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup (Magenta) eq exch /Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup (Yellow) eq exch /Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup (Black) eq exch /Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type /dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading /AGMCORE_ignoreshade known
					currentdict end exch
					{pop <</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where {
						begin
						dup 0 get dup /Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[ 
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get [ 
									exch {
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									} forall 
								] 1 xpt
							}if
						}ifelse
						end
					} if
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin /clonedict load end def
	/clonearray Adobe_AGM_Utils begin /clonearray load end def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/getrampcolor
	{ 
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type /stringtype eq {indx get} if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		} for
		ColorSpaceFamily /Separation eq 
		{sep}
		{
			ColorSpaceFamily /DeviceN eq
			{devn} {setcolor}ifelse
		}ifelse
	} bdf
	/sssetbackground {aload pop setcolor} bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		c1x c2x eq
		{
			c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
			c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
		} ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			/max { 2 copy gt { pop } {exch pop} ifelse } bdf
			/min { 2 copy lt { pop } {exch pop} ifelse } bdf
			rampdict begin
			40 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}
						{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{ /theta 89.99 def}
							{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}
							{
								/L1maxX 0 def
								/L2maxX 0 def
							} ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						} ifelse
					} ifelse
				} ifelse
			} if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt { exch } if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			} if
		} if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		newpath
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}
		{
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			} repeat
			pop
		} ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}
			{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}
				{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}
					{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{ /theta 89.99 def}
						{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}
						{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					} ifelse
				} ifelse
			} ifelse
		} if
		grestore
		grestore
		end
		end
		end
		} ifelse
	} bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where {pop /setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			newpath
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			newpath
		} if
		x1 x2 eq
		{
			y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
		}
		{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
			x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{ pathbbox } stopped
		{ 0 0 0 0 } if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}
		{
			rampdict begin
			20 dict begin
			background length 0 gt { background sssetbackground gsave clippath fill grestore } if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt { exch } if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				} if
			} if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				} if
			} if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling { round cvi } if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			} repeat
			pop
			ext1 {
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				} if
			} if
			grestore
			grestore
			end
			end
			end
		} ifelse
	} bdf
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
/capture_currentpagedevice {
	//Adobe_AGM_Core/AGMCORE_currentpagedevice currentpagedevice ddf
} def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup //Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name /MappedCSA xdf}ifelse
} def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup () eq exch (All) eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc {setcolor} bdf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		7 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge {0 get length}{length}ifelse def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge {0 get length}{length}ifelse lut_entry_len ne {
					/AliasedColorants false def
					exit
				}
				{
					new_LookupTables names_index get 0 get null eq {
						dup /Names get names_index get /name xdf
						name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
						or or or not {
							/AliasedColorants false def
							exit
						} if
					} if
				} ifelse
			} for
			lut_entry_len 1 eq {
				/AliasedColorants false def
			} if
			AliasedColorants {
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq {/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod /Additive eq {/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	dup not {
		CSA map_csa
	} if
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants {
				/currentspotalias current_spot_alias def
				false set_spot_alias
			} if
			Names {
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				/names_index names_index 1 add def
			} forall
			AvoidAliasedColorants {
				currentspotalias set_spot_alias
			} if
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
 					0 0 0 0 /setcmykcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				{setcolor} bdf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSDBase known {
			CSDBase /CSD get_res begin
			currentdict /Names known {
				currentdict devncs
			}{
				1 currentdict sepcs
			} ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt /Names where {pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal {
					/tableIndex xdf
					Lookup dup type /stringtype eq {
						compCnt tableIndex map_index
					}{
						exec
					} ifelse
					/Names where {
						pop setdevicencolor
					}{
						setsepcolor
					} ifelse
					currentgray
					tableIndex exch
					HiVal mul cvi 
					NewLookup 3 1 roll put
				} for
				[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
				end
			}{
				level3
				{
					currentdict /Names known {
						[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
						[/Indexed [/Separation Name MappedCSA sep_proc_name load] HiVal Lookup] setcolorspace_opt
					} ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict /Names known {
						Lookup dup type /stringtype eq
							{/exch cvx CSDBase /CSD get_res /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
					}{
						Lookup dup type /stringtype eq
							{/exch cvx /get cvx 255 /div cvx}
							{/exec cvx}ifelse
							CSDBase /CSD get_res /MappedCSA get sep_proc_name exch pop /load cvx /exec cvx
					} ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			} ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSDBase known { 
			begin
			CSDBase /CSD get_res begin
			currentdict /Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
			end
		}{
			/Lookup get 4 3 -1 roll map_index setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSDBase known and {
			/indexed_colorspace_dict AGMCORE_gget /CSDBase get /CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup /CSD eq {
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	} ifelse
}def
/del_res
{
	{
		aload pop exch
		dup /CSD eq {
			pop 
			{
				//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef
			}forall
		}{
			exch
			{
				1 index undefineresource
			}forall
			pop
		} ifelse
	} forall
}def
/get_res
{
	dup /CSD eq {
		pop
		dup type dup /nametype eq exch /stringtype eq or {
			AGMCORE_CSD_cache exch get
		} if
	}{
		findresource
	} ifelse
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		/CSA get_res
	} if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	clonedict
	begin
	/OldPaintProc /PaintProc load def
	/PaintProc
	{
		mark exch
		dup /OldPaintProc get stopped
		{closefile restore end} if
		cleartomark
	}  def
	end
  } {pop} ifelse
} def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	1 index dup /ID get exch /Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}{null}ifelse
	Intent ne {
		Intent /ColorRendering {findresource} stopped
		{
			pop pop systemdict /findcolorrendering known
			{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				true
			}
			{false} ifelse
		}
		{true} ifelse
		{
			dup begin
			currentdict /TransformPQR known {
				currentdict /TransformPQR get aload pop
				3 {{} eq 3 1 roll} repeat or or
			}
			{true} ifelse
			currentdict /MatrixPQR known {
				currentdict /MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true} ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR [
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add} bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add} bind
				] def
				/MatrixPQR [ 0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296 ] def
				/RangePQR [-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392] def
				currentdict end
			} if
			setcolorrendering_opt
		} if		
	}if
} def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict /ColorRendering known{
			ColorRendering /ColorRendering {findresource} stopped not {setcolorrendering_opt} if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process //Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add} if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0} ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup /Name get map_alias {/CSD put}{pop} ifelse} forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get /CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		currentdict/TintProc known currentdict/CSA known and 3 1 roll
		//Adobe_AGM_Core begin
		dup /customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			4 -1 roll{
				exch pop /sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
			pop
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get //Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<< /NegativePrint //Adobe_AGM_Core/AGMCORE_inverting get >> setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
/set_def_ht
{
	AGMCORE_def_ht sethalftone
} def
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.25 0
%%Copyright: Copyright 1997-2005 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.25 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.25 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict /Adobe_CoolType_Data 2 copy known not
	 { 2 copy 10 dict put }
if
get
	 begin
	 /@opStackCountByLevel 32 dict def
	 /@opStackLevel 0 def
	 /@dictStackCountByLevel 32 dict def
	 /@dictStackLevel 0 def
	 end
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup /args
			7 index
			5 add array put
			put get
			}
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{ pop count }
			if
			dup /argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch /@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					 { (*) { pop stop } 128 string /Category resourceforall }
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data /@shouldNotDisappearDict get ne dup
					 {
						  /@shouldNotDisappearDictValue known
								{
										  {
												end
												currentdict 1 index eq
													 { pop exit }
												if
										  }
									 loop
								}
						  if
					 }
				if
				end
		}
		{ false }
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
		currentglobal false setglobal
	  userdict /Adobe_CoolType_Data 2 copy known not
		  { 2 copy 10 dict put }
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.21 0
%%Copyright: Copyright 1987-2005 Adobe Systems Incorporated.
%%Version: 1.21 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 27 add dict copy }
	{ 27 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		  <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
				mark
				Adobe_CoolType_Utility /@recognizeCIDFont currentdict put
					 {
					 ((Hex) 57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
					 }
				stopped
					 {
					 cleartomark
					 Adobe_CoolType_Utility /@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						  {
						  2 copy get 3 index eq
								{ 1 index length exch sub 1 sub { end } repeat exit }
								{ pop }
						  ifelse
						  }
					 for
					 pop pop
					 Adobe_CoolType_Utility /@eexecStartData get eexec
					 }
					 { cleartomark }
				ifelse
			} }
			{ {
				Adobe_CoolType_Utility /@eexecStartData get eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
/T0AddT42Mtx2
{
	/CIDFont findresource /Metrics2 get begin def end
}bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/AGMIMG_flushfilters
{
	dup type /arraytype ne
		{1 array astore}if
	aload length
		{
		dup type /filetype eq
			{
			dup status 1 index currentfile ne and
				{dup flushfile closefile}
				{pop}
			ifelse
			}{pop}ifelse
		} repeat
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator /imagemask eq{
 											/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									[ /Separation Name [/DeviceGray]
	 									{ 
	 										sep_colorspace_proc AGMCORE_get_ink_data
											1 exch sub
	 									} bind
										] AGMCORE_&setcolorspace
										/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0 () /SubFileDecode filter
				BitsPerComponent 8 idiv string /readstring cvx /pop cvx /putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0 () /SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv {DataSource /read cvx /not cvx{0}/if cvx /mul cvx}repeat /mul cvx /add cvx
			}for
		/convProc load /exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2 /add cvx /index cvx
			3 1 /roll cvx /exch cvx 255 /mul cvx /cvi cvx /put cvx
			}for
	]bind cvx 0 () /SubFileDecode filter
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt {1 add 2 div cvi}{exit}ifelse
			} loop
			string
		} repeat
		end ] def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [ [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						devn_alt_datasource 1 /string cvx /readstring cvx /pop cvx] cvx colorSpaceElemCnt 1 sub{dup}repeat] def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA get_csa_by_name 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							devn_alt_datasource
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA get_csa_by_name 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get get_csa_by_name
				}{
					/Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA get_csa_by_name 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict /_Filters known {_Filters AGMIMG_flushfilters} if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1.1-111">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS2</xap:CreatorTool>
         <xap:CreateDate>2010-05-05T16:01:57-07:00</xap:CreateDate>
         <xap:ModifyDate>2010-05-05T16:01:57-07:00</xap:ModifyDate>
         <xap:MetadataDate>2010-05-05T16:01:57-07:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>116</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAdAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWF/mb/wBMp/4Een/8zMVZpirsVdirsVdirsVdirCfOf8A&#xA;5MH8vv8AmN1H/umT4qzbFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;WF/mb/0yn/gR6f8A8zMVZZqGoWOnWM9/fzpbWdshluLiUhURFFSSTiqhoWrJrGlW+qRRmO1vEWaz&#xA;5cg7QyKGR3RlUozA/Z3+eKo/FXYq7FXYqkmiebNP1PVNS0Zv9G1nSnpd2Lk8jE+8U8ZIXnG6kfEB&#xA;sdvmqknnP/yYP5ff8xuo/wDdMnxVm2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KsF/Nu+tLCy8t315MtvaWuv2U1xO5oqRoJGZmPgAMVQGn6fffmPfQazrMD2vki1cTaL&#xA;oswKvfupql5eIf8AdXeKI9ftN2GKvSQABQbAYqlen+aNC1CTVI7S6DPoszW+phkeP0ZEUOQfUVaj&#xA;ia8lqp7HFWNr56j17XdAt/Ll4TpNxaT61qF0IWDyWcTehDEscycx60zE1CcuKfCd8VQ/lj8zrLzq&#xA;2uaRphutJ1K2uLm0066NrOwKRRIyXLtPb+jGxZ/7mT4qDcb4qn/kDzJN5i8qWWpXSrHfj1LbUY0+&#xA;yt1bSNDPTYbF0JHscVUPOvkr9OfVtT0y5/RnmnTKtpWqqK0r9qCdf92QSdGU/MYqwpfOT655+8j6&#xA;fqdqdM8zaVfX8er6YxqFLaXccJoX/wB2Qy0qjfQcVeu4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq81/Pny/F5i8t6LoskzW4v9btIFnTcxtIkqh6VFeNa0xVIvJnkvyX&#xA;dXsvljzNp91Y+bbFOckaarqggvYBsLu0JufiRv2l6odjir1/TtPtdOsLewtFZba2RYoVd3lYKooK&#xA;vIXdj7sScVeQfmrZ6vpXmqaDRg//ACEW1j0aYo1PSu4pEQ3BFP8Alikk/wCBxVk+n6dZ6B+amn2M&#xA;K+jYXHlqOw0wUopbTrlmeMUAXl6c6t9GKoL8rNTsbDzH550G9lW31eXzBe6nFaSfC7Wc0UPCdfFD&#xA;x64qm35Qc5vK93qlOMOtatqWpWory/cXN3I0ZqP5l+IfPFVLzl5K/LS1h1DzN5j+sW8QrNdzjUdQ&#xA;hUsdgEiinReTHZVRdzirzjyx5NlsvzQ8neaXsptIttTuL2DS9Hubi4ubiK1TTrhxLcvcSTMsspIP&#xA;pqQEGxqa4q+g8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYX+Zv8A&#xA;0yn/AIEen/8AMzFUz85+TLLzNZRAyvY6tYv6+kavBQT2s4GzKf2lbo6HZhscVTXRRqo0m0XVzE2q&#xA;LEq3rwVETTKKO0YO4VjuAcVSiDyaG84yeZ9Rv5b+aGMwaPZsoSGyjkAE3BV+3JJTd234/Diqbaho&#xA;2m6hcWVxdw87jTpvrFlMGZHjk4lDRkKkhlYhlPwkdRiqrqNhbahYXFhdBmtrqNoplR3iYo4owDxl&#xA;HXbupBxVfaWltZ2sNpaxrDbW8axQRLsqIgCqo9gBTFWInyff655ubW/MzrLpmlTf865oy7xK6ihv&#xA;bjs8xNfTHRF3+0cVWec//Jg/l9/zG6j/AN0yfFWbYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYqwv8zf8AplP/AAI9P/5mYqzTFXYq7FXYq7FXYq7FWE+c/wDyYP5ff8xu&#xA;o/8AdMnxVm2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpbrWgWOsf&#xA;UPrZcfo68iv7f0yF/fQV4cqg1X4txiqZYq7FXYq7FXYq7FXYqluo+X7DUNW0nVJy/wBZ0WSaazCs&#xA;AvKeBrd+Yoa/BIae+KplirsVdiqGsNT03UYPrGn3cN5AGKGW3kWVOQ3I5ISK74qicVdirsVSrzD5&#xA;r8t+XLaO513UYNOgmcRQvO4Xm57KOpp38BucVRGja3pGt6dFqWk3cV9YzisVxCwZT4jboR3B3GKo&#xA;3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUp8x+bvLPlq2jude1KDToZnEcLTNQux7Ku&#xA;5NO+23fFUVpGs6VrOnw6jpV3Fe2M45RXELBlP0joR3B3GKozFXYq7FXYq7FXYq7FXjf/ADil/wCS&#xA;tf8A7aNx/wAQjxUvZMVdirybzx+ekFvqR8seQ7M+Z/NctUCwfHa27A0JldSOXHuAQo/aYdMVQ3lT&#xA;8i7jUdT/AMT/AJoXv+Itek3TT2NbK3B/YCbK9P5QAnseuKoLWvyi83eRtRm8x/lPdlYnJkv/ACrc&#xA;sXgmA3pFyIr7AkMP2W7Yqyr8uvzr8vebJzpF9G2h+aoSUuNGvPgYuv2vRZgvP/VIDDwpvir0XFXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq4kAVOwGKvJfO356Rx6mfK35f2R8zeapOSfufjtbcjYs7g&#xA;gPx70YKO7Dpiqh5T/Ih73Uf8Tfmdef4k8wSiq2Tmtlbgj7ATZXpXpQIPA9cVQGsflL5x8hajN5i/&#xA;Ki7ZrV2Ml/5UuWLwyKB/uksdz4AkMOzH7OKst/Ln86vLnm+Q6XdI2i+aIfgudFu6pJzX7XpFgvOn&#xA;8tAw7jFXoeKuxV2KuxV2KuxV43/zil/5K1/+2jcf8QjxUvSfN3nTy15R0ttT1+9Szt9xEp3klcCv&#xA;CKMfE7fL6dsVePNf/mf+czGPThL5R/L1yA92/wDvZeJ3C0IqrDsp4eJfpir1jyP+XnlXyVpgsdBs&#xA;xCWA+sXb/FcTMO8knU/IbDsMVZJirsVYR+Yv5Q+VPPMIlvIzZazEB9V1i2AW4Qr9nl09RQezfQRi&#xA;rALH8w/zC/K27i0j8x4JNZ8tswjsvNVsDI6g7KJ+7HxDfH1oXxV7Tout6RrenQ6lpF3FfWE4rFcQ&#xA;sGU+I9iO4O474qjcVdirsVdirsVdirsVdirsVdirsVSLzh538s+UNLbUtfvUtYNxFH9qWVh+xFGP&#xA;iY/Lp3xV5Abn80PznbjaCTyh+XsnWdv9676Ou4WhFVYeFE936Yq9a8k/l/5V8l6YNP0GzWBWoZ7l&#xA;vjnmYftSyHdvl0HYDFWRYq7FWDfmN+T/AJV88Ri4uUNhrkPE2utWoC3CFN1D9PUUHsdx+yRirA7D&#xA;8x/zA/LC8h0b8y7d9V8vu3p2Pmu1UyECtFE+1WNOzfH/AK+KvadI1nStZ0+HUdKu4r2xnHKK4hYM&#xA;p+kdCO4O4xV5t+dPnbzzoWueUdF8pSWsd55imubdjdpzTnGYBHv+yP3rV2xVL/qv/OU//LZ5f+5v&#xA;+qeKu+q/85T/APLZ5f8Aub/qnirHfPnnH/nIzyRoY1rWbrRmszMluBbxl35yAkbMqbfCe+KsW/J/&#xA;82r/AEDyGnlPytpEutecL27nmghCn0IUYIoklIIr9npUAd2GKS9P8o/kbc32qr5q/M69/wAQ+YHP&#xA;OKwY1srYdQgTZX4/ygBPY9cUPYFVUUIgCqooqjYADoAMVbxV2KuxV2KqN9Y2V/aS2d7BHc2k6lJr&#xA;eZQ6Op7MrVBxV4trX5RebvI2ozeY/wAp7srE5Ml/5VuWLwTAb0i5EV9gSGH7LdsVZV+XX51+XvNk&#xA;50i+jbQ/NUJKXGjXnwMXX7XoswXn/qkBh4U3xV6LirsVdirsVdirsVdirsVcSAKnYDFXkvnb89I4&#xA;9TPlb8v7I+ZvNUnJP3Px2tuRsWdwQH496MFHdh0xVS8n/kZNc6qvmr8y73/EfmNiHis3PKytu4QJ&#xA;QK/HwoEHgeuKvXlVVUKoAUCgA2AAxVvFXYq7FXYqoX+n2Oo2U1jf28d1Z3ClJ7eZQ8bqezK1QcVe&#xA;Lax+UvnHyFqM3mL8qLtmtXYyX/lS5YvDIoH+6Sx3PgCQw7Mfs4qxTWfzRsfPX5i/lmn1GfS9a0nU&#xA;5o9X024UgxSSvb8eLELUExt1AIpuMUvbvOPnq70HX9C0Oy0ltVvtfW7+qqswhCvaCJqOWRwEKyks&#xA;1duPRicUJCfzc10Ra7GfKkn6R8rj1PMFt9cjEccJjEyPbymOs5ePkwXgvTc7jFWOf85Mana6r+TN&#xA;hqlmxa0v7qyubdiKExzQu6Ej/VbFQv8A+cTrCyj/AC5uL1II1vJ7+ZJrgKPUZESPipbrxWpoMVL2&#xA;vFXYq7FXYq7FXYq7FXYqwj8xfyh8qeeYRLeRmy1mID6rrFsAtwhX7PLp6ig9m+gjFWAWP5h/mF+V&#xA;t3FpH5jwSaz5bZhHZearYGR1B2UT92PiG+PrQvir2nRdb0jW9Oh1LSLuK+sJxWK4hYMp8R7Edwdx&#xA;3xVG4q7FXYq7FXYqkXnDzv5Z8oaW2pa/epawbiKP7UsrD9iKMfEx+XTviryA3P5ofnO3G0EnlD8v&#xA;ZOs7f7130ddwtCKqw8KJ7v0xV615J/L/AMq+S9MGn6DZrArUM9y3xzzMP2pZDu3y6DsBirIsVdir&#xA;sVdirsVdirsVdirxP85NPsYvze/K++it40vLq/mS5uFUCSRYXtvTDsN24c2416VxVnXmby/q97+Z&#xA;PkrWba39TTdITVV1Cfmi+mbqCNIfhZg7cmQj4Qad8VSiXyh5ibV/zTuBaVh8yWdtDorepF+/ePTW&#xA;t3FOVUpKePx8fHpirCPzz0290v8A5x38uaZfR+je2I0u2uouStwlhtSjryUspoykVBpilPP+cUv/&#xA;ACVr/wDbRuP+IR4oL2TFXYq7FXYq7FXYq7FXYq7FVG+sbK/tJbO9gjubSdSk1vModHU9mVqg4q8W&#xA;1r8ovN3kbUZvMf5T3ZWJyZL/AMq3LF4JgN6RciK+wJDD9lu2Ksq/Lr86/L3myc6RfRtofmqElLjR&#xA;rz4GLr9r0WYLz/1SAw8Kb4q9FxV2KuJAFTsBiryXzt+ekcepnyt+X9kfM3mqTkn7n47W3I2LO4ID&#xA;8e9GCjuw6YqpeT/yMmudVXzV+Zd7/iPzGxDxWbnlZW3cIEoFfj4UCDwPXFXryqqqFUAKBQAbAAYq&#xA;3irsVdirsVdirsVdirsVdirxv8+dP80/4p8h69oOh3Ou/oK5u7m5trYHxtiis4V+HPg1DxPTFXf8&#xA;rp/NL/y0+o/9JT/9kmKu/wCV0/ml/wCWn1H/AKSn/wCyTFWG/mv5l/NLz/5WGg/8q31HTaXMdz9Z&#xA;9R5/7sMOPD0IuvPryxSzL/nFL/yVr/8AbRuP+IR4oL2TFXYq7FXYq7FXYq7FXYq7FXYq7FWEfmL+&#xA;UPlTzzCJbyM2WsxAfVdYtgFuEK/Z5dPUUHs30EYqwCx/MP8AML8rbuLSPzHgk1ny2zCOy81WwMjq&#xA;Dson7sfEN8fWhfFXpmrfml5C0vyzH5kuNYt30qcH6rJCwkeZh1jjjHxFx3FPh/apiry03P5ofnO3&#xA;G0EnlD8vZOs7f7130ddwtCKqw8KJ7v0xV615J/L/AMq+S9MGn6DZrArUM9y3xzzMP2pZDu3y6DsB&#xA;irIsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYb+VH/Kuv8LH/lX/APxwfrMlf96v7+i8/wDe&#xA;v9504+2KsyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoLW/0N+ibr9N+h+ifTP1z63w9D0+/qc/hp88V&#xA;fOPlb/oVr/Hn+j/WOf1h/qf6Qr+ivU+Djw578a14ett1r+xil9NR8OC+nT06Dhx6U7Up2xQ3irsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:98B4FB659958DF119F00B27BEB2664A6</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:99B4FB659958DF119F00B27BEB2664A6</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:97B4FB659958DF119F00B27BEB2664A6</stRef:instanceID>
            <stRef:documentID>uuid:96B4FB659958DF119F00B27BEB2664A6</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_AGM_Core/capture_currentpagedevice get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -40.916 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 40.916 li
91 40.916 li
91 0 li
cp
clp
[1 0 0 1 0 0 ] concat
.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
59 9 mo
81.5 9 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
@
1 lw
.5 22.5 mo
.5 40.5 li
@
.5 31.5 mo
14 22.5 li
@
14 22.5 mo
41 40.5 li
@
41 40.5 mo
68 22.5 li
@
68 22.5 mo
81.5 31.5 li
@
90.5 36 mo
81.5 36 li
81.5 27 li
90.5 27 li
90.5 36 li
cp
@
.5 lw
59 18 mo
59 0 li
@
81.5 18 mo
81.5 0 li
@
77 4.5 mo
81.5 9 li
@
81.5 9 mo
77 13.5 li
@
63.5 4.5 mo
59 9 li
@
59 9 mo
63.5 13.5 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: Myriad-Roman Initial
%ADOt1write: (1.0.24)
13 dict dup begin
/FontType 1 def
/FontName /Myriad-Roman def
/FontInfo 6 dict dup begin
/Notice (Copyright (c) 1992, 1994 Adobe Systems Incorporated.  All Rights Reserved.Myriad is a trademark of Adobe Systems Incorporated may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 109 /m put
def
/UniqueID 41987 def
/FontBBox {-46 -250 1126 831} def
end
systemdict begin
dup /Private
16 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 674 685 484 496 650 661 710 721] def
/OtherBlues [261 266 -200 -194 -221 -212] def
/FamilyBlues [-11 0 674 685 484 496 650 661 710 721] def
/FamilyOtherBlues [261 266 -200 -194 -221 -212] def
/BlueScale 0.0604583 def
/BlueShift 7.1 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67 73] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/m <1C60D8A8C9B6B7700392E60257FC106462D2DFCBC2A10C44EFEDC74AE4DA
23DDA2D9D4E78E5DFA35F442401F635CE4EC97BE57329CAA46C6A3C6CC0DEBBD
4CB8E8B931000F3668CFD86F5BA98BC18E8B1DBC445FD65D7EC5C67C2E7AD143
C336B225F9618FB19106222772767E98CA6DE74BDC9E6E1E91AF0A9BC200F979
51D7A45F25C7DC5AD757FFD60E2D9250E771B55218F79A54B61A1C40C396FB> |-
/.notdef <1C60D8A8C9B896187A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BHENHI+Myriad-Roman /Myriad-Roman findfont def
/BHENHI+Myriad-Roman*1 
[
109{/.notdef}repeat /m 146{/.notdef}repeat
] BHENHI+Myriad-Roman nfnt
BHENHI+Myriad-Roman*1  [7 0 0 -7 0 0 ]mfnt sfnt
83.248 33.2944 mov
(m) sh
77.3037 13.8008 mo
63.0752 13.8008 li
63.0752 4.58252 li
77.3037 4.58252 li
77.3037 13.8008 li
cp
0 0 0 0 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: Myriad-Roman AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
BHENHI+Myriad-Roman dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B84E0A775A339A6920AB0DE430B7DCF862E785DB9E
7AE6B14847A83A280DDCE1A6BA16686796D8801002CE462B6E901D06A69A29BF
2A4A53> |-
/parenright <1C60D8A8C9B84E0A4B31431D5481E823C52558C705892FE29F3
6A28E2E378B339A3E83F4F55337115DAEFD302EA0B7F069AF6D476C66B7F850D
B18A29D> |-
/t <1C60D8A8C9B821B336899C0A411A14A41B3F7FD72EC5319DCA4F19582C70
AB43B5B25B037D9F70BCCAF41E05C288447E6D0303CAC78896DC7AF6BA8E289C
923C2C4B8CB519AA426EAFE5402D54F959CF9B32FD990316D3D74F7DFBBA78A6
DD8825> |-
/y <1C60D8A8C9B744512CF2C00F890C8FA0F8B10FA0BCD74B6A214E866AB68A
96ED7F77308E9592ACC5D3631FDB41633BD4B579DF6D04CABB7588482BC92B59
696D64E3A6D99012CBE78A3625FC6B4D7A0601384C0CDE480AE038032833F6A1
DD7A9E9E435D948E8635E3BC1C4A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BHENHI+Myriad-Roman /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 116 /t put
dup 121 /y put
pop
%ADOEndSubsetFont
/BHENHI+Myriad-Roman*1 
[
40{/.notdef}repeat /parenleft /parenright 67{/.notdef}repeat /m 6{/.notdef}repeat /t 4{/.notdef}repeat 
/y 134{/.notdef}repeat
] BHENHI+Myriad-Roman nfnt
BHENHI+Myriad-Roman*1  [7 0 0 -7 0 0 ]mfnt sfnt
65.6089 11.2402 mov
0.000228882 0 40 (y\(t) wsh
73.2104 11.2402 mov
(\)) sh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
[
[/CSA [/0 ]]
] del_res
/BHENHI+Myriad-Roman*1 ufnt
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 12.0
%%AI8_CreatorVersion: 12.0.0
%%For: (Information Technology) (GRCC)
%%Title: (springmass2.eps)
%%CreationDate: 5/5/2010 4:02 PM
%AI9_DataStream
%Gb"-6H]KJ^OY?LEJGp&A*s;5mlfu\>P@StU"4VCpa0I!^p>22p/qd,H8a::Y1tCFBd=1qO?N_VK33:0"egpsZkp'3Y@?QQSK>Cq`
%OSPqaS_SY+IJ`I+qieYlpta5t]6SG/H&9/dqcBEgl<"#Gh,d\H]/iGelY&n^C'K'L\n?5*52KQ#Ie`L5m`j;ZpSW5eGPCQU[l_.7
%I.OiDq8M1W#:fc6:\X<1hu<>M]:7!uqXN/ZJ,Jj5h::8"[H$/Jhd!h+^:Lhd^Ua9H91KX3cHA-o+5^A=rR8fVDm/SY\!skFjmF'W
%j"KjS^VBX$NrRDd^V>2<rUK:*Q\=2FgY^o8oCr/.I`#O,^A@>M81"IO+F!\&J,."Ha7g\DDR^3,c(AACorG.^hnB&/J,/'Zh<k7=
%NE33M+LNTnr;%M=n%QKJhORqXrODb$lB7P+nVZ*!+1pbc;2r,dooJiK=1A")ZnKb>r-3_!48nDAT2/`sIf;!%f@P4r[i0<dj/]5i
%V(G0AHM7$HICst-_f%<2rd8k[j7VMh.j"_DnPB-tNSE69dE4:*>k,;HP`E1+H2;=:^QtFKkpUFRf_N=4kTCVf\bc&E=+C8+m`SNH
%\3L#miZaH[nbn6Hhu1;HMK>;JVO4+VOXkhPnbVPM0=UBm24huLl/[nLDm-<n[p)Hp(Y=ujg<&!5J*%Z!^:aLFl2sWWh=X8H.oAIo
%1Qnug07UREc]S;O?i5.kqrbTkRh>\&gG3*R*e1P6Qm9PJOEO9)5ZBKH\*#jtF7'tFTGQu;K`11/'#lTmhgPOmp32C%r8o*ihn:TS
%lG>0q%jh?uAH-TEJ&[a%s7#"4<fs;*F8Er*dki*Dn`pVDcTfc]]"NJ]S=>kP$e#T\orA`=pY3$t&!t4FQbr0?>lD_2jJNMNHRAUP
%*.EWmTA,*mVl*_`*.Bu)Vp=8#F7PPc=dt+qC*DM>#cJL?WeGD3Tq-'?lB!Ctr7j2J^29gWD5`3(n.X>I:JpNO'MVA!n`9<VFY5<9
%o\q%tDLQSV$5XN,8<=UO"XARI:XN.64%IQc$e7KYI\IbE;JP;2Lr)s;!E&X6Zn"561$HJMHim7@M6;M7dPZit:So.^TGVbOWpitA
%5W+XXT;ZgNJMJ5l7UA&+]G+E*V_f.RK`FDGYS6ej]FL3-Oaj;6)Y"JHaZp3pngk:kr]i?fW$<mqOiF%+5Of0cMB(Pe7NP"nM/&[q
%5@lN;>_KY>!FVoY0_-\b3cotJn/g,5H-.)"?3js""Z:i^II"+/(&`nK+AcV`"EJRW>TSMer'WE)FjMOaOiI0Q3ZsNQX-DpD'(uV?
%O`V=N'cN?!7UAJPKL.&CNid8-n.XXdA76N(Y61Ql$2UTtn>1Kr5b?06N4_h`O_bn^@?>SN_>cofbNtQRe6HX)R:j[D1(Qe$FUf*W
%jQ8n"FQSq;<aM-?!)C[3DI-G>kUO^^=ZVkGo/uP-r6D<_cMs2!*gPXRc[5IoI`jrj^91@5I`oJCja6eTs&,$K.2hcBruE3)U[hXg
%SXddqnlu)jo<U5%._k*&q71l+^ZF?`s0A6:(uhHPYC+r?nf'D<rm\+fBBsSX&^TIi`S#X!^Q&tmS_%FPj(tP]nQ\_cq-t/#e)T7m
%I&0=cS5qJ?LC8RkYK?5jjaZe?+K5*0,*;`6:_it"IpKFHO4+`@b7u<GOdgEYT\V)l)FHX4O/n.:e[Y+!Btq/Cn'ak*[JkG0"`7;(
%Y\oCOTM#GS'>N-.h(93b;G"JK%)p\?QFq8;_J&!_UeHoQ(e.6h%,I[/SltT"M<cA1ijj#4^4QF*@Op(;+Ol:m]&b+b;J8H/Os/$<
%)WK%r(t@YeYK$2SNO\-WqLsLKM$tr6(J]KSBti,mC`S2Q\-r7PUh&FN#FY9lWYF/U+c64F?V5J!]_9m57,^$kA.HuTF-T(V%&Su*
%7mcKU\K=TkR53f:q8D@5bc#+Pd<Qc[_<D$42ZGo0bW8%0jpDKs!l';4*kJ\GH,elmSd1GYa7Nj%rRr&dUU*)RB2bC[(BAJq]]Js.
%k$;Si4\GQa5%TO`Hj\q3?C7\Kr5?Zt6(ZQeiI#J2O6`qlOo0'*RD1_&BB.%fa_#d64S"b0&RC_k9\j^[GUr^MDPH)&ogsljbdg:8
%fN""0B:+So!J&!gR't-'j5C+=(i'@_39.t'>)6f36p/Zj$(;doCM=9`7E<7K\!6%OKUQOWf:(%-09ZfVeh%d8H*%BWFMa%[A!HRl
%`u0pdo.[M8S"Is)k4s$qG;8:>nu%(4.g\=Wa,,n;\b_0*!,,UqAS_#k9*6E2p%tJ02(Jm'flWpD@u;n4@Vnul8s_.2+@Hp09G^!@
%RIrXkF*YVT;u]rKc&Ar^8dBTLj])U=%2CZJIrgJRrP"BDAk?Pg-)!nU^+X7X[V%J05V)l"ERBJ6E+-#nker?--cW;`T'1usT2=62
%]1BT-BC[/A60s:rf(ZN43(oE5/&HsQ'*VAD9.&sM.k@B@[Q3bTr[sA:[-dmfPna'tTmJ7uP2qHa@C_an3pPVH\r=jYh+Ufo;gff]
%i`Lot6F"b]75^LI3EOJnk#rO2AM)f1#]4Id<!q*5Q)rGIl`d=&Z8qKcZdrHaUK,k^`Q%(0;m`3"(arn>s6BOU/Y"3acdTKF\@pag
%A*(o2]Bd)to@*8aT7).\iT$!&55XZHceS6jh`fnF\9e2CpA=0Vh%j=HIt.:_=7F\O56#kW\!u2QebJk/rRL6&Y4(f9h+HqdDl)gc
%qYK$/n)"`Pf5E=Ws8M:Is.\\[hn6RNoC:tTl`:&1rSuH,LEGqJ^;%=/qtfV;QhP^5YJ:,4m[F$e^A@98lS$P-ZX9PI'Ms;Wp\h_m
%J,!Co\Z1+@8)JckdLWObDVnd7s5EY$%KH:omeZ>$lOW`VDm+%2n,GkJ^$gJDj1DADDsokp?bLshDE"cRl[O3WmcpAlI_U7.rl<2@
%`/`b_^\N,(Is(YN-i+H^IsZ\>\#\8%0CN7r2M^p.lb@mipZ#&[chk3/?/<0*I<S?/j78Z6s6e.np$LRjf0B3*it#5#YOC0#9+Bdm
%^:AUn["th@8?[NUrqN'gIXM1l_r'q>IjCo)]=WRkiJ7<2/,OMck2V5tf/FdqF)nIpm-P`1J*u^Ke_><"f-D6;mqtc+6KmS&rL8l"
%N)<2lphq6-n#6cqr8I5C4+WM%hs]]EH%!p-5[>B<`8bShO+k?h7f>%IG^Xu=qD=u:qOF%i53Kr8bB_Y9gtM^5CAhI(r4]3&H`M5e
%iJ6$7@XutQ(Xh4LC%+RAi![Bc$YstXnbU/8+0U0?rPeYLaM_GMTYF%X^Jp3m@]fVu*rbtj]6f^,X8<j!fPdtN^V1DtQV,S8ebW0/
%?WnhDb`9lIf5Hlo=47"=HG:qhWN.ObpJ,J:P?RE)&FZ^G'sZe"!8^<?42pHeC2fN?=M)'2rr!iEKGbl.ksp<sZ,,Uu[J<B8Ipcmd
%UrBN$qt%A.S(E/dk0NK\hH^"spEpTLm"f:CF+4#K%e6.JmCoQp03p!gYHOFnYFDQO;?-7fo87l@?)E&<No/]AHhHQoI_<fuDhe#r
%U$sAur<#il5Q/[LdPkN>J#%l"G^oJXa5>d'GPCC/?ZYPhQ^8eCfUZ92g3EXe>qV>E4)%$XT>18I/NgUlpZ$1`kjm'o,SYpg(Z55X
%eXI*!4r9Hu^Adoq_prh>q@XkCqqEcA"jQq*msj!gq<m\):sBaG,K'<Ore%TR`;m0c,67B*QeV?#,qWsj9n*$!h4%:AKBEI&J[Wl*
%9<0;I5(_EN119u2IMm+?kjRBa^83/-pk<d52a8K-]_hP\b9'T?RMSuKkMUi5p"eI&9f9@aH@Gb[=4_X\?BoO]+[s-BT9o::5)VEc
%h0aQnrU0VYiCR$YIm9j3MsJR`$6B+<^V@\TB?eljbM15;*Bu5o=>PAN8_U>r<a8\:?(j2mc1p&N5-?]Zmc:gZnW3EHeS[VLDYIpI
%KNE)9?P/*43@)7=6lJ/T:>W:-q1$*SN9o)9rg^6[jn.Pc50*<Kk_!_OUedZ08fphN8"YK!1OUTt\2jPZdHC/PBBQ2U-i?!%cUONp
%T?*WiT9VU35E7o8I:iIPkL1:nJSs,bI*/(F=.c%Sd-$c[)h/KK`+^(`ZdQnca73g$cci!f)\2k;o7sr*obm^mIjb.Sk0K>XM*E_E
%6N4(^j7C=Qc[l]#Lu3:HRHi,?Km[3Tp(,C?1o32aoPr!N22)`C8fMUU:C-S11$iA=2R;g1\+sms_A9VfD;4T(63r/LkM*uGF?CWu
%a6qS%YHL,O%`]0AZ/Z9WI3Rj5fRIlrd:YXG:>C[j=\f*Ii^l2a:6+#JInGY_5Ik/AB>WO<?(`pBdKY`BYRt5;Qr@Y94lR]+FCtM5
%i\rh=i!uX1`ZoTB$pLEuUlhH-`Q0Yod[h`%e(@"l,0L+"j-V+r6Z^7&7'aa/"mLW'6/!H(O?Q2YU_-K2l(i_G9<,3sL06q.4F\t?
%a?X"&pqM+KX)Cb;0Ap8(E+W9#2u.0Y_A&n)D::60m$-SnS?P9FAsqKAkB.8USC>-qa7BUun/9Vs6$qF5=VeLAAR30Rcf!S_[cM`o
%+aK`_02Y!j]@ed]3U]ub>]e))mb")7r6VU4.%L5%([o$2Wt4iZ55EGFHP1dj[54C-([JHRla"*e.]r"Tf!qT">EA#i6DJ]n1CIHV
%_Anm"cqRV0#VhEgKe49SoE.faRPX-Nb:1`L@<[h6`\dsW+[qR&GT9:QGQs].g]cT5!@(%#+jMRa&8;D-`#=4J3W-7hGXK8BG^c3g
%R%NtP:+Y`CG6kj.obe'!`#aL@d>.3=NijGp'KG&s.b!;qP!DqHP6',5'*;+LK.So/0J,h_o@2D<jM_c8;Zr<FS7P5<$Dn.W$`4:Y
%N(t6a)GD)DS7@D9Z0"%+$$=J`-^/4U7GrD?l!t.&87XbuXD1LH;Ot'r,0;,g2t>tWl/c$DaV5,amUVdN7+8,Y`X5YARnbr7E]i;C
%.pSKaosCbIhQs+$9fS\k3q7=?jlrWTU+=D)Y:.H(Q:,%J4Kfh_Y8^S":3i\gG`<!A2E5"V-=."_$Cn?_:W/pIg>9/rT38LmZR.nF
%m@@?`YH44eMkP:>M,1$+?H4mEM2!b3OEqi%Knc&C,V%)rS#8*Ca!;X]KI)`4GS6^(`+^Dfc\^\[2"J[4IYgHIOB?fAdtIpJ,&Wq"
%W19#m*0Z<oN[4%D7,QHM=D1<#Oi&q2r[/tH)pO+.dqklFk%Nc!E?`]"e+fMtS/mg#-^q2hVQHa&][0%n*/X^Y,R((kNQ3k'&l&6g
%e)-?5=@aT/1e-XR.AnGra#%]Ic/h2/_NR#`8?GQBNoqZ^V^0g51qO#`;F,k5OXHF$OD:4t[*M>+:.b/?Bb&!E(.b!A;JQZ>[tuBi
%SE07*k/T4$dmT'IO@&T8(`-)3:^@k>^9Q&49I.'..Li1O#rnncNeIF"Y;IRtcMA=q(ciL;=S+:(Z05ZE`hJMo,E#;tXdo&>Ffr=O
%b]Ip.SOl%Ym9JsidEnnc)\#N#3ajVrl=e_rVP@9]T62&uW1Pf3Q$ud$/@tXVoQ&O*c89Rag/p2:C16*E)!3IAk<+74##ac?<LI?^
%kViE*5tCnWriH"u=em]1a_>1W^k[[KWdsmjG1A%"aU*mJ1%Q"Z__+sKDd^D4kWjBka.2-C6]>-/0#ZK(0fim.Jl"b72ARkM=6*4a
%=i@tGJdsL(1s1n-[Q@XQcG[G+_1Urg/3/gr0X*YoRog4<QFA<$j4m2dPaA[gbh"4SCcu->^gAd*+%5QHQ27.OmF>rPXJAaTc(GR"
%N6]SR;Qm*.<Q1u$FkPgj7E_]sf>SD0,r]-d,HmajYG[Ba#=C[`q-_a"`[gRN<koZXdui1b-t4qN=aV#da>4@t"fpa+[K''*3M3Ne
%E6L4,@Po0/<<orV4F^lCOLUI%+lXj._Fkg%,3Nd-S;I3jQHBNg/B=jIn^2j65&=JdhupK5jQ#XfWmB+Ak.T)?51ur^i\M,[g=8nf
%EOBW7FkU]e;4OM6$:t$kk+Urcn'MSbK]S?NN[C4?]0o(?D:\]k3k:=Le??Kg*7=+e)XfmY/*V+UUjP93P>;qA_oLPqn6%TuFq$qu
%KDa#;83^9LHa2c*&Le+&S&:@!EGdg_W/gM41OXHTnV*csr[r'^T:sNO=n)RW:B#h#rRW-oY-)uH5@(T7#+PLmK[Ysn^&<F`@/jeh
%R0?X80AZ]MY5<g1re8UFR/2Zaq\(mScdegE/Un6DL,Y%DpVA(tM"d\9IIJ#UnTrQXC:t\-k>=>_`SV8PF/GN=p2aatL\NiBo0nfq
%*f^p,DX^[7gFVl/7,D#dpUh+V>5*9ob3Yl9q^d"=81_#/S;,XB?DbI1ZQ(%h\&Zk[5peH.Pl"4:OisLWVB7Xk8c$Z]nYoF=;u^4Y
%npa/HfgrqdfaNCZ5oR(9osI?8)u:J^,6HC62H@#L1ts"+_#._,MHaWuNLrg):sA*YkQr+u1k0o'DY,cp98Vea4B_Up0k7??%A%1\
%CW-F=-Y1Z-36kN,?A#0(c>OsmX#sMd,?D2k4dC2SVfBpDOo\!m^UEc(:Fj^d4jOWsV#GC]H[0]*G5$D;g2.>Ne>S`qpQ\=h45$Mq
%qu9pmn`<,$Y4`1t'C@#KKe7e!'9m^u&pKF#q768TfP*jmc,t6BT>n`0HCm>>/+<6X/*"S&Tjq-FlA7]7&&JK#B2R"Ams+LC+%I`N
%l,4Mj.-o%MO]?SjTiT.GAKOHDh6^E]6U16%:uP3<'"l#B,'-:Is+fT<HLAQDd18=$W5kb1\@mrA5&9`reL/LpHApBDDR7ZoI89@2
%7$5dck?NCCnkhehHK8Q_q;\cAbk!$mAm^u$b9AV(M3mmpr@c4XM)i]*/,#W5O7:YT6We_M.c!ORMqk>F(0OWt<>hWQLQ&r\Pb.F6
%5J>+X-088OlLAF;Q\RbOZ?aN(?]OA<4n;AdV<kD_eB`htW5jhio)Nf,ld`(48ZMLVC6m(MZdu]F<mI)7eZmW!lIhnI<SOOfX`SI[
%ba%$bh4(f*Bk<obXhhBKC>tJ+ZcAr(:U:#obd?rOpj'2tTd`]>R>;Of:bcFO18YO;V+_)N5IU>r><cro_A450l[^qnX3LZ3kJ.aP
%<I-N0otI=b24eRU;mWCU][WLE]'&OGB(;';iRT8$F85j3f]Z0nT&FU;R#^0E-ZWsoHR_4')ja_I]Nhp.UnJ]D-kN#,=_rAL`'NHn
%c.7l\fYt]HcROO/@i-3)BZ?6aV<bdVM0_"V!5BlJHPcAiims%$NPKTbMh*rC8Zi)e5NaoP@l!PO)*Uh5qIE<e:7n[>I4c*Zr2152
%ISHkQ9Vrr:ahXd!<h'!4X.Kjs"G4_EE_I8epsblPYB1e=ki^[,IocMD2Tu'O/GHh\SkYU"kG7s=oUMEme1OO.iF,*')43JNSuFM&
%F=cfh<YISK!$V5+;Ib)e_qWCQ\!IFW#W._0kWL35%.2b9nple^).qOm9TdU3VB/6>E+]/Pk&527[Uq01][W\p^#tC&>8t5ogoZRl
%f$N5P,"Q/m6WYSLb`4IL[>A+IqCfd?rQd;[*uslJ1,ugm2Cd^m5(bh_ICB!i#lnNuo8jH\[6Ui#>(+1!;,#N6=ZY9nmi.mYiL(@t
%7bde"7u^5G^b5V-c+R[tMTp?'0`PkiYVuTT*K&/UPYJ_*RtFKRL@&4aR"r@hfGfRQ3E7"s:$Me`4dNV)O3aa#B7'(u4Sm_qq]bLq
%^*-+La:mE51X^$eCm7UkV34ftfR>#9k'q$tN_K),kKm`$D&JPDXOU)N8L;',>?j&'/b#I+c=m1pbiYUbm52H%_JES(o^J8n$nliF
%cZq(fEm!qZO6JB[l]s=@3:i@$%//Ar[3K-XZQ^(_d:B4G--<)&lOTm0AVjgLk>@Z"2p;/_fNo#nBBs\u@WsIMZht]+ZWWmeltN4B
%+d$cWP-s\;BJ.f#o:sj-@uU<HBQd,D_Xm%chdQ16gXDb9RJE=V<r\7=rlbQORcFG>LNaiCrjuG%#<TTo:Ae8o/(NR-oAJ:X;@O*B
%WI9)#V\[\9=&aQmh+Omd,8'+R"Sf_7p_a/2\9L1hhN%s3JOdJtiSAnLP@P`$7.0J\GPDVUDn\U5Hh`id(Th,hP^gN%n>gIkC2TK9
%jo+dHo)53Emsh1^^[M*gO1W1+YA*b)(!?RP/#L)GoVO+\4mtR)=UV>\bLJi7mu<6C"cG$S4Eu^3AVZcS1&GfS+T$(Tmjhs1#l-ho
%'6eqUAUV10KUW>g<;h3/gmlc\f-?^iCKn:k9lLD#2]oT_(\7#Tj?a"@h:rchYds+)r*UYr]ORTeA&X-p_Zaq7UrB?m+]',4ki]*&
%j!LmZ[;3s3a;n#KbG\[snAN?l9U<,+NT(gm(o;oq:Y+W@g"N/1E^>ON`H>u8aA7U^>Dt/'%!^$o"s[\N=H9+OD-7C[i07Y(a>H(2
%qC598Tu(3!I3BgO3dGHI44sH$KX"\?,D2lq[4gW0,_dYB^9C'L92nj@_qpTUL/kdciJL6,;lE(6YY#9B"@T!XEEWR*dW'+@PpNHh
%M2KeZar<eZEQU&ePkD6g<[sjo#r`Ail/C]);0tX+C(Y4X>0JJ;"fH+,.Rq>/1Rr)=U,D^sHIJT,UD@a`Vc.2'Z\TPOO3.>s]+&l0
%8<83]cl>h;WPN9s@O#%"AIVBZV:EYMMI+3!<lL#prGWVoY*Z[-_Rt$>e:=NoWPN:2QU`iJ\DfV+GR[CMm82!To@_&%&"PhjH>KD3
%#+B5$7;I0p5+<I\<1][sJMfEH'\9bHNloIg7l1*If(tGAMTIq7_WD*JXeCmqBqoBEV31ZD"K,t-h8I<Vi&n>9,mN;%(?*?%)/,=u
%!d`4.>)&D,P<7S?AqZ=/U:o$knEANqTRlY6DrrWF\.YCq!+E*A97el2<;Llio;#gAW3(gaj^+:$2k&,Q:Tgi0Zq%7CI;!T+aTc1u
%no1t7W:4KE/Itf;)]js>mHNT+G.8kL2Mn*Edh`&sX5rndQ9Y@,>!s;VNNCjuiH9=R+D5d9bn\RAC8+"GiL)dn[&#mK#:Ak8[?&mh
%l"Q@SYW:L3nZ].I+Ru+q\dU<=*a:\5=\n")40R\eKD+5j22;Jm,N1[,hVWPLCY6NdPcE&*&EX2!iSl\!`ZEqFm%a6?=.dStB70SY
%G)EpNqFSF#E-Zs5e*cP:r?NcRm+ZDa88Eul[l=FF6i@4"im>gZ!17]2I%d=2lhRD1eD>=13hTc`G4GC,?S6/c-N'S?%+jWELe2iq
%<,oXtjL/XAZb>i-k/%%H#/%8jD)C,s9_f,J'1?QNSc(YU"`;'b1-3[2\opT-O'>)6&6U2`Y-Ro!3DS>s>'(3F7s'TFl1pLn>YI1,
%V1;Vf&Umc<d#O#Sn-WpDE("c*J9cA"el=45r[DY>eP8WX]I#5%1GGFl@%Gh;YQuQZ[G#:<jfUP2.kFg%-uQ(0]LUhdnH`MC>=\c.
%:-B'9_Du?qY:G3%;2L-"DFsr]@nIN&;80,V;9_-Dc,m2XQD6]]`qu9^,-=Lj]1<ga7DmIoD)A+Xr-F%CQ'"H,n3X&g)U__#O(*4&
%Mj#qH_'r\I$&^[(6sL6//@<H_jFXJ*Gp7,<TY*uHX=*:F6g)Umi(9;'g216,c[udA,&<+K7*JJH@3`d;SBdPNP\H//7YOf[+t@8:
%V(`KWkSn96Zt.V5_U]]QN,I(4M55ps=bDt_Ak6^ZL-rdM7WOQ]67N[QgosX_#X?bl2n8rq?Er6/c&4Rm1<ls%qer'>g.WuOO]I<,
%gt3A^PK@&TKt@*<5ZioS3O'+M:''U6"gKA!g9T)Dn6'F\DN@.H<&)ZA)6*3Ar%:jcBdl048`kj%MdNiqVl,\kl8V'j*%$;01l3/V
%\Tl#Z?VMGqW/][r7`rWL^_"+TPNM*J>m@f9bm!PkRqU'=[4[jt4AJ!@Q7\jtAjK%r$j4$TW(Yr71C4_?->mb4>KlbsllD`V\X:cJ
%et]b%1kMO8D:7[q'38cnLbhhG>*d:?E1(;D+XSprf',QfT(a2$)ThX:FDB,G8=2hM<*>l*L`WWSmrL&ng-F+#V9+I>VX>V8gP--]
%>e!$$-'1d#DU]7B9c-#Lf?o9'+X[,#@E1&5_cE?-HUQCfMo9Q]6(ugJYL-4L'oruq0K[]X,[.2JBJsZ`:N74978m@-@Ru^?8B?FK
%/n08BC\YhQ('lR;&!4M3K2MbF[6S])Z,kYI;I\NMP@c+P@o^Vt>VWaA(V?ej\&>G7L6;++>eG7,;cXK)=Et/CMM-!&FH@<[CI/Bs
%[Q%9L1CilYdH@_ZR?H[,J#(O6/H]QAF"hDn:$g<"-6U')NJLhUoG?/g[)>%pFJUULhX"pDo/'.i>1#GUCR5gS-0Zsip,HlfLhT;^
%Hbp-7=R&I]Gu7gJ*U'^Okl;o$]%S\'M7`(CRM8"X%B;Ia^8KZU,ZrXAHWgYc@9F`HRoZ@CFi3K6o8csdR4h<i$&kH&Y:=D7ZPdg7
%:9)g"XH4%c\nX]:r_P?[4fLKpUT@XcBZ<`&jdrBE>.-%k`HOi`R?M@C$'md?:5c7b7,F6&Q5id\VC]c'U,e-c&@t?_VLS\Zl=fgA
%.Vo/U;]K^nUj\M8SZQ`JNN'Re1$CrY7:_*9+_<O-Z8Al)!#TOYML83%-/27sY_CHI6Ae,T*h9kESB1h2Oeq.hO.Lt5Oi\j8'/nX0
%!@_;RgHd3,IL7O'`Cqt;`q(/A\L!Z[6L'O>$YZp#KU-3U:56&h9Uj:r2;;;2&#>SNd?A77iaN^?md8D'e*b1Wi3g[DC40!DAS&BI
%NEjnc#hB!j#&j`YK9>CCY8@bu:5PmV'dj8P-;A-JIT$0-k*_N3:aBQ)nH)-O^*4sVZZJOb]J&=NQ5^Z,c50OO;?/fp=4l6T="A;h
%45^Ld'Xm"\g2+F7Dcr1.U4F8Bn:i6nGr,>2/sF`?D)9V('IHinN-g0,m&c&..&V(BYa%$i5j_.C>P&,]h2(qIUrc#UF>d>qYQN@E
%8l]E_mP`^>PL]%kX/X)KJN,su_ub.X%3c"H](%[A=R%TugF<dbUMlpP/F9WVrE?FPVM0cgo?IOUggn.X(7HonoE'c:D69oa"ka9^
%)qSP&P9E\R9tZia>o'lRYtD[-2^TPZQ'$ZPP#aJSA.mJ[7j'?:_#qn2?OS>$ZP>!#0I)`qni2gO,J,-u$tY6'`fddpJdm(CD]Wd-
%10%tn[!7\3-B"1Y,9*nR<XtFC0(Y88EI_HoA/0BC"'0H-L7Y&qe0I^17EgM29s+sr#5Um!r6dp:i>=e&AhhP"'b;qE^Nc"k@LA/J
%;8p-RAI<L9$@26AG_MFToNEp46idV=%/*CeLYH;[7$P6XgKVOcLR!D%/Z`"*&6)1HX3.7JHV<":;r1ZY0TLBJ\Dc.l9J#RtB7A5X
%`mBZ`lr@KobX@,RF]hk\/=+rI`^OMB6)-k&n@ga(C+@$%R\5VdBQBTEGH4p`mampDJ[G[C!R,6'W]1Ri<`l"ob(!Y,Brf>3A5^aX
%]A/VeBki1AA9b:\[Qd028)bfZdVq5l:fJb1[/%'!ioSfM<5scnc&@9(ljA%pYBU1X<kUqdKQWOiMUMT*6SkDm@`)Uo!abL\R[(?P
%=\JBZpldN;g(%9HBVXr#^W:]JN=cc3H((f[T5653C*"/#K>uI_&?Kmb'jOcSBM3,#Yh;;t*u+mF3aq'+`H9$D`Fr/9/k"NJ45!%6
%7Xi_o/F*q3@*CrU%-Rts%*t@?&2\/8Cq#m=Rk6qY>-lL>$or5.@-:SMZp7r*fYXb!".kl,k*K*_4tW&7J7jY$qn#m/'SJ]pI$icS
%)E5LSVMtp5PE7UMD'aH<@oKc[VpMEGB=N>'^>TSU^>J8uLOsOQ`khr!R0VQmZEqN-8lY*l2i;YVV.E5K$+L,C$)TPG;V"@B[A$_D
%3@sPmXGWr,NJ!F)`E%$>[tLfF>GWf,8Z!$?as2>P(dqSW*;gst'-l,KH&o7c.r^/7P4MB4((S5>,[)FW/Muf80g4l/McUn<hjQ.X
%bS(WNBp/Ebfl"-)*lUaI`F^k(Z-$WZQL/IDf;.D=/raW>@-828@39FYPu,6$QX_Hk^;Kqd:0d"!:l'NPS#I"6RHl"r#7/K=Z$@_5
%-Lmq_G?2Hd=d9J4%)J@UI"=dEOA*H<Bl4&WNHe)!*G?r6HTSG;_Q.FX!PgU<Bi[41bRjAs"b`m&ZNf>6U^%mZ.m%K*BbT&[SsAU'
%K3&]/44I>:.Td-gLWBf!.)X7p+s2_%MY;g3XH?ucJCFlK.d0:LAmidp@H4k4<sfF4L^:2J8B8,YRs3]S<4aVBr7Ei-LcsKLq*OB]
%LeC]+'c`#_EQ&L5^>U3ajGL'P)6T"*6Y'cM9/CELBqWrUVJ6dJ4Cib3b'mM[[Z+@f9d2K#8rGV=WiVCFIUpJm&Wm/kcXSeGUP>hN
%PJtgUB+[Yq)\EF&H\Jlb*:)6A@<X<h\dlP+DQ0$?=5-sQU`C^4=<XBf?r@1:OgqX:H<fG2[(n5scf*;Z^!;*Yh#r@3FD#@AZ^]Z'
%rHO<+7W`*OM:%QN=nU8J'U+<uYY6u2=g<$T^!'^BMA$KJF:#53+KKk+Td[1+Z3+V`@:-djVHb-,fX"t6JK&Tc\f$$rQq^$o@^:tg
%$9<VlD:PAF<[!-E[&_@'"ukrWh`$NY9RA37ne*XD+@s)>d^EeB`K#D<g"s*hj8BB?A+-7Y/p[1U@q1u`[#VFZ"D,ad9'k(kFe.1e
%ru!R"k.Fb.0Vm1M*=[dIM*I*%&)570ggW;j7'oN$^jp:M9l#?hL8d5QC,_-V7gttpil)'jHULs9<7?2:(2Oh8Ag#;<=##fmdtC"i
%"8=3*8?FGKdtJQYCU/rmPXB4-^'rP,`")K7Z?s$K!82IL2P+Q&@NZG?=\';8%7Cr<A*jAb<\f6bXYGJ9SkT\ik2KBM4m9KH*;0Wl
%FM')j->!3Ci:%VdFX8*]PB`1<+hK"//Wl;RD8h:SAcj6?adWr'M=VOPhCYU!&S/gR``hEbg7]!<(^j9q`Nb=MEE!SQ&M!P!ZA"8Y
%V:AI6,kL^J[<\rl%,t3$n<M9WI>"0D'bMd(T=ds0c(Sc>KK%,-J0T=q2C1DrfLnIKO_SpaU("LmXT?CQ8anSim!qW=XJ[0I(q@n9
%ekcrjbHeBq<#f1JO?bS\QtGl)WrO?G8gC"_"r]m+RO25A]WBr!Z-P<.*C5B*"H9h++Y/>;>aoqNlmLDu(8?0t6%u_8mKkt4R9_[]
%:Ig;0AHBVW$eqOQnrZuZ8l?0GdKYM+#fE$D7>_+I=7GV!ZO.O3S6/&7!H9N_?ja?@fGk'#fR&J_XY=Z*F2_$<A!8H5]?BI[:(*tK
%*"Ee+P%f59*V_<+P'IBHm[ITkZU(u7-PSYh3,ZKEY9^*Q'CfBKjAJ$YBS+.b3rQ%0kjij2?)"bi$P?!h[r[V56F)Aia,U;jNaT#g
%OM0X]EJe=#QLc#.j[K<+m53b;!@nqhX6Ln&>VQnN'C^nA>Qn:KFT2EW=-@q9F$7=4'Ng?'<iH.Nq2O;K8pM:+lsWZr]ZY&<lqpf>
%`ls4qJ//mbHr;POP_6mY>JU/9Kb)KPB.o?\Z<:."K72Z,m>k4dq*eR`f]&@Q*ODdf2X4a7,<l=*/m/n2:e6Y'"uJn*$OJs_:k2je
%;"0s!Y>?5:Ail9<`/8m-T6Rn6d,'Aj53*//Jih(S4,+W>DU*f850ju>S-97s/DcoEE"9_e4A2p'E.j(ar[EMt-Wb8OGR@,<B+(3d
%AE1MWoW#_7<"de!>W!i,!,ceH-,<r$X*7?M9g?l7g=KiLK\_Yld/cF>SlTTW+E0]CLAdZ("iqIq*?+F3cjF3N%@R994k6]:>SoMa
%WC'!jWBlH/.>"4#d'Xa<nJ/3r`#]oK/hl"A(upN3:$dj$hJCjlXeV^h\N%\Cd,j=8=(h1mI;E5tEFa]U6f#^SKVR7?$>=*V:dBC9
%kKnUiH\?7O+n9<6#_O7>WqBhH.W`$^iHC]<;5<K9LJL+uWX"P,Id#s05LL3eJDD##i=\jbhB>L3$T>;I(Eo)Ti<;MR!q2t2/X+&%
%1nl!d9BFhV`k@-T?M+lEHXL8X`9(<-'fiN%Jn7S/RG9oif=W+_WrO"L=R3*K_D'S&\#6.d&-FSfEo7B:<&cRLEeh:m@B42O/nS/s
%I)*0_7dPSdId:O^080\V^jD/8;@YE?"AkX7K1HSerse<pMh`S=$BP_To*ZP&'b`q,&BRm-%5'*NqQ.MaStJGo!u$8Q=CVtaI`a*#
%Qmu5,,Nc\nlq,fE,U'7tRn4eW:t<adCHIq);hFVcj)-YG@\Z(bJ76NWZWX8<76=b)N("qlB#eCSc$KK:aX`S"97iSqFjl>k[uk-$
%[,!os>^Z'(;;hs"4'!JWc<8fQMtkO/1L<e]"d*"SU,aq'ZEKb1,\3'I.6D<gZQ\ZjBtb?cDn3s8Q6JYWA@%+q[cs#HmL%^em)3ih
%/^'&SaEkT82R5u6bY9X,<W5T`gIpT3gG-4h>-WWr0/B#nAuR@f':Mn>WE!OG%KZB3A<=D?f1oir,.&[8-8F9&<8u\9?D(r_Z<>H3
%Z>?omn*)l$Yo#u>/\0lGbJN8s6aZeb()G?oX$u'SXH8aW297&^<I'^0;P4+Y-RVhG+C:41HhfX9RE"fKS`N`^<]ab#OcFrCL^aCU
%.T=tkl;="N4CQQ?)U8MgZ@j#S-j?f\#luWT1j$Q8H>ggg7:;3>A3%Lt?U2C;8NR]V7OGp*CLbpf_/e%V2R@+tdXr?>:ro_3F.F9*
%O`Q=P+Eg&JIu77cE0.S!>,nr<=sH"B(bV^9Bp_q'R`7'^.DlW'/"q^A>4^4+.!UpL3*1Ghphl0m88?hT%<@^F-Gg[>F-5@26[NJr
%/?-MUg0c!7PMgDn:JK)hk@Ti$*60#?2Y30N#5bBtA>:=D[*:bqT^?(V.;sTqqpcsa_B9n1T?]togJ:&qeS[&?'`([%TJm1U=9RXc
%#?I=F\jp1?FVED)%P!dRr?P@0musQ^2-HmD3_Db./p!A8\u&m_.UMbSQ\p[.@??C.@j:7eUX!isAY\\BGDO[LiKHMn>oW9`4+1</
%L^1B7P*XmV4BMq%nnDSTfO`3kZjh>_fiQos4g:K2[ct[NdjXY#HS-/q?/UA/m+])fq:Hq_TEPPA&]j9P@NWB4b^Js_d^*o88/(s[
%4:$2@g@,@"RCD-Lr.CADZ:9`OQb?/k&J/JKmY=&XX:occ0p"t)&%WlS8)m7,bdrdW\+#9kkLXNgg%@c&g'o[I>hDh24'WO6i_6i!
%V:>[*]ADOV1@=OMfk1>^>AnOp4q#a*E^BM7S%Chjc\6A\Wi4\9Ooh)=DPmlQO@,ef<d."3,SH@-]e4,Fc6I*`]9)!#YIfcP]9#,l
%/^81"X`fXjZe]3TjO9rjr:P^`A;!X>e)"7O35,U&)`%Up^qS@M%RJrDDhtKDA;T5bB\K4>Q3\63-Eo3n5cB45D%Z,;=N`SA#a>He
%0Qkr;8(V/f,k9==g*9PAEi]]_W(`M5efqp_I*X(+Fgp8\,hU0\OOY3pPFNGiXV.&e^,&Do:@ED+[7_VTm)O#QPE)dJ`5Em?)5jLc
%*5I]K;$`9iSVm2oe%d1TmZc=W3,<bk,aO0n'p#Mc(nU3l'9BUq3r;$e.`a9`bd%P9F-`=FjC,1S?C=/:U19*3"j7s6IgIjE(^_d/
%67tu2.)9$7%ZqJ#:,bAm#(NtbKf.f.Vtt"h4Yh+=(Q6`R-T+F+E131p9@/Y4oI6E5i=caE<hE00EO\cm:'m.q7s\8(:3"?lK'`Y1
%J_0Q#*YoaCB/rXYbs1p>Ei/;AV%$]8Le<1:$S_pC.Aj]s3q2]oQ+ig4_r<QXnKa<I08C%uGS7TF.fK]?ETSH3'@&B*esn.CI+"r]
%"a6Jqb?`(7jRaek)NpZ5R+,,0;`/5N/**cnp'%P3^hP;[6rMZXKTV:ank$<Vo-_WY"s=k!Ue=&N,E>IMOV/]!_!*nK$)g/or]4Pi
%B.URB<ZfnrOIs=4iKs-R]RaM_6X^SbOPmY-IDK1`#HM(ArbCK]OnB>[,Y'!0o3d</``Nf1FlodW&BciZ2MZugO>^2b%r0D@ma!B"
%E`BSF/AO#"g0N_hWQt(dn-Y]34rL^I>sVT+Qm3VcPr5:E#<i3ak9qpjK!Pa5b)o%AZu$<ha0`npEqSf^@hi+F/XI)OOcog#SV1"?
%HHT?`.^^Y&"BB-0(&L#3<05]g<Q7s)g'b7mEZCkCPQuda8^UMnJYP<<m&B-_@4Y'$0Z=VMJ$@HBaOm#0[F(dqB>)-:JpXnV_aNXp
%<ilB5;9?96#^V?Qi$=Bu>*Zr'3mA>Z.Kb,#ZXHjD^dg-F^/u,i;NJ?QM^9J.l1B\re/NP8e1(?r0(]QfUFm\1YrW]Q&6,#_<Y_7Y
%Kg6eM7Ih]LMN,%"YI\14GhN_a`%k@+M[4LuP,^fW?V2,F"S;1D=%NQ88Dn:u74mK^"l-k3+ko;jjKd-B*\X3TC=q_P@M\*%a<$ou
%O<#+[,OFVT?n1)>G?Q;pE(Of"+uP@4YHW#Z7@@g&_guZn]-KY`aHs5SaEY*0CJ9m`%e==(XEAegPnY7oPA6p6J,r`;BYJ4/R3S63
%)4/2T(Ah6pDcR:*1SYLobHL5'4(MB.ZT*Xn\@R^[QkE+\7-a-K/j_q0:8r2Pl=IeW/\#>1_VG^4,23QJP7M>1#2^s97J)jE,G?CF
%b=\Ltqcf)#`DEIt@MeJ9-$:;H\Al<?7U&G>BurA#5R;7panC^M[i6],8b0gN,O,anD)*"!WmAomG0AX&+:!n&0M2t%oMsr]g]\;B
%N1'!YRml2eaea_**;5IGSC=qemEJ9>;FHO>/=`4BpPZ<1bk)Si+r5-(@<9\]7X!.1\,i3C2K'ABopd9FVCI=Wfnff;35:VUHb^h[
%$ZTGu6i8utiAD'+AFl>-0*(kL*ZnTqi!f/r(:@]jB8tJrF.?:SIcO`J!WsO$*NA8%3C#.j3"SgBYZ,o-Y]"2;&.*M@6'*Q2jYiTK
%3Woa\G4Jq`9W5<HpDB.tBAi/,LZ=O<%EFb>LO[p`nnl2h"GMaI@qH5oHOEE;CE;/5F!:dRWC\+)4[Fio"\sC'FG$29WBf;`?Ug>2
%WF0?s+5eSW0uIEeEekD\'+5d9_;5IN?7$FY%)l6D3"9;*T`GnhDOO\clpTorQAGdH#WS;1Pt;<qg!@90M+(4c!FgWG!-!J2:R,%t
%CkIpcX2I>7L46/@!_KH6#=CO`3J=#q$oks\<AccQ)20CQffXAZ:AW91d3+.EKU]V6?BL%U;?<(,?AXZH8OZG$+]:&XXB>Za32>U_
%'@-F9>L#FR`[i4ugu/#a$TSO*3(;RA=`VssPhg-cX%fb?_<!/9M$f9;OcDgLf8^;\6k-&*UDOt?,+R!#=KHT*Yp8)5l7h6>4bq+t
%/<4WY$)OUp&]F5u\R`NGS,G"Mc=N!3Pg=5`WTFAiLZ!OfAatCT+V]J_4$ZP;-9e;3o%meY`f8_jKkT7QZ$JS7D98KqZc$?P=M@;N
%+`cP.SFo90+K7kL!+*e,k&Yh0(iL%`m6VNs7NO@m(VIIRdl,Ph;AjK>G159AcZ)=B2DdK6Q5;<UE$S2T*1(@^)r.Q\`U%RGG@HNn
%\]T/eEM1k4g$V!h#KVV>C5mcA-@mlDq!eFQ.]Wac4Ihp,7]GdD#[ek2S.AFl`A'@4LbTP"X5$A,,7LW`@#Zs&a9<t>/3/8rj49^E
%-27TZc_j,H;paG?/]XSQN8kp=#H8*':]'/_hTb0,\s($;ltH_OLGAZQY\hDgm'IV!;r46BeY*V_9ld4'W:S^D#r-qDe\f#A"[@\`
%[:AaC_l:HVq,H$Q*6&YMI$)=*\N%YZM7JK*m*U'.XRI+;.!KY798AhV[PE?\C'XWec+HU4nm"MH0#qDZ&l!'mbiJBT1TuGFo(WKO
%?"I?96h-\XqCj?G=!8H@%q<%hltg1X!D<<"=]TLFar-)I]!5e,_Lp>Fb\u;"2Y6ffZAS<(hi]_1PZ0$2?Y*L<KT*74CJiNQq5t8j
%@#\$-O:b_4i_;Mmi\9GX9aK]l<Z4*ZNj#.sr;a75LST:hCI_`5]r,@t<M&QG6P:fD]r!Sn/STtWWj<cDff2Lb7Q]Z5E]E"k27/5-
%2e)[uQ=3iA5N`%ipSk6J2K<\[RBJ0o)4PZ2P*RYq,"30.WRbPQ9CR.75C0U3AR/I#X[RqnQo'I_8H\>dX*HJ\[Te2("BY\ug%=E%
%&K[?:0Qm/F*EpEq>%hqQPVj.&B9KSg66tsX"\.M<Ce<)X*eM]CUJ&8IAQ4f+;5KYdi<taODTnNYao+o3>E\;tdREl2VCGf.'cYJC
%(tdurT(u&B;Z*M=o-G?R,Ol=n"+t`"-+dZ=B>aM^#E%Hq1'L>CZG-ZJ4g>'+W%N8H&9AJ*ShC'OKn=]A-g7+lkl`PNP&lD26E]=D
%S:4k0V`L$cf.b9Z</gHE#'BN]enL2X_^3B@-.++(%1DA95&[am;RF4R&I44&B!9mJn?]H4<E<\Lol)_6<Zg.=faL<HU0Zi5"V>ld
%2:`[4I;B:hlBX54+\<H#ON!WlLr$CtldItW4["R&1-%^mmj3!,))(p3#8G#&l<638q^>_:(+^M'_6U)]8!gYdh+EC_"U<6Vhi"Z7
%<1)ghG&O[F/!(%c"EuO[Ps.C[Z_j&S=T@<<a69K!Clb5*Ldu!!7TmAZ8"rNZJmPnc_1i`R&T[/p'Z,UFST*G/#I%MW*FZ'l%H\n2
%,Lj^?A00/2neGfW@Rs#11JM#mHk2(;c-hJ#*!g-1%_/:r!8.?WYVL$XPbX1Fd=Ahi(c&B/jE-)XL_^+:"efBB&.F`sY6_FEK[=&$
%_ifQ^6':c/gQ*bPh1:>a#0C85a21?4N0&orG17Ka(\$N>El2-a2bj1Ao!*DJe3VNIblf"joBM,:BKgW#=(e=k$'0F.pjhX5@OR@W
%fPnn:;<RS76^PkU2)?>@^u:GhoZFX+CYaeN;]2^V%VEpFO36Fa!`dB+>mH0Ve9c8q]i`doNVT4i^c5iG`okeF/?3#EJcnW\EirA(
%Qm\e^@BhJ>,qN:Log,K;Jk^3kn`eRqmkOp7*6#]GWGkYM!5e]O4M:*Pa!k%jcF-]c^ds#67OpHY?G\,&d6b9=i)H>m]"fb6Qmarj
%>.-gt&dnm;V3QBgVC2WUcJ+]8-QK]&ZkVh9dn"c(KM"N_bHncrTA[T@EXWk+@''/1G/'FM<0s^#S>!DZY!$KSfI!hUZ$>lZB.4S(
%^bilU]M#=SKkZ.3KJ/)u;FWHB\Nf!o$kqDt;"foJb.!="3L=4iYuu[b*8VmeTG%F!RbOIN'3HR:#]*t9,k92c&*[hRU)0n,]^qg]
%BT^=!2qoJ;93g:"dJ":6TB+S!V.>'rrX>c5XMr`G.:0kNXIRJm`>lJMK<%uqLITt;C7E"=I(1j8MmF&,e!tee?Tl8GEINC,WkuBH
%Rm"\_1^gH6XPujdGMQL0*-fNh\#<cter3S.mrR%W-^Wo'6'<aqYS4/)Z7A#&$]X68R>q0A<Uu[+abtOW2cbA3NYA+(8UU"nHS$W%
%QraP="+bUd'jkan%M9(T9_gRS"9WbKE0Q`nSqqR;-;kgDGDiY3emo"lK"RmbX/6DhA8"W3BNGL+HuCiVQM"aN=9WFTjUlOsJNL84
%s0-qp&JFT4:$FRnd/b\PAJJmXH9`eWT5U<pH@1>47U%)\#D[EDm:<^3JG0ANS5n-<^6$iG3Qa%KODE&VKM8O"2lq1!C1_"tQNVm=
%e[@qLX#\oR*SB%^S;jpom62o[eXTKmWN<KZ>mG)$,T]+?D+RH#>U7HnBg<&j!t%=H=I3N)[Y]o&o,eIOikU,K,fq&D90!BGnf@9o
%FZ:J`U*S1tf3I!k"l(`MO_e*k*o>u'9:h]?b<KXQbVO6Z`<4t[p5lG-,F,I'_"l9[>'*(d[="7=Ke7\rQf+'*.%r1R%Yn,c)RoKZ
%ABl-_9WR+RS03(fZk@U6A[aHt0NeGs![N/q&pc6a$b(ss^LeKA]CJZ=.BS:Y/STur"qGm^$RXeB_4ilb3Q\`s?Cs$G#jrVHp-,Rc
%)6Fr^*(F%1M;Y6j:'_45;sIs60g!)i-#cCQ9616+c`\$Uguj"jK!/YBHneeg`'?Yn=C&JREQ.aDEqs<?f`RB<n<0miA.dF_:T#KF
%TQ3`Ojh+tb6P389JgkcAgd1>u3BfX%Dg1F*8lWNf-If?gSG3T0JiVK7QddcGFh*:(g,#"CUQ(6dkO:FZja4?TUc%)D_EAUSXY*ep
%A[N,J3apiU[/oZ+WGjJ*NNgr*_e#sdqU_4O9sdA\Eoga_bZY,7O.590(&?*_X4$$5eeuhu>O>*nSIq=n4?Zs\W=09Nck&X+bpiJa
%!nLIdCU*153Wn,o@Rmr01U)?Z2r;)QpSjM6?J$8&SUgqieK!WX:QbHQil7Jt:?H\\>E=^Fenq[q>ZM_-U"g[<;0J&<a;5e0^dE#k
%fn,ag.*7=ugr#D.N%ga#E,l(FF:ujT6bJI5UNb7V(!$kk/*5l=4Xn8`d'shllXb3?#tK97XY!VHXZW&NI]YqnbY6%_"\Tm"l$5fm
%UjUBMa@2igdu`&MNIN9G%OITkQ@9nA5YO27_H3q&XT4:8mbMpZ(-iQdF)`Sud8I[ZWkt9ip/'3J$tHqkT/J]7:6PhMibn#e3^a0k
%OGA7kYRspL"!8S1c>Q3`9&7-"iSa>#$bmtQ3nGWh8Boh*2-Ka7-B81GS"8;@B/X#Re=>mJhF14"9N;;5]&\[3?`M<?EU#(Z0g(8H
%A9DO$GhGWE(6@\DH9`;IIpHU0%dGHLm8ZFENSDP9Fdl@lLpmGK[0b6tP-b?>_'IF>(ondCR&MLA9>>I-A8r7WXDS84')a)bJ&QHc
%XXj@9.0=Ze)R2+@F\g^W4-+au2-.'*;JS;C(RO'+],)G.]*WhhV=J1&Cr*>CSZ?-R>M_p!hPtu+$u`Y/E3.k(A9Q:9*8`Am\qU&[
%(68AiA_TN*'g]sinXq`u"Q>]IAl$bUiW*m2D`DgtJ^Q.%*"t[k4cnRrOlDBSd]I\$a;;lC_j8LT7jl/mn2XY:;omN>4//%H$ZU1G
%l\LI+'oN?XmIEnRe5F2Aje^;VZmRhdLnIu;[pO4[*Fq%Oq6%!,eh;N@2S!3R+=G"NFA5=:@`%[lUP0q?)lKPJLFW_bM@+EiYKj:#
%^A/dnQ^@GHiIoY!GIdV9oeBj/bNHWVNQ,h"r197&XdSk*1!&;<\'fA_4_-JO4B-RpibQ02f'M"kF"Q#H`tj]=dKXZ'-#WR1nJo]@
%EY'h<Ab8WD@Mg^GidP"po7-6e!Ch-%%5;0!Kt>6FR:f*]%J@CJm)+FObP(g6H2AN&%PoJP.52jfJm%0"02CAc_oJXtXp@AZphU*L
%aV&f&KElm2,Sl#Gek8S>Fo)HGFl_TSTjVfZ.sMl9aPHO*>fs"9caWG(`2,4b.n6_TF9H2<mmE2->0uI^I*f1kq%i]>L6K;[!\SB#
%-i!ILW-K!:IB\*Yj]8&EjQ6heI'J\Zahm1m[;.Mm(@baOnP[TV7F$_\&`^0NGM1@$g9K;j?LOQY<P0(#0jhL-Q?$8O:ZEV8Js0!?
%:-R2EW5;mC%@KP`i]3tMpE)#eW-AecidN)XoFQ#YWOu34CiPa[qie3!S[_5#LakkU!u,BfS>Pu#QJ8o?Q8]sd<-QQQ`MCY'g6;,Y
%>Q?Gf];-hoPT+ItZUY>*0aWPKhCtfVitWN=+;f,OUoac%_NM*/jG"B\X!nbf].6f),,nW>G``X:p_[mkcg[X\gncW4i!qO6dop<6
%p>d2;!)(&WMS4O3%kYmrDDq3U<LI#p^1@S1aA!33iT(EfD=H75D`=7^q$p>$A`[qMS8F^kWjge311Vb-B>C>PWWW'IRWpTc8L%#%
%V4?&!BA63m)pd4'QYcQ08(e!]J2;M!p1<sJrE*aXf3+ioXcVh0S0or,WKcP0$!0-r[[[\Y/,.8\jst\McJZ*(WGlETkBsh\Wk&]i
%`Z+eq3Mi^ZV=Y^)i<omO)22U2cr8L$``)'0I+CtT0NC&[iOf^(i*Cn(Pu#kF]]eLeJ'.LEgre_$?E)HIi`]I<apO!?DHFCU*NW)R
%15'ZohtQ+8YiH;H/N[ql/)?]/bcd$_5ZjCMY]/aoWmBo[GIAgNH^6..?.<i#9eKpO'"?#SX=]sML6GJs.U1fL[LYk\J5q0>DHX/m
%Xi_JR6ui#\A43=8S,<%e&`@kpE5\*dQEBJI/r6>u/rP<mkp3]VU;8:WBU-#aNh/S9=0D*uHo*.\.V.f8q,dX3ok*6.8IM`nGOCO@
%'epc+dU"R9/8\sP/:H(YhiqB^b29Ul+Jb9#hb+m'P5?q7@E#ZU>GS9\heKR[d)MA=NOVfCTBGYu:gV/\.f$4\ha5a\>0+I\PI6%M
%erUT:;Q9%o*C0HR:Nh!r/!$tNinOoEV'049L^T>B#oY!PkO5Ee"Au;^\kZK<an/ahA<Y>#M&iBo6W/"uV7%%%J0au*b&83i't%*+
%"B!,$TbKC4h5?buY2?cOKZ9,m;,umCBcq+7/S%8O'Al+H/L3V0(KNA3-Tt1X=sVSdm:;Ds_Je^+hDc1CEL*"*ndU(&U[iL*r[-An
%4Qi_:I4#ILD5;lEW-/fO(6X-u7Z<@->.RIp!@6&l=iQS?k4J)mWmE!j`92sineF8NcR/TCas0\BX5plfHj`Lb8RXdsAY$aL;QM#j
%3i,a/aZ=tE>uhW_LG`+BCP@&Vi?he`F3Os[Q[J2.IM^i!"EmeEn"bN1NO4e&`B&hrUtA!HFL75"3q3;Co"M?P>[NP/<QN(`B!pRg
%YcV&Ppj-c.XC/,mlT0#;,]+f\H!%/3fKlOXf$Gk2g.qPGP.lTPSS*Z1WfRf]g)&qNjB:RkiOF?gAR?LE8pr&r,]+f\q-=!OajNIY
%>"F7j@M%9hjoH_FgJrWL9<'8j$DRkM*$#<1/6R)iNJ-l8a;5>D_F%U/C-1r;,]0?2/;2SGl6)oAP+n_:euk3Z!%G[XFVT&d[q]mJ
%;B?Z=]`<NX/R(;8hY(a$)enKAii&mEFk"45G$MW@Ub:tHSN;"!@-qJ3>ICm-BH=mpf@+c,85lT\0;XCXB4&WSUF@f).Sb:=eQh!o
%CZ/DX.<UNQG3!soY%KVejZ3m:Nr/mKO?Vi/SFQt\ZTP8I=[\L8'!U>PGN$W4M*c[)UQu0HF&4]nMYisP:p$]3MkdCr[d6:c3iEoZ
%Wu1RllY3K&c$]3(>3k^YON/s62b0tf.=Q2e4>4U'pSVJh<gDB6jqa+<P/=;PXcqC'WqElqUQq.JP@X`nd;8`p4kD/AIUP3ZGcFC2
%9ngmB:&`l1[8Nje_DcEP[3dQr$Z9$,=^!dXJRbWLQ*p'ih1tTm)GL':Ad!&+1'I"cLO&"6iQMVO?4iF*C.$*;UUc9J]5S3!BiC;!
%*6bidjqc6I_o\ijQ+\gDi7Rpmm2]T^?8>e$npmBd0B1qeOQ5f9f$FnH;(ce<XA[^:-8a)N=n\+T1+]7H>i/aQPOEE(8O9=TlFVoM
%d-R=gZ<:KPm8]$DiCm2DV_"j4VJIec8QM_"Iaf,,4):Nn;_&W;;`\.VTIq87N1O%>pH%VSXneWIZZbOiV<l7\;k!8D0_*_f5dY7m
%e!$P[^q6VThbsX))HnS:1TITE%l(F&1LaN>m.D%s&G+(ao")mYRFXCB<[pXeVr"'l:qXNd4VnAZ?5M%ig3ug,6u-J4Jop6llQL-t
%`5YO%i1>;d",M6j].>-GPZ75>;F)4&?En[iEWRY8<J;4L$(:B6l=t`C9+0,c>,`WM\lsE99+B8[dqWd(-T?Q(2g".S>T2nn6:NtX
%[&53cd[KgX;/R1j=YEDU93YOB,F^`o$`o6LeBqN2/A8OoX=Wh@>Rm=qm/f4p.;)K&Enr'ti)#>qqRJpFGb``@ol"-<lc6KmXIYYt
%P"+]Wp[EP404SS$f"Rc!!)C4<Z?t7S%qntaQ[du@9&9X>ifc:T-PaC,g2&RAQ'tIJn#gQ(KmYhOFg?.O[L/1kP7&m_\W`V^C7+\,
%m]tEuP,_K)'?F\eh\T;#r!l#l;/Hu.\X-U+\Q\>]MCgr+-`&!T-ENuh_[?o97B<H>Fd*+"ng0ORG8P+&G?r@?C>>$r::]`4k*m[,
%7d]W8FV@q[gZtehBC3&_Vkn)tCCb@Ni!ERjX[5.jrhfe04Lt-Lp,(<X=]LnfcMZKV`?c&4[PbSUd43]+?;Ih[BFV(#00rJ&_C;Zd
%8Zg#__I88NebYlc!2Al"6VYNo?^e0Kn4(+(:jhh'I5QV?1[9$=f6?:ZGh0#O8cE[_GfLSW0>pp-O>"Of[D""QJ=(Q@PO;6t/&!VM
%o6]25ZRZ7V[-=0lZJm8']ND$/DJEk99FB&B[Z7YEDU<,KhGD@[$u,%)UTI_8eZc/_IpA6Bgc(]Lm6BRC!_Mcmq'tZ4X_k,Ef0p-=
%gZ5Y7:@XTE[MI.h_o\iJQ+??mhM3?1mR85I0s+?BrS$S=rTA^]3\(hc=DOHBdo(%dUDBH0ZVp<">">iQ(L),%/ZlJR*VK%^d6-Z6
%b/'gA^3%Ke4F(B*P[d0+HetkiK6,E[@QC79FlYT.g<N;hNp9()(:N_`)P3X&Wc]?ToJOp[X8j/OMj:9J7De!3S37ju5-LJ.&knqI
%g!Y$%)`ZOuQPF.+mUU%j1sVDGMH8uQ=SLcFj<nMg;sd#U$JEM9L"#Cqb0JB\B$XNF6=iBl?gC=$-aAB$NMJ7T4foCL6)pKRL5o;,
%>pj=d8L-?0O!.=^l.&@*+eQ.Kq$]3B,b\+tpMARX2n9O8G/l)/Y*7@%P"):0?^YMsp^WI*+UL3+;W#S[,gAK6/W9ssjW7N4_"NSf
%!QUdDQ(rkfqW7;B2n;q;CJV+oqd+XX93PIAMlbZuDUo<Kg;(i:=f&f<p0m'j31iW1Fg.o!'r)Z2]Y*Pb/NV(F8p.e)PG*8_0UKbc
%lY(%l=Z\(WiMt>Rd_fjP&;F4cXm9XA^lpIEcLABM5jLbn$TlfNij3T>E?uMRS`uVKanNLD(7)D768f[_RsAaWc'@7%#aJ"f0C&V(
%?$ai=o6fH0[hibE@cV-=nqZ!)LZQmdnttbJlYsrbh5`s!b1K\[4.A:0f$oT/A_C(3/UKaL#,ksC($E<7T$gg'2gJgN_TL_On#DW@
%!grX]:Rm9(o@3TKSJG`JbST<)C8pYM[IC8gQ:_duFl[mo^4E1q<Rn[@[K4&0'^-b:iH#Y;Zf4PD=-4#+U;5b^;6/1IW@6peRu7)k
%[6Ujn'jK`KG;enUSNEd%S^gA[IJ&h*>$a?p9<(q7W`$RfF'1=>URm!=@lCU;rL,UJ;lXs\boJo`B;L!fF6P+Gn7nRj5te71I7HGK
%L%LaR(Ql(8_lnbcZ\^Tf0^SS.9";;l5;-LXPNXKsPe'Uf$V;:OTk"hu::@-U[+-q/kZ!i$:::2!lt"0lqmG9kQU9@DHb#W_B-5*o
%!W0l,!Xj>JV3:.*E@iGQ,_\Mt6?=NJK+o5B9LbpZC-1qf8@nVY,GoO1[]C1K(BcW.UrVZk2<=7tI^]ah,dFB!G2c[rg.2StB1b7R
%4%OE%8^YpX^?`]J+GhA!JWmGjA40p@SYU6G3(`XtnCgGPf<1<[i4>us),]^1lQFa7%mri;Ks$X/TTbUg8dh9NW,jmiBhl4+Z9;_)
%"`VL5Rh^ac2CC%k+hU3c2q@Y)2j2#tGIL=V&#tZH(Q>A/9g=!#<>(i]ZCs91=UJ.GH.U1>#*H5@?WUUV=l.e5V5<KgBd%18/_%[W
%dY[94\T[BH3i,a/M&S_.SG'ss^1dodK(jY9PM^>Jo#k?=FS*0r&KEl:lUlRQqmLiOa9YrsEsHDs+UL3?YbFF(e><6lS\L)q7g?]*
%g#fIQEc<9.H$Km,h`:43N*68>FY:gBE2?IabM'h]<`[9X%$YYl%b=n$15'\Ed.\.WYV[A&I&8Fb!u=&+AYknc_!+hA.L5hPC>lgi
%<o=%q,JP:rY1E;&GL3^bQ$T(^Y4NBSE3TU[=D>1>n#3.%&E_o;SF)"jYQcpm%\5WrG%`4i747A8HQ>!5g+\;ZVjEG?YY+,s.Y<se
%Wt93e*"BP#g^5>PZ&i:W$H=^%%'.7\%GEf_Z8O-%.T9F73a,a4ekSm00b`qfmGYGWN1sn66JkWW^rrNdo>\<fY#e5:3%cQ^36`Uc
%fkb\'qO`5;X6k&Z^pA2^l89QZ*VgbJn)+LU<mC@Zq#NV4B1k^:W_'Bd"_1eTOj0)[4u(/-BRt#beNgBS>t7g$ce:si?>"'pD*>NY
%WR]A$C3/:[4Fm0sMHZ=)I'*:j?85f^LD!H$Hug=RDk"@+9AZVcADskPI]kQb6+*Rjb]aCnSS`^M[g&k+=&nTKlY3Jq4o/h`<OtY"
%.#A`)bMg,ZT>q[OnokDYW)lM?q7[[&_U;Ic.#A_j:$Q+d8O3M'X46gJ%UdE"B-6]qGS[Y_I0&"5Xa@T=H`NVFhje!+<Md-ffL""U
%=ssj\m:>W-23%f.7k:F=P;Ie8j.#L\JdlBro2`B^6V.#i?6R(j$FbfQk9ZHXjgPLpQ245o8D6TBjWp%5i]9W5Kd>kqV:9XN#*:+?
%PB.dTm4bLHH0sS??[8Ib:U)eG=C^_MiK](lcml/'-Yj)])egJq[SB^*WSZ2D3i,a/8Jj]*C+TTDQ;CU^-?1FCO"PgSF1$tIEp1u8
%oW?8B(H!1LPKQja6Wke9Kp-72)&9,+pKc#?E1#"e]_^ubINSUHI<0l7p<1Vi+0P$MF2>uKp[<!@dI27nrla]rjiu?1>qXgT^NoM*
%TQ!D!7&D+*L]0Nta0_?-=nR:D8\Y3<rV`p!qY-Q<rGhS`s#'3#^-_W[J&P<se(7BiUX-pUXT(ub=40<`nMgK-@ElD?!V$?nU4L?Z
%b'<IDjPUKeNM@cXHtF@b$I&=c0'oM,ILC=joZLYiqi`LW?KuuW4IcO"%cuVc;Kg<QIcm%[3eZVieZj?B3-J\9s,q6K,U^0Eg!$X0
%[^Q$T0hmG,\BP7qZn6/P6n$CI?Q(P-\@G;\d`*$U74eGm?aur+Gk6h[nM&6P+rh/NRBMfV2S>lN2TKkI*j8)*6sT:7![\nsF"^/h
%/eopeW^KD64lLp+YD'm.B+g=)>*2)IXI9:)Mm22gIVk+ReZYB&q5Z8HgLf<FU#EZ$c"2cu2QkEpKqk;co8>s*0[;jPF%g;amJ(q(
%'YcE8]7ZYs`(g6[B8n`JIgrbV/K/Tk!b%#+l1Zc*X?"bE0\T+u&5Euf?qLe+[%VM=-DZ%4XNp5(5U?:Qa&W>9^7@jc=nKuG_mbs=
%_sQS&K%iT(Hq[CR$.laT..SHGhkQdHV"n4l$2K/WP5q*r/:S/Z7kG0pHZC\Ip,u?)S+\<=r7$gY]m.M;k8L5`f?>65RX(fJ1M`uQ
%Rdg_dT8&[%(#$>t'GPJ7;(*L*fhYZ`BenX<76OIEoqtDMRYJZ[buG.,IEs1W[36\G%10G^Ub^K/\SY3X;L*+=YAK1AY;re*okA/$
%?_Q9`7mZ\-(PUjWSGdOC6Ze"8T5LnKU\]&):Ib&UT3D,Ujgqa\+ST=kjhD`21RD\E:#"sbWA3g_3bmD3>Ogu][r:'`1.=hT=(i-2
%c]$/o0+,\93;_s/6Ze"8T.1F:eUJ)$aiOH\iNVdR[?<<)1_"14C)'p24)J3/EGaJ[o1X@tB!44uE-%GA<A+sq#Y.2Njqia2@@[:<
%RmV:Ng7S"E[Q;T=")Tg!5;aElhd^FX60d-8b(%q7B.afYc5PtIX)'nf_qA@SfuD3b1cAYm1OQ(N`bPWLC4Bh`DLNb=*Q6-n`Vrh>
%i&:\hH;XW$:`gqZ;l.=Ea4<l*Lm-??,h*a=(jF]B.,Wag1Y!H`^/N?8it\^\%5$TjZj6;;/JZ#;'G'6jV[H"`9K5pI&%KNcr2C<k
%VP.t-<Fh6Xe<6J*;F[1XUmctjSPtJ/D-K+i[;fi.UXX6(a_qpW's9_p/a"Xk#PMd^*5<=)&**$&ir@O&s3dO'/K!TQJMnBKT;a\3
%=lE@-dd5LPb'u:gB.d-E3]E@1C(*0WGGAA88_cSGnlK>QjYF0so"F=Co"ab=W8.;[co[2]5E!uh-%c,dCsaY\%91Eij@l\pWVEN"
%Pd*\i8VMZ]cme+I[PcZ5D9ZY#=\E0QqQ3k;:o2Bp2/-8k*a"o>7/S7U4,frD03U/2kM=Y-:G,T+`Y>%`4gF]d,6W)JM+rsSf!ho<
%2RLh#()l)83Z6Pno%J0_?)I`GhdsX_;\<g5TX@qI%;oj9[I7nCR]AZ#C8b-",*ujs6egm-%<o=:@bZ./C4m"/IcgFFV4lST*,DlO
%.:iC[LtVO1?)05UEG9*hHRWa2[ahQSZaQ;e-oEgtZl>I+VqA4:h[7W:H/G((^[2@#HYCs63ef2-[AY"H*CFEX/G7.ohWWU<_.2NO
%1:qO)X/#B$os4Pknr@!g7C2AQ[q89KT!Y>jftMC,U<-@X?F0"!DY9cB%F+`,1s/\MfIl#qmEqGGH8I*#Q`8+^6f#5@F8PB/Q'Ac=
%WS*d<1=JrD=i8hDe@606hs%F=WgsHO9i(*V.Um7Mi#7kkE'm:"I<Vec;A[I):g<Zl<0F]?Y>_3ZCbHMAOpfts&Cn9I1n3Ii)O48P
%d$eSDmTPm?WJX>9F03ZE9%(.:_:C*Xe8K)8/ni!n-0<8+W$M%E:@2B(^ACqWl!D3=R?OYHHEU0>;H/f>-t;KZM9QgVbZUuHDfH7f
%8N"b)]Ym8ceI&[\ftPL--"X+-d*Q#Jo:hCaj1R<,ldr+98OZbmBR[BMPmt>pGKlRuhACV9278mrFrf;hB?aH2HG4&Wdp1J.fr`c$
%WO<F];Ic(8CeE62RU\b.9J9t]TcmCMRPF1J6IE3uf35^YQ[u]p>,bA&]"JF[\HV)]R8GiT[b$j$dn'UC^SY%A.F-MsX2_1(X_mI"
%Z*^W9_6q/.bsQ70/LVE]59UogNKV-5Dg(Hoi]$kY#I=.7del025^ZFT=P`.7.EL=W#?D55/X3-)pO/<+1>O:"mf]5u^;M[[B"/X.
%YBl=#rr@6Opc)rLHd[9/p:K%.U4)Dnadm."rQb,/BZ^5edb-f.]c1lT-&IE&7R9WXGa\FQn2(Y6&gI.::SPsHJhjkOGP=`[IV8TQ
%9=2I[pYcig6dtn/.T%ifAjZ7b;>As:H1cD@)W$dE-[sEd&7Hisb8S^0;\?*LZGKc-.5kl2Bo11lA]Z;QR^*&rdki("AfpsPNBM<9
%Ir4;:!R"G5]!%.sCfr`]%CC_.Zfegc@UXt)^e/\V;p#<\-81F\Ko4d;(L#,RX#![jbA\_MD$=H@o`3YG8N(_WVB(,>M60slH(rX/
%87Ynf+SB)WU9rfTfu*B\$aUZ6`!\eB]EYN77Nl5gCmdG\H9fRPLCpO@k#\e=kdOr8T4+MKVIuk?D=Vu,_gj7qRrKV_YD7]Q^74or
%c]d"WG_]7nf(.UsoncGkHID=_?FNBknOXq*QPnI!2F)\_^6(0fOfMT.1a`\m`a"eZW[6$JACre$8ni":HUE`AY(dkF>RfuP='I($
%[_*IHCrG)`[\e)@*_0sEZ*)jT1tQPJoW<.l)0bp<Z!$55heF1]#cK5HFr[h(C'Yn:G_hYDYON\`]:i-Hb,K9Z;mue%Kag)s\j=!,
%HXGa^QH`6Wjg(`gD*0AN>JFhUX+F2@DB>U!a;o,(ZZ2qa*`:/k@G85f[R7?><]!*PQqd9sUui`J-;C7qPn<bc.6L?7ffKsb>F1&i
%0':B4-DY*f<K`58UUh?H"um&G+6lLQOXJ34"8lIZWQbpO8MlXAVGX`n6_p`SL*DnY[SS6KA^Q$n,EfEN:&7]F%TThY?8q?;Y$'r;
%2._7?RV?hPb72nj[h4gA*pco.2[Bg,k>9\WbF7R*NmrSq6W5ejRb+'25cl;DPhJGm^2?+KO@CNSMo8`tjh_4j2BN\uB%K.*PuZEa
%*B+KaCrfdq?4XnTWBI-1)nND%95KArY7l%'?gFFuF0B._YEn_4i4H:-C8Rm"(YRGDF"q6AX$r9WT0G`g!/CTP6XAGt/W<ZnD-1M+
%2315>*+@Op39&K[p<Qml27sjme"Po(<S,U!a>LUO@f2$A22s[C$YL3BL9jo_F)f:h+]<`\"5Z4_A)/s#VUfYp0geYpesUfP2U/X!
%_mCR-6]-X$p>(Oi2\1*0W8FdY3(#j!$_-)m%V2JmTBA+2-.dtK=<0T6+?V5'_ia/Vf5(D^"KWPo2=PjkP,e[be*\`Wefo'k)HWDB
%5cO_fWOM<prb?AHG>kK?g<tF\fDCdSCu?pm`2hGh*Ge'Wc1?jpTIDQnnjJE4a5jKIa\3k;'UKP(-P-&OLIE!3JH)=7?M2$H[-8Ot
%%S+.ca*,9p]#$p#ZdEsfgNLM:fGfn_HhDP6+)&YIAhRcjVTd.Eqa7Jb)HI7dCdXiEaG]\X\*;"/nSn4bfOZQ`FH>B,T)$0jp7,:Y
%LK[Rpj)JW-O#@<^rQui/W@,A7,O`lrf:fOh_r^t5f]rYaQ0_(#m3W`4S[(hkC!0[8q@,bI9:k"`%!OjqmZ3t5edVL<_i;mLh7/r)
%,g;/EfeTO.A'sJ5PDujAC$;`<Gr^V^L.@dI:N*_^)mdp-:>$f1#[\&ib%$Xm`Wcl&Hi51#D3OAOAstREOc`?rZJ@uNnRL_QP8j5C
%`dVU+RS9rEA$O*J6cu^^M1hlAZgMpL'e]+_E"cr3HFGrjf06bJIbL_ARbpJ"]q6BB=<#Rc)?"aPVNL&1cptR::YW0bX7n@G\Fi%E
%[b]/j:PcZ=;<0n<AiJaU>[-.D\:kKt237n8@g:^)`S^QaDjnPu]?[W.MK9T+O89mLfhOIefrW'OaGEn11oT6P5a&PF"oIn%)!4.T
%_EM].)sNq!b-^^%UE1B/q;E2AB.N*F2Hn`u`p:)U/8RTGIFe0UP=aKI2Sb3kh+(jT\.+PRHCXnH4T&kTgh8t.BLM\\%iLK`)Nc]l
%O``K)lY&]_5$ouf@5&m61a;7!7+T21KSN#BN^b:S7O3p^,`G3gn+2VQfg[3lNCG1Q7O3s_V!mmY,I.bJA/gM!)N@9+N6(_>Lu>\5
%"/Rja[FS/k%J<cZCBZCV=[u(>$l%^"C`OtHob3SN3`;,LU^r67lUXU-n2X<:\ri<N,DA*.F<`[-*n6D>85Fu&8fSVL,<bjc5ma;P
%$)9dh7t\+-#,Ue['D/(>.7uhQM8MY=dZjW]&k@Qe7tVFDK+^Y+deEPM<On,hAJf.#@Gs7FQ(K`YgLsEld@d;_TVTu.oR.4VjZ:nW
%@AF`qL$MQ>mdi_e>8h3K_6_[NUTu`)QK]'iAK#:+#-uorUV\k9Q6Ubee<XO=/`TAV%L^0F>D<BjAK#:+L0ceW'/pho^<`-Zb;@Y5
%%Hqpk.-kPCqE@,0>DA9KN$H;$/.<b?\N_K^1am?#-t+q\@5KB\T.eTXBr!="ctP<bBf%5dT:_c._an"OO^]:GL68q"*u*1>BrEUf
%<Ai956Nu'8=ob!@icb:_;VLfUb@.AnnG0$7!\]MjKd"*O#]Ca"l[(5Q[Lp/h#VQYGV%LASf35=.a)ff;j/0)YqBUq&kh)F^CD>'6
%'[AZiJojr_\_T)5Ki-OEk,un[Rl,:!I4]\lE=b.r!9N2-HfttpJK&HsH_gVdL3+=V4ku\?>m=_fFF"5Wpp2,,cNC8NnEGAo2F+nC
%Z]^F,!Vg]RH_4Fcf'>SS7qGJCi>TQ+5FZ&mO^p\iM&gmQLVBcX[Qbf$hYY_,pXB#PToX'Sd:pPre+#=nF@5kQH8@DM7IBb/ORQ&d
%]m"]X&tT<U4=Y^3L!iM:r7N>XN$S>cNQ9E=1\<FZ')q-?pRC;7_On9]LYe0P7_FlQ:WM4#0aoB+B`iPB6J1UH+Q8rQHbW-h,WqjK
%fcd--V`2>lH(m$m:D`R+nTBYt)'d&IVmhG`On.b8pY26.c<DR3&G>#-G.<BD9pJLEh1W)M]iZ3_RbJDLi=9h1hiYbG)#@%j4ph(K
%';q>'JNp,j,&DnQK'q"jm\C*D,W-]/!ouh4g]3Rg#ZMdoMBbr+"=agF`J6^Dc0K%5gG3Qc_%@'Q#GGiGAi*\?0J]CY2]AiSK)fdG
%@"'pj_a6:#Z%p$IDDYsS1d&ZB2]B%ngpV)[Cjn3-_a6:%[fJa:#`f0B%L-WH(.JE#YWjn%"tkqUBNQ*@"8B$p/W9ldNlGa7(e+W%
%L^,@;#;2%VBNQ++"#g4Y;mH&#R!rk!.6>.4KoIUZmrP-HCM8/&bmhM"&\Pj0JYK7)`?DlJKGR,IqHc\GZ=2oQk3&,*6]Um=(6G/M
%dM,2#:%:/eHhQMZIZ*p,k'+3.']f#^nd@n_IW+Mggprg^28lq"Rt!WeP7.8_0m[LXTA)ta@8_/*<5@#A\(3*7WiuE;M8nmc?IT@s
%lKQst:ongPeg#T=Sb9Q6+d(%.Q*9c8,R+<=lF6?_P\%M.UjZVeiT[h#=6?%(J?0AGj)U7uGG9J"+SD!\Cg23\Mj/EQ<jSg%jB@G?
%hT]&A]18b2KsXHAjG`iT/VVOpiI*">/fr7V%CZYbjH'4,`pRP.6EV&aQDkEP[341YHWZ:fqqWEi[k<>%>)&dGb]@(D74!92Wsn-Z
%#YbC5jHNl$F'D#$X$GqDL,46(d_p#4:WR`eWCO<=j`#)ebb9,.2kBAeU7H0DFO:MQ(@&DVImfa80P&7t^60Y+j\ES"d^`H&*P!U]
%0bO7S4heh=3/FopEi:0*PXm?KRS%C1f/!Aq*\&nP:1a&tP-e>VIY2cM8Uh6igFVbC!FV9:SJ$@A%b[/<_\nn/IY+A=8DdBX3ppuO
%RSouaa3<ct.:u]_o@I#8]/o7IcU\0[SI^.F%bK)F*5p7]E-T4Ie4\Rk?)WQ7d8Nmti/HERDlN,>)0VEZB$iG_m;!T``s/cO["n-a
%*Z`1&<B<7FgJY:WTC=q:-f8)kXR2cAdmon.3n!JVl(`q:'2-e:1._6[fqQk(FE)2koTa`%H[>B;T1XSR2ICfY)S8KeLRL%$AO(?A
%_$gmD_qY*>WRk2aRmoH+lFuQhH\dZkq'&aM?\k^L>0]mS4k<%HD-El*.(5($a_IY<]<,LdM&6\<OKO<V0oq35?YL%oNg,kL3s1%5
%D7Ak=+Zeh[)%\=Bj/uFA5T)8RX^IGaQF668Vlu?0QNr5YXjEh&jSt.>RuqBQa4Zc=/Pl,piETU#-CJ&9A)>kegL?&N6+jC3\;B\a
%m#JeL2I%;m!I^L[e"3'GgG]5nPSC5LN@TR>&qHoeaOXg+>;nV2C:FP.&S%7:C1(SG)qc09'a=6&m'd]joL=4XO[8Tu'rRD%`gec)
%//p'AmAhs?;;'MSCEbQKBO17qC*RXV<,I=P*(L\(72?=1Af'20,Z;6f>ZfQq[O]jb;)kSFoQt*5BV?:a.!H1=+a]J07.!AYkQXpl
%WCOFql#=WlfLGDEbV3eO`qmr[?gSng1ZVD?8NYlgC3dT?lmmo-Ug6YGK_F@GP+saVOc_Jb;n_X1d6!KAE[/Z>5H']ClW<I\2LuQ7
%<`KU_D%/:&ZLeUNQbJX:5`\Zp^="("*B>c3PXZkn4PrSgG[i2ei2\#s@"p5t.qp@\I,h>+?R\?iF>!3NH?=ppnKP$uGrdgK1kY)m
%Y0'1MZ>0>M$)jBORQA6b6%aGiaXif1MaND7Y>R9:*h*soSK?OWU_fLq6]J*(W3]G$.^&ZW;_p&[Bc_[[N>0I$4^Fml(J:tMNXVG\
%8o::e3%+Pp*NGl#G`a$>#tn5NEfDAVhUcQkg$56=<'tM097'O%%;hZM;XN+bE;99%Hh`W`;<-tUVWFG;@hr3//D)bdX#cQo'')nD
%6YiL$A@PY$HY[M+8X=5\@VR'n%m(I7s-KoN%2W@eNL8EG7rZqb7/J(/P^OiFW\Tk5%Fi*iA`#U0:jo/Ufg<f=(#gV11&!@Z\kir:
%-)\Eeoljb70rga`]o)*Te:+b0#HP&X+DNaG>QYHrGaN8oC3?/AVE2uaOD;La]"XJ=<JPR@IFM>u6a%"1='qrEejsL7BfBcAdtL6V
%k7-o&lM>8fE>+Zu4G*S7hskn"dS3F--)h6D'WBL^Z7E*/mR"jIdgI5VeYC2LP[<j\kl9\koQ.t;%s:oq)Ilep@b/kKl?P59LI^`=
%i"Z0nVQ#=LP2(_WLDh6V[tE?).#JOH#<Y-_I\oC,_(N=:VVu26%hGW]m(rY'+fttJU;VUY$EZKE8r#+an`5FEr;K8rru"250C_h#
%9-"IOVD!hc^;r1aXF>#Rm,2RM-cE51(Sl\.oIt`(j5=)!hre^,T.,$^&eDlgb.V6EMrM6"o((<=@"Z>4iTcb!V4KW+#I3N%/B9*S
%cS-Gi^/40S]IqOYCSP<e;,$Ze0"PYOCbRh2o_]#(]4\7+cXP6GOn"S0nDm:<)$>:?nY<a5]@2!O?PN3\Oe]$]+kuM-97i\+'XW,A
%1ANIj4c8;fVSpq\^n3&4pCc*+6+amd7kY4r]u]SCYCI&h08W-34K.a3/)aVnH5+>RXG!L*rT=QX]u[n\i&JCu2YI40C9rRN(q_7*
%q!p\l+\[,C&ij:=T+on4O+=>\puY@r[pS",]D_6epA<bH2OF$_YklJBci3P]5>1S6jSn3:+07+W-H="a/G>Q7e*d"]B@H:@s8M;i
%O8,J6$oU9V-3qA9S)>1p=DuY$rQuMs+-cY>ReU:cm&KX&]CN1&bNPb7lK=l3Wh3Lgo`b:RZIb)^(6@%09eu\H`aG//B_>mm;"kR*
%S-^'-.SkGU3Qd\JU]uN0]m\[V@8&9iHCqQVQm7>[b.4)8]POqI&2H66kV%LpD(bPo-GO:+o24:0mNKknbE]uRj?d_?O[./oC0i">
%IlMfLk/4gCgWTJdG/$DtYAmQiMBVn0p\O1d,T5M.IXQ6Wr8u8ES$26D>b^Y)G5iR?s%iP(7,61Qi!s0.FX3s9H$GR`F:(@-6d0l,
%_F4h?Mpr*Wj]IhE16f!W(35]u,V;]jc\750PTJ8Ap*r-Bi`t[omC&_IBBPCA8jNX#YH)Zb=.#3.'+Fi%S%"?b-U>4]$<-)AT7`<j
%/&\!&g;-Bdd_\Q`3u%Z-"<im+b*&4S%9QLL-QVm1LFmR0Y-Z:4<^o#DEss>=MDs6V?(PXIp#lX7@o8&2cI=p7CZVp?3XK<M*b.%l
%:-f,=]$ao_bigq2g-9,cs,W+FB2o\BqJ=F\Q1o,I'63`iIBokXW#4o\,MPV-;(#hsUdls4cR+f^E5G6KQGpD'137E@Pg:e\H-k]-
%74aUeYum^odjBbigQ4O^/%*911f,7V7>?4R8i%t5FA'cC$Nk3T.pPgC#-,nA8*.ZP;>!e3$64.b+RU(Ur:5mJO1'7:[;B'L`81mo
%&,X=R$hbb4QcH++ojBS8NBonJ(fP6B^+mr$\O>DkGE7R2>3;2^Y&sl5&VtR=pR*7Qp<:UfZtP"&(;GaO@23/!C)57)KE%;LBjt1#
%!6lp5@=IVkI&^fuNd1?0NFp>#E1NNOa;CU25U_;fen[p>?84dPWs]`p_K=DhV,A@gKGUs]B`*:c'+&s@4anqZpXm@slIA'jb9<sp
%T)gnPj.t(NQZgCLWT%#E\(I^p?h\UO8&)4S)#04X]7LqbiN#*t*0lHOANTj+DqJmL9F^MC*K>d.s7C\VW:R^_<'J/h>Ltib`V/6I
%a2<sXf*3m]a4L>CKQE.)".8I?Hg=9c_'="iZ72o9P?geLGdos+*5];8L@B3[<X:btL],dT(q5n_Kb2FDZ]0mmr]\<uY38<M&IOc^
%1[^:XkBYtYCu>kbKkW^EeFnWYp>f^;rSU!P(fJ[r9<!/Ze:@Xln(rQkG00c6po)N4D4%&cLb_r%NJ(m2[22N7eOe`H*.ROBI93NL
%GRRV:MqdP04suc83O-k1!j2Q-Xq^'<)3h:<6%`F^o-5gXRK?6Qae/2!)dg*qKUh4Dhlai2]!f(rQ1,0Y+_$jT$J-ZD1CV9,XJVt9
%IuMaFc!VRIpU,$+5P!M5p[_m$io)eQep0ppa3_OPm2?!aKDh;D@7.O^6Aa#qT6o\13C9$u9SZ,5X#KlZKl"uYB7#%*8%9Z<#X[!P
%(uS6u4YJu=$LJGfT(-:CRYHO#oZCn4[W-;RGj3VdGbue@;G,9nJ+1c+gPIFW14T?"+IMM*eEQ_*2K2FY9HXj\V.h17[0@^ZYfU\j
%0WG#<m[CqtiqP?Gnu)'6ONk65_U#^@(R<_:$hR2R;D$$&_J/-7p>O_<KY9?sURFk9YLD&P7X,Vgj_:boS%sCgm]Q,ND>`,`i0WqG
%;s7DfZ8^\90lc@A55b4'8D8giXC>:1pHBSk7P6-^&Z3!1Rc1X)H0oK"iH1dlPA\KK1;0\.N-=(r+fqM9WqO[L>31&'qs=oSYZ&Qb
%3KhU>gS+LHZFhS*3$?Q/cjOd57m9H'V."7h#hPm2CR.H2p?n@2F=h-U4\N<iL9T,AGa':]A^APg4p*?")&fIlP769@eNt(AYg[]$
%GuJ]InugN61D[''1uWVO(".i`A%c<JRu)k3*g71/Y1^5s^N`d;`G7WR2Q:Ib4]AS(9?+1&&f/G2S=@8Oa0YC:Q4NGQ@h=-mg9.0A
%lXA.&_HM/1s/!c)>:Epg=,aZ]n:KD1F0^/>NBs-6As&A^e$55n8F?AbCmQ"tR4f?%NGmN8Zrlc-Ilm#CB(4&U^O<5VY5oHj0!Wcf
%c/=kh?Oqq]=@A2na%bGpKVVl@Sd1"@$6f)Mrk]Yhq.O-Mm+W$Folg/:\,Ms0J$Ta%gT`uth%kBD3)&srT(tV&^FX.PQcC.Ppo&e%
%:YlOI*1,D6Fl;lYNrmT/_VLZA0J$VF+DgpP&i%7B;DuUgPO6P'*_ctVrj\FH<6qpB=hL.+GRI#DM/LNkn()u*4W!&cNR1Diqa];X
%`^17/0td8oqlr4`R$c3WL,Jd/m*QKoKmc>`HlcP=#c%BT0^=I$O8,M><QjnA@N1d*>Sa*^]<j;b`GmQtq=X14U&B9VFNL.Biu<8.
%$adc^Hk)E])oZIFO69_0`o(7.0V!=H%H<9`HZhW&m9]RiQ5d^Zb<Na'QpV\@ZAJDNH<1$uBYM1BUcgpaX*F0CnNVp4ROk)oT@i5N
%^[Pk7(#oXIKH@7SQ[$6nY2R)Z?Yi2:Tl7Mqc_'S;&W!#gT>V",TrYU>'t0`eS)#F[9`*euI;N/cQY[qOFq*a+f:3s*YTN8r[W%&i
%A2bL,*Bo2#\<36Sc)!D;b'8#2m&k!JM/]pA5:to^4;k"801FOeO`qWKc`fE73ZDN!P_Z"p9sZt>q%):(`SG*hgF:%"=3HR$0d"jH
%K9k\:re=fN)>Bu@&-S[7qZtqs[:D@;`NYYV)&%'c@pHH8RnN<I'6#i'CG"IBj#^63N4Er/"X&j(Uq(bO08+6?`];/H^rGHp-9,7=
%*=p@G>>-0W(Kn?m](0Z-H8DC7#!jeBKb5m(\e2=&,;cZ:Qm1O+'2,R%$ElTs1!A?\"C6'AFt$+M7i7Ua(XaY9F^j:N@q-?!H_4o/
%Cqa'YTlOu[FE0-:Y,Qqs9X&077tqeP"_8k==Pe.)]hE4foL2"<\>]n>:W=FF#]o5Ael!BN>N%l:E,nU#s6NNNrRhn!SaX%+pAHak
%4!%'iklZhV0\D[h@3"k.BFuZa^toSk&a@.pne(C=(P\KqF]qKFZhY3eY_ls<">Y.*Gp1s^\=SI-B_f81121tts1']"6FXL4R%#I@
%6V.+3P5)@Ka;i2E*'+ks=QIe1\6#^Wmhmol7+YKkbJmK5bC6VC4]=6J^1uGI/Tdf%DpJ-[CaWO>3B$?BNNZL/).`YS4fT/2Z,MS6
%9cof:-\2,R>T+gZ5?mgpIG9Y.Q,bL;M\\3@3<?f`Ap2lG5k^_[0#)lLLAC^rjZ&=#^c!'e4;h-tGa0G41?G2gUct.9G8>C9oG6m\
%ces4n4,/er=6(r2j'!LW%^t,YEm[ZVjuMtEd6'OL4WsFqjXpK,f3G5g5p$"ir:qF@Zge"cm/1ets''pn#)hXZiX;UY..ar.+TM3\
%n$YO&@L@R30=q-d$$gViMPPU9hme[3$(ar8rJD)1/\W/FiFCtd(rS#/P"1mPL@Bk$P9&hHJIrbY=c+KrF1'R),:,-V-S4^VO'Mk;
%hB6GT1G,%RcNkspZ9:0/A60$aS_-aH@*8c[p*?0Oh3QLC/rMT@$SXr5-]96ec>NRRndWfFn)aDZ]dj#q=qFWmm`H>fRmZf:/6=r@
%,576O3tP`L1H5FD[R<2sB"_GB1rdB<W>@2X=Q*!)#h*9c6p)OL/2VRCO#K\+*7<TL_Oca2Y+a%2-YKQ@)ksHMKK1OC,r/sW9`-0^
%KsZ@,G,n&:qtX%@;MLmj/UcH.:jK,CF,,,iIK]bGo%a/Ld9eXVk/bHYZoq>d7-#FO],,qb(:HRg"0uC,pJdULOaAARjkXe+(6O>a
%-eY@*+cJ)g:2N(>\0N)X&T]@D#.Pd#,/Dl0N0.o>&O\[$cpBn,F)qh&_/Z#+;+Pnm&DUBq!G'Ap+B"T*3JHW/e)H9Gj:65OAdmmu
%DS0qTO_[;.J05N[(;4Bcb]u[&4@$WbD=\<bU-++uj\.XlKSnNPHtRgbTDAfMc4cJJ-^Z\_&S)>Z8ea<-,D>mHZ-<*ppf&@36#=!M
%kXHaIBfjfmJ\nQ0$R(&@^0bO/EK]%Gg`q*_4.%Z;G1HJ%f/\(_9ke*DJL2I;-Z\h>_&N6i1&_+1CY0kZqkF,/0FN'/);H[iSp9<R
%(;p[PGYO+CA=;ci':Z5/ITbWKgtT0pS*5FD7D^u<q-lgcH'c$;@!M&Q?cl/V7%DKl<F!H0M(Fi#TgLmCbM@/b\;%-M>J1-<O=\SR
%&KY_P2YZ5ZF)K=[)PAUM>E'<l]HFEjAl_\*h!27(*EAbp>sUhAWQ)rb]+(eq%Cu/*0NUhb2G?p,(MB>07L@W9rh]B%F/fg&JDj.,
%CNBI@0XVo+A[:?6,R8Y6Es^/U*Y0Jlp%_&Q4RS"l(r7OXh\#m7S&!]bAs?BlYTAJoU`@CK3W>kGF`JcMiJ3-53+E&E^Dh@Xqmbf:
%Rfu)s?)@^a$os?NULYg4pN_E<FH6`<E(0u<VtV/J_%#[j,Hp-j;s<2*YJPYpccEXnXmF+uqZ0eqCKTn@hG,a'R"d:$k0&[P4<Reu
%W&ta57W;caTP6mN<hubc`VnaM.1^!+_EQ#p#[c_el#f)AESI8p!9(Ni7HAL@bo`2!j@I.X4oZdt'5AhHcW2J<bfZ6>G]c-l.sg9\
%"C7tP@XG'4aZ>Iq1Y0l?q)CttbEC+4)DOe<=O2I,;gRLaeLk'l2u''I7KXdB!5EVM/Ou*:;eTS>ji\J_JEDO;P.Oi<4YZrS"t$Dk
%TG^Un7S':^Gs1rmnWV;k_(W;kj>b%`R$D%*j=S:9n_i?GO`*Doe(4iH'Nt[Z[j1p_Il%VgY$74Q07GbF"hFZpmiLFW(tf/ADnZ^/
%CTR\Y)m/e.[IPZ/CX,EB<9dp`&9c^8qWV&t_'<:jlJ2Ocpc3EF65TsoI;8LfhT(9fp.P;Sf9_Xq];6QpX4K5=RDK#3b-.E=QebHf
%[m,+Zd:8ek&+e!`O9+Si>b&-T:5Obr,qQhQJ6g>2FG@XQW@(^,0s1e9j64b5oUNn0!RgmH'k(ik0lCm<'f9:m]U#Mskfpp3m:7\I
%3?u`Jb=kD0=,]tn>^;!?<eh4l=8SKI&55Gu,lCp4Gi^!]*#X^H3:*u6Tk.LkC)u5l5B7sb>^o[J0;LIAa\*l_/GUM)VR>B^*HOk"
%%Z2QQ_TJKV33`dCHou\VUd='NDG@@_\TC<04H6m<ou,kNHB$:@_shL-G+A)DV'4JW,j:be/Ku;SiK;GU3Pt$AE.j7V@9;Vr%-5=o
%Yf<2aSTM,dU(>BO2J&4(@Lnf^0aPR>(31dO\(q5WSE'J@SrF%"NT_]ff7\D+HqG+>mpYe?-:mcq*dM%oTl"CBr=m,h8]%c/$ZKK<
%%)2;C(eq*n+nXOG*bVFD'@;$"fM@KHSO0j)p(h/cUe!0FRZNuH#spBW!8*<+WJ/*pW<M\U!It"Efa&,+;hL9HLteUOP6:35OmP\$
%keq)>E<=:XZ3$>-?S.p8-B,!N[[.G'T%2YA$W#o>d.<m7O?5(=:Ub5c_)EN,aRgf,%)^scG7Ac`b,%/g2fJ,+q40aZN[K;&EZ_Mk
%B$<Gld+7gah1gU'"hen@doZ#t;1N(]S$'R5V-d;b#,le\#)qW!_t'1uPM*4XOUbgUq2E\DU+r9!+*Iop3/cG:G$.75cTOq4J+c)N
%pg[6Q)/fhec!,bh*8:j0=AD4u*9I(=7u!>Zp(p3:0!#\J9\YW-0hlIE@-ujA$gsLp,,8oue-R:>R>t$E]WR.M+Fa2&A15,d-\cbN
%15&Ue(.r+`^F>0;I_j0#ZYq@M^E^*L-/Zp/Y*?J;V04+aI?>YB7.X3\dBp5C4Gpff[Mut+2HrQhhrerPK,Sl"Yp<&2@$BV/Z)&@$
%r/Lse+n2il:\o7^U0=$64H/+\$3$>Q69nn,nQE#MCZU='fZGMKo!`OW>E:p2UBN("YoO_MgBqU+:#nWA6?q`(drCENJ(]jC>JWkK
%=>D]lUEi5_fPcb.Um8]n7UXSfgGOXs)5"?2=H`0&L&9[;4nl0U]&'S`-=_gb-`"&.EBN=.,:DQXLa@Odf0VY-H0I0rMEf<9n+3WH
%m<*/VbAB934"pu5PVXf#_tX#So5Wl:j9-gh,HQS*d?5f'*VoWs@%>AJ,J.4KG`fC\S8#H:rOcCd,AfXY[eob=e=dA'eFeZ[KBZWI
%T.Q4J\25rO"\P?PK"5\aX8h0jZ4Z[bT>(o8V:9s>!fJ[S]1-rA,2D<7&STANT3:hG#AdnbX*<;H'XQCo\kJ2ts+QX,Wq@)]Ui<(\
%]N-f]+i2Sb(mK!"c`@^R'FOT&s0-B)qAg@'k=`;kX_".[QGW(+)b3$8_cU.IjD>nGOtJP&XblM1OS8/iU[KV?UI6u6$YR3`TtS`G
%]m-12aoEe$f66I&\<A/NEGh/_Rt:5AAs_&MQbX("(eU@]8l#8h1Hf.2+.bK(Z^)=[f%LPK]ZSDaRL)[?Omd/>^Q#^@8htnf!Ab&\
%omR0h9mV\gkLn2?VrXTqPjB.&YY`a[7OHoDKkd@N(Fr'<q&4f-T9g/(bTYKV?iP0UA-ucjE]<A4pnYRK"RoQLQY++I#0iUH].BQd
%L!m.?bc$J.fg`e4H\<W,)s0?X`F(+:$u?DT(qr2F1LXfiAh"X$ERLj<)in/XYirRXmiH,7Au^'H33\g02E!+Y'qc::"2:Yo"?5^(
%5ElMQk1M6A3_YB=r\I9OM/!&!__tirSi>$N+kpS[Hgcp,(>6'$e:QS0TD0Dbj%">:MoWkbZG/U$9K6MP^(,*UCIF.W18/aM4h7Gc
%!O0o!(ZgIb4MV(uai8kI?=._2K*tpcOkVUXAu*6_f4p0cO+#>JUVi4Yna-brHX53DdO8+CN:&t@,68!<U2=4snobCpn'#Mi1M<GF
%i/2Y:k'F3!k!8lS_!skZ!amA0J+*H_FFpE'=hi-ITd<Ut8Olnck1.(k*3/fQQcb]tE09f7_7=q[W%8,d:,VAD%Bs63[]$XQ]\r?]
%eMqfM;e:c"$G,.oA&*dt!A'UoLLlFlVecs64R[eX#Q0k,k+[@>:IJ*cXG^N'Fq^SY(3eJ+S9;b1Rqfr;431k(*HJG0&UsI7<0!&d
%V%@c>-So6GZZC8R'UDUnXXTnSc&0bJ/F:06<B_o#\[<c*,U8o]Bt;a:Es#)GZ7'h$i`cR-qE=lPml<U#aR-_I$OsI$@PP,hoXg-,
%`X[es#YP8Zr,l4k*>d>Mh\]NFIQI3OOn;&)mlf4U&p\Db3`%ljE]qW-nRaHuC1n'C+uNhMGSFeZ-JSbbEdET2F--(MQKgY@!m&V9
%E&.^e-^`^@K[A?D49he/mSP(>O*lD`nh=2:kqE3AnO"-r"7_3Yb'Seq4GOR#:ohIZ,`aa147GPY/4J,!>MN4&]7c\13O'3TDPp'G
%M4"q=e45=ahh6XX8,(P`r8dT_&_/5taKoeZR=%V5M5+Is][d(5]$N*S#a*.YYtolZXAQD=,N'($&I+D+"HC.AiVkkG@$AX\I6@K"
%F`>BHXp\UiKWS1O![4Fk+/.5Br6TWmSP4pn1PB_b;j`e6qiK^\9ri$J0I:H:F/3/,--&hB1iEX?kPC?E1uVgXOh#t#J8&XAo3Kon
%6hpV.$9t]H3GKd6KDeHLK8j:0(1's9.cI@hP^tM&ZCT(4NV5R,=V<7_S&e1HP=Y$j.S:mj\gn;8f0qd,CAsej2TC6"&X%Papq19P
%SDUcP=lQ'<,:70j2+9'i/#HlE5aT(r3FKnr-!T(mhNIUm*[V#Gnn$H,F#[p-.X*rUjRc#(!=D2)1a^-n)5=6Q@2qfDIqXKJRWelC
%qr9'=pi0#_-kYN:249[B!+WB/Z58kc@8?lVcu#rt<r$8!E34b5i;!AdGTGa[%U(C#Z*2M$/I)6>*,F)(@oj-_Z7/%N=SbFUV$E*2
%E.gDW1r^)r#mD2N22oTM3Limu=\E\L(%ZBeZ_!P_Y`/9r*=ig7CRc2<_WU#'W]nN)ftE%sE`]54k'chbKmRuM`YKj&%DJpFRgH.<
%IK6E(g5*Q7H.YMMbNIQu\;Q+o3@ZDnf[%%1LFXdRS0nPsbGXEleMIReR@7^5=trc`"UNVpoJWIGc-&k@IT*TL#_Qi;&@T6ti@J:I
%aL'"`rhR1/7rA(+aD-*`?*t#$@TVB/eA8(<'>L[Td@`VM9di:0P9T=!_p?+(=kLJ]IH[ohM,??LDf(#.?kq3jfkh#KfNeu^>l6HT
%'tB?6Mlc]>%=A$@I'=FLl:n!q-Q\Pq0NPT861_WUmDi%n:dU;"n7^7$-rS>G-VJElBa.<h)%Ur<H;rH6%E-eirq`:QRT,*+/L&QH
%N!#/BqsKh=NBCk[$ZMBW=E[u?3?Zc-JsP=^\hEWmDPhR$D%FFG1]6QTJXD<hieT1G4FdoZJQ("<\Q#LZIepoDft\d1[9B0++GI\A
%+7#-5I_oQD3ro!a<\"gigN9GJNER/[gZ.'QaL(`k:h@_gKoeC#WqP/>8W$<Xs5&Z^OdIqG,OSM$Xf0iLY.mb$8P7VU+_9f<-tN6>
%o)8Q7O=njBk0G8j[p1FK/DsKhb(XuN$XZCf<fLPb<3p>5pWk'sP(?r0$h]rOr+QhiN]4Q?i;W4^mggN!4m^?3cLb<(jY/gA.K2I#
%<GCTM5M;_k?O^K9lt%K0@rrSNAT@pLJPDO(F4deeF*LtR7epp`oL6J<j4=g#Z3X_,mCRigiI2UD#oe&Y@://9*1h>=,.cCu.JY;O
%S+3^pJ123hRa1\454#$ghB!$djl,BlQf#OU\MKGCMeL.$qYZ3J6ZO=<\#SI^=9l-p)qbH0$;%pPP"YN)aKQ6hj)tohPfI$m(b]s7
%QA2W=j?L\jK[<BZ>rW>>eK+ob9NGcRL0aT\J,=Br073!W4InVMn5.Rs#T>imU?&#0+C'W9g6#K3mggN-"fLG>Gg!(?s6`S@94ipX
%S1R4-IEPJ7)Y0bOEo(>"a4,dBolOR>LIMi'(\,:)K$"E2)26N]K^^PmqqUhgXY)aj)j,6i##'T;=Z838Zgn7hD8?H8+g/NoL((fl
%VMT*1QrR8AIc-7?#Wo'\@sVG&3dXsk7^=R('=q['UgQ#><OB/,2M[RgA)o(3d:d8%3Ch.En8-l/529XgfJ6u8jY0>F%i:C&cHqY)
%l"t(Kca<=W!6%bEJ9j\M7m%(`*2u1\K%F4^r:o\D13nPCq=EY0*ujc:C-O$tgF:CQ\F^p&%"M!2G>cDHI;)Q%19P0:J6B@Wdbf9!
%O))X]fe1ut<T)M\jAZd>ab4&21uYTHfK+["8ZBXN,#a=@[rD]Q^>6*AJVR0?#Fn&5^aS".HKV,n?WBQ/=(H\ZN<Yc"gcmbb_0<71
%EW1BiqYR8Win#%fO@Tnhm!3XQOU9]IU$I2h*8Y-3e7SpCjr.OT:%**K*G8_a;eE0N0l4SNWX2:Q3:J%4hWHHG;n=H_%)'nn6W`bo
%$9i5^W$p>dK$QVI#!Z`3FT(,'NX?4U9GeEIYD<Kt!;fLCag:$+`\TsD$!4q&ARb/=^:qM<86`7:$u2/*b%G*X9[ch71$US__>Zct
%q;6*Sgb\UF__-`>qgAZ5Y*Fd9iu2!m;j0^TAK:9T@LVni'I61Ikl`_#nF0c]>'N"5oIBe`5pS<XksXkWHEsW$7URKjrJ:sDW"0=T
%p@A)Rh!^R2B]<MP^[H4"1^05$:P>J4Qfc;<rAo>?YCfl8n2c2'!5dK)3OMhEL&o\W3-'okM!cW43>CP=hd?JHao*m^>@j16bhKCH
%\A>tkBS`RTJ,Mi0D&%eXLVg<U7sC2kZ`+>Qh#CY6NBEl!*iDs/n78<glj$,I*.k:TiC<e/'M-Uq)kFj.KL%jPRlu$j#`D>dD'j3O
%HOQDX;[tb,9s@%PV\'4%>6gWoUc2?0a]QYYK?"'6>+`]da:OiE"77UOdXY/,H`(t:-4#?Yc(c#&enrjl9.I6:Hs#Tg>J%(Sgk2NH
%\aj7WY1W94@s%b[FQd94(M.XQ%3g<6W,*S_n8jS^iI."Ta3R0IQ20djJm3kDJL\JU"b6d!bD3F6BG-bJWuu76698)eje3!I3WB'a
%Lqh4+*4J>;OZhDSX2>LjoC-gtnA'N,X13(ZTIoZf=GqoUXWt\,:2dl^0fpa(;S:OL5kW$O-X1R.@NJ`n;PWgbgs34(f)Qq/A#[uH
%Sd?Sn4mSbCT:/?#T*n)#%kDtnkrtBBZ">9=ZX=f0S\'D9p.^n(T.F&P@'5/N&h'"JPe%u;8Q[i;6O@48&$)G1&uCc4+(9%++@H,S
%'XU`Mp^pTOX=B?AdqsbgAQY'AgiOns[#^3.LmCN\<StV<(haJJO*t<17[M*O`@Bh3egM1*LBmb)!B)/!PX;uh,tR`K8b7(sp2r[,
%(ksqW,\-4a]93XNf*UrfY;1hM^l'BAY0RKH8q,uB,C1MgX$n_Q@YM>7]I3mj^P%0Cif?dl37RPt53.h>\t>bq*.([ScI?i^W>[;C
%KufPjNSp/FpK=t#`$Z-Y^6f)=eW,^?a0V+sj+nS384d:H'-dfSK%i@X,Bon^VO1N.503J/?P@CJISe]DXrr_.1P,L`aW!Yo$MKDE
%Q9J8i:]b[;&KLWa+,H?QE<Ra<W_7bnhbK,!It);IoAi(PAcXE:bI>>>!D>*iDY%d6GEDPSYE;13Nlp:%]5Wno`npD1#Ar;,fA6S8
%)sT!&#@.d#m(k8$o8sQ_&r%L>ePB2X"Q9=9?t4T=bDGZ[imf90a*nJS]:q]15>6lWJP**STg3P8UPG1S!P;o0i9^Mc<*K6?#.PNZ
%eac#:k=K/RJ^h?1J?*2O2Bif:_?]un!bmAp+YK1I%fKY9-!HqZDkSl?KSRh&0Frl\:=HTuV)?Gi8:@j]Tf2KdF@6.Q^lc$>*u#q4
%j=2XR;,%0Yp;Zm8[ZpJ;04DB0R)U\dWFKtbc["I&<5hN@fLcEP`s7"(7Qu&gi3&Qr6sfeMR-nSI_pd*rEG\4jADHBfO6ku4&1Q`\
%6GOKE_K-Q&$9hiCcj3QEeJ'B2I%)g!-Us@^p,)ob"66<!>Ki"M\:Xt%3'rn(\cZ5ndVQt3VjMZ[-[?H(8[BfO$,Tn7T:9jWAq45m
%U>Me0O`5UFSpna=^3.E=?Xr,RR3."rcU[S\'0D)%C7n9f<]l(c8);!t`HjtdgR-,"J6T4:0[#bis-VPK2;o]JBd4&+QQ++;9pqN:
%h!?8[K^i"<>+@--R0dtd%?P;e%_-DbN3[Lf#-/=I\$hK&`VBk-AX9ZHH<?(Z.YJ5=WAR_:gBZ0dT\@PqR["A1n-;b#N=_ap/j%kh
%??)9VO^[Xr#A;2p%-QPJMMEQoDc07MbL=rhB.-L*jH.\5epCo;(=*FE-h$jUNSl]e4BsaP,\gu?rGOg/)V3$Rrnn%bULrUENFZ5d
%%Llg@qSoFceV6'uX2Cb+8"=-'05+cWNQ%%rYJ$tfpnFrDOUm=FA1YBQFU<\++@'9T]*cqjBA'3/:bQA>D7;*!>t/T;`o,lM(qK)\
%?a&?J(u\N)XBfs87i`hI&?NEp.[usp(aJZ,F^DGb#qOhoc>E_i--LJF,a$N`!3X9q3/)>&l!n]@1D!RP<H/GS6+r1,%OUBO%ri;q
%U&I><B[5b>FKJQ0D&1Kn<`-`r]>hi3N`7Z_72Qn#?JI\,?1MK&Z$O_EA.*MhH.=H+Ltah5^CfQ3+"*@s9C0*o"XqIO?8]aWb/1Nd
%WnXk<PQPH)US:^1.4nEg<V_$YCMG1LU7^1+Endjt6s96R/VFE`XBJn5&iF$F*4("sQTCYp<oJPj!.-&nHEh:KJ=0i6#eZqUQ>_eb
%ZL.d3!9K3Q<J4il@/\ol=+MLeni?f:9Wh0reS7cN`W2b?;<=0_p'm)(nf0Yfnq6M@Gb)48;ddFNKfGTi7rnGPjQQ!bXl^EW$G"?;
%$<-J9.RGJuS;$T*Q+'[8>EoB5DL7mraNP\-P[nk&r0T&*/%7.`#BXP[:Vf'Drc"g/TUaOYEj=E^fEo)m(!iIf"ioUFGo<F^hB?_5
%Xc0IVR%*`4QjYFRlVRX@[hb0m>iSn6Y]\RHH4^6]/1ACJW;B11@acZn:*2B=H*IWG!*_,(bd\+OBU-Fe,PG@;YWs"5331i/;RE37
%oH1rg!r,6K5U06i;4-*q7o/Y#o?noigIA8](QXHqUK*2b0^?eQ^*4;0-iH1M7PT[F3YB1V7gW]@MNrRs&Fc/.d&Y2Nc#eFJd`j(.
%r[3.)lMDL92j:+c[MVkff&^e*r;`tS[Vj]+A16X8\#q#A6Q_P"YoFHaj\<7[+#DhQ:\a9&lBA\\m?N<3g^sou2sl1h<h<8cf;H\_
%@DElNkuG8[p3JBNP!$.KY\[s!3b7*Ng=n`d8+IBBc%kX4M]UFR&4W!Kkh3VKc+)qn+QlZSG$JAnTlK>],esAFjtK44iMH,fPkW1%
%g1q'j33LnS!`$d^lp:AtnI-WQ7:VL,KLSJHHn"Or[RgJ*QP!m6`X?g#)iRU(<h*T4`8nNMcW]m6R<(?FenS"biPI'fQ'pes,30:+
%l5q,_aSf;L"qmKi8J^s[fROg4?Zln+25aJjB'#[[Ql.hqOTBp6d1I)PZEl4.bQj_$e8F7`i@JN#Lr?kjA%=)iRgqKgl2.9,An$F:
%V'$E*1H'*W/BXQVA'B33K4a+eLI[M(iIhpS=,U8EoE(`b)&fo*6JjC0m]d6jnQX,4jm`EVoPF_AeTU;1Qu5r0JR*R2g`&G7o165E
%5[)C=TnSfKap4=p4.:F5m's(agSL.r4?8"e&70aqSiK@i?47*jFdLD-4&kA,k-<L>/`Ir$Iq^E^JeR6Rq\(DJ</]>;H2U%J#]630
%,b>IHn7_u=_?JVL\Ti5oa-i>6">"\CKM?;;PC</h@LkT)=4%9VAaf+[5.K9Ab>_NDRk!Z5<,EcHZ::EGPBs\(95B&`_EL/W][g,@
%IBT1:$G*FI("GJgAo6VJ[XW*U@gXr3%Oh0/fd8!58lOhk@G=nBT)m8q2+-P2mtWrdHL8c&2S%O[/s^?,lGIt"Vt.A[9]'p%Cb?6$
%9_2_,`+*JGf@(?MNnYiu@1!!0+ElTcjk^?/qGj0_jAB/dXXU__f&[n]^>cJMD9iUr<8-`O"(FG&dp#*LZP=C>4R'3>,rS]iqo(*/
%(]B5iPck%cAg,NmMrj@Z)DjBl2gsAo9@Y0+]]nQ)V)=]=@RCTIp7ei6_B-q5.u8&6`MR-O*Uod"<63'9FQj?PKcM5O\qkaKfP[g\
%/[2*N7K0j<*>lXV1r9eB,d2F*0kKdahIpR?`r6XKY195iNB!oKT7ZWfW$5AqC$ZtBE9'QV&5Bo/XJP&K/E[S@Zfro4fQs1SQK57p
%_GD/%$?--.2hYS3o4ktYdYON\r8IVqLi8l#%cFW68N#:fRKa@:<Y,=thsZ0nF0.Lj]tu;1?<"*hj]0o>-\D$GZG)EeaZ^8(iT)J?
%PoaX-#Z2qqmj;1?6mYTVhe69EaXS.uQJ)D8qOiNCFg`#-OmNiJ2/U10%#9gm2OZL*MN<>;=Zeppj[FLT;h:=PEuVljP$U3R=Y1nt
%lO9l7V?pcTZiP.=]sNmj6@3l1BPj)WTagA3G)Z>B&8q@Yc]Rdj6%X-sV.r-JU03$N4A.L#CJfTZ(9NCmaFmhg&V.:[0_S/2F>'c+
%l^[gNJts2A"[P!n`G)uXfPnBSh'HW87q0_(SD:bVEGe`$eDdCf`bFl>Z]b5+p9sSU/?3Ko,cRN;bu8`4(=er,h9_g:C,ADj7S[&k
%@OOqV]i,elZ<s);@5nd-S1S8[Q(6Q_cYL6OFiX.q0,Tf,!B;P$3'#<`P<BJq&2=:O'H?dCc<UWB<Q`q-A7]fe<Pk;nBE<k=#W-G7
%198rF4W(*,n6=>LBt(?uQ32:S:-'c'e!L"UcuF4N-^NWR!%n<)g)[c6-pkkuI,rD)OX,-aZcj.bIeUGX=l/cOSV2=Yi>M`?D]+1#
%BFDOVD]"*G#5k"8nCYX\@n/8[Al#-_$2C:@#_ecNXKKl")!>/F^pFtb5]#QjMe"Jr*E<.GK/ZGtJtQhl"1oI5qR#rH8tETNe-IW(
%l6h1LFJ61J!&_W^;Ohp;58\,b>$u:0-TTF9@sL79f!a)tX[3<5)<[9Bad&Z&Xjt6)MJN<giV`m9!$[BYoVO<3=j]"874M!)5l+*N
%ACj;L4@S<JG9M)VgFhF7(3L.m&/M$Ge@l@^(Gn%0Dfk4-I2PR(_U,`3-0#=`Vr60HFXg+(OhaQm_-/%0<7S/Y/=InbPD%,0.>_.P
%RfNBa7nDe;Eh=()RmLnBA$MfMq#GSSS#qFgK#k!5l7knYSJ.euO`NQ<<>98/EkZH8]Zl0o4G'CtG9X!Ic+#Ba+Fr/+f1B*"X!4P`
%1Fs2-;i9qsU4Ap@Z-gIa7#4UsEJ!1c^qW6-MOt"2.8>5qb"K$/H!u%+7"$UV!+f,/%rL_*&-=:XoqaJK*=QaN4:E_bM_*S8Oa.uC
%DSL"9!$dVI0u]CSEhfKaoAZ"F-o9%GbEmP,A="aQ;(]?@A#s?EYXIji_U3WFpT-!3A]]79iU-R2W@o%Y2tbGm)<Z\G<)h0sG+Gl`
%A>+/h#2'WIigfLb5pMon?CkHu@'1!@lN8,f8"NiHIl5ud7%h+h&<9mh21&?!Zmn*+C?*j=bu3*:Z5/k_<@g_L6pPOeOci2,=^/g$
%F`O"\K:9:hH>_.pVaYA:+3f?:f#)?$<"!5'<7;RXA8=2.ZWQ<Mf.>/C@6+<U*U0P6-@9.FZ6$36IMUmu-[2aVXU'8EEb6b::g`>"
%c!nYE'\&01Q$G#t6CLpJCE7!6jM'D#)Q.q)4[]QU\L',AOdiZhJn3<;!N;ZK.eHAU,1@P&k0FcnM<r]D2loD'eK^CqS%3fZN#8n=
%q6D81%-\b-rrN@'*0;.hHjGplWaO^GWhAN6<FsF#7F:)(L8Mt@"73">2V9:5+E=sji1QpdRTH!4<em;niu"e63lgn!+i1lG238W;
%"+4N)N;\bU]8bH"3f13\7<hR5Q*X>W#bk)[l`*\rFI7N$YQuIt-";mdRfN@J!#ba.SA_C,G#I^o-2Qg;_GF>]K]U_)>9n(m,mq%9
%5B,"#<T0*hDV>(Xoef0G_KmW90E!]giP"<99o_uK7AXQR_IQ"^pSf<h1RS@6pT$<5?jg1)GQ9>Ljh$,B7Ea%6XT>:hT2.9f,<ZZF
%D>WajHs%98c!";')WNNbf</N(+[WYVes;W\/7d6'"(2I##KO#9ohl(Q$/=rgV-G+V73""g')XO)+fa&t8;>Db7Eo9O9H1Er=u+>'
%,rbsMkJF9qaVrDr$.b<+XRfV?QrWj6&0sHm/Se_*8/QPRG!5n_!^&rUJ_@@ZHc/Q21MVR_PLedd/$fXP"-5l(K5n;&T/(&#PaH//
%i.SNNcjJ7VaEQJI0XZ==&)-L>gic$1\s`koCL(O)Bf[=ZmI,GSNa$^RUjPF@Y.*7cZ5(TJL:BnK)&Uf&9@mI[PBD$*HftUA9qFB.
%Hm#q"N1.8G)8Pi)C`9a(>cb;\1.&?DTDOqW\BS%EcMO^b@!?5B1CED,5`W/9Y`)Dre+.'hP=2AV:r\jK'^39%4pXk_<c0Ml5F[I!
%n`.C1!3MD$O*@t9#m=hH/MZg!m5WSVDX:lW!FoMFDrVE_;/:l)+B`p=i9*2MAui8J?ShO])0J2S8%/u:Xd7W,`sU=V$eSE%Ab)gU
%!>[VR\b0]SdL&&F95Ve$h_#6Xe4g\g4'_-/]jl-&W#'$t%L;A@3paOJ.uZ,i6FC=8J?)[59UpO,'44q<Y[M&s`RYbmEmPe-))\`,
%!&&#`Qd'SYBoXgF_0j!PKCC=O+QmPep:M&.Fc1;bS\'%qB:/g<UCke<o4jI"/pos\+GiM4G'i-RNC"?k5s$XMPj&[rgNc*,FH5ZH
%K^L5)N[mL+1C$ugOOI5.h5ec>8''hDogUNOL%6n7XL6dsm+B-Km<M@cb$s!M"7m]>"X\GdV5u(T)6F[Ig[JY">!1PnaCKYPK-W1^
%9G'7cc+Op-\3V;*]^gX[0.d"4Cme>R!?6Foq':1\<P)qkD$7t$h"VtUUT]]%16f6@.J#<':q"od=!;g6$pfnsM(d/5I5p`bSeGTr
%]1</Pd@4)M"_TL2s)Af;lli`=rV3sk8b[-bTSkAFZ`QZ+01iok[2+NXf'h"m(,?j^+34+egcOZWCBH9'EStq'jf31YA&"tK)E>=%
%PThAkV$;e(PRG@_DG%%S.e7<VG!U:ap\-($_/5Fd?d7jgRS8spD8D)o`8ATZ7Ota2]T/f\46tA^lI'nEC91_E6>WUW)e`f:kB*P-
%r0TAqL!`GqA`Xe\DKB![_9s!Ck\sGG#b;hWG77L3Z";Du.;KYbKat0?Cl/n;hAKt00qtF5e(<l(Y)ju'L01.&h0]u^0n_DZPc&YX
%h;EHJ:9)%WMo@ja?jMQQL[a(^L:FfQb+eo2&?HV-,j#+`S.g6IcDK&gl\#&q+6F:+ld"@(p+V>gHQZS_(;^F2gD08jO1kA^:he(,
%$6c3BhkD_rlNW(pcP'#)1>KO>11ag<L@),dWdT73ZKCLQHoVg6<d":c-RZq7Mfl/iJPK8=!MhgfVn*0R$#&du]nfascl^kUYo^iQ
%FC9d(E(>iE]1-23,Of9"O?L%QI)9e.dUQeh6I;Vs22c6.Hr!PsTht>B!pG^J>O<SbLe1f6A5uZnVYe*EM-"?/T!#0/b)[(TojL-F
%cK;!sX,:-Q`UV(=dIS+H;bcHNqf7>Vq?c:!K`dkOH@/R&hf:p$F;Y00OTQ,&f0(\E_'F@$Hon%X/8fVSApUuE?&/`;mCh`7aT:87
%#_c*'1\WMblH'7G$P51"*7Q^?4*BpIi>jkX'*d\?%s1OTCSR#H*;r=mk?-F;*B/8be$0?T^sm2$aTl6iF=XV5o_r4lCT<d7'@[WH
%#]Nn/32iodFjZcS[Y>]/7TVAn?LKEZ7_P*Lm>W4UI/451@3^!edBZlb*U"B6iuqqc0&P/)<ZaE5546[pSsMHlI!j'_;VTFN^<%_>
%-s*Gal^4=RDrq+j)ks;4PMD+7J8Ce%[%S);U)i$>2?JDpq:8O'Q2%Z#;jc)dc2kOX-Oha7Eq@/F_fM*IGU4kGKr[HS"[;XB_*h]*
%5`u_(\I)7p![*1m7u>1%_>I3cN8th@$.d-,.'B=e6Q^/D2"i%_]!.g5"AN^&,A7V<&Z(Q_TLu4Vg4D%!"03rHqfHg&=iES-G&s)j
%7pmSrh$#1^Z<`t=4!s\O#bLPpJcVUO8Cq29@Q:LK^qdej4`41>583S;RrmABqq0HceW)5%LqSX?/1GYk]`fat:qAVeEPA"<6kll@
%db"fIKcI.7;3tN^Pe5Y0NJgMCO=f1b=%FJhQ1.D.Ur*J%ks(em!9MKSgpp4l:@0:hV4YVC(LIJ%T+oF6Ec_b"TJ;*IPJdMOB1PTN
%F.;q)qL(o`$]iD$/JB=;YDL/d'RB-<qRNXq:nLek$RCr4e2;\1?f-$<#WZW+rF*6J[]#kEap4^AI$_m"A,$XQFcG*BW!)e:YWCH/
%#PE0a3a\2h.ZAmA.7Gh*]4"q^=<GRHYS![J8Cl9dM?DB=Z"J:CLRtCVff&Wf_.-TJ>E*da#\:,PJj&;/\XBdKj=e]:?IFr"0YS2B
%F)'b$18n:3j^QuWK!/\F]7[9"`"E]dCDkcr'XY7Z+uNZp>Ktes#3kO^!OgNA"S=N@L>WR7VK4P=4peX*c8K)tZmsPQ&&Q%1Q-e]Z
%#/?%+m>UI$<s2flr>9)MPYeQ4S`Y7]J*f'o>.u%^dqLF=AG?GtqB[8-HA'D2bbln%U82Ti[qehR\K?I;.&cC#9Dh7,Z")di9HSO_
%p4\F(E(-:HMa)@55&E%l%+X1'X=sf#N?l(G,$jgNFB_?O@YSj\(+q'?0d2Ek8n^kWct/:m_JR2^UcVCC7L`CDODhaR$`'-,%Mpu>
%M$d%f<)`Ts(=]F]qjNf'&;OE,a;cik8eGp"7mtuu6u7XVQD^=O_"J6$PdOG,lfirB87aI892(OT+$>o(:XZ?qGOHp*Q#`q160p"?
%/^Z<rKFK?:Qg!BVQT[F'BKVocHmKXE$[FkS$RU"\.m;UJUNbac)_ePQ@Sn6NL:0Po,!.RolMG)O]<*^^_d$kG\j^_<:jAZoUuat9
%:5OW.UW>X0!an\]Ni\%nfnN,4f\Z_3E,+aZ6-^cBp\e^)(nmJRFB>i.^sabTi^u+m"<R0U$rEG_gb?GjPnm3Zq@`^SL^lO-a9G_$
%-F8O.f*_@de_ei@g5+eA0&+%umOn*"R$ONNegT-seY;G\?K#Gb*EKs&><6[ka#b^]6t@@_>=E?jU;C,8`0ZJ".&Xf6C;(R'Q`]8t
%!47qZaUC9)5AX$jp/;Y`eG[s)ic'-FFb9Mu,&i98K>I6tdH=p-KFOErQg>'hUqe1QdjI1BgA::P%riG_.'ErN)of+e%tEP7i\(Vm
%j4*$.F.9()-Rr27DHDbH7>AsFf%KT_e\M9pPa-[=$Tdq`:2-9ol!XKP))$X!,ft8Y:i3pFG!Aad;^PM]C#1kcBHG#7<IJpP02chN
%XGi<BY:ToSWi!S%CqaTPm+"-?+AuEJna7ZiWYM5%j%Xu:EOhoniV&t1GIi;;%%MWJ#)4Qb5-a]..Dg$rZAm7"\T;?g:"\\TZ52:W
%YLlIbTl]B)'h5>sAo/3!"Ps\dHEBPkbh]\BJrg<4i,u*-(B!er4p>QFm&%RXBV5eX+?fOLBe.nPb5&?XmM(-I36"uQFeAn,e,n7T
%b"%'p'ujk%YO0+o3OE'P(E;kROFg#>RB1gVQ(HHQi\FREOf8UP4_00:.jIYWa12)9/(A>Z%o/Gpp=<5(dpK#>@_hiYD0bdVZA2:_
%RI2\s6VYG1iMEu`=(3nHk%[W:GNpikQjsP$g[@G%&>#9LIDi7mBYH:oR'aT*Pa@XGZGU3:WFVK$U0U>%MNn5K2l/^W`sI+K&]R\R
%#_k=/BTBnl3B*<l-Rj=kS+4YFYF'4Sa@/W1OmFt=R^i;@:29o8l4)84RYK&A%m)!XB'"=L9BP&Vf4(>s\W-jE#b]@]@98NG74@uN
%W:r>>+4m)L1M@"3<c35ui:(\GS"#G*#>*8?G?d@-UFYV+U&uit#a(H%o@$j<.8oTje*LI><=\AD,r5'&QdJMa,&+_B*6X#Nc>!hb
%E6mLOnPX1P8F;Hi`q!'\i)TH(R>1m=Yo;[mE&oB)KPSddOdY"-(\F>Hl+:]#)/@.VmZ4N;V4pG^X>+,t<Lt<90_8;hQ^b@H;nS.e
%AK(@o,9mN*Eu%Is`=@OP4NWAYii*4m)EpOO#e=u(%`>78ii(L-^W!goMA4hoLQ[g*]jDH2:')_/4NsV;@>#"H3gMdtqCa3n)^nER
%22Vq-+`_6O`4YL9K(+Z:bgS]Gi6AnJ2c"Pu%c=e;KljjqBYk=PR)84,"4Ug0$tU8^RUj_n:eO_Ar`fMJ[HOr/_C\/p]:1\&Fd;1d
%rJ5=!eIS>Yel_L2.8:eNNb&lloHU.RgEI[36[oW-Wi;_'DGhV2#lL2GH.+[T&NI*H0\[:acT&',k/k]Y,c9a&KAdTj!$:)k_U/@D
%'LFK%g:'9aY*Hu.?WD<Z/8<8B(f/,V&0d1^eMM:m"W;)8.3BOtY_">UX8SPl8$bA0b2bWn:02Ku$6fSj]Sb(<<Bf3<!qfRV/\qEU
%@$7Nd_lCk?2u3G2l=P`VbLZa4AMk&^fDmo%9lS]qB<njEjs7J'iP@*>"h^9X)c^I+X'SfXf@a>NC(!61njnh'<AH.0#KO&*qV"Y?
%Z5T.64;&Ksj#VPh<U<I-6nM!DF0mh\\kG"f@B3acdZ'.$e^\$/L3JLeL>]+a00HPrR276XE>bVsKKW9@"usTG:$A<AGRtQoa*gr_
%bsRi12T]0?!,g5e!)XCEb"aFtCWcMAUs*,VrSn=m<P2G#HJ,4oVF>i/'4t7c[>:rRY_]`\"]7<M/rE'W(GUO"+UenKI+>";j4N&&
%Q)G@j&U%35N@(CFD2qubr]eV.gN#C*Lh(ihU%B3'KH'iH95U*i(4I]dU-7m1mHm`RgBBb0V<I^L'mI-j6NX1&KgOR,+a;:#>_)Nr
%g95\I3:7tT^$?r5Y`S=I*<>f9K)MFc:C%hU)c=9b67Re2+_J3NcYX#/\NDW(LiCCHo'[6.UOKHVm*i$=:='7-9UE4QC!$-):t1IN
%JC3*=d,;&6+ub4.p&R:IL>'7rS#"s69Y7@->n=_q#T;UcihkHt!R?-u4F="FZq$cEKETPBd4/s0Tm9"-AJ8qAbR^4=:"Pto]/7>R
%p6,"4%++@;pd)ZI\m$a1SGr[,`8epmGoG]EOM$oXc\"eRHdY,Elk+q=9hoAF-fX\O]Od+G2TKt!B#E@*"#i4ZW-?f'RIG;]#D9,d
%OZho0WnZSJb5_kP'+nK-;C9Tf33a(.lM>kY71FcrT-Y6dbI%UE'qZ_r&I'Y(.Q_-<-=g6&p6dEk'0<&63PcQkZnmU82jqCN9^If@
%U*@&Y\-r5>R[dU?0qa=LAD*#dE_)b=ifjH'LCk$VcS0R,F(!R?OIF.BMiFH+<mTmmI#&K0$-CRPf_3[FFA1gsNFHo`TZhpeI8J3X
%?WT3;-SVF.:=l7O2FEfls"tK.4>(</EQ;gXG,o!-Z!NtQYn(TrjfG-Hg7,rGi]&).m,K/H2rl`AD^9J>42TGRmC:'B'5=PAMoj#%
%CQPLAp4K^I^.<PFcU!W[#fuq[F%Y6S<ode0Oe"$LF8(XWI4UD]UoE1_7'X77@"L_$AB(5+>e'3ZM!aP2Ur<`2arXVo6+UMPS0ZW8
%a"9#+d^s1X&4.^%Q[nLNP&^*$)<j'A7=H@KX*.Q@Hn4YuQUG0SVo/j84Zdj%k2GITlq^4:KO6)PCqH,Cg79K-2Yo,>$KJ[]^"aA(
%fpqG<o@W_J-nMqGVfibWA*gL[<]KefLCMC#/U[sOHe^O?hICR$>#G0VDkSH+ATDZgI9d'F&ga.V@7P.[B4HH@Dg@8qGSt@s\-XC?
%]>hPWc^.c.LM%lXc+C5s$RaJR$J+@NR/u[+LADJd:?.K,U-1SKNN4Gm3\?rI:$=\Qrma1X05S\L'ZK@seXC5LZUF7RXXUH,f(A4=
%]+0R+a9Yo5>2p<7iuUJ!ifM&]hOoVDSM"YU<RV:*<[0FY[pujSR5\'K4RBjs/l\M[aSg;-E[>3BK.f,L+qNj#67*lL?*J,ij2CC?
%N'?Gb*^pHor,k=h9Bh[`9_!7,;QQT\`X4P(#g_!]#<`a18Cgk&[bJ;,i+ZgMop8#6.gt.CU-6%V@'""?FNoIerEd?r=gT?YPHQLi
%58]ri#[/n?BGU.CpW?/eRkr``04=@qo5bu/A8NRlbJHY;P7;5g\HN\O95,ic[ZmV\@_fVX?<^"a3Rn<+Kb&4L?p>.3H'f\<6WI=l
%&)2"4H%"F=X@&;>g<^i!#C@5p`)b)k*g#,WS]Ml':;;TukGa0$MOHo??p!*%`*=gcTfXBgHFLfcapap@RW\ut39LhUGt$.\;kRd2
%!dF=LLEmCM/gLDfoW#mr.]CJ5pHGk@-N)%fitDg%JkTY2&1e4c%Zth,MV>[;ad`>E^b#%S5W!fHdtp#A)m^WNPDO:Y^>C-lTFKXa
%Fb[,%EmC9#pWRG@BBN`>!+s#AX3R-PB8X-s)?BucVE@^&i4T\bY",R>]%LOgRBi#jle5m1bH2D>9oId_(=>(`7d(b!SD*=X-CbcG
%fhmtQ:G0&Ip4<>l8-fT/Ilb)T-\(7K3!MY$i==ZA3iIgV[AIOT7(^rfjm;JMPoV25j&VXlqZ_arb`"O7Ya&tc3qr>eij%V<4[aaJ
%Yr"P/.bg.nI!D6VcEbbCYo@QNU7^eX3W`@p4/*"PBQDp4C)o;eD,$VbnT#,;:=g?7Nc3':-U8Q936LTc;V)Y1&l[iU4044LWb]pt
%3_hd&'c3ZDHX;==E^HlZ%nLbqVg]VKN6BrL8.p=NYKg.rZ*.ZT/*EjKa;rdpk-ZGk[pF#*?/W>;g@k6`JC%s/Y*8WFdEc9UPF_4+
%rBDU[VaKR0$W5BU:Zk(>_<Y2t/lq^R=FW&?dAWP[rKeu2iNp_BrHj#iCF0<cGW<n?-cO#p$q6WpeN^&8(dMD/&TNakFDCA?p0*b&
%G2n)6;5`F@GJik#k(en=XQ\s?3tU(%h-$^h=C7kP?Q9W0MBb6ti[m@dd[C!#>`"JF<X3\t?\bA3j!J<C\\[AFd8CNoLYhPg*`I!o
%3K@LrqsjX%J$9l:YEqm`XNB0Dj\p9U]ZR<,6O#MK@/Wp^Y.G%_qDKOJ^B?@[PtcVF;X\+rl56lu0@h8L,E`!2G%Q5+Q8r]4hqoW<
%7H2=f8g8h36uUb06(XttW$a>K,ZO`(2pF!5/RM!HGhMWl$!J=mo:K].T%Q3R&TE>M0%`)&)ffn0#:4OX*F/bfabL24a^U'rl4KP_
%p1>^&%7%#1<//AK3f9dgfSB=H92Or!o4rTP@/&7LYoEUO7,0L^Q/pfC7'Jj&KVuoI98&H:Q76C'hGS?n;-D.93IJ-b.IU3aX<%),
%@>9*ek9o@j`;;Ag4Z-A8/^_6Vn"pQ`;P.uue>nsJ.D`C(M+YjLm<,[bR9XAuAYr,n[4?P@5U`*U?R;.>A`MAkS^H`dlUs>r]FVPB
%5kgGb:pY0Hh4?/lo,<CXgG<2rN9d>uUtUnZ0[Gcl&)OeErjsT'm8F!P[806T@JAHt7(n)of>Csqm&(`#TMN_60E^+%!rREOi<*<!
%Vaa/NX&2/COjP%M#sY=q$#_UE==q0l4DoZ]%O(.#jIfZ;3lcCt:0EZ?XG@d)KI$G?h;eUV,RUEc'9kI>OPHcs<3qC;YM7^<\Rdt;
%1pnr*GX=gU(\l%/%P1!3QOuF2-fst6AgChL.&ZGr,Bsd:_ohF$nU!)F"(Z@?AdD?(@_ruA%Ca>c+ec3J^1E#_Rs!AUb6_J"S)'a-
%kiJ&:=dmG%B&'p?,\u'q-/d@"9JHNfR2(YYA.2'1L^?o`1W)HTK-Sb)S)eIk$$6BU8<-M-qqKlg5Euf+_k]1mLC(DG+)?`!]ekl,
%Y.ML!QEdYM`g*U3?W=WEP+nF"1E</Ges%%@l*0<ike`W#k7:M=P,6id75qJnX$3"W(l^<l'&^)1(<Fn$GCI&hmE<cmBW@YobQYUm
%;Y/:.YkE2(W$<[d$l,sO^GWrP^#^X;P64VC'92a+Fg7TSbYF%u+L[I`eu#p*o7;X2oqolcmH5&K7>97[:.39?X*'%sb%/i$JI44G
%fCDA-@]e`gU//&>Qbs.f_pH6@VPC'pl+iX6`?SM)=AHgOE:=cSbM8n%C3,cT1g)!_6JDH@J@[:/8F=="]N&s!3lW"`mc#DDkB?G'
%.rEe^qJ7=/G*!F:*`T`P8bHE2M(L^7S&:na-baCRYi0TS`[9/H@Sks8\Bp6'FfP2bbp09K-9h!hXtJ*Ch3XXoeK&kPH%)t^&\4@4
%6)]gL=BP0[#c-F=pQ1j&0ffG`;ruoVSNNjKcdd(fKcuJ4ZEtiG(m9BlLDc+4I81h,3<_l;2SQk\A.`-rYX`Ae:WYK(=/qoi^T$dL
%Lle<1OkocLe9+Z[4gL=BNpTdsNPfI/'SGbMI<,uP5&r7oJTSLK@KjN!1lACp4=P-a*$F2T!1.d>HP''(UB3P!Ad=-pg/'"\!umQ*
%STaQ&;)`fd&aAT-WSX,dKPP%EMk0>&-sLMQ'a79U4&S?WcdJ5,G@;96@:"FZTmOlm+gsU1#N6ChnIQb3R.4]FmZ^Iqi[Ko__0QH8
%:bGJU#_89,^1NlS;,R$5?VFB8$E[pC$ZjC.2pZiab.e:m3RrWV07<O`R/2"kQ[u9+We0eCAh9;V^T,O'ZY12l6^%5TTloGi3::=J
%9"iH\_U^,'EI=YOW2d#j/2mAg3**kX184q-7QAM/Ht0DadnUnA?@D<gk+TeQ_X+QrHL/p%02t4G2&i)<^Aj;f<4eUSN'"pg4N8Vh
%[KXFI<HW7!XJiAkes//[74;!u'd`Et5pX]#0gEpOC/KRs-ma'u:tn$<]T63t"6SF*Y+DlS%"fEad"G(I>WG`,;j-IN2kU'O1DChk
%eelL@F(G([SX+ZnqA/VKXO)KBiFm*i:1E%4MsoT7+-"(Gs&9dU'<4p],Vc2Ah=7p40kXKlRJHWC7)VM[(idl+4Hke(m;a#&+W7Mp
%FU2m>ec1a/lDLE+$uhO;TG_tU.*es>e&2mkMmsYC2EDsK,0u`JdH$cO?=moREBEm9ae]n3G+p)D8>nap`4Ai)Yk761VV1LCpamQY
%*N<8fmE2FP.8n](ea.Bu=:]ssd%EiQOC.nWk;/ZZ3;OE4=.S'Dqp'7^;6+qJ%`e1F1ntL$joF6V9+bD^0tQr(I8aFBQmJ`(Vf;Z,
%DJBBrbjogt=Ip8IpVa)mAE_cgkj1/2PGBI#1gss6aI<0XWl`SIGLFR6YrZUXMk5(s;`=(@V-]<t^HTZR8`_Y[COF5XbBFYZ`07!6
%fIne#M&uM)%iZZFErT@7pl+OH0HoS-U.3d$,%`(L#c8S^AJ:6Mce1BgHXE'8/MgaM#u'r?7(8$JRl(=<OMQmRmDdU;A2_[D%"g-Q
%/J@i6N$i]q7k-G=7dg_#``iuDF&6q^OgEmS,nlTQKr&@taq!.,pN@<^G#:FO9d_^IcQt9j-<B]i!(@9S@$c!G50f6AE.mjr<d(2`
%\sr<\+PYTYp=I"I#:>4]PiH*MO;r%=<6T!0BNTgl%@0PWRcE>PEYBB/,ALdsCf]N'HjNsDAO?&Y/uK)9=mnXamglVfj.DXZ<-S%T
%k]3_mk0-ZA0[j$8@S]INde;2Une=!SA\2NKM[e0k%<2/K[%\E)d<3G9/0PHr'5i,A*`9o_<LRO##E6>4$C\D,gUGWI52F'C<j!R&
%kd&S`,Xt$]bSeP2NeK9kS56opn@cJhQ0)?pk%;e2i.0;:b!P.V(Hup+-pd3a6btT38VGZgR`eYB*hJu<2WZ##ds0FadIjL:P;2DR
%<jkSSI$0c\-5!g[FqLnkGA9://Ke/!="W)>eOibQn)6C:5PXsU]*rhE0T&ddg6;YeF*<Td]YmK$"/6;jfUROZ+P@Ha=BeincW,\[
%=8!OT=C^3WbkEn.C)jX5]Nf?>;<02(m!3d`HUYau#t9W<+l=8oVo^\G^:%$DG=$;hQRFBGb.B]q,&o0Z*qT_b;T/P708r[>VWba`
%.<c=J^RU",G[/f;()/SUTL0p]m9)SBOHDk1\Yp\>TaL$QnVqsq26-_%3tUI#5<F]b',OldN^)Jt]n?oV=70/@SRJ?06,!lPO7fbL
%#"iLtP6!0MBZu,'J+2!SE_7!f_S'V)06oLi?Lc4^ag-'1$?DbnYpQX_jKe*`$.[=j9aXQB<41W9)OXFoj2gke7a7.X2thYHOoP09
%.#O<CSO]SMji\s')g]5;@oi\7cRLk[CAmr`K(qW-WR/5OCW6OG(?%MYUpYm=/k+0HJ[JCZX^`^PXA1@*fj,P)Atei18*0HXI_AHj
%)!5FhQr]36fgNqW(&iF^s"d,8Ek&%D;Y1p,:!V7`.k[D7HW$7dVZMa^:67?g)CbrbI8>mS8;X5c``cZLX&J/RZ#Nh$2]%B_P3Y20
%$?*MT1]0O/Y&-%9T&DhI$5JYLm5]MohchY14-G]q%dDc1VnM<9)O\n+>k+LV?lu+g(X4u-/!#;YY;l&f_cbpS1>sS.i"DV4T/X:2
%\;\?:V([dPp([=Q@FM/_QQdS+][[5rTRJ@`i7E66h;<+^0=[.HqUcEmaJ\*SYoVt`$P3'h&ZX73[J^"XH1)\$6ar`[`Jm;]5m*W5
%r&1msSc&0<pj^Sfj7]=[-D%8A+-4n+)OqQs-d^,GdV&)`X":\a`O7g,U0t[L'<BB6?[n]#X:-%9Z#;">fCW2;4/+GIB2T>"mE#4f
%U4u+sAfe>r"MbilYE,=RU**;.<1*-a+$M.:`o#b^c:)p$%Kr4,o6$8QXa5'$6tCR^8`q9oftLeuPmQR`*7EZ%(0f`m,4K0]FrE(V
%aU98M4LUFB+_U]-kF+n@90P;#.52(CXM^*7M,<n,*K35/&cjLFd15_7nj*&_,:%RN)lGI)jdQ),-faOY'Y0PUK_gp\ZLJ//9ERj3
%olL7CcT8rZnM?`)UQY:!Mb71_$um3[!@RJ&#H`s8.!9^0E9f!NG87W^Ka_]s]<H2+g#k]A>))C#NGlkf:Y)=:[k1uE=HOU\_^e7i
%2S4P^DA,pF=;J?/K]Hl4;g&.Y6`EJ%W<pi8_9Xj1Fa>7Fd.P0"mGjWn!M*Wrd^2gM%0Uaba!J8A$c?pTOBU:\qTVu-)`a0k4^D?r
%HnL8I94Z_*r+'PTqi*!0NsL=[Ws2E-4\AHf6!)FigAptHM2&KJcE^C]i083W5:NK\++:Rm/&joQo8EMFI@0mJ#\qP&8H7*kr'^Ho
%P^AD*n7g*%(6[&hTq6V*9sPN:0!s.ufQR)caZ/H2[SGb@au=/Y7Raf`'hZEn9]%7%Wi#m9%_M5b@F$Cgb3J(:KD8u-QSdnPMSBll
%-Z5]lFR/:n(!JTgn,)nCK,%EIbT)&,4t0"PJ8HnA#cntY;Zr3\_@#m9o7a^RB-X'dg,u21mrLH=1[Gh7o'fNiXUM6q:PhX`>2aW#
%g()N\Y,M4pn=9HFQPb-ffL]/'m#(7Qpm4ZmW3kNP*a*#RmJ*7\3MCj<VG!^T4t;[TN$SF<G"]2P!'#F*:2XGR=F?Y%$1F'u>G?j5
%@!,*pDjIW;Of-,MCM)p?bce@Ze:EFEYd"$YXXcVb_A.CaV0]8C0]@A!qM_'mn34U`g`NPFlFP+\]FTesrZLOWa)m0,$C:Y"X*Xq2
%B\fIT^'W_[%WO$Rf@F+r<.p,l2'J,7MLV@n:#VkJVaXOZk]H[%245gF4WBip[7iJ>aniE`FqV`3^;%U3^ULI4.AmE><4UIQpX?1f
%6rel?'_t_QN^V^fj>iYQSqgMDg\90r"E_j3oX:BPdYMgZGJWNTAm%1uktBA=I/ILpWQd=RZH;Fj5B6r@P7V4uoX?0#SS)qB[=>/W
%:T?]u1iL0\7u7dJU8!(._&q:lWL5Ib7hk4ZYY1L[pntiZJ?]P`W9mPpbT!g#%o7dLBsd\;hotsFD;['g34ig0f!LWb.I>66mHH_(
%#\WQJaE0*WKLibjp("`>^a?M;Ru/++MTtlU]V)SDMZitKf&8b1a-U,r/988FQ`bjWj.+q(M7bTq4c>n];GKdI@@=SgNK*\2g3Zi:
%Zn-oA+8*[B9S:g#R)Z-/m7qd+2P!]Z,d,T1r>]7Xc.T\KH?BHh[A^q6qb,`@iQL05J0:Mij;U(Rm/<0J@iF.0<.pT33)6-\Z&@<u
%rM+bm;YbBKHhmYms29^1dZ@d2+oIm"ap-#ke0uUKeZuP)^BjS=eEYQ7RrC*O^2[iCkO@N[/U[;3;P[J-G,=`*c@+2?3UfD@^O%A7
%2p0Wo#j(aQ),EJQ2H`X7:XAp8f$^n'QIL@6!aE*!qb^M"'7QqU.\scN'SpLt:2<LK&9rYfMa!^(\$u@1#0e:8ZDtU[?7md7GlPbS
%g"UZH3We72f0="\L?uj\R_Et<j8g\.IGj]K&\(u+6`OAkCU:s@2B:he0&)RPr"bq>*R-S1U_`&+F%-Dd_L)(NgDQLb3IH-5Eo*FQ
%<ttZZ/,l7*-Y\#_`7t/KB*1hI6G2*;?DXGD4._F3ii)+i7B#I17G(>M&'i3k`rER*%W(nRjKbcc"f0M%9[u`>:n!6ZGR2]hI?pA2
%f@Hj14C#)X-UnB3EB8n`4LLCHn5A-]3,0,`duU-F=g'UlKk$.ka%siR7jBAD9I$TfW=rZ,W$ZdiQ_oVir.?srqt\5iC%TluC-i5"
%^3^%;Me2S8R``f[e@PHOU9?-WX)RHsaaerLe)&eB`)P5(4NOkaguJ':&KlA4B>f;hpB_J?TW'mY=>U8)9+9!s:;0Au9WiQdA2#kg
%'kt&q:rD1CE#=GMHjBWZVkR2r@]$B,D3HP"$5nlGBqE&cgbZ^4e6pT([-FPgc`!oM8J*Q+#Xd`1"'kFo9.$&F1TA]\=g.cJ;d_m]
%]%b_1iI("aouKjq0Z$_:['SUAlJKIY4c>NWX,q%(_nH8Dhsq9HLM#Zqm>/Vm"Hr5L6g7ih%p3TTdW:XW;`*%?bc3;\=GRKY2gA^Z
%WXXtn]fRtfX3OXYSBcD\&OJa<NHP2/95Nc^kjd/6j%VEeM4KKE9]ruEmUNYWFL&suaVS/@'8\obljWJ+!Z!^*Q[HAIWFct5e;uI"
%cZXFR&^O!L-j0C$0u1q(/&J7t?gmSmQuYR6e$sRC#I%5#`?f>K1Y9Ut9+%XLCs#A-K-g182--<cj*=Y\)_mE-%ZH5BY,!1WQ3h!k
%_AhZGn'Vp6RqD?<ZOpRdQH1UD#\EMRZGP7X2`hf$.E3GR*cdMCL%'3Vkbi?Majp3;V'a4T%&sODqhL7_X[HHg7NbW\RrDgF@ZVq;
%eY"Wak<mCQ%N>\t`!`1MnTcT"9#RmN(c3#]j4W9uSqb.\6e36n7hIO@V'dTCCp38P7.#3<kVHuSN0soq?_A+mCpA:L7k"<U,^h!m
%Tu"N=8E(8h8g+>ad5s<6$@26-YY0Ib"J183MmTPH'U^mrDNcZNV\h/K>$lB+8(2LE\Fs7SJa'DT2D*!7]\<h"qqgeb:FT4""_=:N
%DEB_N@X3nmS]G@eBde+/LDh*5XPh!^qr`EOBE&Xk)%3_]0`(]?b%4*O'JRHD^UMqTZ3U!uaSJb,].*sG*N2.N5IVL\FrWCdCGZ3g
%]VR_Vl'GjTlgc<BN@@]SY^/rp_*KhpjjPPe*7KL^Ds?[rr]]FR/?0/>>s1V2N1"A4?enuslR?V&8>T[\!^D+&XVRc^j0P//IGjLr
%2U.I>F8KrO)qrPr#fTMTL2hF,ge]iJr_NWtli3$<N,r$sY]&bk&#`9,_*Ne5haPO3iFsEs2@$]&ZSi>9f1_4MEal4=JmGI&!Z=)W
%-h-/b)p\A7^--Pl*akK1;V=KYP8Xc-O.VB*QX;n%8hU354sa8o8[S0hlHi'sl#j#YbK].^:2m9_MJ0oQU_+A4pbIX%i:l&L\TPJC
%7LP"XEY``*[0D^n+fJs`76"4*FLo&]gd`GhWe5m$'\`;6^K;4hnF2Y&A8BI_iu>trOJ[a.2;tDZlmI=ulBV>pc`$LL)!Zd3`/F:/
%;#L9d:c68k8V>P$*CS#Z2rE_3qIe-X6k+lSH"2Snjj!W<'<704,C7*0JS:n_iQX87ne*O$%bd.lR%7E$1m8=+aVao_N0/l>#A@id
%461M0EjkWP&cn;*84^@=,9.fO7L06I'_++!-g8]0%@SaJD!N_-Kq9)B*2;^kmN#OY8)l_d)aH+1ii>d9.'T6f;b!8rlM?+qF12_k
%J:4<.3'EErp8\5F<W9M>kZG-`ThBqGZT=41q=_=,_O9Np1R+r=BWS/;iVTUe!@^C-].8e8aZE^7k//6SE[3>s4;8I36<gFQ&-'hg
%pM\KF.!P)n(St@glu:G-',GG._Req$P<"dCrp1[*;+2)t`&GR1_Oa.3DYJR6;SY@%o9]V&V9(Z=18ZgJU4"29&kRg\_bb7CQb>Oi
%4[k>LD1KQBL$\Hp1rUI-arKcBjDRn>)>gt\[Sn_aZ*"IokHc3XjSR,kMe@k\2+J)OPO]BbEgKCeL#aWW`d5=ZF8s1FU%B!\R4mHI
%/J1B^EMT&-nA\'pNBl,Gk/EP\G4M$E^47'g6[_kXb4ZKagIXMt3UYB.P#EJ.TD4J>N-tXR/&(Ul4dfPeI6TiYh[UBAH>H_0)f)c9
%W"%%$3H)\-j8'a&Q<f\_+](AY?M8M1dJL:XCqRqE+609&oA,3$-TZQ)_)">ePr[V+rL2ieXor`1,XcrBiY%?%O4p0bkM,LhQRDY=
%3ihO#l)$^%\;VO=MQD*QU\W5q5U?rDs3M&!iF/=Lf_0BKestn9H(W!Z3:1K@gi]?$i$[UlI_!oG.4\mCNb1tGONcJqOGG%2,J;ZK
%9TB1pb#SN!7LSm2=&1]+Q"7hGn(?qMB>ohD9,Jd<B/V5l$0kW*6*rYTL]fiuq9nX;b[M>mA"4"mOt`^cIcdUDB0AHYA9;4NB$`d@
%8rLF<4F5]3-5tdcF*ekHo4D.ae\cO++;9dGTbt`M8O:!N>6H<&%/auRrMr`1\*2d@iQGa.oZ6NO],f0l&UUnT*1JnZW>@+JE:.2Q
%o0-Z<6;Rd\\h+2+)IfQ&D0eaWqRT\>bPCp?VJrn:;*'2\)=T(j>ECAlgX\8UXNlc<XEsDqQW)>EMKfL%WB;k%8T8NUIr,fBL0Ql7
%pc>a.d]-Laf^l#UGDaXJijqlKkEOPF)>%Koe/?&C\GEl@NuQ-7+Z%>2ir@i(5X*8S9--G:P'^o5p1dssnDc9_ZA`WJ]D7[r@:*KQ
%]ZX9*O>1V<10']lnIm.JKIfs__Qb^lMo\qAH[)"^Ve<\):<ui4[6H*)[d,*?Ed;+;7:A]SUare`(&H1rk==i,...7`T9<:(9qup!
%$P2oO'_JnS&uU63357T20tf%ZiF\nORlUCd:[`FF9Wpkth;tTGMA@u,3tI[uHf6fhMqLJHC[0(OV!J?JLZ-'`H6m4Wb)Y%qQprB?
%(+LE@?]aGnroUE`c%#D)s4d4]reE`<_nZ(Es87BHn,MEtr6PE=+90f^+oQWbpqQbLIt![_f73DT5QAdMJ,G)Z>l<>$s/l2XJ!GK[
%[oUiHGQ6d.rlm[^5Ora7s6oFU+8]FFh=IiMo9'!<hqE#KrGV`-s,qj.LZ^>imXL+<E6UVaXc'l2Y8%NtjW@jj#!B9biPuhq)q"?1
%J$sY#&,-%is71+.(C,?e+%beL\0oX+"jJeLDcB-m%E:T8.2g*Yio'gT\DAcP8LGLmK7*7E3Cl*)adfPG&M(u#?*9'O/)ZQ6N7oZc
%nRA8ST8Y!N/Qk(93W:#Ank",o)ouQE[?@4L1S]lTD9;:M#pZslJ/.RR0AQ5\*;Q9*0i]o`+"YOGj=JMJ<c#h!S;fefqjb''3Jh6c
%8(lTDjg.ug\g,"_SW]1JnKiDfE`2YCI3\)PhYER=P%6n%5(MIX4kR[sj-/-:(2or@6=qL@$UW0K_Y9D,hs\b@HG<X_HLf4K#[_m,
%k5C4kI?C/M/MI'2?RNHA4t3\p)"Gn=+-a6(qK17NAX1n$eJ?l[L#e,h?'ElMn\XBh\+6^k4qa1M^/+,I<DeqP3Gd#nSlm.PIplZs
%]StmGg,=9e0B:\ME5)q]j'&G&B4+.r(]<_<^H'o/?H6]"KHQ*W_ZR1<S1M"]fR3&=7.Y(>/bKYYc/baJS(^$k&jOHN]k3h!\i\uW
%P\kL,+uqI)RotWl's^!1W#>pj[k0gi+Ylaf5(t)FL)PC=j6.;X1_a]r%3ff=Vku3fR8U]%pu?$E;OW[m/K'HU9B$3]H2kji<:rSS
%H"igA.VIo/k#PV_fu;K6Ap"asm[h-mC2>2]L$,WgM/;:ENEp%]!O,^_*f.mjpSluTrplPI2+iGd"8D[_+5NQm*=ec6*?N[NrUasP
%q<Mja1T'GQ]Mrp7.]<orOZgQL8tU7gni"_>9Dp%fFWs-LJh_e<YeYNV5PTUtCs_-tiK'UiF8s2=.^KGF3M)k-T6=9%<h+sAXBM/d
%aK1(>]BctTK$S;XH)foNZ15+s2BL9I#u;G]3fj\q\=D\l!I2oH+L=t>7`G6$9:V&"Y5_HrZ\WF_G@GqcPU6nQ4)D=8qSi)=eTM'+
%Bg,[\*Tb;ucJ_ICl8qD53ea:cH/m#0?8aLE/9[C3\V5GPkGOl&h'O-0%d`kDjLH)LnW(kq/@&TuPBrkU4mgXnJ.:oEq3QQ[S1r"b
%JBcXLYR[869UVoLB+(Vjc]TnlEmA7s^Q&&#@eZD=rSTsKbo(Up]XmV#l.fq3k6o.^aYH8AQl),J+3r3e'Q.K6et4bSV$X[>2O]4O
%)k&J/'4r>,E9!W.J_!DEH/8@PIN`7I*o7jRN]'W5s2uD]\/+Q'?nmIQl(_X%'/,V#-ZeC8TBVU72f!b0\hmdrmE%bsfL&V&Ie&C=
%pQsZp>ZP]J?h4.kn9iud:7h#'hT,H%eAa:[T"h@K]'1Jhdf^%q#RYp,IFA9DN]Q!<6^c:e6JGQ`1aUTI9^/:a[Y3ZZ+a8*?>HMiS
%8a"\;>2R'3O%\fFOirad.;AaPVuUJJRC"AOI6Dq3cf/4o:SoR&i@1&8dEYj+?aY]g^!GV1DV[Ib:)_L?M=ECr_a8TpS6137qBf`_
%+2X<04]Bu0_imL\CEAm=o_&%:VKVEqgh@rnjb9#mYr$.\,#agi8U2Z"]b'K-4;P(gh1^%LD@u6D0.tOe[RL/6Sj>Z5s4l[8<>'`H
%1aW(j(?`#+"4D5CDk@Z#"c2R.o=Xq+P4S2U(7C7#q4Pk(M,&c\C;UNZcnXSZ2MHKFGP*4$fBbO-FH_?fc\,6*Gi9J'j047ZYL2o0
%4PcUQTJ3WUI!0tQ02qY4b\g*t1*LY4=^I@7*s:94fGflGag8rB@FJ`\!![XrF_#jZOX68c^O5-/Du1>(BV0npN[k7'2sH5PBse<Z
%(OFq3+Se@F6EbnHkeI4Hj>C^,(l`TtXG=ais6@gHol:$8mR:6.pW[I*m'+%\XJ;%kgpZi5d8_RR2S2o/;Ni*U;AoRXBG3X$$lbSS
%MdA2DDN4>[(\#3]hCO[sHb&Jrb)/1l\C`+WOV7:ZmDi!d`J<N:178ANP&7BYLWKUWpQ'^&m%jU>.0D#S?0DXa/-N[M^I]?QOSQ2#
%/]L9nC1San@l"WqOQ:QOqi48O'6[:'9mVd`=63"^Yar^1rVe8gQNf"+6TN\lhQj.:ZN@2!-eYc\E.\<SBb^EH;4";!e5moY,s:o6
%k#LU^<o*C0+.G\1ph]W.$_+LFa5bjVguaGSPjD`MIUWT,%dp(1ZBdTh[AS&^R:"],,[\/9Ir!.NohrV3oS]1].6B6/[3;H67!5pr
%Ro+emf/t9gKc@4_aVXcE)MEFbBm/?eC+X5l_*A\`,>Hgs%!oTm?HR[9iWkgnLI!?.Iu`.D7(UuW=hc85Ll49t%&nNCRPb`PftC>5
%[Ei#l\f!81ic/DketC^?c_p9B@@V5_>tmS[RKWY*)>3@>ReQ['fD5CZJ$2ePh_AJ*(6KEVl87]&c0Ee/(?^7BNhjCU5fh9&))/nF
%9AuNT<MV5m&[G2"DAX5G]^cL-^]8C`R$GanIliF4HCc+7X7N^61-'6I;nlcb45D2<_T[-b-0NnH(peN+!6I;!20kTSHbH"4CU1J[
%.m%c4>uBVj(c0DKi&hBH=mFhLC7fOCq<K=4K:_`*?Pbc@R';\gb\LnR8eQ,O3TnKr!+tmPWWJVrf([^LlV'IpMp!=J^tK!"Woc!n
%D.UGA?1^W.bl[6S<#t::=N.k/-*GG;cg#WH5*6Z-BdnjUV0(U>:ANh*bq>.T\p;oa`qd+q]qO<4j2sT35p(FRmILG+MPr&sW^m&"
%'`Gg$\8>>q/UFn$>!l7'<`bL7EOctG/]@"@AAUlFR';<>o00D0c!ZYGDRS_.IqrL9Ip0YK5:D<WiC-(ArgOIankH+$[t449hQEaI
%Z92jCHFKuY3(J,7mo_sH!o]dnI#NI#jHuX]aQ=%sbm47%LqR[lep$V!Hoj41\iZVq`apa=EgXM$h*PCXNMqIjP;VYQS@%nBiV5?W
%+omZLmD]YU`nqK.S+G<R$L-jHlKSYT1`%q!1:2LF[GKg"IQ_:h%7IBl+f"@o"H.P*i<SI-N#P-S6&-:gmg>*R(6!:kNdTbdG)A5o
%;sC+->b);EgS+W<,]p+qO(P]f0Ns)i@^34DpWLYSd5&\Jq%@2BN`e4o*shd=0hSIFk`T,U4dR"H[OP[%JC@[XmYml04i[tZT>6L\
%!ut)$.g7d[?$$TZTETY</++-DOWQDg@XPPQL3,>ZR.8iPa+RI/OZb"<S\nUAFeqdDd')<+DOmH;`ZhObn,o\hX`<,k;LYW[08GR'
%97n)%U>d;eebmD?HUDkNitd,]aQb>S,%'6dTX=tsZqY%ur?WX[oIb8L)nqRD-aBK-aJ.b>A5,7la[:j.VHAT[#9TgYrB>oOgf,Q5
%4Mj`$6BaXb$QYcY]u^^$H:#srZ<l2f_+P#eRc6V64MV2(nt%$Iprs3],;7&e0GpA7_V.-CTnk:96L8-3@ba]XG(^r%)>W=hd7:7T
%[W,b=r@$ZX?I4NrpX3dZJYAg@b\h\3?"``5@D#UY[>SPXR83/gi,oB1Op^hV.,\$MC%=ia%@1tEOEN:$C-<GX#_-N@.\[CU^4P&P
%%su?mDs-WM>.il9G]!<Q@TB?4&-3Iq(a`dn,EQG&i>Xo2YJkjiBK\KRn2ZB%5Brg<4h[!QHs=`q'sC0hktTl.cTft)Ao[>'CN18J
%&(os&mVqJbcO.^Zj++j>iQSIqEodgHG5Gr(Ph"ItScUfNmC]&ChW((\]NV_dD@E9uoM6"AADY(Rm`?g,k`V+go)1/IGn$s8+CU7D
%#ZhB\>EbCI<:&Z+!mAit2IQn3=,f,Y#?Qg;:lU](KS\d@)k$S7%U/m5<LV:/0?E==VbVMH'9U=<#JctuQVH"(0%A#;LSl3UUN=5L
%@B"aW`3bn/F&;,i1V;o!d$gPKoU>D#)>6qMC55-Re=<rG(Oi\B&bIm\OPYI@k47.(Hl>X>olm+oDT<b%a&LEn$/K)"mlA:]-V[aN
%2&p%=3B@?KLNd1ICMda1Dbs7(!UqI[UKB"]^]6j4S[%T-UE&+32M%O)?t^UUPB+!KT)h2bj\uOA?,sbbFjbQ(;7,Si/>u?cV)@"Q
%.NJU!aasS%V]<UqX.-M[*n%t>=FBTCc.h))(]@<01Z[4b?&-sK(G+uS0BJH[1iM%ZG7)'&5KE=14'JD"Y,AY=>)shk*F+S>STJ;6
%DLl46'-_t`e<8#@ZT"3:@S<uT3[VRF7B"MWp$12U.a0j\IP%9NB5X9\R,&!P1N5:F!Too>Jo_T8J>Pr:((DrcJ^LkM<;^WVX.:at
%.=6N0ZE6jgmW4X5"\q4LT#:s!+?hPAS'37</oQqd\k#3$1PcA7iY7E1:o[70HD5-]+T%a)]Tf\;)co_W*"9He(Zl;_plZ[a&X-TP
%m^dt98e&mZV,')&O'+H?<?X0U[U\k15m1Gp`rO]0I?G5NA=LuB@%R:3Mh[-5*7?$k:sfQA]s/Y0Wdci4(.C9Q1!)tH]V*#r;F"8O
%L=N@ki"-D`H4t)1^ksq^d,;[RLWN]tj`ih+c_O1@7La)95lL%,:e*)0O0\q0=J-Go8n6V\:5_U:FiY@l%fD6UK=#<'36t5;gO3dZ
%qIO`SWMNr:@W%Z>->4'%b.2[2pUb%A7ml683dl[?b6Ut</o,YT72<63J?@.]F7Vl83i&lG.%DC%f^HhLPSR#QMOfnCVX7.I)#7&0
%ra"&+%$:>DrW0fPjkER8l?m@E$]1^)q6^')(6n3d'$MV:3&din=+ua`b]`huGmuh#r[pbAEr'kAm+@P'!Ys32VI4V2iKU;M4JhNP
%7i5^j@iBaN$Cgji<LFf8l#(e-<b&QOCD&Q6W(92%A1"Lsi0nBDOtK*4i!;DIf]rGK2"[;hib*ue?D@&82H>MU-TW:>"^0YD_^$8A
%/$+C8(`e`/Lo-qb_1Kb%1?_BuTFh_\[YNVK81@0n:91J_XXj\IbHA)MO,e=?'Ji3rnklG%_'?%D?(=W2NN83?f.G-g&S?PPaQ7Cb
%\r^Z(4484ebnOpe=gST('ZMfTlR]DS%?&V/i+=B])k2OFcn>'W6O7>YS_keCYguY;WSY!hp2F(j/W+sn%arGbE+a7EI"eWYos-d+
%A;/-E.uf"Q/1E1;F)+pCnD,b?M><[h6&,ZXk_oNfr)0.R_;BV4[D2*or)m>5$\.:n/Lq%HF-512KriJI(Ot]ul#g&7?ee#lO;$,`
%#m;VVUGu694'8]33+.*lA_R@(fdA*UaVN7.$50m#cT)5QMf,2)9R_AVXb3a1^U)MDPER/+NMl`L%Q6=fp,*KFi1i!VaZ1_L0/B#=
%'ZTk'Vc#nTWdieZg:UBb4;Z)L]>Y@O`,=QI5&T?IN(DTdQXlWTIX,nmd)8+g[bPPj);bW^m'mBCBE%d(Jp8HBSW4t$h`\,8Mg26l
%aK/[Z)jd%AEXqGSBu@f^XKi*Q@Gfkl%Nj7-W,n`9nNlun]V%BW%f(MGDo_SS0sEOtO^gkn`Ub4[6&Q)R*upr6br@rn#KUAEKN=NJ
%\)db_rS?bZ#[<:ZRMp)2`C_c;R4'))KM+5t9dAZ=Iqls*T1`0G&9/>P"*C)F2>/n_A"ieEVi'+Z6PcLA3E\\CgfC`fM_)U]P^<\N
%(0NCmja//KLKD%--:Gm74*l$Ha<Yb`l?<DTR9$=RY_Ea1jkOn4&CPR"&I>s7_n:<BWS/gu4X00K&A`f/:?dEYoVK_E0,-h:EpE5V
%1)U0g#VI$NC,<)4EY:\]jnh?SP?=sf*[R*.B&^LJVi7&n7D"3DEg`1pRsAEY2o=Te7#O`@eNk&EKYIkmEt9SZUJ.'(?ppT5U5I')
%MjPVF:nFaclJPsUc+Vc(Q%aG=,E"O\MsoM_J*"jJWen&?7+7WE')'Ug(sklI.X37&KSu[pBd=18i7HSoB^0UN*Ii4.0_H?,MpB:s
%K58;_N/u<CHmi6s[goA:dH5!pS*RKZU%e.&rkWB^j74ULH+%.F/k2c2&Wn+KVNDcO5="W=^L\`U6l'6B4"q6+Z:&K_CD&rocm@!+
%1kD4<d7?i"73_dD?ORdgB)7#1Hai.[NoNb,>nQuFrSe+90kfsc=.)indrK[;\qDL/P@J&g!Hs)>/>,:QUIESFri<]5X?,N\Y^m!,
%DDY-_=@4Dol;[.VQ'I]$/$5Woh:JLKLW(n?_2f+9,I.H<"cH3U%UJK'ae7d.lX0`aYA#8VP08]c"!CHP]I2tudNJI^B!2D,;05F>
%eDQH?(2Y@e/u$lTHg<=nJsM@kUli1[LE-_m.ic:kBhC(NhX7lcCGMZ"&SR<S_e!U-cb40hSd]HAoQcFn`<XRrNF33mmH9eWmLB\k
%(<29QN2["U$t(^RpK#76[q\/P:`DNW'<,0'\#O`g`O_HjD&PZ^,3++3m$;n^BKTIr1%>F=YLTKYdq+tg0RasuICb8:D4Dm0WAqg,
%\1#4ejKpqs[*7qFEL(jF))[;sHl>iXi/XAV$-QRg`82k2R+\eoTnCt@gnUcdqj"<dCCs?qUILo);sb*8%P>e7@4-`h^1,]/<HuX8
%'hN$=<.,Q4GnVXn@NI'hWB?VR`8TWQPU\M:^*;(W9d'u+o-"\h3+j(@1'UeI6H5.'A;@N?XpoJ+010HckK?8MNO\O'Tr#U$Ul98W
%WTO<EX=mD=giX+2hjGRC\kni-$uprn;9+Ak8](7\Ju+oJDYel%4d5rNikjs33YfB#U"3+!O%o\mqA)%+Al8SsA&01lJDGD44+Q:X
%kGINni6F3GdHHA.2NK7V+ktCe0Z/N,)/tP3\k-Ln!Fc.^hHVGg!Y@LePiQ4TH1Od%DKg',VB40[#]J1RFX4D2#0=_V6+^`*$*at\
%7#I,]LK\&e9N`NdVQ:33"=NfF)N`ML*oMnG?dJ1(9L-=bLhdVQnpV/tG8n@E6c5qDAO9GA!J#A@.u0S9(<0c,3ttD>o2Q]_g(oFE
%2,qUM]8@%/XbSHh.)\2^"_3:c=f1JV$/m=,_3Vs'D9[1p5Zt%@cTK)nM.SEn#!``4S1O)(OMRcdV%JQA"e=ENPJod3(dnR*D<X+^
%r3CpC';qW8)``rZT%Ho"Q0R/R80^<((^%:`VOUtm'<78d]r-rF7OA*LFR$#=0P$a2053DA:'rk$jC6XaMZC\<jD4u,KBo<@!CRqj
%Z,nJp=ac<Jl\QN*i>9s.^a6VaQ"!=<g*r"C4Ge&MrD1Z4#GOiO?LqEt-:YbC#]>^/=HsHjEiI#!%d:ESkS'd7/WEK<H^Y\`.]H\\
%Ji8f;UP[;R_hU54V]u<P#q\Wb8"`(f`j/'uP4_CTeSARc/m"WHr]+g,jioN"U\g-38intE&db_.@0rY>+4WnuhOQ@q;'ACc@NM#h
%9tJnk'JN\P2%Si@1p^Kk,Q:@E1ckdj`*u<`]#'HXe&_XCabM9U2/e[:3E3U`N4QqL"=4<:]2bp>OAclP"7?ntk:iY!epqdkl7\-U
%oO;D*,*,1p&[bG"/XFr9bPQr3.Y2T4bo+j[/GqU;Q_T[CZKp7!Jq@pa1.,59DY,fbCl&ngi(st/<*B>!X\h&D^$a+]X4hA<-;3)'
%Kh*d;"nYa#)3'Xf/L9[n[u(_.^1H`ejs)GQh%jimJN.ph#-u=TR2N,Tb//6nUY%I/$Y=(f6\B;"/@ZPG*+:um=Ih\W*BhP0kaW(9
%3f`g<#asd'jM=tfS[Y?_3+>Y3_RYLEgb'&NFs18OMj.l?0?uLk?XLah7]h8?gLtF4G"_G%Rs:N$,p*r-*Rj,JVFb$#(,-f[1?jo@
%V$qjh9A2NcQmTAsdR'ECXu*f\cmFu%mY8M^-a6WoB+j-MGl2+o+^'Y';k/'iEa-?,(<GJ</fpRmXg!oK$_ZaX=gb6ce-FWL)o,Z<
%-bj$+]T5Fo.$-"0M;XNdd39S&=knp58$3N;#)J^]KFI],1k&Usc0N:$M.CQ0":HsF6&WZeB2,?7U^Y@$oN+saPD$q:!9u'I3[;W`
%E@?8QYDkDk$B:bjG#P?j'17I3_XQqQ&0Si'NXf6q;\<Y!GMNaR-kl6ASa$l*Ka^/5VVQ*gU\+[)G:J.Q$2?L:Ad_cfCEc!(ISeN]
%4,eE?.DV$q2U9Rg=bF!.Pm(9S5hHI7GYZ$<!"fUa4*3f?)m*QOX%+1^2'm"g=Yim/%[Cq%nTo`uS<[nHnjH"AGjeeG91e>Dr'YF$
%$g;^tp>;)p#\45c5_3<==AT+9W,`4<GRe+hKF%oXYqqIrEH(=[nmF"dk_SJ[g,.K+?Vj"lNd*2]H!IGNfio(8.hgPApN-o`OO,a&
%.rU_jecJjB>FLqY;DmV:/k:i\-K,1A`aCY_>)hm42'F;s[eWdLAuK,n;@sD).-.0dh3M)_\esh<%o];cKt^;:0`#CB!aL%0)HE4q
%35'<O+oGdOLPBTs'8t0cjPCl(1m.J4D91E.a0,Yfm^k3?a2#U0#%oanN['Kpqfpt<d>JRfl3Po=%lM7<>3_MR)gYHm&fqhbP3kdZ
%!Ta4(i)\\:8"M_fM`FIi#/^orGt,dIGVnG#^i*FGAE.*CKEuJ%cq)%i6VXIl1b-[2!H/oDD,,B`'fC67bPE:8p*`[K/=?dWK3F2u
%OchD#F]]V*@OC/O;2\-'`-`?.K%IVk1h?68p/K-??&(%4hR^+[d?:I:@mMOTVi>hP"Y=,1Q\`oGW=p@'blN%\["g3c&uPcY![f#p
%7__VtDpefB@)gu2<\-C:i0Se2!DfsU^S'11&dS'CRMjQt!`lM\;.tX%=K4IeQkJ1.f.[YaMjuM0P0f]_?cNb%L4`gN-U#G(+7BVS
%!b4SnIO(WBQ''0+l``QhAKD'!%hf7!?jto'dnmPs`*4*q?S^K!Tk+PM^S"3F1a5ArRhg'5D&5YdH]1)'V#71C,a(9H-[TT+T/@;k
%)F^:F`M*&Ej@=MZ,0/uV3hQ&U&QYQ7*9m,!"+?%Bd*H8kPL3K)j9WO\]A%b>g6f]l6C35n]=Q\ano8]q&MP>E^DM64Xr%3$U<@?n
%d+mt[j>lPkKL8_3e9Xh9.r#Q2>WLKQiUlXdX2]?2OuOR\o,2BrBYP'FR-O>a?5r0-W=DWUQI43PKg6r'M=nCFPMrMU0BS1HMS-;F
%'Hqu2T!Qj'!(*Gh*2GWhF1LD)#i,Kl=sejdj+RA]0lk.:i<pis$u\MLU4sJ/!f$ECENP]gN,C8f97UC.>,W+o"%B*`YThAF'o2WH
%<C9bnYV6W7:bRDT#L^1+*<8L!9XL8ZmV?&ZHkJGkeD@-G_ZK"r3+F`Q`ai8CZ0@)G\g6K(&=*JY@5FT@!sOYbI2\IYP./CqKut<&
%64\<sK-0=%_[TNCD^4>?J73jYg)m*J/bfXIh1cLX]Qj0n#'pMmF9fWs/a1:[0XrQtbp*5Z"tY7sDjl2d8I6_npH3sI)K;-1<Z*#Q
%;%IeW.n@&M!3Yru#qDl2A+Q@U237&+lRtS9&MA]4RN.Ot(dU"pSIgne@4DI9?359'83ga$i&(oq$&)gB'XRjui5Y9EU(JhCBq-Tg
%+T5C[LnD^%ZpL)8Jsr"];$65E=tOS6DE7dMK#LPQ1=-,Si0*nH6dH!Qfg*8_7e$sL5`oQEJ0,he%Z(WL$;b5'&tQ$YeriK3aA5Rh
%d-c[LEt+>@42O?Jg)DQ^!ZpOB529@g3*VQ8j9\g_!:Y_ZQ1<7<";3&*fK#c-+pY\NN^5,M#)!gIFJ5(U&1u!B$A^D#QNh)4Qa_o7
%)mi#,@7MK!KfXaQL]Rmh!Krug";9rV.NaO89C4@tB,m>CA;SVb0+CFgNE0I2:RTcp+Fg(-9Z?8`KHQ'`iW+WZ_O,_Bp=XnBLI',i
%N-*NC5<Oh"7rY>=+2p8:V/fu*8[nd!%Y-uQ-BpN:JB5W)V?@C9%iUf!(nm4>>gQK3f$S;EA_A\nCpWV?"[\KHEt]>?,;NCbDRp.!
%:9i%DBXTE$?QpuSMYqo94-Udm!.nOaf6=Tn[@BARe&]GXX89]-Zc#iX14FXLqY;k[Hc02[9K6-TK*&mnd,_4_fH]2Yc.W;'&j+BX
%I:\n(go(\$/dc9bY]R3\^F>]AbuKR3+&d9o!p,9%lW^DH]cdZ6"Vr>t52CK\E"k&\+;.1_g_1"W>JZP>jp7+):@+\YXt^iM?'*(c
%.SOG&NVZit+eqH67S,/O"=?#rT?DWZflm'sYXi!B"uHfpZuZRo^Z-Pt2'&AkZa:M(:PJY\lVC5g(6U=1X=+[="X0r2$B!NlW$(K_
%7N0:a/48!]=Q+Q_U?Y;EGl[=]gerV=W"V4AEl5rNZpbseKF*qTB/FE-'NkX`qF>,7QIhdtd9*:e3T3V?Put#Wc%LH[PA81VG`g5b
%FdTd?7LhK>iF\5!8E"Ai(LkgS-sG"!;M^5sfn,m+?K1F;6.^ZSUIc;_>AL?S$%feKqFA0*8a`6C;#ET]-p*;F[O?H3$*E$\Wg$'5
%,nFfFo"0fkeqmEo\SN#h?d9EYEcqZkZ+s*X#J;;h:P-]X11gZlgbj,?`U%<I#u3;r4:Zcn7N3irkZ]nep$+-%&I-lRD14K3Whi6'
%:ob1dT@2=r.Nf6P#^=F6#NK,agb09n.%9<jni$?]Ba1#SFB'9!"`IrV1->om:5VnC6?DN[IE=,Zc6R1rOTeekHutpU/9l]gj8a[K
%VP9U=$Z#r2Mk&0QPL0.X+TM1!oL),P2`n(\+e`lL0h7VF#Pp"`LN,<"hIO!t'p!JuhCu_c\.7a4f1"TdU/Am0js-!=q`DJbV3ae_
%dY]1oI(2<`,Qg[29kC?IE$org7F*A4PVn>pe"Q$8'Fj3+>j;OP!+n,!!(M?rdR$p&,Z8Q=mQPN/@XjHAKVQUN&aO?)YU^XM.H<ae
%@d9rM38SE"[#gd(0NLgiAe7+<Ab$N%C9f`'>VRa/j!7m2N8"Xh+UQ\ShdJE6)&+'4]@^32<Ws'Ea\Ff;B.f>O6W0L8aBUD^8'%D.
%Kd&clFl@#DLh>hLpA(AEI&]p-nn+a=64nVK"d3i`Z^<';8M/0JhNRZrW;K>$Z4T(=Wd@Vt1`'Q2EP@A<McET9@R-]#?Qr)>8V@@E
%,k8Wc"=6++,nRBB'_67)!O'=11Xn5rm;^8C2;IAi["@A6TK0"K8BnW'4<eLc474unbX""KURQE@$3N(/"dQ?cq\Tn(25JnYi.3DG
%_Q%iZe8.od8ckSW.$.Wo(#u9,7__Xa=lV8aJ#AZ<9kDZ)k'k%&Ief_j?0[1];!K-WDbMQHO-.i#P.Pf@%''["CjhT4FrQ9\md5r_
%Y%8.qk&Ip7"!$jWTbb/;\XgEaH.;*tWu`DL?lG<bAqO[rFNoRLJMohQZGKECF!)4SiZs)r8`X<:G+'-Z]>N;'<%Z(HE'C-?c\LkA
%2Y%./7*T*._^HKmZogj_bHd_D7Nu-p(?eeGFjXY%a_ZKtqC5<92E>SZ%NQH>LI/i]I#5r"'.c*#rCj?EEj@=#7$7RkQTX2%BhYX2
%dO:Pu^f2r'7Aqg0FPpWI^<,TpF0RP*\#*e@2Vun>=$do+g-?\A!l^lgYV%IJS-iX:3+SY,_$i1/fP)<dhQTJVc61UZe"a2`OVqo>
%>U'rA1H[:/e5<.K`p#DX2Ot8MpeV+JPkb,p"ttoid@!</P+fI=I)LGcQ6IV6)3./lkmT6YSe#iXH</pqg&-]+cZN'oTSG>-an[oK
%=e,/J)[Vq6AGQi=1kfhV/4=+\cH09_V`UqM;Cc<6+Thf:SX_iMSV'THgd=8WC'MI+S"o`!_cWX`4@[MsKB"JV^C)APP%n#c!)@O;
%l<6[(rU'n*Xth-R#RI+V,N1sC"ls3bCF7hB`U4eElMCu,/7k9R+@^l\)pXDZV23>0Yj+)L<W-;b58[LOpRhH@9OeIe1G[5M4Aj<[
%6JO+[+G%5)POEX0!.>1V1/:/\Co@LuSAU8Qq9s65M,K`&?q',rS-fpg/QDY5F_[cK>Q`YZ%*;.SO[b,L)FN`Rb`'ArOqA2hb)PiX
%JS]$sP[Ij[d)\VZh7b6[ZBuhhmiT&r0g^-MGTY4>S9Z;I!P6U</l1=uL^FVDNMM%-L^=7Z,W$nZg)p(le?c"<S`/e,etdUjR5Bn<
%8cQK7fsHUc>WiEI<%OeqJjUK(</bs.eX69u%o:%G>dnTcTLbR`*f3%\*TfNjZ(SFX@KNM4K3$!=bM4)_D7j`IfrbBK[MG)QO)SpK
%HB\Qecr_C'Z5-I(1U>XU4'/sYNL++1&le!R\]%!n"Q@0&<q;(],==s$>%2ZBeQ'g$":3"=mA_bb)3)4.XUnY^>58_5`AGIu39`6&
%T7u6:<o+C(KFCp'jnOU0GVN&L#(s4%>jD`;%?iQi9lD4*CIFd>#)9'1!1CkQ<%fqW#+rE9S_Y;e=9L+5_^Wgu%Xbs=DS>3LE>Egc
%*5=VD:"'Z.E20JmiA`XjC!*CISQaVY>\8LKR^FFd\N4MjJ2X?jF!/f4afmWI[ou9kKQ'p\WfO)?:BORqAaok,[PPB/1MQ1Ci23<=
%6_-"?\/BjND,jkm1?oVZ_F\04B0$E13.oo4YZ?#X:NCT/6\eiP"--O:oME_(MSQ1Y)9dcDgQ[1K*+sZ/Cef]X)_h8*0ZH+%:HCAD
%;Ufqa`Y)$7*Ma!"6m7#Te(go"U0h`8<,1\,HYR,$R<>F]s'Ta)bp9(WPI/XN`$e7cei/bF%7rhQ_')/?9n%7G8R<rq^PcUXq8)k9
%!Yh;YeLQh&&JXa4hAU$h\WRF%1K#3/_q:Fs)&8p:*rO>mYeqO+_;8.a:c>&VI"blm*\)3iZ&Ia"@99QOK@Q;/%PnM*_Wl`dN4hsa
%"jROTCC4$eRljMt2<pEm:;c?+FeU>N`ZGO3>elC(KcF!9JO@Gq75pJV"HV=ZUTd/-cs(Y$:_9n@KGW,&p;XPk_;]No-.C7-EF`&5
%/XSCWJ^Lu$!LDQ9+_MEgMn<XtG]e.$_jr+k.\d]]+HI"SkD?L@``"X]_)*A^>T)^HqMF3^iTL!5rBt@p>@53;!%/^TJt<qsf.jKs
%a+%DlB;F\Hb&7ah[M_1Ra^'%#EXgYHWMUPQ6`jijOr"e*3een2)@KXmd4N3l7jRhXEO<`A!Yshs`7MH*`de5W"GUR&0a;0>P?+Tj
%N&,pW=qE*=CN'G;lF*ua9lmQV8$\(6'k\Jj/=1dupmr'I:qqXJn8Ja*27cHT&&8%OqPSggrT^^Jn(rNl]<duro/EjQqUt\:04++i
%J,\o??_:Vp^O!oZB3kKfro5BLZX8l&qT!M=q:Rk+#PW&ns7aS&khlA`s/5n^Z>ZASB>8ohJ,eEslrF(D5Q2]c$4M3*VcRmQi5:YK
%m`Y8I3Sbe?2Ye3Q2,3DGoKW!Jgp=cRdB)D25me+)VK3;Ff#]:[nF6fQD#Tu5mCuXBE7q1QP7n&2P2bb-IXZMsUi^VVE/<9FjFGu5
%)S8(R/K;f&"XUc1]H*`XXSA8gi%8>S2"S9s#=B=kNgMZK8-n#Sr#YB"Y?d1AqD49g<$m9TGUd<8>k:6jW;;6"b"<BdL<MB\IBo3%
%#=b1LMNh4lRSsh7CXJUH&dEc26uO_J-7"Pc%].CC%",26<r/d?69?D.*NOmV?tKW=Nb3qq!FZQCF\-8M!l+l0V#40B>F,Ypbf#/i
%_Vg=D6g^nkXsSim?l9,G^'JnhC5*<&QO.nia=.u\&ZJ/+\7G[Y*%\6`ad6=]C:J%DmQ)^?"&h$!@5_;?L1T@07nAYn@@p.GN/a]R
%%N?Q:U^QrtT.'7Gd8dg-WCD?@[?V'k$GSA6h%5-R)a`eD,^#7OQd)*RV,),ET;#=6X$Gon"GoF4+#K4T9@eh)*;]g(@7$0@_ZT$r
%DT-'01Fm731LV!L$.r9$E=>.#l#_S8=3!bf<L>a^(lcN;%"K:bN7Os2`S,m+\s>ln`])G33IXgqNWq#c[s+PXerfW_!5!"!<f(nD
%:T>-\paB`Q"_#oZF5ho3Z>k9@2uuj>I1`B^MSNUGK@)U,Sp"0FWu*9l0(D?$H!(Q2#eN%>jeQ&r#JenE(P;aeSO;Qh%dAmJ^$*7k
%,k,#`^hB50"]r6i0q=3MEZ.7@h]QoO,B2jP:/eT1AFA5#Dc.T]#"[Hd%?itrYs1FB?8EjcJFkZE@#iE(p>*aGLB(XNL$C8RFC4P+
%,A'"PVNBS`S5:,WR1'0"/>uJ[7YA>_&rK5Vp/mP0"`VMU4%W/<B^%N8rmXN1^m,@*.1Xa-"oK!Q'qq`C5ph"L3a39AOm@O:oiAt6
%&^q.hVWI:'.Kb9%:8i-qo^PqoE%T[%UWQ\-*#iQY@L!0HJ`TJf#XmfkjK?`mPg#_sLS8X]s2;go+Z5"[LWCJQY\TNN1_QQ2n9f\L
%6,mSS9Bm,R_np=Hh+Vh&@2\!6,;eFV"n3``BfN6,5r"'bmWR"BcE8l';%>^Fp1PRNAFo\:15deAPbUMp6O(Xq?N;9<%G+-r1C/'b
%DR0q\#@/_WPG'cmo.7n9QA*]321o?f6Vu!)AuK=`5jr]Y(&!9K"H:[6*/rTKK]FZa5u,(5K[3>r9L0U=b=)-jPsZiu"10g_EI]Ql
%d@=tgQ<5HgV/Jk?7/D6@MiHb;L-XN]k+"c`Zu[FP$%p%)elF4DCj,W5)HmaiK,=X%9$ir7L]Z+Z'Wj'V8[1<3P$:!OJ;0dVUTK]Y
%%R<]3Rh1:A_F>C024R!^#de:^^XnEkCrUjt3*5ckPnlXH;J]&oLVu.X'+&__XUWOR"D03^AUd11?fH>[LA(<^5Z@)lC[Y/3..j3\
%[Uflq10'_"$dll23\h-CR4)TtCiL=c(Hq,d)l;70";;6#r8_J#Cddr?plUD;a1?GEkDP#E*@Kh7QO:^Nd1-!M(_*792DG:Y@Ik@l
%NgG>&(,@AW;O_"O84;-16!8kS7?f$s_I0JIVG<-k1mFDBOW4B)*MORY^/GT+A:4[bnYW-l\g%s&8.#Cc*t1UO3ZNuB*m;@:N"NFf
%8^]4319(TL;qKKQXW*KjPaI,t%[30&VEBMX$]KeTLftn%SOa07(b1Ogi]o<-4^(D*W"%pC!@.dDkcG_`6Kj8/96GFkF'XI:'H4'h
%/2u#[-%1_N/33iG>7!6%Qp"4:)t\)SV/6?N]0),I/&:Td,104Ni*jeBoV@MU*iYO-R4OOl(sIMSM2L1Y,uE5h'@8h#^:VeXjqHQ9
%GX"ehbsGo(+%;,F2,h2sLd!J)=`Uq(M,l4EI%4'M`B&*1$Q[S"epRO?nN6mH?8;V?d$>/K#[=S?EcY;dPf]#Z#aks7l(Oub/*NtS
%6c3mWGFMF!YtV>eA;_C/8[DSlT'C^+6jVMPAGujsgbgMEl=XpH1j_39RH+jb'@DsN7%\+8]7#PtC$l;`OI4t]'S3t@\m2@A#`.Fh
%Ra1G\F.5X4%D>T<E1/,M8W[#T/Jj3qd%b[*eCQ4Y.<bc,ke'U*9Xn[;"1:Ku8!oX)T]UJCrD)Q.@EIH".tD0@N5Nc;dh%`ldn^So
%'B*Ci*tBG#SXn!PQ[hOZ>V@eq=]r0)9c?eQ\r4qE(k4dH(KBLi@@kRp.s2H4"<;Tj$^Uj\%5:@1"!F9>Q$[R;Ob1t.8Qh5dd'#Y!
%FJ'4ZDdgk#F=tM(koFZR3*7a7:f=r2_g7WUh]sOIa`k$sc:2,*,?lMqp_=4dKFfsZKZ1"mF>ET`NK>*&)(Q`FDK`2uT*"QU.%D$X
%3[I@pk1CG:C4lF3&"`W.BiC`^2=h%ZjW(,*6FL3gZ('OuI!6(RO?1MIDK;<grTPrZU[^ni.Us'Vd@:V)k"M:OR+RWa+9de^@LPoV
%@7TWc^nYTRY\!.Yq;s[s3rss.UL=s)oGS9^kl+\^"dB1[(BG2dG=H7:BH^Q0iR(e:lNfp=RFPQl\Pf.?E+tr+4@'5uc.![X?`^;6
%NYm9QG]cm.3-22-Qn)0+qPE/fS_DS++t7ZUQ?ppRqAN'K2\VY1c"0a1E&=b/+p?1,2rk26+tOH8`Q;O4?E.FWO1$!$+FJ,8gCti"
%blPY[!c4\giWFrH)\)Aje/Y>$+m3Uj`/PU:WFgBtLAtbj$k,hb(,QIN2m$8_9YY/D9Aoh(k5l#^o@/'47uhV9SqA'.8b"W/GKrZ1
%PA\2^LR$(W5DCO*h?j?EXc]7,VD,n6P(T]PBC`#%].1;sBaBJL=]1=/XU4AD_%k#'a$@.1qiZK%\]uR'LMahL05;adkfDG6ZS3hl
%I9MUs*##b_(l4=l9F;58VRJ5tHm$@!doH!FlU=4_4fWX5L/)@_/S@"a_$lR_:9I:hV1?Y1`"Ps:j=^igA9<,V;iha?OH8.@bd^hY
%B6o[bk.j(,IM!#(L.8$!@(W38dk;rmR,jOt#Yo[\a9tn<T.rj`1oN[")9@G`p0s"]=J!Q>\!DRi.QM?<DIR%WN&:u3M]m+?/Nh!m
%f;@A6,EI;IMmg0*AqgIUor+`7U.G?I3c_J(5053JQm)b/)tuab-UD%<>1#gTM+&\J@q[stSI"2\W3'odh[8W`ljZGms!P_7QVk2r
%@l!RT8iY^q6^/d">qd1;_?WVpe'nD]["K<__MOHU"6,D!(ebA<'i4nE!-JDgBu"p'kU=e5!\0]B;.6a)65Y,(MblM!7^WF)UKpjI
%gfc->9fb7R`Gi!/=!%r#URs!rW5@d:mS+R1i5t2EW8".=^""AJ%ejL9;&@FVn,sZ#d)4_@0IRT2(PW)8@`l1-_ps.ud9I?HqIClR
%e,lu0D@1H+:$.BT5A+gpV`eJtL"%t9%3)%9&Z1j9E!;5m$,SX]Egs#R8RCqk+0@B1$(((&D>HoP-oYL#2?Lp/A-BSj9:Jlh'%_8o
%?8*`XAV@WccfB):>-!T!ETuCh:tnYS9n9*'oOPb>[lZA3od!$'M0.tj3/7e8;_uZ,",-&%*Pok"0+60'>(`[LdV*qEjsBKgH`ZKE
%V7H=NFZQd:9:r=@@l))TWqNI'%2jH@"E:OYp_'%nW6m)@&jU=+pAns'.AjnW)KolG#j,HQ^ek9W@o8qT0^N9U2?6G*A?B6T[%)dB
%X?5*L(R_(hc:5lU-u!TT=`Q2f(efTm&JL%PqF*I<)9d,sLJnVnMb"W(9f!YIp$*EM3K44qaYKUNgsV'3n5L$4[Q('!7WP.K@IOhJ
%0u?lc]kg8+eT@(o[3>t/E/=&`<F@N#qmQLu8]nhN(n4696j#p9M9<n?G^AS!PGH$t]ENFDWG>Ca;)3B`VA>ZC_YTOBR'9/enYka&
%N)Ac9-&cH`.,1Rqis<$q1sHHOd'.S(ne?sAa)Wu__b7d:;kL/R8MuGZE[96l0\52@!]D9d;Y6Ks2OMQlDYs<s@*kR`ToS8iC&SOj
%%s6KWhpiood$Up@_7l8IRq<3Ol4WC?Rj'p\_cE]N_use-kqt*B#[l:V7W1XW7E].T7Ct#aZ=n=i;od'b-<mIBYu[8g]6[A_aCR3R
%R>k#oHig`?C?">_]mq3#<pQ9VHW3M6`hJOtEcqdMAnFQ-U?$oZR^&V_@T2o=1g$mbpIGLMX+:'onNKqeTl']-(SM^(&'=ih0tUu?
%)mou;FF6LRn^`T2=KsBS+%I0Mc5+;3jOs?Ul\aJr"0?qgCMc`&&a]!9>>^Z3=WUlX`*1o+jWj(X4l/Y^DQpN[qme-n`3!HFnW%5O
%,d_IJVO!Z:"IKX?$r@c83Wm)i%ICT`8^8$1:QmK,]ErZh>f9.\4*>WLDap*`G>B7^0-9Yk-m;F`1#(foP+&fgcs,>U9j>R8e4FoW
%XQ?7j^,2;s)Xf"=in+O0-:ue[Pd6e=;NuAp?2PJ:ngQRc".T0A=KY53NXb"Jr*s0]/8TCD,-'a"Un+13F[/2g/)?)$&&&6s1?dmP
%4!UDP2pm2'F=E.L[h!kmjp^dVVqOTWq[`M=k/8C-@=:K:`+7S2g?pdaKGHfQ<#YVM\knnp)mr@Rjsb%_NWMU*:$$9/fmIAZ'\7,G
%!!6TqdGP`NELSb8GS&Z!Lu94RfbiTYSdblON(&*ql4"U>!\q,F%9t\AL56_?4]er=J+N5+`okhP_A$po0,Gsn-rh_9DSZBu]=TFa
%_#\N<2o:gs-O.0J#"un2R7"'0l-!5mhdB%E4F/,c(MNX<,Poi?Ysp!k`3a4V:</bMb*f>DLg:W4TEYOhco6VI*V!Zo/@NsJ<PpY'
%$>*'Vkg1#h>j"Y+;]*ajl3MBeg&bs:iWShTlG#6rD!>kth*=M)S2_3.dQ7iiJi)K,dr-OR_Q2dr)tTn6KRtW]gnf.1-&9;.iRCmg
%)E90;SkatOG8pT;/;3kjEf!M#`M+_/%r_k9\@J%$DNY+SRq1"4+I^L!Q47cSnp=OLTYEHg2Nf=47T7tDGDuB21p@-]@G%r#jfV/V
%<]2X<&[)#.M9KDokQIu7A84t3EXupuIAPY2n!/QQ6AKF?0FaH]HJ%3kVV3ok+WF6$;N5!4bd_6"kZb?S;)3Z=92aicHSX#kL*cm0
%2>A3KkNMc#gjg4G-e^Hqml$4<*VUBlpQP:uVs"h$Utni"fJSkcs)!GKlM`Z&VZ]b2efK(+(A?X%KV]jGNdAI+N(5`3Sk=^&i0]Z_
%oQh,eJ\ZWOmgNnYf]j``<g,EjW?c&@,$-<09rnCf$`Ab@\d*Uk57eagl.mbP7^qLd?_NV%VFpSJ8`beFe@O0@A/fJFrUUGMCDlE2
%J$if1C8K9"T`ZnJ5"Nj1L[a*e^/,nYA#L"RYu+@_ZBVem]3CBdDW`ORg3&uV_s'3p%$Xo)e`gP3_Q@+(UhCCRS-ZgG4iiC\k?pTb
%4G%H-6H+[IC5a2Dfg^c72Dhqo;s-Vb<F86)92GdKiS+!JI@Xj9UCeM@+X&TFU>@ffRKKTU63dM-e;'?9h2g<-%'Whf"U_/1lhWSB
%k-\ep*eRh1%B%+jPAXM37AQ>E*eEB,?oKJO'/_i>IK6ZOE\'d!NF-a[^.CLdj@O4r&o+><&ok-I=<aJ%UH:'LRh^ip/;$I630rja
%o94?BJm%dm+,2/D/M1?$F(@nc?:gNaOa9RrLkKG3&ER)@JItd7c=!\IiTCZ]jRA?2KZ9>U3Qj/nk5cuAYsH(!bpgc7S[V&33.<Q5
%St?ZJ2F'(2EoFMO26I1(Oi$LnS%WCN)&07V"=rr(adtg]0QU+4g>0V.$NQ$ACJ)G\@=&M*amst`.#4m!+WpTE0A@X/KXFiCOUt5A
%"7TA;C^'U\`K*_5XW^0$._&(<&ur4D9.gO7e\IH;Cb6,BVTl.,G[s0h.CbaOd>6X.?C6E0>8rO+"0W2g'h[RA^J?@<iRo]*6A_j]
%"JC#AW4R<bR[kW2HVKkp6Br_kf_2:q*=[f-nJn9cr@cGCQCU1lV?%YpTf1fgSW^d'(F8!366HBI'VZds/cb;iJN7XC#@tJf\]TB/
%C/)%0=IpY-IVr-.C!@)/N<Pr&Sc_u@iTCmV6:-pf&Kk22FjEp`4t<o&d>=l+M?ui;#>:uE0!NoGW&^g]_<$HS:m)i0'kSt<=DV/3
%ngVQ6d$<JaLr`$0l7Z>+K-(FWTlb=Z5`0:\^U8(YP1V9K3=JnJ$Z2dTa"W=HL35q*>h&l=U"6=9@$^VCNTV\48/[6Uoi=>)l12/!
%:ig0J&G#*FXtWtJBp-ljTp=k:n8VL(93ha?r4+CP(.Y5kcFb$TWM):F+\Cb$3#eM!\%Q06:=Sl0)a<Hd1/^nkH>t\pE0(I=c5"E;
%!7QQcfPTPd#a+%\@=#h)JP:V%]r/R9;QpE4U@Z4,J^%E%LbOQ5FAl8;WT,!&NYK)Nc#G;G__GI5-S8kDKBqD6:kW;4WQhWp!d<Em
%J:M+&W8iJu4>"pXTOi`?SE_jhrX(E*J;1Ziq#V<GFUBQOCrA"@?AkQ$cA796-q<`I/\^hr[7A&YTCBu-D."CN-XI.h:F%Y/61nJ\
%[D\bngV)+XO#3]e\mEU-NC*q<`t/Uj&)dYL;PhWj+<g#Z>T/''D6JRpd7_-jda%>m]cffn8$,KjeB/A3bRPkYY["R?kk+,77"\+$
%RrYL78'1?Kle83WY[-[UW[7ti>ICG5(\4;R(s(XoR?AbQEWE:;"?TmHK@#7%6]_tS=6C^6+Y$;Vj>i'C$?9+,<a)ls5SdD%=M9R.
%*&hPujJR"FDoEY?B$&LF65OTmRqQf5T+`_\mL/_,gebqO=D0Z%%=6,77L"I\-P[%jR_rNK+*6oiNb9_Kd7&"p_+$]!@W1MRU7I']
%X!O%IS+&n,Vt("ph5eRUTp0^)0Wod]8Tb#O]ZsgrbdWU)phP7K<sN]c=h4MS;.lo9-1("2K(S"1cD8;,ElfBb"!M!!`Zj=Yjs7Y$
%76'SGo;IN9'!36LZ2ku7!D^_`6IT7c,Xf_5Br^^Clc@K/@6aO<#6fdi0&m)c?GPeaq3M3pO#ScMCaXUV_3RDH!obDaeou!'MC3\e
%@0&)*E=j]^d>J1$_GWYD2<`:3TY2/bjb2%Y#SrJlaun+o%X4G#!aNSk@Z7Ao^%GPoVOE232=nWPdDuV=QNgc#'Q8tcHWdtQaoDO>
%OVb9@7@n=K'Z[pG3c3rA[7d3POIB2,H7R4uSjh:r$3d.JU,9CElm>A>dKFP(6_Qc7cAblE,te8b8^#`lTF)g>e=Q>HN/%JhWVjrc
%nID;(pL&g\&QfjD7PYg9?V8e&R-K'ug+8qKSCM*q___0eT1!W9;ogRe<H(kA/BtIuA_ZG7UOf0SNSS0$(ldUF_!j-'>T1-[0,ukt
%>^?\%ahp8L<n7ZeA5WS1[9@NOd"XC&rM)?rJ&7K2UOUSECW'BSQ^_/C!=7p@N>P-=\)WVeq>4R%KT!=f;A(U,PsIKZ&4JuQ#E,!a
%/5@ci_9bilYpU9Tb>3^?D_ec3<uX2N!a/0t(_-@9*=7mSUWT)&9@Ka?rMCp!K/44"ZcWDc8#T1KRt:';0pC6m,m=T4W!mI"rk9:6
%jLEm!<2G,&P9V!D-BH^ZK6Es1]b(AcVo`E7<!5j#0F=O(gh_QUS";NSEG"PK-+)+GH)pogEhS($3L,hJ_d2VDC[8W8Pfm:,Qha"r
%\J*30-UPro@%@=%i\F[&Yb/b:1g$\UC$5hBC4`97rX+#$InYf;IYpD#M33d!:a_DM%N\%hcS+SI-]@SO$.Zralmu+D]MlI;AQUtN
%.s#q9hPjPpFfHET-KTPbo"gfceT2`_._mW/_??R%d_42B/L;i>44soP)uPY*)-BEg1/am75?YsQA%2q$naP*><\P:jbkXdB(:c2G
%62h,\-kgV'*Cj;<84K%05ogGO<,e?.19B#8muoNfLA(t>!ud^W\8pn'P>aY4B\*U5%;:[r1X70fCBfmW_%^3LPClLU^_rWsW5O54
%6Lb1G-q?^0:_!r&j##q"dfSkTEi@PE^1\JB[GN&^o9(tq3Ko/BATER*'uaiDZ<36q7:+@\&i1E#Y!-Wh<'uU`VfD^=)+!JO.?)s)
%TGl)t>aa@`!0>\(,iJf5<cac"5&"E,7s[UN#g:,1GP&,uZnt3.kR`n6D0^-Ee-7F3R!P`*,l'IE*Fs2B:JGjSUu7o`kq1rJ:JefW
%"<NO\pe$BhTcria)V=$s'V-sQ3/`gbed>?@/<\gaXjJt_H:MT;E";Tt@[tRMfs8@JGr+^pHN2R5Y?$;]=f\(L1=#-ZOXm;aOXgLq
%&sWs;Dqm+!mob+N-XV`F)c%`P/#):3GM*]-V-emP;1Jar9uJl2.,YdrlchCt</</X21;iH)%'tJoC&&Yg0p.;'>JEgU6jki#Z.#,
%Ar5ar<L9uY6o0bnmceb'Y*\B&D*@Ej/C'nfOqf=$'PB]d$9CdLS3A^pb[qSZ7(Q;QYSOihiMEo$+=%<-Xo8riU-/'lB0;D2nX[Yd
%aO+ILGpgS'p.;djPtFpu*^5M4M(dqrnZF?_CZbGU]Oao7C*&2"R0tGL$cQ6A=k&LlOH\9.'OOU%"iSiZ#5@H?!a]R'MVS`Yq*O%O
%%E*)C,?F(pGo.?*D`Kjcp`pOOR9GC\EYgPsd1L$_R(L"'YOLsBBEM?X6%oJ$)$r0:'bldJ=b]A,*SaC-f`Y$P#O]*6q%nTtPM'9_
%!$8Om`67>*0B2\24Fe39F*^OH_k?O8b89Eo@n+.hI*nrj^B+l!^!`8)1I)(FRooA4p\peWBTc+(hSbO(D6u:],kiWC#M'kA\$ad'
%`WUN2\Kj.$C+^Ku+e?fj,;itKQF2p`3-@,cI$dqb.8]kM0%g&9o"HUAB3q\sMBN2gV+hi=7=$-(?EiKJIj^Nc.3Fj/`k`4($!a?l
%p>0u"X,MT*nt33C11!8LIWr56+2R$=;]1Ba#uE9p$47#t;K"n99E$46;(bh%je3%aHMfM?S?8P+B)X6:n&p'Q^mLFY<edM_&V@oo
%:P!6W]5Zpg-2>3X3^R[)=T<(<j\2[CVU!'*joPN?e*19uC.RPKdQtcciDrEf<).Mt"tlA63]0XXb-/(6Q'4%EdLVIop6tW<+iHnm
%MiQ/KYEQ^>gP7&5%`K$r-(RCfJM1jE'"Q(dq_iG>LU8eX;O\mt[\HsGrFd`RP,2qI5J3X37PWOPB_3]C;)b"o5?T.G-+oMUYADH>
%.q:AX%a9qb6;8TaK0lRfeDG6[F'7,P*%^#o\=I!pC?V[!3;[?5h/$M,611)E_%==^"cu6LEAe01rY!73?XSEPS*5+tb_YOY-,7\m
%/672086%K[:b2q#:FuHL)XsXCE8aaN.VGe.bDT]n;\r!YNKS3&6R4LUdRs"'+Y'V*BGC=&Ca*jpVEA@d,n<1nOI?Fum'N3/hAXKL
%#$6-=7&=e/&[WKi*8Qer^FaUs&E8'L/e(VIV'nEl!:HS58.Ou+ot"8t@BeU-Ra^NL3"KjN<::;=ej*DL:eq#H3I!?oJsGiQbE4Oc
%>/_+^,&+WTKG1rFd_j!PR0sYLg(B4V75ZoChcp"1U3s@'6C"`:pr2I[Up_ts@?C^=ggZf6U5aN8nd&bJ<p3hKJ#3ALIB#f"&kr_Q
%:,QktIFHVXNEV=C2%A=hBlcjAV^TdE0<lhroahoU.RFe>$<&ZSTk^OPeE.QMR<0d5]P3d+ol^ZYA':cLX(Ni/eoj\2pR-$!T`\u%
%[b"Z)$g'^.gsWk_kDB*[UNF4C6aY![%:2mM8a.4R83QE@K5lhrl*CZ;1ITWiOAcjol=nkum!J.RHgXV$g:12A%TP3S"_t%_aGRt5
%n+\;2W$JGGMII`]mO[Fc"E<FS+[N*BOJHcn[uCm`1C+f0Rs@fN8=#"AI^G=2=lQJf=KLPW-ZCI!-Jp'so+L"`KjdkE[jaHr;+e16
%iN))0a:soAe48FP*"D[T*,LKg0A9aMP.+jR.hbLXRY6Q&e\M,-Y*bT+=q!u]_NDSedj[4p'"c$K!HBQL[Z@*^S0+`2PsspPr"ko8
%Lk69O3#cU;<b(Safj!\'1e(4n/UAFg0eDm+M5&h=pj2cgWoQE6Of:YpIn'e7UDG$A7&](@)+aC@CJS"D.ZE(rqLiA0b1oGqkVWe9
%XU[O/B.BIi!mElOjOX8p0l-S#M*#m]9FJ5+Z*XNV.H%;4FAc7FSEClrRH0ipRCH5'VrtZEl"aO]UmOTo/&6JY8i475(KL!`<F3Tl
%[2q(*Eg5Vu8&4Ne$u.ID/n2;n*mD;2XG."kjH>Z!Srq#2X/YlSh?e;nK_]5d`5JXe;@\=#QW9\ck+XTiTp7B"f1]ht-81sn772)o
%=%qkOkfV\G3-eWFS3Vno>Gu;HO-$YPIe9$Jc_:Bi`.=)1A_K"-(nV(TWj'juKXL72i&+UnMtWn[_'c'QZ+adQ>tVpiFNmJ<%*@(!
%aqG*j89o-T6LCWHYot8['WjZDK7eW1A'1=NP5UV"3tZ,!j.tM7*L['D[q0inV-n!q6&ro.C_n=k-L(K-"CigL!Rr'M_F$`l4nPNu
%oVc&F<AgjASAD9INU]),*/P,P,*j9PNNQ-CE1>0GeeoThjK14?aD_GW!K?;>qR6NAZNMQ]:3^9M'pXS;?rMh;Kd93llnK2&:eQD^
%`HhIfO#B[BV!<q+HeRMOi,cpcZS-pf't()+2JGeFV@<h@U?V!Qq4>rXMq8;UGr82@:X,q^VhTdA@m?<0cmoo?.JHr(VW?j-TO"[b
%dNROs;9uSJAOJg]1\I@kqA,#"S_B$QKfPm-K_4a&[$XFT/M]P@.FD=WH"TR)[jmA;%C<'m<Y"J5LO3;9gnlmK?krppXK-<G!^^Z"
%=2bbI&_$htGDmY*j_Np77"`<$!ekkVF)Y&t>+a+DGChUR'jJG#W+bKF=+!WEGH'PRAcdf;fZCfhQ00M*,VQLu=/]7DWZEYNL<+A`
%QuSYL7q/$LoqLdtUa(Q\MZ(,bT3'^&aD8kF=6Pd>W90i27+SFoBd>jnK>WDH9m09AQ=FI;8I=or0aF2.C(kGH\kZ.&8IRkq?d`E:
%qM(G>HMd!D;*,$!!,u6hU7X`9-n`nC]:n&\bah6pY+V=QOV^UGLf+UXcqU_YM1UHd0cn=NDi:XA_S2\'bg=_ZO$S#^On9pD/We..
%G8Zr3MK&<P%*^[3(s$Ck2gTgQ;)a&Xd-n/0glagmAI3$_UDYE\rt#P:-1#=#FP04&W3_PL1SmB:d#VYd]/%X>4R!?TM.O5?EqYF3
%_o`:4Gh_YS/[/FhNBHO(H"[emgQ&`[Rd4#=Rf3(G`pTj<HtYn)C2g@[kGre(D+=PoLTp&:gu`j_H7A1Zb\bYOWi*5d;r-SdXa=im
%piYmt?j.o#h.kY$1Do!mG>F7_hQ2IEf.OeK$F:45?=@AYq#g@_p(4B6XK/i"l@"*(h7dV/XBH%AR29YIaK!d2X,4/p%^"GZ[i&>L
%(>5/DG+527DAB=BO11OGCM)hKNSRSRqDNtQeN.'Fj);3ufDL8$:Z>EaA(=(Pok)d>nZA7,<QF!?+ZN%UnAser_YpVTW'j[GdcK<M
%Mm)pCWt,,D1gmml4@8Uo2t3*c`<WmFqQ7JL!N_^tCPKg1<lg`OEgq'TC'h#2:$W#7D:[@>l*b?fh.@8%=c]Uqjt/LUWWB_LlE4@1
%Ws83bWI:gQ^1P<eS,9\j#-3d&WloCOJ!/2ld1rW"3)RIN7R2qrjXhcc679rQo9L-c9'_+"jYl[m8O!etP/*U$T.19RE6^.B!]%\&
%hL>.<W+fTRH]YfmGi$eu,1Zc1-+/,^&ON`t67JC4:b:'d^i5tSV!Rb^hr%6TlrB4"PS9LD<+3Lsd4!(,F\*(8G56Y5dta9^,PA#2
%.+0&T!_I7(l\Q9-06o>Kak,kp0[?m<Ti"T)4dNq$l*R(99UTMQ8!g"WA!Qn>^a\m]#]e5mO)%lKjKjBcbVE#m*V&S#Q(<H3i_kMi
%VLn.%_5]/nk&d[b.'jsp29HnPS6K0S<"^'`:UU'tjW'n3Ak8VT9/SV8Jcn\E6kZAZL98lr[;U(8`+_d'Wh&G[&Tj!TKr<QJ_:URP
%A4\P67JI&1^"S2^&"cB2<Tm2V?)eVdA`7N=q[D8&<6H"q)urX)Ji"W1U,+QH&7_779;0Vr7+`68Jgme9#.<g?fZ]RgP;VEO52<DG
%O&N"YM6`7O@\sK+.r>bWDgM70R$r'(9GZ`9ZbRT]W<KG%&4kk;';<nJUdU]q:A64]?R!(+]tVTZWEd!$lWhDqX9=bC>Y9lD\m18+
%Nl!h$67&Y.K_D2BaNg%KR'!2l1'16@100VB.4HY;<m0'0ON3PiDAL0N4Nu>#iaaq4Z&q@Q!"0U=l3R$+nhmi@kK2KmRX>kup)qbf
%$g<u5OC_B(>-Ur^HqaG_qa(&@8]A/p>.<ko4h*>HapXQcA<GW,WmhEaiaKs[0?=L3*Qf+KK*YnaS!X^"CA=*2[b0QdhGXGR;INAY
%)*mjk3SpW&f6-M]JmMI=\*<iq/rA-EAGtq!]r4u8Zs2t5ouhCK>.s#-?GE^_^"V)>J46n,90Jj\==D@E)%i-X#7JeIUP[*TE-4"?
%8Z2udKc-!s#k]K#U5FuC&!K2>\e<-h.C+_%%j_gPkDCH]VUFPXjjAAtTNRgA1<<\GcK[]"4d*:EhpoWYXqkp(+h&ki<RnIVa&\J^
%\pD"`Q`_gp2&1P/5,Wjj;?<.TY)]T1;$4A]`2FQNpssQa(qi#?"U3rf%'\e,Ls81:@;)!3HW7DBE\Wiqm9FGHHimgtCNe1<NO<M\
%XdO'jc>sXIRs@WZC>l<@L<<QNnR\LYM8N!AJ>Gk\OU*ggZ"X#/R4McdV*8s7_N&c5V)hj^bIUe`4_4Gr_?-ss#11.<9l78b-9`hL
%Y``8a"UuZfM1i%)?Ds8``i(U2=[2%8B-j338W2Z""$Dm'=\Q+TdFD+qOL.u,@;pO)n;)$H(g&drP/!&U,Tp9DW?$UP>23RP/4_@F
%nPrtAEi!L!B5/MPG$ahq9LBX68Nnt*:8LkS&?r''KcKjM%@@5P+@tm6*5nXPpFjoO&h<C.Y]\AWMiL(B>p;$VEC(EH`sR#@&D*.M
%4>ui7n,c8G@m0I0,8M%YQ]";!#qdV[FK.DE-._A9U=?uk3]'bV]T*]q&#aYEki$cU<Ocd1Xr<e==f,tHm&ImKRruAY9!92i[oqpq
%k5;7<J")L<kYA3?*k-GEX"MYco5gD!,kS*_YS!%/i_H\o:f'NaVmQ0))n`c"IA_>?of]mlR;^jUCWBuY5i$b_<fcP2TtWqtXK%2$
%`H%F`>16TSWpLQZ=FlQUEFq10Z:^Gllp_mp,*-7BKfiWR6&MLD5m[]jf*,Q$RLu!'>6luq#+5m^d:Ri=T)YeS#i4XiZ5:=,Bk<Q>
%#/1HAVlaD?F4[mPGHIg'mD;h";@6WA&MUg+JF%]jAiV-$fVNN;WJp$X`M2r<P`6?#@u^E7Bk4Hsg*WXWCQ'qs>Sb^f2?KuZIT0eY
%:SWY:C$1"bW1Y_Sn5d+KngKV58h$b07Na;1!5Vm?-o(mHO"M[&8Yho_2NjiLOj)bf2Pi-ZL*Ss<&0AO#B$=HQU-'MAlt.s7Dj$5F
%Zim[n^u0Le+'^@i&QEl.B[L.'PF=-:C7LL[m50Ru5:n]J:BJra,h'?t(;Nto!H"mEDdb+L5so#a(ct0t/YMkJ+GlngVEoo'W8m5%
%Aa@1$:Pm/MHUF;$<UT@ZeSMM8I7c?LaaL#iRTCtRA(/r>9Q)8d-bCrl2,9$gh))tR/'ZR?KipEK6tlk=-_7KsgNB52.1%i4@C&;`
%3bf[n[N21L^!n9?QXYj`@"<'0,gpl_MIjR^Rg?]L[\_`$lM_KoM['K1:m+lmaB.T2&))PkZ&Cu%0oqKL"EGDi`CU(@G:tnuYY),p
%jgYs"Vk4=>Zj8;VA[sNG)'(DR*<`JV"o6."d8gU_LmA2lh$,SHjVOM&^^:]cqoVng^\,nT!#+FMTRR]%G7!u.iitXK19$>te2rbk
%#HKrp%M3(WLhs3S.]JU"RfX27-=%M$TXk1r%8f('0`kOqp0BUlBnXTY%6%oN$8g]M.Oq&QqV\'VB:/M-bNQ(oN@^h4>lc6Vd<gaE
%6`%`Z6Aq3*HRF*RU2=[g:o+Ehlk,*`/V_-,$0U1N)lM/$%6<d-8l-DfM6!V-YB$ML>-*Fg;:T1]A162&<*g1%O/dVMLpP<QjigEQ
%@&3m4%jU)\:FK95(9LcolXos]!P`C:5>hZ,H%ZN<FVM!?'iq@8o$]aIE72RO.X,229n0i\!UW>s02n7DVXkKMZT?qW]N-e@B[e"/
%WQ8e8R53[+NkdWA(Drj8_tl(-+&?b7MUFDr]X_o]R[do(C`k7d1-h2HTLd,i9PaR2VHm4<p;.)0#dGRT]bg=Z($'(#EKZq8b/#r#
%dN\(AJd;"(KRHEWG"A6_Q/?psZj[EAQpFm%XrpLdl8W1Q4Esn[Xk$m$1BSEI7'.mG;J;h/$t8`+!rXtCpHH?JkoMr*T@(!jbdnE!
%lfcB;hQJ/],/h(R767j()muT!9B!:%S:[,eTa<N)&]rSuf_JX^F9.<HaOr&Iqeg/t1rKmSWu+'67]S$_9I$T7D"mbecb^[^1]m8K
%C9b/B&+_/K,A_Q=o*>TYqJu9Ul0q=(_,)o!Dqdq<o$u]3gt`I!=5;K]/#/V0^[:*kh<lpp!Lci>B8qOL6/Ha'cms7Db-^)[fTX`3
%f#1-'3cs+Fo4_oLV:@C<dg.i\$fEUI;*[+p.dkC&=eXlCoeKFP$ZukUiahK!3t5"s;q#Tq34/C9!E<Da"ZI$Lbu9uOp;YQIAWFpG
%WBYVOQ&DWO]jLB^8RQaWj'c)FFTG)ul/Q#*ZN#P[RAFG>b&>O!YWY1rhR@kmZ,l/+,h,rej!tqlCEtTj#-57>=]'hYGd3(ReRq=1
%\RA?9mXM89"]HFt:cVfk1ad!RSerb6@:)X%$'8BK.IA3BK=%="-rYlKdA`TS1"SsPR0)E%X1.i$4+o+dXXE_co3RUre:pW!WT_;5
%>C1WKmVnu40Jb41QHFL>N<@NSA"@981=g*M5IuNDFhSO.htY:baj:N9ofLG`2427Kb;TGf=I$(MVCS0`EKEF]CBtU>s86rS]K^^b
%iYb6t3SjYD@;Z?E,8:jW:(JG\r.Fb=@UH&#:R#$ZN0iphQ6aL:L9+32m$$7L[D1-5kP8>C4!etC*r4T+OI;EPRN,[UB6,+F#b$-J
%I<1QG*BK3->Zj%jQ*RGIW-b@O7S(F]#gri4+]=m1![FK\gSECr,YK3<T(4+\#K\jkl8bR>BTN=c9-[Dhc&lhD*&n@^F0LG)MGkHS
%3dokrHZC6$-QFsQfnH4&oZ>J\I`sC)-k'$0GZCc:ANkLZVGsOkW=TCJIg?5"Y98lPC5g5:K;nB8L_teQK\#Y#[AZ)_+Ls#UbDVBh
%m6`l\%R-?/,&LuRSKH?W(n)`M9qHE#HXkeh+J:%U-qa4UI@@$L5?M/"LJ+&s4Md;Nn1UC$D-oVRBBsq8,U]kJ6i!*["\I,0+HbTR
%X5CojGJZKq<T>l?Cp"=N_e`9F<r"iZ&__I=g*f@\b#0#b9h^Mle"anO$j7bq1%,!'IUA_R^W3+gJk8%VJfg%-jY<[t8KE@1"XiO`
%``6IP$?Kc'%+Y374CG?4JT[EHT#q9T2CI&Fg!CpoYR_j1n\OKCa-.05RCiuCgIAOq9!:Y6H\DQ:W&nXHB9EsiNo6S=R3J:ujIe)*
%d#r'_Nl'Xf*^ucp3>$YK5VS!oUf]!D$E,>f#<@Zj_IYuY.&ULQr^Dp_GZ%&)(:?_`/n@gB"IbTb)>r7r_pJc$Y"t&^@\3'^np[<Q
%1ldq(*:[<CT%ea@l`<Ti!:=pi,:L(!/`lfAB&/Upf^':05D82jE$ZsbVoPP*ldVq1e2,)^dO/6t99hNSD.%Lr],Z7<Leu;?QjFf=
%8iA0'U.HSH*Ppgcbs`LC]h"B/RU3PuE6oQE^/&\R"eq'X+"ZL5-CTU*r,I4W_iGZWS"a[*3q<I>>(AE;[tosL.b?;OP),r8.PjVo
%>mQ%gVP1r1D:p$]YA,2OAb5+"k5g75:>jPI=(@EWQYA+A>X@ls7t5V8MI=D.#A;;1gtWKg)F5>e3PsU3d\VI0Km_<;4[3)V.=q"C
%4*@H_j8!+u:kH`?,hQGOkejt&RYTlPg)YB-6/h5r6(LV0fO5qsR2b4a4Nm/Qg`H[UfAX,HL'"c+:a]uN^'Z0?MV>Zr`-6kd[6<3'
%o2V_KWPr.AQEi2;p;:u7i=&CqW"7km/Mg<MbZc.`'Ee+&\M<&qERdE)c001k]Tgip5E"AJBhCg,0g%!Re.h>2:kXsG=Np??(6"?a
%WL@@dm#LJIo6.q,=rPJ5R=.C?a&8d?)?fFf[tNn^_qb#YK\C_XDUmGW2J[rR\ph7>`FDsT_&)d]U9P6V7b./DIBL;m"h#lm;Wa+_
%@.lphU'a=t#7Gk#7]h&9TpWi!f[9ulFofJjZ`#D&KYFcDV-'EAD>k_j.of2@//=k`in1?8[TFp7WKN1nV.o0fSr7V;dGr%__K=b7
%OCnkAdd!d(8`^**?aKsVRW*Lm8@;[UlC4D1M?]YNOP579aS@/"nl*UeW(mLF8:4;2#]*o8!Jtb-YX).sIsY$f2Bud1Yo*jQaGMWr
%],7I'U;X!m:/5l]&J!sc/KHrsfC$snDJk&39N-"a>rpfr*J?f2g+%,p`(*FXF[@F/=-I*!VH1=^MSULi=L("*nArb90[Eqq``^uf
%_p/Np@^aH`Z5&P2_FV1mdbmQh*(E6]?6.QBPFO[fRB)LQfkIbCFn7Eob84%D8\C)+pHk<<<o9J%/gs2@EY_hMP#."WCkQ+fb1X1c
%4<RdmJgr,0/T"tAI8DnR9OR.Ip81gnX'fj9%BH;<8EH\KAWMU8=JZ0UU!?+T,0o40X_6Tph^Q9EC/S/9"fQO;ff=43df<?EW)7@`
%R_rTRU1sA#>XohSLbst/+Bg!a5Go"2,V3sBn*<-XD8/,G4>agu#*3b*W7ief\[HCEEtO$$K/jb6!Oaf*U1NE7gW39\BZS+C[p5A0
%m:4db"PhIZFgK^+aa"n8Eil6*P/N#tmZFa^Vo>L'>jtQV8[?J33h&KZ.K^D[hlm;qH-rqfBoja>larT7M@"L"agCfGN==`TPjl?.
%.4&?nW&!CtadGAQO1#)@.5Dr@5E#Et5i7X'_!X\[UtP=KT69tbB5sp"0!j[H?t?$nUV4PcLl*(@RB90f):pN][e,)F?'U4r;\F@d
%Sh!d$I-:P1JN5!o;!4qk.U)G2MP,m6W3YP4alq\FE9cKm7Pl7oMaRJNPrRlseU\^PY,!)O@JbF2brq!j:u77-j3S<c!ah"8Wdk>B
%AEo436[H]=h>9li$,TJN<6i>1TpW_g2LB,-gZ?]>BEt<I5M\dc]Oh@eM"0b,N[?T9FY`R(l<-9]Q;AU>;Pm2edg0VK'k"(;#"B(l
%>-_Y4&0(,AJ[%G@e,7MM.dT-k.]p(4V/umOp+AYST2WfGFU%XJQP!e]SDe<11+&gRhX;.8B5s:6i`CF_!enek1-BI6Nk'U_c6?>_
%;$p4iGp;0al/=MGas4DfoukIE@;(\$o:ql>'EC+F[[#auWb&31+uG:>5\(##mdDeA9CSC->6KgYkI@IrcH9Qgs&H.-$u9dYn!*Y2
%Cg7D]bS/:C.*`Lof:C6*H;[6cT_@-R)sH!,qaM=Vo*asj(ff%6:p]Klp4K(>R/Xm\D5(om$>@&q@u/E(UE@e?#.2'8q*bVXj@-(a
%X<iLB/Bj#0N$/F)(kZF/7"C+$"k#diclGD:`;95FZ44uLKZ^!Yg'md'O1I56R:k7OJKc>EjdNa-OZRE[8Wu:c7's[_%b..D,VZa"
%Ua#3&7>S/$9[cpt5WsiO7'[^J0kSijd*j9472]H0)U289r5+u2ZdJlQh#Rdg_&Uq-'sWQ$kG]^j1bCHJZPPUfbIocDD$G:n\LN:!
%K]#7*K^=P3SV``B7>!Q\_@+"_6p/012ardV?qcXLnBSj^98j"NFm3*9]KLVB);>atHg-PEVnm1ATdrE_HE.\rq]V$;`b@qdiO&9R
%0,6DIbYpS8h5QenP"E;;nrCgbd]GP<[8FiEO?_,#N"CD:GoV^3.o7Ld[Kqb:GBOAJPcl(E]3OH[U4>[h\f$6OAOe"G2f1W<3f=Pd
%i;(i+`d,4G.eQ[8WA%,5/C#t1OdkF0HZCU12.o1*GDDpWY8L(0qdH?!+8X#r5<2R@.!s+tnP\/O:Z@<3!rhhM?bX)Hr8Qh_`V&Q'
%2r?dqB9N5kA7<rl\:8o"M_Au)>eL(-Z_)a@fe6^HI!>8\l^K\Vp`H.,07*7hqB'cZ'YU!S4aPnUfZ-QE=W)dr"Id,dJD'_"9ekeX
%<D8Gp4mT2,,tfOE@>*hjM/$c.9hh'_7PDJfq8'&:0(F^T`abe$9!nqQKQsqo\qCBo#,7E<Y(A05+_0'amq\_n.32K0'\+?hc0=b7
%*I-+M=<r9'@,tlmbTR1aBj^;1g2Pf@boEWJb]M6+)`MZ_7i,q^Sto0G$(&;>m8gJe26%*"W0P<)Q2;kansRYiR!$ZSY:t)tVNeBZ
%&%N'P2Kc'6ZY7^HQjdU=Uc?rn36eK;9KH<o"E2jP^2s"m^uKeql3P?MNY[;C#[)^SkC#W"oVb/K,E`rq&0_g#dFYTrXj3'-G6M-6
%m`+oW_MG![.(:V5?9@@%>bIAT9Gc*k/gBPDPuqoL](E%-q\UqLQLGc's"p$7`^ko!&`LRX7r^O^K,OmK>MFtm02k&$RLPC`=mK^8
%Xf^+bZBIFj"5Lp_6>Ue/D%J*N=UA=jb_m8M5WN1dp2_mEJ:^!s<R7*Ye&,9b=i7t8,(h+`'%LBa1QeQ`qdHrD7M2,G!:<\K7U9NR
%7AT[M<Tm;R/.R!C#Q\g9[`CNhW=a/!qV2&t7tAK*J7m\Bl/=0s,,:Qci`s#n1ud,@.%A)[Q9aR:2c=HWccVrHhEQ%])a+3t8RV[#
%.S2@HLpR;RIS"%CPY`-mDeec?PLC,3[-jdg0kjj.?gU9H!P%Ag$"FbRMq-0*EeD-B#d@Eg2KtuH/CHnQ[Vo,i\tAQ@'1CXq8A:er
%0)$BDQDTsC,.rY^A0JjaD$1t@$oH.UJ#mT[Z^^NkUF*?<0TMV-7H?#eI<3*)hD34a7W1RkHDKWD'@cbIKbHanh8joj"]u`c<jW*?
%`sp_?9uLAr<bt*b_M'fB+r<mk0;&L,:0OW1U=WOSM8+^eDK_tl'A,I:M2O^_SllC4F&T=Y0-[(fY4@CQcl2R,*<Z`rgrIg[2N<6O
%5KO^l[^B`R6[]EVhC90&;d4($$S*IB0e8,0>=A&>.RE;j"T%8@+!b3$8sJjeH=8j-+0mTd`'Ca*X%,%\<c+L"r<_=*!mBVilUr5Z
%)7ZrMLot1\!Q.<i&e03u3:G8[ruQ0C[og@Yr2_gSem]\UdPe](UO9+0g\\18D'kI]RLI];XW2jO:6T-HZu\S=ehAVBmGlLSqqRo6
%dQd]mqXs=R5W=+mP7s4f]/9PS:O`#,Dtq)X7K2<`s7*;-]"%)oIIa^OfK[h1J+:QdTDn!LeN*U"cbErZ1tTKJ?,#b,nV$ms]J#lC
%qLAM1g#Y<kn*\j^rpBC'mXMqGmMkt_rAD8KqsNs?ci<M&c'RlOcX4FLs#^2YVrNW#?XI'PH?1^riYT46EG(^qbV/toou5*,qVGBS
%r+99^p\`!t\:<"b:QP0Co]G/VG;n]'q8*&;`j#(*hVMMm]_qU:(ROdPh,a@Jq@!:t%Ba\`2>^&Fo'Gc>YMPfLpUgEU^:W]?W<`8(
%(V7)ArM@5WGP0^W2eRWRqa^;u>i`PTr>!%,J,A[)jus#kK+#UArn$m/\%hX?c<jg`I<5A\ib$AkoD4sJ2eP)$DsmI]/m`Jc$]RUA
%ItWa3ml<.mhgN.h_e%YH<F9"GHh6h+?f.B%oC^)G9ePle#O=a#p>%B_J(W\+=h-0ap7rMs\!:7sl@"Q[kJ-r(5Q10DS$10;j>OLn
%Rf@riB1oqao]FGcqXp3TFoLsoZg2h=?hL<\]7/(Mr_\umZ`O*_Isle9kHF?%bBGmiMu+0GfO*FC(U%`5@mk6aD7YJrkh0<jIf@m(
%:QKtghocQ/lHNJ@RkK84II[$pM1.RYkSA*:7s@A]"rDQ,7$!Ald1JN&U.7`Gk_T4WNp%6s^7up!F@;b>g-,j6oO#r$]mY6IpA2,=
%GCQe6I)r^:5Ekh7=j5GTb[g9.aR3Hl]tsB@eZn:H^\[m+Y87O4Ge3n,mQ0e'[/BWuYMPl.D"rOo]!GhS`NSlJ`NX]3B?P1V.pB4E
%m\^2kH-:X0Z)Y[#lM.u:?@1DbMf6mJ^:QLSF%XGM?cS4;$N0>giq:Qq)P(*_;g28@-f&NBQ4<8DL\RMiBq&mA;-*^<k;E'pI]3;B
%TjfEgDn`irF(46/Fi)8Dlc\TQs8;99')C>:bL/6gR"+S]I!,/Rr/6nSG@0kU_/HsO3*<$Bmsk/f2qP7Z?f/b8hr7NE(3A5N?X1?p
%HZO@kj_f=N@kA4t\nJb6^3e2d8!E7/2n=rOU`VaXo^O$)4(l[D*nP[6Z>@-[m\i/<':lhI\G?!dr+;/7bhG"r?euI,R?Db5>SkZa
%?q'OhOZ'ot\$DatPg)RarP=BZXO]>@U(ps_^RP#hioYGt([j0WTB]FhjkK'V=kUQKIsq=Yc[W-VGjVEnh`#?VgjOB_3a;+4>N;LS
%4r[P6Ns[fB0d1<[IZlaT#:0ee\YKajXaPBlfCR0=^-6mdrU#fJU:M_6.rOp94V!QhRqqmLJ6]k'Ie1h9f9b*=rbfpRh5`V-,W</.
%edhG&,;$)O0$cGD^jE.Bm1qqA:D%jGk3UX;]/udah=E5(EF97M\,ANDA[ohhR\MWcRNLtVb4)>2T7@:(4Q?,WlL1]sH?TTkT55-]
%]FnqgVnUpFQ[/emb6D&@5r$b3mDRoV,H]EigdC[MnOd!6Hq,NCpLNSKBj<b]PK"B3]8t".Z,tJi#e/P(0C9:]hEJ]!qp"6UbO_e+
%f/LH.qe!`igc_fjpY][BEs:@j/8]B0NrU9TUlK[BEb*?#@b1st:RT<?2rNH`qNC;RI!t_bp%d\ckEk?bmh&q(jT_&r\<d*Drp9eh
%qtgi*p2DVX^=6Ich:JjVqK%/@n:c$-VsOhLg"P&(Ye.?_W6X+&bnIXo<KA2MbHkgds6+Y*EJ)HT;BKSTD"5\4K'C%h9CRR-ruZg4
%AnM<\Y:m'(2I.!ee]$Y3h8=!jkPqm-J=8%Ki:F^o^3[qhI$t$6Wc"u3EnH(X^V?LEmm@me97"qOo]%2fhQ<0Gp=O;.noq/j\2,_b
%O0[-G2=3'-HRUUtIJrHVX1c/jI=AUn@/3pG_,mK$=mt2X:RL1qYICGbkCjm,o$se!Ru>&<H&6Ib3P;f><SC&Gm(Ago2g:%\?%..o
%h%k-oX^cj3?W-'p4.GeF>ahhRrANOD*,46g2>RT@eh&N?&R:YSH=W)UJ@J#moj_W"]Xsn_\])nd5Whs#i0#.A8)!$j3oZ9^Gbc]*
%i-r5Ym,en@FR1`/Rj#2YPf2T*Ou@S,++CtAo%H8OP43TPR5B5oT=i9W4TZgAP<.]SLnlUQL_!!$D:&SM,*ItBUa%)J8,HI#G1\\j
%-%1//P5E?EOuE,I+2RU,U)!B$&4o*jh7ppb_'@V2>?o`(*2G1OLLYf"<crCmZ@!pp`(cid,D5)9E<sVRZ=Pq\a+4?k!2-'5n9f&8
%naKsMaL8UQ%qZN(EIE92fiI)"a'RCg$Iuht\P96o8>5nS]%DK6*.&c5:P/nVdVU]YG'?]m%h;.DpY,V:\+QB%pj2S\4t=FE,!7?l
%7oP(dK<*^f,2D2D3@_m?.`1d9fC(6G4R0c-lG5&U4Bp0bs$F?oBFc07i)'s_'\)%Vm@EXC_(EBlVlp;s#bpKL!#8]@Mqf+Fn\ZBI
%q8<5HMm)Dj[PiNAap'fK7aKX$?e&(>>9=Y;h4+#:lh:u,D2=VJI^""ib^JcCB.ilW?(U`hqm?BEs8P=Ns5DW8f6eO#r>n(>DNg#I
%O%8ghkPk5EgB/N"bM1ciM!&W-lTDJc*Eh6BQh^2ThYK`&5J-ahmY^\sorI\f/m_n$1?CNuAq-L=+Zd65klT[n;"*t'gN><Fb'R%O
%D0',M`AYb$<JULF,l?krlaI\"G4Y-kTR#G'h,nj_SlLR@@)%-aT"isG._.A(aS'[O%r7'0braj9/<>ihH^qd[\G?!dr+;.>mrg;R
%QhR9l-JN`sl_<&SXQVgd\f5"=>?T@#:aXr";l84iXQ[r5I?Q0b;</gJ)fK_MO*2O^f<g#E+5"$(W=Q0frfQ\V+'!m`edqN+Mk0=&
%a8Oi5hp*m)GBro<T/QM*O+jsiRbsTpRee]icdETrZ=tKN3BP:Br%U53(s.%e$'_%UbGSQ-'uu"*He8!*9#r+/Y5O0KnsGM'-KM@S
%di$2Zr%TAp6[6JgK`":UG"g!WA/"O+?[VOs]=6t$7/>=KFS%/G^?,)?m^r)6bNj(2rUZNMo@KUXATn&e[h^UqI/W;:0<QtSDa&Sj
%rp%tu2eT>o]Yt]V(f'6ahX:8=e\K:"C7VTFV&heGUZ]1fFH<$VO(^Ws4jTb!kP=pBs7WX7:6kKoX7k<DAcJ=u)#AN961\e*#Q""@
%0!='eK:K>eEIG9OpM[qk2Z3&:I%h(aU=C$bn(rHBn%LICe%omZ'_f6*=HBfDCQViFn*_f;IuX3-^A!&]%Bai'3<t#"*4$I5YPAfV
%b+J?7.I5a_kprDskR##K&Ej@e5@8eZrj$l)DiW5OA+],*rXHih,^Q>]1_-6#UM%X2feIerN1M&bB?05hoeCc9N1On/I_0sbjRW9*
%O#@Y03Q;3rN3f-c9^kDYBC>!fcTWnaeD65rY4R->V75`Rs3'<6l'C'e_Fg<qX9XZoD7TD$U2BG-+"h0Em(5b-%HD<3g@?(RRuO,&
%Ok\iiAqkT2L[/'!^AY6Ze0'QO*8+bl)EZ.Yo90\pLY:`IH4W0^-<KhIG*pI2S)9cB][$h-Wn6caPN!+cMRQAHGJ&lqQgrP;N&S;A
%,?<Ll=7g0mnJ54##e0?TrPo0!a;[%5NYH>kD[5'I@r1[3Ir+anmnlNC8L,DBg$VaWYYcUEO+a+la`)bMkqXTPJ%M\6_mOmu?,dX;
%p]Kb9If%YsDpPm$ep@#F?,+Z#qnpkKpL!ctpY:cJ?d[aPl:>7QQ6X*Bk5<b1<Q5WoE:gVg!.X<+m/7IP+s5'RqD_@i>PF,lq"j@-
%os[HJnfN(Tqi:3oBfnG98#Pn)SAr4X[2kf-I%@jbYOaHGEK_n63fQp=f,pR'UXOI0)NRYR&*l(/q9hHHkoVhYITN]>45\a2?.-m/
%I4s3$M]%_NY\V"[k-*+g?emnsg;:/7%>mU@0CISQ=8+*XO.0CDY2O)MAH))dc'RlOcX4Hb;,"eNRFpCic`E4bIJ)b!lHZp%k?BK=
%QPJkjlfS'3X4h$<%@[;_I,XM+4<HTJfp?>ic[YWMr4h-3Sb4%^oZ2=O"0V7:H$872gKig$oBaM(k0/,E!sAU7hKO<F?bJIHH#n0)
%S*Pu,Q;ETM5E'mSj\t]>hqhVn]_qU:(RK?d:;=OBK)]M:/)4:Pr_i2n)/S-5h-8&$8mf?FqJAH&J%b_<h'DsI]Sr,fk8rlc9ch?1
%Vjh"1&peUMc\=0Y_67p,=n[u7BZ%F@;0+rDOq5&_gEt1\:H0;4N%4k3qYi\Hbg!enX_jSNBBEn'^X)IXIM/OX('/'/BDL#mgu&5]
%g](q8*t@<ZBddolB`2nIo%gL0J(W\+GmM&sP7.4pE7;$Ts7@A$X.r>ZpN:0k!cV=$\OdkJi3^b:*<Aob08o+jc`A.XdJ#Yr>9oDW
%FC0-JM`gj17pkoPMuMX(n'Mrbf=jHFU75?5A,)d&N&Dc+dA&Ak,hDZdpnCQ;s5`T%aK=%2Y@t<gWQSfuDS?DQ_6bh!oJAdU>*lke
%NGC(VCS,97EuZW(2n#G*>KrAG`'+Glr2\$,lh<GF:I=g3TdTPG<8ZH"n*]&2r%%V3dO+j`^Uu[Uq3OmLM<Of*Z^2Iehu3.)KA=&X
%LM<!TIajE>p3ZNipQk&=?>T6YXe!+c4KeXH]!(QB_LE3aHt`>p<Y+/E=='S4O3gg_]Cfb53)QNu0AbQU]tQMW#j0UfesEb,9igM[
%.-gEI5*pU.c>Km$F'?Q^!mgl/ip,>_il>JcGn+&sqiCL_]=0`S<HudfJ+r*+Z^9i^]KEg<)mI<-^UoMKA)psSggX^[c8,+FGc=co
%aW9g,Z-7.$hBpdlrbD..X/G='okV8[TCQ&H=N\NTl0[c.A%ZS8lFtVo[n"p<nP.1YmZF8UH*f-S[e<M7!rH\7-g5.@07Wl]qXsYI
%b`aWMn&*-"[bQq[)EV3I_p#B&\$\GhA5=d'E_IF""Gc:Kq;;2'4),?*9P88rDSEhGh^3^"m@*)hmsuZVo`uLA(X;qe7IRLJ[V]-o
%ljm.hT'H96J"s6RU-#FL9s/.uTAT*,^:^uOh:]dE>_&_u*H*mFqS90,M1EU,QgsT$IWCeF-<Ki4bBT65`Iff'9s3]))*_j0nNdu^
%L-OM!([^7P!QSNR+5;!cnd"q%Id->@+1\u^^7Y8Ceb((j>sAqXkY5ZY+-3Mh%pNXfJ#k^2O3.O^nuZ8kp#l>JO^&Du=No@1chbVr
%;n9O>Gdci9>Pfe3CiK&LkJJ"X^\/PYI6VQ6M<^F%X3V;S02I7kkC/n>j.>1)jISH=fc2'Bc*Q*YSbD/UMuLN0G[F4S\DnW*r:8U?
%&0?2.;V_$KO6KjH:*2@iP!0_"`'8(%](Ze79M\!E4>>6kAM<1Zk-(>`/J9Enr(>_R2L-i@hefY>q#a?>^:L:%kRVUW?GHI(a(!s)
%e[sEdJ%sqeJ"Og@c.SGQ<6=HW6_<[pgad^7T5?=]Yd9F<T**ets*EIN:LaJj0@,qs>?p*=\):o>/bh`BT_fRji8;TOrF7c:IWb0m
%Mu2Jl`pZF\KH5\*:GA.\WKnoUaR32*]B(N/#=WYkXsK.=iQ##.pY-[W52SS0VmZCN6N6>d]Y*%X/%RgopP6DY]4XLe-6#K=Ua=hd
%Qh8*gl2JH`lW8RbF1+Yujk,\jepPf(FD6q#oPlq?D0'RglU^a\^\g%"r97Qp^Tu.,/5%8bdr2Brs/rP_3Q"Tkrn7+>04*!)jcc>8
%jr98ss7)$9Y.hQ_U_E^hm*#"0s8DB`fu^QQ]K5M&khb;`I^2*5jX38sT)J36:O`$*PFqg&4#/]X-cp<(s#c@9H'b-Tc[Bc+K`2Li
%s5-^`EmO_O:B@Tna7&6LrceC?s6?n.T>bHXIeJ9kht$,6s+*E6rf`tFeA]DiXZ6?^qRSf8Yn)1-o(:^kXR`YbpIp7Vq`6kk_WY/;
%@;L?%06m]XVmI.a\:j%M[QkB#npGFMke`j]\)_he\3*QldZ_4)YGF)s+bo/;/WN<a9+85u_n"):(D==B/`ajep,jugb&=-3J*VfI
%:nG/=,FA>@Ac;K==B+*tT0*=;Xs=Y"k;ecY)=5Fe_)-cU=d]*40)=1MiaJ*2hd;$F>bC3!0;4ZFaMPgTT=;9$-%r+ubOsQ2YGKZK
%:BQ7rp4qn[S=_1\=HoD(+*[i5p6S>-/1gaTMCZ8AQH*.B.[8W[(D:cI8\!r_AtE/uI8;`s4KUbRI,m<[<CU>//%!sl?pE8[o0+]$
%&hQ?:him3bqMKlgQdFWWMh-S]^P0bt]RM>:oE1;i/AXWd\7ZA]Ur"iQEAk[3UWe;N?FK=j_nN"c@7*)GK6,A0j8Hn0?>.I+e`Y5U
%[(A/eqM+]`s#i@!T"DG<SX8J*IlPW\[+F%CCYqlI:#A;"&GmX;VetTI]@;%Fb'r%R/lat08N2Y??>$JmGC7n@K`'e7pAIGT[^.:W
%Un056^+o?L,f;g4?R*)hIQA1@,4GQ_>h_8A0))[o6_$oEbHB/Sq>J3'j7][@G#!5\1B$V1IMt8_d6CZUTJ0WC:NZNnLN[[^p$KrO
%)LBKtce=FVfiM?&GQ#VLBK-WN4qp@!Ot<Ig4_K8:I1gNL%?D9sZi4"_E"FYDM9q$2%8Gkpd@1%2q7brdLR^;+Q\XAjKaQiQ<Oam0
%2D374d.a)kWVQN*=\fhe^EINS[s*=3TeDR!m;IJ'r-^>7l\`+CIqsnj(<L?m]I!GF:T\7)'Js*Yp!4;@P7QpA8Ei#A31!q"iCifq
%i_lOK,O%6rpo*it$@df5_,GL`LG_7KKp?j`X@qHjI'Q<gGl"tX4Ej6fh,"r1NbAPq(ps*2hKa@>YEo+SYY4:h0GV&]#?%(??"mrg
%Uq4b/o?PdMrX5_%[/V32U8T62q45o=f8jCpH+A#OL42D]^BEAerF##?[JjP1_Nqe)H0K3Q]Zad?$[h:3%5_plaV5RrN.os*Bg9>I
%#gfifInreq(V$g)8P$>IcEUKV4SmjI,(nuur_d$)b*O:])KL=S=!I)L>#))8EQGa%DN/d:s-?COQg_-2nV:kTKJN0nIsYm<Q.4ou
%Io(U(5&UgE#s'H=T+fV<_*>+`n--Puq6m)F**3h[feS9\"bUSje7/F`fX$!!FX&Jp>3qkVP]L2"ARR%d5Ka>34YJ\a\`o!Q^MG;f
%>!FOsrc$9NTr[\pTP@Z1.c["XVm)tI)iE`7:@ck<jHjZQL*%rSc`VHQ8mcbs-R'p4)ru-b'p+_$jEkuqJ6uNTo>3PlIlUR\hGA6m
%j69``oV(>@jR(NP?#:9U('f1Qp'b(rrED`tH[h$W+&4\(qpG#;WZpZ)LA)a;$(5,/*+N/sX*;1K?i450_pV7+3@c[i)g-0#aeWND
%FF7/P1"Z.T$Nogse.&#K&r+[\RFb/JU8lf0B0/T6VYpL;@t8\sHQFY@h0h:V?TI76g>>?H,[F?RH>0e%(H-T]C_P@R9na5A,B_0c
%\;D_W2=4sr<`74G+7;om0o;27<7YE0RRs;YF96l+-Eh&/FRAouhMbN/UAn6bXE+14rJ4K78.1jYU+e'F'tHbY/5a(Y.jirR"dW=6
%W#qY5]/[>0Xk2Z_cNIBhh^(u=DP?8Kkl83[$;9]b43'&Wj@Sutbb6U['kc!(/(kY?c&S"jP^f=&GC8FoNQd0JK`+&[<^,>EkDr6P
%^=tbW[q*A]gJ31br?nYeF5Nqon,e<,BnoZc_JXYXC/+Y$l30TL/*nOiTB+u1Ino>]p&oLJWMl)Gn.nPuTm0KO8#$Ihm/bD,MQ]Ic
%OO`n><d0%rDf<AWB]le#7LI7QN*a8\e$G@^&oJm%rI(`neYY[jc!JUG_gS3PUc/G`]AaM6>#U,V_P`fU`O.JXDr52R[AcY]kM8##
%M>V=9qM1CngqRiK\W.8,K\P0u&Ts%):%g/$?4Yq4/F6Qa??"f1an'uF[n?DpFM;$:<?2g#W1+a6_C"k4Kgt?]9q&dn]=H\G+R(7P
%9u,9YDHBC+^T69I!p!,+Ta4;!j-'+$9Apb;$U3u8#BH$H0^G2l"FXntjsfPWAtMD.5.Uc.]s^YbJnjrWAIeZ/SG7\H?pSN!N>D?_
%2R:K2.?4=-<#;h,0ADFLllnB'[qb-p+X*8!;7/klkI83U+5i<dY9Rg-\M%i`P;%-s=X"65]LmFkFSuF!ebqZ<C@K1n>,-Ra17,tb
%Y=Uo^hpl8$atig9i*B0]Oi?>D.]3Z"KPj.=EBI<?0jJ[.8+bK#r<nXeC@CqZNcF9_m66Tgq*ji[g%a9j*f\P?fAak6?M7Fe]&hXa
%V5g`?iCfC%j-MI7cVq1/1B/PH'KHJ9;MFZ:`1J7N/$V[hh\r?mMqLqG((apS2=-WH3iXLS%D.&u->]f\Wn6*5M70_s8_Dk3[_H=C
%k8PPde8VPeY$[')3sU=i&m![K2<;=/Q?J<+#ubeSk:k2uq;b<AEQmP-fPMK5_>-@FJbC4A=\#,T_QKnICKOiATp4b8p0eIg(s-h-
%DF`NFNSV?9T(O;Le>-Rp)W6GW%Sk"aKhJ1aGI?h:At!PnUNp4-o-1hlihl?Nk`Xi6*dE>\MJBju8D`5qfsu>ufV]C,Xsanuff6Lf
%?Jm]N((^qJqsP5>mt9B*/6Nf/DG[lE=]d3tJCba]lku-IJ)N$Ga5?@@l6LK#GCTubYIAcFGO,M0(*U%jbCV&PQDO#=+`paAcnT>P
%kMr?qe@M?UQdSc?$6`U;>lXF[7G(=p?UFKR]5a6I@6)(MSB\<15&<.jVO6k(`#PQ0l<:4URtPlaQBKCNrC@UQOOLEjl)aZGg:g_T
%>c(G'GALB=$0K)dC08+HD>!Yap+9be3u:j),<E`1S?;2X;6"<>*RiedB.M(UB4eeTD)pAJo\^AXL>-\XBX[l>j\KT^":%A9el[k+
%**jT*b)XQ'K0geBrXb8Pj8'uam.ieM5mGB5EV>N.5=Wt;EVNJgL?b@\ht=W_DDAc]qNOnjkGNY]rL<*VkNK<a]saYM/k6gDX%LVs
%>)ZOX`'mQ2lMXQC0ZBT<(\U-T;DAVRiLqNj)4cD/jfZS86t3_RQss!DYK/jp00\btJYMu="_%i"\Vl/+Su"N'\'@,"_-8T02anRb
%n=R\=m@U+uM,BYH9ppb\3f4$4[Hn7Z_eVZ?Dpnk5h%:d&]F%!@$dLa1glc(`E+G/crP_5\VWZS8fh#"_(?ckkB1\7kZB,@FA57/)
%*0dg<=#]K'X85\/&Kd.<`lqe3KOr5.9S*-F`,K%uiMj*GEUJ,uW#aUDj.;7od!s-S'Z?pgqNjb$6;u3n,I!7CbptHS15SGEq!&Qn
%UK`'T>V(<0f9lJ2Lh#Onb,>6:J"Lb1'#j1Z:Tqk=#@Z]WFT54RSK&IYf!`*Q@1fr:2<i)dZQ*86:bSZ%(3++<5$%GJc4kHKp`ub/
%]\ER^"alkS+nn<iRQ/5"i+s%5pD.)oG\[T]>;_AA-YX(E+L+Il/+sdn@"T08^X/p]L*iC6Ejtc'Z=4G!M]-GmC^j%cWP!`S7AI>?
%RsPIgZu-FPW0cX>q3R!-)rSIY(bq8UiM3.)S?7[aBdVN[CeWH^hn1/OcZ0L'Rs\4LBt>(C'=jk`N,3T.%Ec]T>6A2PCTPkY9i`g?
%5\[eZnOL_^BHV0N$jt&<fZn5X6Zl,aeZKrbNQ!*u9iX6-EhP*I,?,VuRtniNRL^KX35a4L5r@!W*9^"td:'o5dcDfAWNe36n8bT,
%YCWdMP%rWpB9[eb5sD0Z?#j-F`RLb\Tn2"e+',lJOXZCHB9RMI!sN`B=;>&<h](iomE5CMZQ;tD9!33/Hu)BsOS([um;1WNLn/GJ
%[+'<AF=^01mrr^&3Eq`f=e$`?lkFJr\T+!L5-b$<71s?Y\fGMR,dtDN!Ql[1KB5@4:tDVF`F9a?noPcm*4grh=oAc>IDs0N2K<_k
%Q6Th_0'qf>mSNNp-HG@B*MJ9J-mPeOf7fOTCMJd817@V8#nS.:,gDW3\hQrSmWkFI3Th_h\0.imM-HBc.q090,ZeX00<)h?'cGS&
%XKhcIO>@6.9I]geF6!j"C!tqD[f/"Ej1!V>#u1u,=2cBM^-p(<2NL5pLW6WY6f6Gmpop/fm99]cX!8e-n'm;59:[A2KEN$HXMIKE
%WrqS,*T`Y:R?U],]L-=.;M7Ma!L#%@P]e*Sk[XC!G?Ba\C:8S(%\u1%W,ZIe*-Nbm$R=E&Rqus1-1E513(>o7(u9E7%Z*9NQL]-G
%[tO_K5W<Bh06hlOmMBtX[/-?>b?'(.EITXGS1gRMj%T0^fO?Cr#XA%C$]L`^<k%OsM/?>[<bHg+86'A?ma1g_bL9Ji:8G[?RF61;
%cui.R".\nc81%?@#>"QO@9>Crd.6\>QbmWQQhF,eeA^g@\lVOb>RJa(FV?BH8=PQD$1--ZO@SM5<;2P07CB(jbLnesdPXUmEs0[e
%DU4G(5Z`j4:G_*CUDg_GY@]'E>)<#P]\X-(K@\Uq<(5l0C?NBo34%ZU^OXI.<tt5S>ND,$E_V9e6F_jCRjEVtpPI$acUN2NR54_,
%&Ni'FqEG^j-7S1H;*rOUH.DCpf1*Is#e/6p6<(UP/G?QjS>#7L6kC._[]W1Q6WZ(EMJdIr,%`BS"drOQcDIZO.fr`X.4)q1qs8G1
%d8>'%#r_K1H.XM]BV20Y;CTdZ(qN2D/#e<$p.6>kK(+3&,tlaR*<;nl;aeE:&[efFUa?$?m(I1u?,pq2H9XJXs5?B$n-sE@6.Yof
%Nr+B\,g.7Mj<\AA$AX8]Cc'6lqgiH<+N(sC.N^1Ap,T#O&;R&0M.;N5k,HX3]66?C10:Ueg,@+18Ds[,EJKs4#Y16)RN\)<eJ`p<
%,,0'>mo[[*>nNB]QFs8gj-C'3Hk_7Y,Dfa,*K^IL-XQ^#Ll$+Kions'":^);Y%F->SiAnLA@a[dBcN&[85J(F.`Y@u7#$#iZ>#A^
%)B5TUJuCtf77a+&n#$ATO6o$@K#\=qKXX7a8Z5f_(JW_o`uPU-L)Dh.caHd8R"P_.r9R032&8QRSY^!m2o>_LaD)8NR.gk&Ko2FN
%9Q$8q_iC&=JBeE.qNK]YfLY!:EX[#fH>dD.SogZ\$j2:O7gmaFod9MQ#bqbRr"rqlAeg?<]6Zf@bq/rDq%.Xk,=G%X7ZS&oFKphU
%++m$`q;s$@3gQGahIO.A+]n.Jh7"!3.<79^?`RN)8V8"4m$Nc*!)hiD[Gs1'fGG?=.'=AW,\rdape.!90F(<>G@P\B3Y4#91N5+&
%?#_`->X.D-9o\VA!PP<!0mX54E(DR(U2eAt(*?;sK#nLk.ll&k(/$+sN2^*U2]EpbrtI$,2s!=`6kMo-b0YU:'7DDMoo*^6J1+HP
%S!!D8[7eP)/MU?jost>MClSMYkQSpK9;Uo2d#1OdB:4g,#;"[_^6PsBoFf2f^W,IuKdejA_JXe4jEdA0FI,m]lhJ/;*<eBA<\.$\
%O[%hB?*@srbup".FWArBA[V/8jK%A:5Ya]#Hkl\c="4,\+hHCG:JOZ7#oaBaloJ]b>R?55m@@^%KMHN*Rfe[jDiIhsWM';te_n/)
%O7%U+GDNYJA;K=F2k^4WOV,$'VYFEac%[U_Zq.QDpq2RI'A.1od1[CuJ;l!:5Fl&S.*rXc",P&aJK+[L-fY#]m8hJ?:hm$e5WAOk
%=<(Sg"CgEmSTBm1nYJQ3-S2guZNMCrG+28gnI[^H!Cn^EHad-6,TeE.]"C#2f"9fj_c=4LfgS(@\3*GO+gr+^=4OoUqZ^>i/M&bk
%E7et^1bpMV[b6[S(ffs8n)?U&Jl$9Y,@M7ei7nseh?M3Jdp@UP(r_O='K%gRdbnAgRr+S2V_K:[iV\6fU)!a5KbYDu7g!OGeaK+T
%,k!Jac(RLg!J):RSk'\]qS9_)>nP^?RjXh^kJi(@2od0MLV__(#:^*+m.5N!;V\CT=0i6One&pE@tdu_,<_/uQM)aSk\nO"<]Z3D
%"t@-p2(Q0EV#bFK2@.Q`;H)<e//4bpY$n1:c%!^7OWDs0"JFCL&'2Ma1/#XK;dej!?)>7MDG7<8DKZtSidANX&lXaBJDm]o+@j<q
%IQ;78lEC&QVNj`RV%r\6DbO&dcW+,OdsdR<;"Yc#QQdtdE6ilC0``DY,%*<N`C4gT[`L)lLShU(G:/6U/p9?aMlT=D`8KfTT',]^
%F#dXkAIa#ukY6Z!+c;jqmi5%X"SOGrhA`iK/i2?<<6MBk&4hi%EH=RC's@VjH(Uf:?$1%3o/^oLf`=VBS!4Uo5PDfH,BV1?AH:UQ
%M%q?$qIYN6`n<`+-\BM,m:VeQ%Ml!$?9j:(>0<B)ig%nTk[trk85BS`jRA::Q.0m""/!`E&"0*$L=2m$:sr\):=o2&XbXeJ6ZhZ>
%<cBhOYr"j=D@*NAAA)\ufKo3[^6=J'0nm-Q5=R%R<cR<*h>pB";YRB818e5IM+A$\aTJ(J]F<ug\Y'Mih!>$7*3WQJf"UoHa<E,I
%_-u4m0L&bcTVAU[fHQg0FG<?YGIh<%HH7fsoA?J]R/j-2B29,Tgp#.0<S?"srtUj7Es^MM)S[0gmP4NsYDJ7`d``;SJ/*@nC>&A5
%>[b-J=^2n953.[INW8qD(E\*JGJ?j5r7`kQ?1<bZr(Z(^p\sUTs0h&"C<#/9,f&<m;X)lJPWr^T%6LglVOn6DEmf7S[hd-Tqi6M^
%]L<XjYG*CsB%Tr3O<[JuaF][_Ub\a#`ic7eSKK.+BL$A<B^)VA.4%\F;NH%G"M%)ZbZ-:-lp:=hm,BTq%;"n!Nqu"TLC.IJed"FG
%\-U@ml+.He]l:ik,/RkV,7QU5423NocQtJj3"GLfO+5RO33R?rJgEMUj,ZDc5C[\Og$Sb!<O?\J##E=/;9&D8f8sWb&^`lYbUc?!
%_#i5:3>*H#/FY26*?1mjC]Wf:'b.0:E4W-?\-6(Co5+4Y6_#WEpp>@sAOos<^$A!66#IL$%.0c[HbSZ<HbZF-_6Fh,Y[p#&;k]C@
%<QoL=%`A$(csn.M@uHEr0Ugr=E_W#H^oP>>4=+8g`0A,L3mTt;.qu>$8'\K4GX@R`%s"(Jj,iKqr>8i`6?S^j-qGnYO<le*kq;H5
%;VO:](WPr:+"6&JFBLIf@\(F%kW*>OfTX3K?ELVg"O/K@jl&1HY9WFJacVot4D$/*5RGKKE[U%aA)heBgUB*4jbtBg)dVR.@EXZ?
%<NRiBKjDMCM$Y#X6E%mS9X5ug&rPYrk,\')6jgMAP'q3<c5EXhY:u3]jFU,P3G6?:bnV_c_9']9Ko[Pm+--9IfrO[PP1H:f%aGhH
%4_%j!1@Jjo#QRd<Yeo"T/*sXR3(;otqDW]B78mg_TMdLM=9:6lamEri21A3mA\tf[@D4#We'aDW)/&Nq`'Y1@3bnMH7AsfXhbUFp
%_]?dpT&q$^^9TWT])%!0_;m\1mQZ/_Hb/V/Jua!7[,F=I!?#A,Xt\U'\;!Z^JhLFn0WD4hce7]0+$HAZT#WOG?4df9-i:-'l/kKk
%D^6%U[l.l':ks?Bf^:WXMF+.JG&g`CFF"]CA#(I"eg_i]^,a*jd$N\BkL3:g9MLBj%I,>#81\-alu0-"+\VY\GnJR?&oh`/C2^+C
%U^A:0b$tjHC8f36Th3iD)@qa(_'2F4Ng(4$]-0UMVF-0bEX<QUC,]LG$c*J(DO>"qMk!uUe4lCiepo/gD\g?jaC0o$\?$Y,iOATR
%2a/BfTW,3VKPR"\UnuJ8p00Kq`^YVmg+?$]S.GaDe.Ys\4(c!/0WQBTa6P3!P#L!bLd.b.m84g<b_$*4RfZaa.an)#fuXo1_B4A8
%&EBhMef#dkG[2QE1.ti9*MTk4D-+`U#C%O2/USDH$QrCDkSS]nhr/Dg-ZN!S[VB_i1L<G/o_)nB+3I4+eBW%:4$?u,:]RY?;(Kno
%n?`FEHUV(m"KR`WT"_J(B#],!G:s;dKo(U&(HC#g*Lbm3+h)u\,`TT;p2dFk#>[m!ZV%eg#moioO[W+.f#ec!g1-@qR<9?+SS"<J
%@dXfc:qJt&*F\g.FR2I/2IMCki*#H5m0WHKPe+^HFiR=5QNSAOYYBWYmsU'8Ir,gW>+GPu8!.)'%=.Q"&Q=nH_^Jp>\#'Olp\!&e
%2B`cI`Yfq9,(Krfhb*VW]s/ojNI?T*DCe.us4ML-P3PWFYK=4HB>-\URKUU+%q:F&Q(a<(7g`N4H:<N$QSZ@,Yirr2E&\8UU?+u7
%9D1V=Y;@ESOFuhM4S[p1UJ"$t$FdoM7/7No7+o2s:=YUo,H<tiNfbl:fP6U5!l*"r+al:2EtZNYU(;;)'"&?O)I4@*?etQQ"6q/m
%j7F>"B'F>A-00uq3g88MUm=.j7n;N6E,$]1-*(V$E,GIbj(@akciAsdMec22X/;poY*CMpHXq/YF#sl$R,VTXaE#P"mutF$+%)(i
%Z&)HU,0i1C^>on4SO;J]N^N539T1;B+"LUmFBV+lmO#0b(r&Xka_m\k-.;;dH./"KK2MEX^BEst8_l=^4pMGskaKRmQ$)LKGg[Oc
%MHqSiak,I(W@Q1n%Eb@BQ.[/6YOX'f'0#t`pQpu9Rb$Pp6b_R6r^_O1#ipn!)X+cQ`[iDe33k8lN69O4"h[]&:q(aZ$+euWZ_][.
%@Nh3q<qS=jkcm((d:[kP5Mp,BWS29unL;erd68:DG.k!d>$h,Ah]D%,R$lES_i?>]a*BsJ0gE't%u1pN;G,:=cTq-</F6hrr@;3q
%(HFRC`**DpO9e8<9(WA$Vl%]\Nf)\#UY+WSYJ*Gf1D'-MUO2M0q#%S$N6rT:Hh.c\^ZajYMiC,b@[1VeIf=qW$RrMG+[a$JmlrE.
%*!-p:AQ[QWEjdO%i!%[^2XU'D\QZ$%4GJ!ld#K5U@bAH^\[aJFRUl=/>-ZeHRI]t1D!$)-Fm&8%j=7_P[)r?9F#Kt<<WOf]4:Q>d
%?fMSQQ9[W\Md\7/7(6fApmlCiMA>rKHr!PiIG1:i"KsRm:cW2Rj]h]%ocUa>LZEf.`c7sG[=,2hSF3dDq*mT&HV04"PAg(!It^+3
%/hb4lf[!"#eP@n@0s2R\DtQqWXu#d!qcn/'Q5gFiRs\#Hh&[W#n*0)P*H%K29RY`E[dBu?X.RJX8q!7X:CdR%e)>?u0\:[=9hn?:
%JCj\p+-J!)?D<)O59SkKRH+"&I&goU/e?%to[nP98A<W\bdRi<><R&!5:#.M=kD%'nr95PrB;Ladkg`R#NT)PF'j5a^=BRVHOn3l
%oJhLm+-Q*[LO6Z&P7<h+R<=bJ')Xlf+Xc`B*V%<hHq:Dd%VGBuJ$hKa2ih;+Rn#"Coca.nd>.RjXC6OJX4p-?q;r:4*.CGmIIr)>
%Hh9(Q2ih;+lQb!FrK)EukX5;noK'nA8$DLN,Nd4"8A7:aLjj^C1ANki?K@SG/;rL2q<$([qO^mZg4'oCGT1',0W^#@.(+Ugbh&6O
%>s:F4:\Nj,#u(0:St:_uMk7,d_c;SV4%U*qR0H.D1'K!`ngAd)b3)L<lm^ETOF5HN-D4U"p'j;*KrAfc=TB)dHZGk&,jI5`IL:LO
%8.IdY*mh[Tf%*T?nT<Ja=-bbcTBs\7o:Sc?]"fQSQj>hfE=lI;g[@G573>h`=$9>#d(aI6plkBQ(]!2F(0(me2ktI_s8(;t03m8@
%-EC6IOu@6`au=7Pk]o_5s45@hS%#![mC/RGIRq2$lU1Vl^^7dAf)`P@POAt=>a#]>[iaU+s*XH<[@(XMUGpY6O[$&j4=K)+n9#>F
%43f>5I-Y@K4="8UI74)sDW\6UPep",\VlMQ2^/bD)<AB6&9>>FG!*393/EC\X+kXC5LBF@j+)Dj7kq[i4!5pV3VYT2.8Ub6irPU/
%'Pn[1-=W(.K>Ass9bW=k!g=#T<ZYjN71@24Y+4P\:q"rXls)?;P2nb6`Gh*$PXk(s=2)mFi(5)`nc_lJcHpIm"%/Tkp&Vs8En`\J
%Td(I@/2.,X:(js4%@!qGl+Q,L!$a4a.csS\^gLomOU`!*?7=C0K++6jS2Iq6;+@Y&c,m`a_';mZOO!V9i9VK2"-c3@&@W9s$dT1N
%mMu1i6c#t`2Ls8m=&LIDb2qaCoIpr+;/\(l4*K`+iLb84jJnDrEVGNf6!]3:IFTE5X'?j#77k0\Qjm0O=p7upV^)M-8/D?eHA#W^
%*LZu^'$_^G*FTcHoFL+4XLJKdm&'-oScI"A)j?FmHd;Kio+1Af4GKuqKEJY"P6<]%81H@=Ngu(]Vr?A_e?Y+e2n\k#\IK)RV%Vp/
%Y)ErL$k=-:@,0k(^t'LEcQ/OE*8K!2j+V(-kf8pUT_V1,lW7OfCGgn]81&$6U-MX+TgQJ9Ab(?am^rpA[24iWbOZX8T\W6N*/(FL
%?7e*Gi*b9SUb&V^"h,0pM*-mPa?;>RY!irog9NQ32W>,Rb=>6W^%/^*I[LJ^Q)ojH%K*LcaJH;GM./$&o[GEO.=%FqU/89^PWDD9
%ai&U9Ka$[(i5LO?5R`Ffi^0OaBEC0@Rs*Yp#S^P(nd7\VOkbK$ODMJ%%(6S9'*E^MKITYJ=r57U-*(VJDGu!]N66="CcR):\;ZJ)
%@EO8g(Q\Z5Y!FoZJ]AHPTHk+!($(_i*32<Ej[-lES.4kIS/3J/Nb9#`Ll4&sYn3F-oBd0(Mor-)d'Kuq7AFbf5sp#F"<pY0MAj;a
%PAc527Sl16r#"tj(Ep63[ld$3WjZXt!olde9pO]qK@qRbYlk28YZW7ZJ>NjcOIKi:^#\cu.PC\1jGHj`*BrPoMr^bWeoe9,;Hg"q
%@F6W5$"8I(,J8K5APTgW8hJ54d$,`9Cl(u&]fC3Z9d/u1RCE^-Zj=j#qko_=0V=Qu#SEnFZ?83^$Sd91<u+Z+kY/^_M/>raS&d^p
%k,GL6pCbRO)j]gNUohGr'4[9Fms1'hVI/aX:1\2j\ZQm3mJu'dO9Xib%U5lM]#ke*l/%V^N@FJ[@7h!$]5aZ)UZ(:Y^ZRTaUQ]!p
%G7&bH5:]?]S;e;XpkXS2D`VT"YQa-n4*+`j,]@Q[e-%-D9Y2tkQ'U@[kX0,\f;^'sn$U8Cd$psf[SbY(9kpP*8I&\tJLlFM2OWpM
%0N0i].lq*r,!_.n+/>#&/G<Dl#@_aj;E*!Y&)`QCqR@$*$5I)jR_%SI5b^'-g?D:aB4?9`+LAED0cMAQA9Q+*a<`pFKb+:F-@/fO
%VW1*5qI3@2`M$Qp1MPEh=bpi5Q01]L#AL%EnWjL9655V_s1Vm('AnL!T/pIdTUf=:*aJrrQ!2V[SMlMrYHoJTI2p@V-@4PlUqT6_
%d%a?Ki25AZ<i,VT"CP!HaCH[P4OTHHH83[2-esgq@MPq)6]^]TDL*HC[mU8\O%fFM_1XU^@!Y'dAql!LcXKS%9dEPlB3^R4+t8".
%.>C<f6nIf6APWLg)KTLs00lDoR/a/FL_9P([?SfFF:2bOO@%<.29u@1RQ4iJ?sEe(,nq5/mRiYpYLbHYI5+(`'6T<6K;15a:.)&I
%;Y&gmPDWA)O_95YnX/8HA@[$R"Xc`*jmjU(_,8J\WcirL_PKhE9e-VTLp%lSO_/j@6M>+3)@uCL=FPR$kh($*J-P]&6YIC<QttHr
%dt>YEJI7)rK-j&COtc#5`[nF8*\8b@>!dh*Ib9Ea06k.Kd^W8hKtZ1SDT?1N,?6-G[?ZN4;BSs0?5!,-/TSl\@)Togq&)W"l&d5B
%I1]X)'S*E)ge38'V-'USO>/Gd@EQEQ9km&E)_nO0]UCDT@U"7Ca._a+\E'o1!AWR>mBI`?(WPK8Sgb+M#:IAG+,dg9N49D(cnoE6
%lF*rAaQ\q4*PugQitb+-i5(?Z;PN4!MJ-RN;$/>W&r](hZT=RQYV_A,.ENB.;`f^)`jM(aWK1(\`9%O>2A-@2+pmGoT&e"/LFrCl
%i9"0(Ch2UJLJac<6$&cd`p>idJ'@o,98*ELLJE*r&,F_bfsCB1\FY.;T^8&35r`aIh9l1pB`M^^Po+](8tI!`PWEc`44q(iCm(90
%pJdh\.5a]K`a06k)mu_ch-d*:.Ac[2FKAQ;FBs6d_RWBe/Bt$]HneR32[8G8@lnUWqKNp%pheZP[g7YfW@i3'q@N:aJ9thH]W;cT
%TbAa^lF2Vi<(KTGP2/X?DE8?6<G#R,.?Bq(koJtjW2`oc_O3/hWQa.Ift"cQ[)AbiDVd23\54>)cIiS)NtYu:$oXr]Po,)`*q)As
%\7qn`+R:P[_WC_TEX-nW\kHXn+35$@P=$%:kco9(j"/X>D:TirV(C+b:+)t2MpV<nGL13e;SBUS69#P=[O@MPj(Ij0+2I%QI)B>]
%+tA5:k<$V:=bIK;_T*!N/dXo7#=?.+=r/<Rq]lW1Ph;dK\_E$V?4_e=OW4sBYf9H&P1L/5VMr+IKA7^^V@l>pKaEOsS\r_%GU"4!
%C*BrJBM.*hZ0%!A+(jg<'QO2i1dE,D#)Dl)h1T&^.b$788c]KM$_OZO]lIVG>,`%M<uSShkGI7^lA#i$;m\!;^gg$rr2>#eF3C&)
%.H`el^=Hkng=t38oupPC?HoY=6TNNIo^r9_3te)IUO1--Zk#KbTS(6VK=t8HKo8O4Oe\l;7P2,Q2go)-Bp]oI)UDJheF&=6M'n@Z
%nea%gLt]XP2:I6*&g#?Hm7?B)9Z=Lcpj=];Rh,!Bo9AZVN%-#KU4N2.jrq'hjHNlf<k<2''qc=ULut(-pi2.K5Ljl&=BSs$D:.9A
%Y_YX\/jXiB>)GOXghhs*[BuAq5O:aB07'rZmV^4KXho3#<k1768/TSX_Nf@G(ie!Ji^bUZh\Qo1S0drq=ko*mGRL>,MgUsT9B0_<
%EES+"OLSW^1(I6CX;=c=Z.1ALS%KYW4WLktDLm=B&%IKgQuJ0*>u(^B@!,!u@LtQKpM"Tdo[*,?E7M#9-Bod7C`3QM8,;DP#SutR
%d\"GAjR&7''2g;?OZQ*D_DHD+>^9:^4]&liD.<PIJrqa*KOM0mDWR=g8]$34cf2;<$!/1Fn$]]%b"@g%B9.t\o&(^tCb@3e5'Vb2
%f#HQ=gBG3sCkS=JC)Wrh/4GKNFjo(4DsquR/L/T\]CO`+V]9mbnokhmG2*u!6PnO)=D2&0o@DO5<4O=+4gh>Pqd;3!nn?hLMd!M1
%[XCuGoc[%B`G?O=f<M:1)i%?f+D7D&/FfiXaJ2oQ.T`>'8LBApXKb@6l$9&DcFi6]oQ#+"aMt?j&]X'Tg;oCMmOXcrI/?)o6P]_d
%#Yd\2/fuoNEXl!Jc88uB%L)'ZA<`#u(C%1QZ-jh6eTtXThs5guQ-6V8'"P.u[L1V`=QR[q9>[cMoK3X!\l3_L4A1M3Ot.Dr[]E%5
%jp2D=A+nipJ8d.9%,B%S\?"FR6rh>N#j_,pD<+juDPX]AhNb;iH^"sbiUjbP3$;H/ecb+u1*:1jLU-/fgW5qsh<=_mKIC$/2q'f)
%&=Ng\8j6ns8:rtp<@B]m,b/b]ANGqX^&?E.g7+AU;#19YKdsGY4g1VRA*'NE40#96O9f.DAMrSB5j)^4H:BVknQVO:M1UG(=k^ag
%:NF-DP#,%H8>r,eAU@:Jo`;31CWrU15%q;L+%V8LhR7I*lT96,[]I1@m@B<23UhluC=e5='JjjVDYsf0SbO^:oJoXdRko6^[5$L^
%9A<CW$L>"'VA-Gn(8VnVPh$nScoqZF]4jB7bgc'?_.eZ8a1M!(Pi_BX3=_[50?HQJIBeYn^"M@CQG\Isletc]q!d>94=S8d^(JY-
%G:NoaL=GMI;_3sbRiO\(g%r8KZQ;<"`]/>Qc4^iMn0uQ>_fFQbQH%_jT1*VK_e7_VDMQQ8.F+.=`E(qY$EG.Wk`c^\4'ob^_a6M6
%b&[9]>S!HY_hWp`V3pp<@A+`+AN>-k?a@_)`]-aL%\KkB*^3f=*^6Z+&"efuLYp_"OI1faN.YIJB,0]_P/1#*Pt`b#NEcu9r]YZ'
%,b-7[.4s[E%j*6R=7SXe*'O[a%h"#@@dWYfVc1Ik_\5oYT7lfhVliN8EumM-e`Ze$NTYQgm+rr1bMfdmles)3Wk\VangUrQp$g)H
%iPUX:lqKWj=K%!NT'&[LpAT@40TO$\$>Wo68BDt7"3GlaXE$IO<h5^3CN"]La2;O1phY`3<iW'NTM[Dr;,NFhZ>KR3nDU?UkCb_\
%G+pO&=(,B8es,GKYpq>+aD^</=Uq(3]:6h3`D#[U(n>pI3%OY=KqnY$jOHB-0r$!Qi&+BAA5t$K;A)$C5a$k\]V#9"OTR*a3KfVT
%FX(G"\T;GOnf"5c/crlq!n^9IqGJ*&C@EXc]PSYKFNI6fA[QKIcZXtf"+tG/CJBVeg?HB,p7V`(Kf'>j&/27U$J09"jd]bU_M$Z!
%djO@cHGI"'o37=3^9V5H8;$&>E;WO$*[.3`kumtcekkVMc-<N9PRcOKI*-6QI>pMd8KBeN>XRV;M6LL0cc:),THU(,75,)l(m")c
%3"`hC3I@KB<%Mpi)`I3dqWTfB:KSfm2V'Q0GZOmFVTI6d8FWs_k;%l`j/==YL#8')dCRo"Uf%:@Q:5I[Te!?[C$\YKLE>Un.('Dm
%*3a.Enq8gIJPr)q51qE1=I:XP'Y35C$6h7@#-W&UYooal\N)U6YYZE]p1Z5%a)%iBYK=t`@-`fVeZ`GE+Xc2?`*5LoB!9qCf\ZGR
%R:EG.UTY3i.(R@Zh$iD=Q!rlT#CAo"+6#k&KmK**V8;o=W1?9C_jm-s>C8#3)FA9D_pmBF'q,>KG\K9ID,GX6%O[i266_AdbS%aO
%pp*4gj=2\r.o=Z:_KS)[ME/QFfJK'^,6X(Ia]49b/H%i$N&to-\*?"TY*6;7245l+6>>37JuKo=QeK)fj$I^c[b^Za:2X`G/m>Dr
%6)HoH#E>!,Auc](6ead9IllLrBrlu.l`7/)FW=FB%W$a.2]OVS?)jRW,/QY>(7I0:_aH%L!+Q3r'3JA[,.'Q+K]&^bXro^dSY5jC
%@1[U#eZd1RDU3&*G4h@T#,cWW7nm-D%lFlb!1<)AeSO;ccl?@*E]@`mUrcL0QTgKT:-9/PphNn<dI_Q$ODhjI*;!G<\biGS"0KR3
%71NpoT=I?ZJkAA-'rSBhi)FBr)HFj:NH7eW6W(7lO9t/F_it8[9>ZRbK(?YHZRh]co_Gr,[9QH5ZQ'bN^?%4_\(tIlBRL.a2/:lJ
%q>P)kLeY4<9n(;d*j&W/U33e\m;6n4H4DMo0-m[OLZ0dl'E3BifblD[,5TXi09_anD$=WdgVuh.KJ%"@TeWsYije-g5\gKXEpZ1u
%@$GGVQcAXA(:F%7E9\TG`aihQ*QJYOCYLnF>g]*&7S"qLdu;S]H=amR/"OF,[\DNf,LUBbf!=b`R1j0WX@qrl.IH!_p5l!+blFK?
%7C16<B\T+/1%-us9TPq(lIf)"'EmNNiSlR+B[Y/&/Q)^09!KZ9H[q;hdhmpQbDWL>[63H5.b'l?H8[i=drUsX7KH2;pY.3+AiVBp
%:-pf_SX!k6U#+$oW-r?&AhT.#gCl#fR_QHLc;Fq+SFS]eB$Y3<<B#,PkP3RiEne/"cJpnp4I8TV"""rpjZ]Ze?mB3[`>hC31E!m?
%YdfH;,qIUr-l*7Ye"F)j[Z/g0,,*l`.9A;/<BCSG09_5K^iU8?/j,@j(Ft.kKY@`T&K6&OCWnYNTN8i2>@He9HO+**K9.BjWNaY-
%BHP-q0>[H2e!b7k+3;ckPZk&oP:eCYh,keiVmp9-D&W_ZX@]C5lBIf*9&.[>Z,rk*BW]mcG.V,KD/Sfipt3sBe>B;6p#.:7`KVpS
%LA?id;u4oOY;hG9n8o8OkI,@GRY+VB$.0",0]d7H:URQ$B^MAD#7.5]fs#FtnbUD*p0\lSL\"%&(96@-k9['?m1PWK6kf&rSrQDU
%.N_-GS%VNr9p[6<jt!`S.93bG9]TH426=gtPTSI`c,D/4Z>giT,+L$B5d/eZj!tE/RafV7fiKH61=U:2)?Q;^2V,Ij>I>FQ39WYn
%#hHFuP6fb9@]OGgKiP:[0bt,[2s6T>:8_C<k@s6DBYl"TfR9N0YaSLTr6G!JK_#W#']>g-"5c'!$]"-\KKdV^Dor^ngoOQGf9BFn
%/ZlJg!1SXa?@aR]<Cs@M?TsBZlUsPaEZfI8=f>8j>fJa&Ys!m]@,C=YN]Vpc'G:E>[]r0XEtUZCSMpVcc:Mc!*mCNmc6BtEHK??$
%qjm22/hKCo'cMq`2U6oRVT3t_8j%f4\n,&g-Kcic=B>[CGqNcn'TG+5K;NK7!,NuXLc@&,ihVuL4SP2L7RcRSOQc8DYnpMbQKg),
%=WW;o?I#f)&%/&<d(7o<p9qIE:*C$oQE8d*_b\_2(JN^>@)b-"BpL5-AJ*3d8?gOs`^s"WX4f#P50U!?ngJVTX4f-"okbfA!bu((
%]JNr%g!h(%_mrY]/PL%keXP5p-8!V7C?.tXqE-e.fSc$3&U?OdE`2I*[EPii"2T#3;d)GKMbn-QP[P\:=HJ!G!:WO3HE@VY5sc]g
%%0NjM0$pqa*&og%>Q?/QLpflZ\Nq@"*3$-2`^kM8=9Apgol\5=E/=rs<*U>#97:*q2G8JSp7YXSl_ZDB=dN2oL$L_"E^9+bW9KUZ
%<p=:`qRWCDKUjO27BRQa#4MU9hI;&o&a>E%5<"Rac"\Y_X`/jLD<-6*O]kJ-2&(_V)N&_k&3M"h[K8<dfFb#_#i8T?+a=qd+F#_$
%Re^^6#6'uZI]u*,I'_&K9k._J)@D'DNb6#..#<"4)%(t-+.RcaCuEF)6(kGIn>Oc*#$,VUN+>sV6*.p<"gO<pJk$2!JdW#!4;)Dk
%l\^:%\OQ&s"i4q2o@8@#lNX\i+Ll$@-CHEEMe07&$=YM79CD*q#6\tm\_4@`G.;`Y"P83s.#=u>=?1:>0,*!RH]2j7.ggmk:N0mK
%EO1>L7I;S+bK?8O@-&0##&ICgYbE8kmVWrh(GiIG@rU-JN2tDA6PV2`YB2hd\B%Yu<LujP\Z`spl"Q@Y=tEMo=mddHPuf8Imd!?L
%k'jIR9,&\`9CQ..UU4]3(s)(4LO%hPRt;t?cZI`iP2indQeYZB2;&KZG?^-T8tI#(%Q[E8Z+fTac,'08n5?<+*J%4.frnq&)(-Q4
%?YSgkU@"EJ9(JDe3OTFEk?1,e23*d*aaU@8'Pn\?kp4O?f2\3ic#S[nqm@>P:9s4fg?F-??*dn=!$@Zk#-0G/M9`D6=5fVH3ot?n
%^Xa.ndd>"cK%lam>4!kD)Acn_N&1?r/6TcsfBh*LRGuG>/V^fl1SM3Y8o39n^D>#:g,'kk#Pru;f2]=m^J9'Cfrlp(X_#85"j=Sk
%^D>#E8i-@PaQF20R[NKM1:(>e&mN2TJu0FBJ<DJ\FX(.s?T3"9^M^D2He$ump<KS]*;Hn_IU2'$VJ<LZH"Pg.;/P2qZX;sgS^LhS
%3^^_!@qo*(Rf0h?/PU@fCC.+Y+4ff1[DPYtq.biA]l?%)m-,XVUQ*kO,IAgp+V9S`=(,r*-;`C!e&1P=82a8CS4_VHYD@;&(iV=m
%"6#CY[ZQoZ46M:ZAl'ps?!-3Zc>.E/.Pmt7k=oFhfs=L>M@f]YjI'74Cg5/2D7MQtMd*;O3DrL4ke]Yk^1jYYVWH&\_IXQBEpVXf
%\'SV-]i@$c$0Mp7mQ?5YP^tr.3J9(-EM6hK-bKTjXUj^Yh)5JN)J,83\gO:2^Q-3r076R.&'G_EH!6MUNg3%J>dfd,Z*KIA;CQ<'
%fSqR'Htt5;5?_1\BUEj;5A$PKPNso]RnZ"Ym$o)AWM*9:\/LN8'b;W*VDIX!EK]WcF]09&/@=Z#9T)X*O<[;4S+d.SXpnhYVEEFE
%)S31gC+:YalU`cs]>)#ZZ9".H%^H/\P9$s_CfNE!#['-j^s*L5d'st/-'?;O%YRI^n061$<*lqLp8bmOm@DRq3V#aNW7Qgq$BAmO
%r/R2fLarAM'edHkq]`^jS'pY%6LLgp,@!"0(O;;RW2nA2%@E4&91J^)e[=X8-=&Ir%D[g_VnO(,>i"f$j@Z#6:j/1Y=sBOc@mFo3
%GRTbbZ[$@*$EU5.Gb@5pFt-;Rl@G%XfQ1_.m/,`-ELN_q6"3R*-=tjR<"7<mYr!dD#qe#;&XJ.BMFO8!a3XgBntpCXQ<cQ%_KW?D
%LWNf81kq3*H*t)*?Ij*uj]qXcKmKRf&dD1+6Ole-EPBBb4p%-("H<GFd&8a'W'-e1Rah'Me$?uQC<7B__@Y^i4Z2>YSfUL`'a)[b
%r)uW:B[n]l@>k4>0#$?d\e.p\8p1rP\LOX",ctoT:B2;t5%Fl8,Dsg)I-aW$TJ:>m&N`!KRVl5U\g\[o-=aLsIT;mn+Ru;HRL6b>
%(>=qeXaS[.GYebbWd>HrWpXaCVOWRnX"\m^L7!SXJQZdA,(Np<)sR8C#:H2IJ@L/2GB;F_TlhM*(CqF2Ff<__Xk,^E'%VHZ0]fQ#
%oDr\c>Lq[1p9%i%Aa#?1?IssQ,;:IZ^.m3cYr[<O/$dMK<fB0^1`i-#g/GTjVd6ft-T$P*,lGR7*i'5ona,\lG^Zhr%RbR@8\g*r
%kYCu9AX8T2/bphbL_r5G&mCbFMCC2T.880#97l0F;YR1:<;kY\98Q:eDou9=Ec-+NnjIk+MiOcU#2<GPH]8t5XPmCcm&_kR"Kq1k
%(`HjKro;ED=ON2_&pcUiLDFi,/WG)^f7:Qg.U:#&PoEc/)&mUb=9^A[Mtn":\"IIhMd1t%[Z5GV(1PRp;#<K\l`KS4VAgon_!ua4
%5fh!RBn/=?AA$Eq0sUhQ!8<V/^`g#Z(*-fUU=g)GK^Z10W?Z..A-Qi8_j#5E"<B<Dj]+VlrgIT^XR&G^%Ns_8=W/YtVRA;d8gB&a
%0(d'W'\AKP_:TKefTIs4QK6s^&Ai]T>N;!d=h1ZD6E]N1Tf=CFE_Va?PsLFeWYrgEO+Vf]C$a3TEWFY,BuHD'YqiSrW,Md!,_+1.
%4l0p^`4RIn&iO/a$;A!N#d8!p?#.'g]eeq^NdMHrs7P=e0e>LSH8+0cL5^TFBSV!+$`jWM[S>e%k(EiE&8E<L]JMWnito,F;Y-2<
%Um4u1l1!,GIH<HI(jk9c,Pj&('g^I"k'd!\qn(bcg\@+rrmA>2IWb8So2jONhHiM;n\s+H2\<[sO#LG%^Aj+2UsTGDr?$OZ2g3!I
%h'[_T*%<l2G5jDuks'siO1VdrmI&m3_sO$*4hq"*kHl$)W'i\:bKO9^;33CiEj:\G5k%l56C`\H""1J`eK<^HkS\CkXpM-.WPh;J
%[b0UU+o8():#:\+fj!.T.4=g@i?4VNP=!p[kL@43.%9>25lLn1"b#p?A/V-;\5fJUHi1Z=YL&NAd%N8Z6M#Tr^4o`EEQuh7YK4"`
%hI:r:+FXcn>j:(Sa:$c$g6erghS;^bo3eTIl4K!_;b`jV!9Si%[3H%b]bF[Naf4"2SkppBQj1V\W,G(78IkAbdHCW@HL\%IXKQ@q
%5Esg;k&VhRR2'%aEZ_F&.Z.*J6#gen/1<j8OPh:Y8rmOajWgk#<;.X3L@P?Y^Igf^c(ah\)&W/mbW405_EP;3;3S6'Wj&`i[8&BJ
%bO?`S)8;JsCoj?Z(Z\@7f+1SO7#`WfR?5kgH*U1CEWt3iQ+4+.'&Y23`TJn67T0ej!d9f#&K+QN;NuM[12$"9oMco>ae`HHPV_SC
%eLELmI6Xutk`\L78fSL=,0]'O0gCKRO=DDR[>4mX%64u'S$D6sKH**3%9),XK8(^Q[45JTXY,3;Pmq/F(4KKEK'6C-f>aXQfXo%g
%"e?tiZiP%WJQWp2d&p8c+f[*FXKkA'1A:)ij#_5qC>1@"Hs0%r[f`=2kutc*;,hpS@OZ[nlSD::>K7,K&Y"?3mf(LQD?VaFaq3)G
%bP<'Ojs4XNngF<T,+`h(:1NKbq:,TDB77egpDA=!EV@rA0hM]7#>uG+Wg"2M<Uu[k;a,`#GVYY+`.F+CP/eJ@Q5R-,`+5fK6s%I-
%Ke823NG0PYEt4;EadO5jEa;;9-PH)/D^$W,q?P36T[?p)k56:k>WB0W]]@t6ehPJr4Xs>2:m@nIPN^5(aX1A!]&9#l(oN!C-6+@&
%.8l_u5%pQ%Uc-VA)qHYR&S;+P2[`>/NEL3]2SNk[J26pH*_P%=[SW!*dL2NN(1ocJoiFDLN_9i;q"o0b-TQ=J1o&Fag)'%:Np"JO
%`2G'*GGVR:<%HqjodF6WnnnK83'%=ImLn7I8DD1h,NT>qL;),JR2She.Ka6q[hcq"S0CteL6.#d(+[[P&W3qYKa!Mm7O""?.E5Hm
%+"Vp1%J&Vm:SOMjm\bg#>8FbU?Ps8=Y.>dP]:8u=K9*km,bdrH5VY9n`U_N3`0_Zq*5a*44a@<]Y>KsmM9@g1(0EpUeNf(rEZ[CV
%=Ja;R?k%!0N`u:<ja>8#+:%'8O9WsTjBu/RpEdP11_gFOW/>iT6S7N@D]G-ma[18!-P^q4>L*OEU*<SaXh&Un*0TM"/hRFmPea/1
%VsbTJ*1M2:QAbDOb[g*O[9.:1EJ`ku;>MKRd309'OeB-^2NdH$E`c)D-3^a+[4J0\6fgRK&&Mjb$TNJs%uK5<b[N2"N'_.I6?SR=
%ZT58)Vto#$E@pK#cPfjl`)"^&6.<LP_P"d$F.Ia+ZrY=.;ke*nE9!_-,r#r'I2u[:)j:pg+5"bLCNKhnMc<a0-Ht-?8fjn:T$P?D
%[<>6+ZjD1d)Lo#=.?1AB$Y=T6JsI;OAgqO4E0?O<9VFXh3*kfIioS6.iD8(&fbDN8`Re/5D+Fh7[sF/cNM5Dip\Ef/LP%JBSD_]^
%:l\hQ#<`],!1S%7d]qOm&OeO*oD6LRTPu6/rG`<I]?er/s-O(a)4JK(2):pOEVju\4&.')_GV8=6%(5]L,[=o6tN<$?4N2jCPa'j
%9XGu[KH\jMlFN!T6_P3m.e;;)WCFH4Z1jMU@k*in'&m.C,LnZZ*?\CnoWSP'(/lJ;.Gp_1m`PnK.4uj+nmZdBJk"seW:DQJ/2erI
%``b5l_(AmB($3Mi<=S"0jKKN*1tg,`(T.p"93;VM8p\oh9o,hEEHmOANO#d@SmKP'.7J!HY-d9NLh._O=K929Q#b\cK&F'NA`>e:
%Z$dh>,R$1_7#+et)[^[>$CcsV'%._pX[ANh.8V]D#"#^e)+Q(Oml?uZfd63?o[92<LmEL!4fFO1)jejI;Wcmo=*4"[-*JDM3HLL?
%qM"/KC/ijf]ceUMHX.@)G:'G%$h:g,ZQNpqF=#AWM=YoE-@uDXB!.0K['?omdH7=TPeL[=qhDC_Ea1Gsb\%9F%qtKDRZ`B6mM>!(
%C%;BB`orb7lGP*H*R`'/'Ic+)W"0$7(<P0ueViGLNL)!"DZ8[#Kn/:-X%D^k\RVlZ?.`,t$=R&"#GEYdcH;8>\g"BiH3i%I].?Ud
%U=D[u'p)&TAqH%[7$$Kalk#3aRm>N[a`ad135';hDW1k5K3?:/kf0/+[c/dW38N[JF,heXSN<$.@*SOACatUk-^);^7g`D^dTDFs
%o$PiEh5!)'BX/jO\*<1Zbei$1PFMp/bu9i27GbmQ\tPZ#S.3>UPc#i;75Be5?'n2NO^.9+DJ[e[Mc4oH;U&U>$bB^r@A4`:)EkIl
%=`&&4Zmc7m?FSALFFD9no@&mcHH@Cp4uBkkP6SQ7;'1\^>`jo'C/_773CH`i3bgUg:lKRmk[jkDEFh'6gSZ:)4VABcOD,Q@j0DUu
%V(O]I!t15ZZV+/kqcm#0kI=a:H+),N=>a'IPbBJtW@$)_CKC\=(s4CAZ)U4n%OSLJM[IRjG_NRpM]'kO,pj5s5f&CZp_I21B5/>#
%c3KL#6\'N?m>tW6n8=U<AaeII1o?M>=RD2o8@W,)RuX[>/t&U^C>'0CWk)Zs+kFPE,aqVZ+\)8h&a&nKl#S&UQp\;TZGA);^Q]U!
%%T;@[/K5lKJi;hf^c+f:X,,aoTp;@<Ct;4/FI$sCD5..<=FA0+MB.LiPboQ:0E=UEUKMQCa5dM:9=Mo]l/TQH9+YP5;9j,a1c1E&
%VbT.5M:BSt$q4&q1^Ieln;qM+8"1$"$@D:!3&f#/7K[cakn2/sA21P8#oL>XCY#QC0U(@V"^l+mL6(nDU7mE8iRQ?/KFu46:F1;S
%b1=p]I!gZaJP'8Sgr]45QE.O"cV6\kjn^]`*?G2((8`S9'mOoaG*9fB@%Y\ZAHGHPO6T%Se91q@J:;_U>"d_pcHS<,X!IrXC3Bm5
%!26K302'A6R,=;9Bu3+m;T84*c>'PTRt[tY?6CCpM@(0[fgdd[LHNY2:nc[(Z8Y_18*p7Yc"ti?jF3Do/nEG>/kap26U!a1GkBe:
%DY:sE@)^Na(g/$kZ7+/.hn@U@&SG6R$`Z'Ek>N2*9bE8<LXbl!,XO,`c9aI\3TDu\\@VN?bA>rKfek^j48-5Uoe9CF%\paC.P`Vo
%\2M*TK0_b;;aPW2mZVf;cC6Rh%?$C?cHp?+-e)'GX!Osq&g(@ZLP9I#/#6kJ$'i]$D*iVk>miMH@9mAOSQ160\@m,B-r,kW]J4G2
%NS'GV@pN$6BlIOF%h8"\OIOqn5it$hqb;5E(:)t5p-DH3S4)!&E<HCXIk(?J^cgU6I8J6RYoT'\`d2;2HN=!/%@.V_C<W=ZI6s$1
%^ct-A]-po+=g6s:Pe/;YQt6EA@0Y#@ma\dBk<1m21:cWfqLE-WN?;-\fupTYgQC/t%kaL<)p2/AZ(6.jSDulkR0q4i4^TW<KTTtL
%"O'mE3bsg(fJ(<*RiGh+RHl8qXG$GSZX:.C0"RW/8M!^!A64tu(,IqMa'KWog2o+$$rj*Z%F*A%r8^:]fuaBe"_GJl$cl(TWG9M1
%NR@l#=ur8-083!:bPIBf=`,23MpG]eE)[-^Td1L=iZq9)r9P])C0jZ%Hd!.P)oU(IEcn@E#)6]p>%NU92k=fT4KkW6L94N9(W%]l
%M"$F7#a,Bb.5gq<"r?0I@sMf!1gsZZIIsRc2qc6ufm,Wb#$5p8*K*D&7i>!^WG8f`257%2;5gdb<C*@D'LWGB2^[!YFltY@eHBB!
%#Zh./Ji0&:f$EQp"\Per(_L6;V<_)8$6?<6A<nU>.g]=qe-E4N"SL'H0F-XX#\%1u]W25A>9[&RNsm1e'r>E"U+WHr6B_mdJp/*s
%(\;;(FAg[*DgRBUVrR-\4C"'][aERBihS$_PQ?bQ>X=(?9E:<@I?E]ao87:>eenB=P,VfH-YZbuV%R5"0IN[:>pBTb`9<Oa;^0<6
%@5!0a6j7)LACA.;;TVdt@Hr8km$=(LX](<rQN?5d8VTu.(dq*uQ_9fOOQBp/W*/7H[[V+1!kBgKd6hAL%iJVO+]mke3Ch%tc:&]k
%\gE=P84EH^VP$IT,[$cQ/L#4Fk,)]5T:1h.)d+O/$,a\(#K-^#K2&2Wh7d$EJ&S[";d)*LYG_Y7"SYN\Jd'Q$n>;:YOc)Lc`KPZ_
%+^-V`3q&mcm#m_CZkI&LHuE'F,;,j@T:^]TM_Z"S3DdA+`ZTIFlW`n,[)X-I5+gf6J5Oq..u>:k7n:IfM"_`HB7^@q`FP0D(m"i.
%$>qm=<c^h7Q14=RN*p@6_O3-p!3N2,^fM%iHB*`cg('RYC+5`K=@-gnlc19+7BDlj)L*[qX-$E8`4O(HTLjVOESD\Y;%D5PZQ^]I
%rk$@0i:D,,J)&Oh'IJBsLWra6L0O69Z<t3JM6bg;_C8).mjV[D:ud5u/RJ<>732.jegTmJF'f8Cj\>=9BkPU%2QotYS-m6\XAQ^7
%m]K8:KC#d/VG#ra>)K08$_h=5-)toECMS\YVe0EG,ts4:pOoeKoPZ=#a4;e-0%F>QnljsM+:Xk,cE9^B<"Ycp^J0h]RVF7,d1I'b
%H*%tT_`M;/n7rHE%CI8a8RiT?H;BU"FesJ^Y'YeZ7"OsYbNfsFK6(c]\PejG+;\V*Wtb7]\M;Xam6okJZ^Rm1n$%==,_e_pd"=No
%'a,7(ro!SZ>k3uIh&_\p7k6s%N+<HZmHPE)X6Y:JX;K.@gPsH#CEtPFf\rY`NcGnmB&2=BZ,V]RZ%LNlb`(b&6!U!>3/Zd1>![9%
%d@-7.;STI!cj'l@_1)bOA\^>9*6Q3^pn\e9e5c[*.sda)*)M"iUP@r9Pfa2.gZjL=M!VF\TMBtabQoCl';0W\RAD4LG.$KQp/2fM
%0[0c\V)-=deg_US:*3JJ<a)9ZT<(6VdVZbWgHH-bG"MuU0H%t`X-V/P7U"/HKNT9,7iHeI2343S5B(8I%uVU+HPqfQCp8S=.iLpd
%4\I7&=;[B'4Me>#\I]eVlMrGXE`nNaT+;>B`jkS#C>YQ+8#Eii3n$`GQFW\dDniR%.9H\F-`m45i/s[Le`Es"KJ$\^Q>%26],)Ot
%m>JR4HP*+lf`ULjm3KKj.eO#<r1g#K",0jYm]M$7.QO?/E2up#k%]p!^8Qlt/ARV9RDd,i]O>>)E3:5i/J0YQce"B]dVL2BKJHW?
%[h:D.6`$dhZ]L.L,.J,7=o;6V70gNME[+G#WsVJ'/gr]3M0O)H\fbl^RKB/]lmUIN"rg+P]=<qK5eU,]k_SDEB@NOfd1suTl[Xes
%W@2([W^[W];Rf0a#@(:U=LsH5N.<.H>36&7FXZ5gX_K^<lt)5(kQtj3a-E!b-P74M5`N]Vjaf%CPXA28Lh8"k=RD[3CGK_o,c2@q
%JkP51<?5VN^ZTl<C=kFkL/WbDa'uH?eMp4cO_.bNj@4r;[VP*1:SXD4ZB\;0=\R"=3f7^.k-;$]ff)FM-3".AK"AKS<J>+?DN5_\
%"Qik0:6W,jJJJ85/NsWt?.b4V3$sJknLc$KA`$bT`O3k@W8JFH>)l:_>QM@YZE%_mJ@3lVj_kpF%!Q%S+;]pVph[".+]j-tF%m!X
%\Y)ko+5C>oEge)nP7MU\0G+;;g7m^QdTqhQYp?EWMBCA/#QhicEiIWM2:IX,qB-$OBX#YfXaUHu$!]+AEIf]/6Lh=-r=q@E:+?>3
%Kpd-Q)91G8[V0"$Sh@67QT'T+^$4"3F;0::7`H<!<:0Gt'KHJcSAl=WA>lh%$5o2R@:@=MI)]JZE\iE]>+@\d+A2+.,D_(4lO,a"
%m3-aG<[03<S.$h#c4tVP:_;N)_DC>mBk([b@K5<TSsLX#%F^1.H..;#)WX_\rNp7Q4<3t*anhm%6+7O[K,$pUSQuQ5;cahm]&@<D
%20B/@`QFk6L9VsK=*+Nd9-NNAo%9'</:YqeRIuh#,+uUOqE[Gf6Lrj[*LU)O/=Ni"]e"%p`?A(NbcCuRMW.V>Ni7t71-PEb-Un/I
%?(jnHi(Pt?4d)9l@+Lh*O$q(>GZa1X63/45:0,`SV=7,CSb8a9U"U-mXS9W8V\I=jRbp1N`^I37&A>uXYqsps+mtm%)@P?:I!6CB
%":]k0<"KRaIo#&A0f)6='7Eff=q+@*e1quaG%'jH!2&Ue`!J#A'U-KZCh_DOYaS`ac9&?pW"0Qp5e(".<V1snJt*:-biur?N`aX0
%/$l6/S?\bXPM87KUk>K$942oL_^qB)g6T@]op_JWCcljD@512NBhFH<HPJDU&kh\*RW;Y,9o6sC%"T+;Wm"=_%"&A;[gD,]5;/U?
%f0CrYgPdL0^tD"DR"Cr_^)AR/Figli2Y$SC$pIDi&ut%V^nGTiU/#E,OWl.<PhV<Do%69sY3Er8,Z-k`5dWBLn_p7sdBkcOcAZJq
%aL1B<?(n,03UOD=Ek\1Rfu_L./!V&-%@P$;,gU$[VSbhtK<Cs\2(6Zr8'ZNtOS^WO[E]r9IsI<@:u`Z<.;h`'Slr+IjEM('=Cu6^
%l.*QRYc;OQ%Q+\jhkCu8PG6]WQ0$$%+^-JS58(8sa#*,`pE`1;C^lW10r>7[/i,H:M%M<l-+X7e6f)CtW"Hj2p+m#jK@!h.O*uen
%"hD#V.t]J,8YKI&0rbO2hQe9j%s/bQ>6VL[VBOnF<bKfJ]$Eob"?Gded3U]fW6d+KQ!bN):uRTWd$pl,YfbCJN)oD,lEk@_Dl9X<
%BdUkJXUU,>C*YTu-m/ae&HS`NI]=>W!n`XjTt1`THqYTWW&^UAZ[tpYrA&d2A1rk=VkeTH1!>pZ*&9XiH3BMCPeYGp36<W9,!<hj
%hCSnMBQFu'&NQoPjsUb=VSX:-%#p;-l>h+<k@TDpRSBT^4d$ThUs7i'H"ibdXooi0j'm?__,ofYS-coWMJn#TRL/N&BJH(3B*%B*
%X>!(S1u(K3N/!)#*$op1f!k-X#2)P)_'TcKJ?-@-%k6-<Nh6el6rq7)*Tjrfk6Sta:-=Q/.3'WYY>]jm=a)S^`1l<UE)?ZGoQS+Q
%8;oftG?r\p%Y(n=QS:Q95;]A9@o*23.MVl\)YJ!hDr=I89Q?TT#/*t"_5W6a/5^d,WZR5dPo/1.aVCs7Bqe2$(_ho1b'4:I>6\kF
%ir#5^5er&+0L*Qs)4CaoBi]bFoq3g!.Dh:hkQ*CIl17TIJND$^EoGb6NqS/,+![_8\0;1d+pK[S"&`?cVFX=.C1&AB$)fB*N)C-#
%iSacYV!fh<*eLOgj9Z\HZ5]ZY#*cT-QS`-LhW)jYQeRU:n;&M)!!)dMO,sK7j<[$WJO-P+X]oa8Xs4FXfl_+.1os@5!(0Y^7s=3W
%p0ifoemq=M!gsf<A33/VUGP*BKA0mA,H7*uJYq<*`i7"DKJ=FrZ3L,`G/23npmLupBiTJeC(d%,Ug^"I]`jocLt[Ao.iG`eC<eLS
%2"493g#k+JW5"_n4\MLWf!\7cT3A@qW1s^*R$tZ9NHm\1+iu5O3@,r8S/B-:fmt[+5,ks=-FZ/?RLoXp)]7+N1Xk'IpR!Du6F0bd
%^n1i+-98Ie!e4s\g/K7D-k?e(H[[6>8JMEE)7hA[$W67d5137_+Crqd'1E>g:b\t>0.Eop,#M'b:6^1V5rd:%r!iQT=`u3E8b1k[
%p*)4@1^'YBFAkWnZ=:s=)s9JA",O,Q;b&4\S@7u*;NaoY]B<_u@9BZiXr1'li\B)aM*^?0,@q=-V^/2n+KAQW'-8kZ=B@Wl2)g5^
%j)UceDs3/>+OZr?q9!8s;1_%7)aB?+#+pec7VQ!`$D]t*r<.FI:_r4=3$>\_gmk)BeV^pc<C;otP/o_Xe-\8h%5)#UJj;Q!ThS^:
%iF&>N<7+uNBdIk$Z.(=](Qu!r'QX9>LJ[V6g%%&gqb58?1]RU9:W2"L@ub\6&"JG&#ZjV#Llr<BLjq]t;9hG^HqR&"V?DP4MLKfO
%Ke<?NR<R3<@KEeJ5$Geuh%Ft-_mrEgcoKr7I=q#)Q3]qn>-Rg=InScMXY@$Jl:bOlnA0/AL9j5m7*1YR3rg`rN7C.0rA!H'(6X2r
%U0@ooX6JOPH=,W"pC\u&"U)9A69;%:$)k>e<_MZ\)KVlnW\3H_'I+!)=DK?YDInP%LI\U0c!O^6G/C6%i35:C%#nX@5:H\4-iXaX
%%7V/#g=G(TduW#?nn?/&jWHOrNZu,K"qmcA<90XN(Q/onkS2XM)%00&=$mcTAZoi^NikuH#onb[6%(&lhTqm(b$hW9a#08]N:pu<
%bGuts/nIRE.XPUi;CPq:.YO1pqNS4:qC7e2?d%>iSEZS$Q;[6,-Fo>[Z2<p9ij_]e(gtl&UC`F.TSr1Q9/.UjLPmL3C)2D8"o7e"
%:i'SuQ@4gsAY>I[@UH@$F,oqIDX[u'(M46D#R>TRGqh:fU+3_X*<l3i@?[tS-aaL`5O430Y+#'ccj145IZ!T?dq.+7ilRAf3,M0G
%;:UlWgg6Ek7TXnT^f82g'ZkKH$2[r+mCBTp"7qAdKUQ)DO8&p]]*lRlX/0`2R_5;SpaV^taeRfcMTl3:)h]G@>`)RDPWY?))lr@!
%QSH`ANFi`c?V;DcMQnr@=V,14Y/N%cW%ht+<2pUe?1&=je!b9"\VIZ#84rn,-$=m&"4Jp^N-58?mR7+ml;DP'-QahtnQ1[<8'bL/
%]*%@jfFokGHnj35*&[b+_-kYE3%NS5FVWBopiE>a#;esGn9p"fiYJ>NR1M.D\pcVU:h@4_3%o^nMffjn'R^"3D\0Cb`.T;^eOuU@
%=fme^XV8pgNi5a"#AIb(r4ToVAo/X_E/7/Bi07F9SU/)Q&1#d'+<K*eSX](ted!J`;f7CI02'9]CW+.Zr@`)o_9A!b_8$1"3chU-
%,;'XL\AnZH%5'0YO^cY)3E5F1<?i>ARAcDQqelb;&0`e0RYX=]L7$oKl.#fK&_n#_;NPWt.V'4\W@GVnTngQHUBm8*'NR2Q#Aa-o
%^<5K;]HVD(Mm.m=d&OVm/CuATarJQVaaU-XMHKruApFd<X!C%Ai*$_EJ&-a>K&)C>0eXRXe"H+?rcSkl'GjP/<WtS4#8\>^.3QGl
%6,3[_\I=BmiDT=,kYC[]NI_Niic7'EaAm8IIC^Kg-cM##VTE7<f*S3sd<H>R`8DDeM-Qps6Zl(5+qm`#.W.&_MpN$"@_(%G&9CgU
%6-o1kTZ'tBB3B5rE_E_nSU!SpO9VMPGprkJ&Ca:$iAH0Yngq1&!kBd!Gki?3g5W2/Zt8?=!(1^_`3#6jrkCC*1<_D)+DK&3)Jim-
%D.tfY#!&PuP/25L3V:RSQnqQEDEt5n)&<Sm>@pS63gq=YR%$+SBci\kM9Hj<]'YHY9l]$Kp,&\E*miu*!u[R1@YFZe4sT"K,9Gs5
%]H<2^dbKfYK4"fl/kMEp/fD7Q/IlARpVDIJJOj:*2YDh1bMMCJ-*J?j9+PF.=Tk(g"ctjt"QePc)(kt):,BH+Wd[gj".#im&[/mo
%p'R%L7]5q=[>XD7n,A[Mh>]nL.=_Bi(OoAB>4%4aoNt:V2ZDn7[.rB/*h!r@jcla\3_l.aUuKng0tZuD'1?r41dsgOBp1s!b$.Z*
%^]!.BqQGB'^:^4R_V=\D;+m?gIbA[Nc_9jUp`GCWdXb-lqpG.V0s+qR=]WgR[uEmVO@hs+RgUd'e#Z;[LGDhnBnK/Ob;SPrWP"Ht
%&Cn#2^k*+TLh)r0``HUZ"S28moX#4XeUj#^k1CHI1e!p3fq/+@8VK%)&1bFt:r\.KQnU9d>a<h_GuSf"`De0`<EL^gGUI<ghE\YX
%/14"#;,7Y[-fiQADRX@k.*a()WcY"B+[eTu+U,^_1g)],KlUNOAjH9:TiG2>*[*HOHIG"J!QiEf-?Z#&K`s8Q<^Y%cQPD,FAs0J#
%P29B"+EpPrF;jm_MdUJgI+LaSkIL?Yh#$'mhMDL+Z,qiTpQXnkVrh\,P]`KU7AV*(9iBAYdPQXYE6:Q`*N)V3q6VMD<iC8dl$?_;
%4FBttAd'T[/!9D6DSSYW+P5lsKZNX$9+KWsDFN&(@0+al3MYL&J.(r[99-(BF`a/f9Ui);Q[%X!!p9DI5sCLn36EQ=:!lMmpsTu+
%/TmU(FL0a)q9Q]T0-h\;"Stt`D$Gb)BB0DuV3cmK82/U`Od$aO/4S\nL&j=6?=@%R!'<7^[D#(2:-5&P0B&'mU_ihL@=/u+06rmh
%KelmK#!7(Rm@4`7Y0@6c#Vr?hP"APVNdf&j:ed.#U54`'9)Y:GM2'r6>*nN_&ME=J0X[6j;JV.;V:\b?,SY&]K;Tu*e+(i'b()l7
%IK;M&1bf)(3>NGC\hNdKTFAA[.1)N'[5J=in0<K4Geni0@?*;G,,\OEFU3j/\BC'i5JAsFKecm;AB+5!`29&g<bsaP)c]*#i^G&-
%SU>*G!tgZZQjTaD)Y9#9nZ*E?R*ZP(mabp]Z[RY-X-F)U=G3OOOm?K8iPSIkb%='FI<EqtfW5'`Yo'<t\'2GKk+)]Z%@iG@6QI=@
%Ln(@SZ["`t#e^"Va$48UesM/`8)36jlACBg2,mZeDB4QcUMGBo+j)&QJ9\2cEm-XDl8)!S9`c'9.'HNY&Zs%5\lDQ;+0ZLA:,V^,
%<_&b,^'^</_O<r4N*AXC;]7E<GY/5gLTH0N,'<S`j\&UmRVFV,dEaa/BU8Vl7_K[CH2BnZDll3<pghX#X3iQJYJ?ur$thigX+l<9
%4NXG&OgS#:kp9(e+;f]mm8YCVNkqq0F\0P!H+,dDLeiuN1++J$#i[ChP1;2_[RtDSVnOl/Ag+ISIaqoC(RZ^g$5d6E^^:6T+,YfX
%f<7#>"u/gUk$b$PCrlH0ciFg1R=G<0Lbbr$Z4:$Y)$.0o^e0_o!g.a/S<@AC1b=,!1Q%t^^MZpiI.qbUm-0q]?VR\4EIIu].5cgJ
%>\XD^$D?f<d2`4;+bgKbi&u[3bQh+,.SOG/nc"c,CJ;JI5e/)gN7JsrZJ?aHRo#XHc[iLJ<el8$b66*laR6/$"_<%-M-/(_&?_B5
%N5Wj/&bs6e-kQp[?"M]]n*dB$V0CZ5nQ0WkT`]n>r)"+oH:e`Q2!cHAFicp08L?lk>Y:0jiKPYE0oIglZT63+e)2=a+H8U78UD`"
%Z(/V3UnksI\2;$i$gbGY]oAI7:3+ssB.3ouT9Lmi^^)(Z;Z@rm/TY\gNFL<LWfbD*#+_T<r4d\p<0,9LqtA$n1!#n\Q9^oS%1!#6
%D:_c4[:;k.*qd;s'1\di<KS]YO"M"m_BXW]-eWd.!GbitLL_\^1!BX'*oa;`@R!P\TF",CJ0bDR/?=sC8gCSf$3Z+[E7hU1NMCf1
%gfEHAk%BMaQj>S5#W9AQP1NMP>/l44G8IKFPQXGp,m^:sY-EP!>$]$WeDM/MeCM,Jb+o<+_d0XXX?#maDR`CPBh,qm;3/N_dO2g0
%s7@pj^m8u"+5W#2it&Kl>;Be]o@#ZT7)s#C)5?.Jh@/UmBBBV"E#NqTpdXK5=`#d0F'A*]`/s""K(XNgO\e.<e)T\"dDQc7Y.Sf"
%Z3s6[%,Y`0_^Jrrqc1ZRcmJ]VE[u8]>G8D&0F*B33/rUoh.XMN9Yop!)#JsJ/t4OuYqn]`/?bd,A-,ERN(8'WLK:cp"GQS27l`&;
%3ln8!GY;[rTUMBq<=p;CJO%7)N$+k4fYQeg/N$%G!$:2Nbb_4(/M*UW:EE:P3JN'@'7i_P%R""Ta@2k%cP=):?Lf7.#H.FW(LTk(
%e^I@cD@mq1P<d/;lm1T-4,KRtgi#sZjI);?8[;AoW=jW&6l]#hEeHWN-Tmu<5^"d$<NI<u>1mBMU^oSFK#3us!DOSg<uo1fM2n@X
%XeR#B@u)hdiGE?[?o+J,=[#H?W1iGJ6A&$<&?a@$d>__"\]ZaA</Q.B,3`keCdP'mBJhhc(EMPU$QNAfGU-s%E[VHNj(pFCOE<u)
%G=UV;1-pc!)hg>SU+A1*$3p.EQq`H6-HsY>ga/C@pemr#TLgb[5>j%t$J<"V=>E)m[Q,*u4PZZ:S1O%$dlJB,a=%'Mp5k04NfN6k
%Hfp'C:$?(8PNQ:cF3Q<]OJB:*]M6gcH8(ejUU2^Whkq%'fI&Y0)@$."KcC:X:8*HZ^AI=$1!jkH7?$FiN?i,-+R`&=K79=W'E]AR
%:rS6Ne&Z!kj)+!hr\1t_G(_Relk:dWD"aGc)M=<"$>g2pPnSs`E'0[X*<R=[ON/IRH4#'/FIYZ?!u035'Je$T$Af1#W@-'6Ll.CP
%A44CN<&1Z_:EbpQ4igbC677CbEOtEMd)jdT89Yl81kh-Bbbh2Cj.]+,?)n&^0YV5c"`!CdCFqR^;B"kq!p=<]%k#4cFT]MXA!AgE
%i\XOOdIFBH2"K7_SM$8&,^Z>3;MOSlE)!bJ$8'.#_KRFJ#b(lIY2ooX9cZ=X+$G]4K^ec!XJ2Kc8)$]`;\6l@'=$!R1Q>,[V74n*
%GZQ#X[rV9j(dlSb*DMj3#rbgE9/k^m9P75mNc[=Zi<2K<7E7Jgl7>!QR8dhHn]nL&VW.egSOLRJe2krr8?RSP:8j($.Sd"&$Pi,:
%)cnkd<ZMu;:8s:)3_l`;$QZ.pa;#^C<QTrP;sNGLNr;S\.KikAE_/,UgPIX/Z=NWLLOBCN))+uBE"DS6Zf^;BWX4A-,ni,I8qc8R
%>BJdm2^YDCBWco)&rKcPGfa:>EE^arkW#DTYNRsJE%h'-9'K[Sj-8Q:R!0uIjI0Xc/QBHNa0a,'4:@q4T(C!+^9*U9?F<@Ycpo'C
%:Z<-5LTqXhb0f!ed8A+LT-T"8_NLo#7gdm4$j&kp$pfuV+65<K>1up2d@==20M#AciFp&8;8FuX.R-=LF07+XeOc+t.NNXD3(L>.
%_a/)uW)3m[!>8FX"LCGSNfjEF5P28rZU[PgK=^:IY+a:_+[QG(palBjH>?d8fNY34Qi`_#]ZXXWA*>nS!4&PZ,5gjTOQFea.tT<5
%:+LrJ3_h2Y/36NUKe+]K.u#T9:+M+D3_h5^/3;Xf,k<&(qJD-7S*gs4,3+M-'Lp(rSPU4BDfSHiA9?jro#T0t8qCNshG[#l6cUWE
%P-LBM.$G&SV\DbChKDMjAD-(PpoXJRXSJ6n$H_L0:Q0u?N@&)7ERg1U9DCqY9K5;a<ER4SEQFfZkSQr.\HK-B)N7H)U@N"%mgHrL
%<Y^it0%gU8k:fdP/L!ie'eh8Q6oY<p;eCuVIutt@0fadP-!,WGBb%"C;LjW@UNJH=\iimjQD86,q%0X*B=u;lQ"a0:>+K@I]r+hu
%L'c3WC/'<sJiT=#P"Cq)5R!up7E"Un;H`lOSu=]7!C@.e-4$+#I&RT08%P+MC9b@LCp:ralE,3MM?Cta&"p9jXEY0`Vpr@;*Ud8+
%>&B[kl<Ziu.@%)Fd'S##I4Zr*WquB1B'Zq-IuXGu;?7^t:8re]`o@A*YjoDSMr:h_7T\bo"5t9W,pJ`&Cj0__)sA*kkaCJ8_2',4
%)N)3a*kVS%4hOG4QLS7?""kN7+t16@*EL[?B%GhXS0(t=C:A919>.;O7"`H<!=pZ#6V!DN2"Z^4'&\)Z+qDJ]N0mG`iKF,fHECl=
%2?[S;$c,oCWDc<t%A?+0N/Go#h&[N8IG5&p7=&U%k>qsjc]$NkQ&`+Bq/@+hC3R@Ddbo<#o-c\\!@=I%"VE,LLa:GNo/&SQ,n4oS
%$'s[<W3oolnk>JYE55)VcWkaSiDT[O-m@_MlHEa#RrG+HEp1.R4qdTu`.V.7$lAVt=XQAQ66AuD>_8+^fa1+R+_7&tWPV;!^&m!.
%P?r6qO[-V.=bAXO$n2?Vcgh\\RbAl%C<O7fr&,GL@!(]Q'HT4#%sj%>'3#l*ZD:^WfKrU/.[-LcK3#OCC8n5L(_U4I"HI\Gq(,sJ
%KiLL[:RndN1S/BN-Y)DBdh_LX^o8oMi(%Or@uijVlFX$?pU]fiED#>:o>$tpq].`),VT+j4p0,BFs.8#S`BWP&a$Z]"N1Ye?lU1\
%%c#HZ7Q'lVK3')0#_ip*U5Z+H./mJ<E(SQWZ*Cc3"?,3"QS<4+[s0=UY@A(PVc9sWNj3_A\TPDV.>X8*!F9`!%UWCHKZfjp<g<-b
%bg7'fMeBUU"i<Cu_>->hr(g&Tlt/"^!$N3dZ_c"l=i-$EDMd4!8=ui]Q-5;"Q=/#sZ4MmY#OlR(jcVmDaP(:,Ci@S;lC#VK3<uI-
%h=0(rZ$.?M14L)m-uEd%?"PPO#S.Si6cU#Rm<2J+Pr!F4.n/R#;aDnXfTVQ<S+/@/5K;ZXO$rcm8Yh&!4J-c43MaBe\dc>5E^HK#
%Fn"B6V3L?3p&+s_0^1cc_,B.\-:H)rlhjm*Wmb`@![TK95LUcWqP'`se9)6Q=S!f6o+'H@c;9?KX*kX1&"(+tj?Vds?)J+:Le&qL
%6IrBe1*!P*K0PL9TQMYOe"`@q4_Y1M$!LJ^F#B8$YX<qj8`7^,0Y$^rrZ.i,#B2qH)VNFfj9F>Fm*4G/[;R<Da@l=$n^N]gOK6?Q
%6pF)#c(d9Dk=I(:^KE*-]o>X9hd&Wkm#;%--%S*fh$,m3@I8jF(H@Q$R]##HPtmL86Se]'?1ti/+/ffk=Af,[N`I8^>,kuFWe"mJ
%3;Q7;2%ZdC:d[6*U*+.'Co'7g:*6FM97@Oo"7V_Y"Wf-[>:a$f*su/[XQ;?J@;n(/NuB!ZL^m'?R#](A&4^M+*%NjsG<q4MC'i64
%/5:u)6F'`Tp2.3M30.m$QPd?ui0NCZPc@,R?BY[%pZ&9&knT)tjZ(4T7?ojFP".K'5EWnhSls5hk5$33K=k(b&S4D2h+n;7EH0Gi
%MMhH!!'b*b&Y"emA_'#+<s1NV>,^9!8-r`7oaLQPXiptgoG7am!t+WHh)P&,.K!OQhhCMiO/EHs`b!Db<FN[f`7P*t90Jr.8t>]$
%"AG,W/ulJqV;OFD#32dh0lc^bLuqSL/(B]/pg&AH6ilOC8_0?^$PQIl8e+#OXXVk]M?Z]T7G+)UAGEO[`Q#G-EY1r=Xrl$,Fig*o
%DFi5!n>L`QZiLRc=Zi>?D?F-EMj2N>?3&JT,5P9$NS+qBG"K,6N(T8e,'OU7XcWse8l$H@STRJlB'OE"Xu[KHl&L^u?l-!rC_e5E
%'S]T+@pqF267M\rUg0i!&[jN;4dm+q+^kig*]LmD9YZ*Re_pQb'VftMm@ZI7D5DWT*uM*'5A3V/lC6YeVZk'\QG-oV6!1a-o0tb7
%pk`%Q,U1F_!N46:DqO-OAZ]S*`Ol.@d`NcBM%W&iX3j/'\7tPGQ'NhR3Cu@RFEpG!$fL%k;r00H>VOnj.92#bjcM0sj;9.A#9$k]
%kg"&a$N+/9<uHXQJ2Xq"M%1n=h41q6l[iiD>/jm<,8Z3(+OgnQS08&N98jQ$7I1su*6Mpl;PQ*fH7Dpr^V(ghMZtIbU0joPf3ss0
%"4c\qjF`>mos$fc3eg>3\DlCXJ9lF.+C>0_0tb$+Efn06q:)(m3dfe,jE;u^E\46OYnfkIg9QujeD7qoO#.TQUA:m8m-SM';`pX4
%6F%M93>sYXncr<r`M5Te7nC.e;\E=tn[:T0d81YBou*SpOBPD:na2jq_"D7Se>:Z*AdhQ)Q9WID>r'W0Z7k>#Qn??Rg"/#kgm?\Q
%k5^R*K>sle9lgs426f,\qCObd%!O+N6Dm4':gAk[;>,+?oQ?a(FBcH5>'3+Cl5JJ%(?:?/@tKPI<ug%6Q6WhkNaFW.LkH)Fo[lfs
%P^F,R8*e&5XX&+lm$nnV[!?fe5J]:rd(?1Q-QprZ)+QV?H`Y:@LNF1Q!i[lhMK>FZ;)jVHQ8IVoEQ]qdCU>N`K8kUE=*OnSlZa:3
%lsE8_rZ/*OGc[:*kVuamn:<'CLF!D'j%'?lUU:_q'iq\/j_,[S@hfsW=MZ(T*CVa#R6"*f$R]mQ&Q4aOJ"=h!.*.81Eo'W;>[02*
%"OJ]D>;')YI:dXLRo@$R.5K0cW"KZOUdJ3g9j<OX>+LUE8K;c,e-[Qe-(ZUJHn>=U:nE#:CuB'r>0:ND9<7*Q0240?is/5UQ^UZK
%@n#'f7#0m]'4$3_a[i[<*f#VW3Ml0pIg'E7cFY;!^km18*me%!hL9%&&j#oY(*5?_e289?M]SkJC:_nIV^2X42R^aRGuK@Ir%>/6
%OX/hd)Ebb-fsQ58"]iH=GK6Wuh!W(0]Xcq5pX)3O[l_@<IWkVJk3;=02eUGhG1X3!0AbUb*B!_@qCh^F^]/fJ^U_&Xo^)SVipPrm
%(\_!t2]'6C^&.`\h:\ie]C"JmrPRO@1VWY7c-t!G?%7-H"i84q?XMYTo\Ls>?[o;,r6<pNrU/)$na4TG`VKK"h>=s+]8qbRn+V<B
%9"k8p!j$gob4cpUHM)/)Sd=J]lQCVDEi(H--H6^<jS9d<a0Ho3hY,T>E(<O=()?n->uRQhZ"];1)WirB5U#`:YSg1@8/.FIj7VLX
%9D"'AI"i;0,eC`IDUsT;A-VBHlmX!!JPt2%,`!%^:G@'B0s<pLK8L]k3El+4.EAAMH!iJ*RdKVopYI,EOYuigo)A'pcgU<TDnb)A
%p[Q9GSY*[,rp9@XN#HW4d/Wm-f8td#dkprL9WIF7j/^oN:S7)O/tH+_k"*)jEAqp#+ss53`8nH*?i/<sO6PdKSo.MZ_)[3B11uuZ
%g/Qq$"S?%dVD.EYR^8mXh443T)i."A<[-[i1j=XkFVs7/T3ZQ^dQf\=Q&9d>2AmSk.0t@R8m14V,%mBO[n^mu1K6$/GhGS,0i'YU
%i0j=&d2XAfoPBKj9W`"t:5+J@1GjLW-.?Q,bK\;bou5D9f6:k'0/(=Ge^OCXm%(k@fC_r>rUJM"Z/h;os3L-8dn.Iuo<Ca\M#;n@
%&?EL6^@UfskMM$MG^&'DS,S^@cXW>,5,['f5#nCGq$kYC'#s_AHN$Wb_qu%)Nn0m$%=.OAfP4am2e;<>]AqpqGV;[3(oK+'fD#PY
%p[Q;1dRI-'1d81INAF7G-_+&9`]Ml"_(S,`jfJ)0IBPBqn#4?5V'b=H\2!Z_n`DaD'7\7MUs#8Ao(Qf9VN@t&dFaBAU=c5JjA-m?
%F03O^"Me]RGNuD$MaN,ZS#*/?cJ^UNh.00*70tH5"@_^5!NogZ,W?^'g\GVsGC6IE9n6u1j3t82M>KkoiEjk7Du7u;koK(or@q/C
%;D;#2GNK9=IH)!A`/E3'2dV.f+hdE,Md#(dInV:7m>ZU#2.$4N]=]X@j(?T/FQ@!/pFlOAp?'hD^tk&-ma38Eo1?=gnr(9Yk@a]s
%PM\R;H85ErP:urWfKS>sqWR22QP[8pmp8-VB(t&dS$T:OmWP5X4WS^sRss/7YE.#4XtIa'HhP_G\MjEBmHrGZ]=<32^\`s@^(68]
%I=M!IFKBsgkRW,jF`tM]p'7(a_jh]`7E:%Af`"=:^\HmOg"!O1kW&,<_4`r/e1E_UgOI*8\=_Ob48,.<lX>9LICoCSr9j.!0<["T
%<cgJ!(O,&OB32uarUn/)n`'!3'1Bm'^\ZbFQT),:e?<4AQ*,q'#M]4;c05![2U*=E-p"=&DpRjc*HU?Tc%E47H$pM.m;+16^V.4T
%p:o(#\NKn8pYl"]%s/#:=hgNB5JUHIi%riHQYFJRNrPC,+ob(3s4gE+lb!(tO1.-N:XA[*m-$Zfs.fJf&+]A'+QVeIhh/T5fE'$B
%o\G"YB?0sjhdmc"2ZAL.ncKC">h\o:M;Q$.r<WB-I/1<+b0u-VTG-c+^%eA3If&S\V&W^[eA^eba)bm0l**XQmJ+#Ys)<bnUWN,d
%Nec#3+04T_?/++++7<J1PBN#\m"bJ(If-q-&b07aAp<GK9DP;>n.d'"Yf?\$6Tt0nq!Ka^e\f:,J,Ea1*f1DOXo8$#gRc3.p-.9H
%]_7Dh0o\-q^2#[bAP;=ZgN\Y&mpB@+4TECXI/(HoDZ=t!s$ep==@SY'0<Qq!^;'R7T1?B4h=KSq_odFR@;S2UXR=/:?XA`$eiu7.
%]\,ji&^,=]6Z)F=a8bMtqm/"TYQ(qic^nL8YE-9.H2?Okrh9&G%^>j";t<j.qr@4-=)W??HDqa6E-qW<`VJo*gn3#uUZohZPE-+2
%o8?th]X[duku2b^Ob,)(U"soA9-T(755aN]=1c6)NNU$/MHK?)n$kTom9@9a#M:+,RF7^Tp!rYlH^^>Z][%U*roCcS`t-HJT8cts
%o5HOs_#/FqUZ',J?/Apo]QkcT3k54]k5H75C>++2fu;UYhn-V6]Oo9\$IS6BcgP3s*r@Vaq>K.:[hl4iNPPR7ouWa_IUe-tP_ScS
%ZQh5Lhg*t:ZrL2u_U;.:*kEOM&&OHSi","eo!IlTk42)nrSkTlqpi2B4TG-EMt1f$qWb,dNBI,-EPT?^fCU.qI&kT=SmKj!lCgEA
%PtpEOi_P%ZqlC%Npn%fSn!N]rOYcdqq>7c!Rst4?[n/8%2OA+H5%q-h_r:K_`'7%S5EdOYNe@\_55S[\[@aA8:NT3.6IQOtRjUV"
%S+VD4,5t"PF<AH1[abjKrUJFWc-oTD:`lutq+ZZCr%0QpbD8q?5Hhje]+rs$XUus9a9e6*i,K8\_nS`h1VE%5ktgBgpgi&??./,(
%;4R)SM"SB*4Po36rpoLNg$\HMcCWnlnaIJM5<euS2]CQH3tbI:53+Z3GQ7X@jt^rRm-G]))<GLDQNG*HB_1?9$^"s54[$FS(4X=s
%rl_>]q't^j?=)FC6P['kIsuV@i4!L0d<^^MA&J]J&MmFQP<\!so;fJfm28fOYTm]Vc*.-4iqruQ7Xek_LQ9hpo'AQTrTaB[lTkDg
%[e^YBT^T=Os#Kk.Gp*gAST:/T'qKNdjo+d?3e!%n]-ucs^;WR1hJ"3o#J6paMd9:HcCauoq6jT/!VacE?%7.sr&Ma8XtFXA6K+g1
%l([Ylg=$1ndouJ5[@Z+p+nG-7]<e!i?esRE+7:-Be*^:MkHDE7/LoW2#/d$OO2'3Z#Vi>$fe.;nqsr`*?[R2"r;Fm44[20C\p/7@
%F0R+-]D1Z+=T-"lg2u-H?bcC/).u3NINnajCAO-3.*jMa5/"YB\_ij(G6Fn[pu7VV?f,/QK=?p:c2*7p5GL<XRD'b/H+&.uo]#<:
%66E`;lYe\rc?DF`H$Xgcq;2u-Mt6#Lp#Fe>QOaMK++E;*pQ)na&tRH],PrV`oqu%rJ"eaP+$#O#IZ$"-M$Mb6*8faTp@!)QIh9[#
%UJ$UEO*Z5b9Zdlm;ZHPsUd$D.iNLS/q9@UKp$L#)h;d7jX0\u_IQDYscaU\3lra,S/ru<bU@ujWbG2]Z2#Z=H0DR'sZ$Z2^h^X*a
%(Ji+:f])mgRM#(nAk'_2-cFb5M"9.R+b&8lhJ,O0^R?%fIY8$tf4X+N^AXi,rShYfcPOM+nCMO;ZG1o-oGkn@9A1D+_L[PoG^Fp2
%J&.3@cA@FUn2n,2^U*s`H07k[L@idJkPi&:%R2L<p.'Ml6I_e.b42lX*5>iWje!547N?.?b(ZbgKC>>EcPQTPo9-i\3;oK`j0/Au
%nRM!9`&+1"T7>\k/q7Kjqp3Esn7*O0<;2`?ptk#r5'[$Iqqs]Yp\m/qn8gkQhhV-r`RXp:XOj8o0<_!Rc"k`N[cB7BqeORCa'Q^E
%.fS\b<phmej7M59h)nu+J)?bbr9;nb`Voaho]FUUjT5"'n,<,rj7ha2G>&D=+7u+Qs.!D>/,mNFI!WMP[J0[fS'1\eNLX,Qa1.3-
%h6oJ#)Sc6i9^Ua7Q%=k^r<!]tm&;8I./rn7kMPY)&6]#.p"5#g$V,IE71LboaM0q_=3:BR0Q<1QhjQHJI.lpGq>'-sXYktM-;KQ,
%5^A!UB"u#Bs5n.P0%#;l&F[OBZ-@IC,Ub/Ir<*(GG5$CYfu;Em#5me"0>;gF0=cmOHPoHRnEGksBAYI3!e-ZSI6K:Vl]B5PoX>Vq
%cbI$'=\!e<]XuhpiSs.fp5`u2QNe7MQVVPgmDnn/-^XQAN;ib.h<g-th*9\#>hn\T_a+.Kg!faslJ@T:V&B;/0<Qq!BbPF`8!@:c
%?eh2X4l-+_:I0ob0?uI]YVuD?o&Y^uj5TE;p[QdlMqQ<d3"O$h=(hC[o]P,%rUK7Fo&.hYQn<d]a%Kkuq<!.@8Y']^^H]=L>Mq^f
%2Y5M^QPUIaG4\,En"O@Co]s,IkMPWtS;eaZkc(YO?XN'Ne]%)Zk"d()?eg/&lM:C%DW99ocCTN20flniccn0Bp?_+'RsWBWO.#!#
%[YV]Qac<UC-F*=nR<6\.(YH1d<.cdcj)5E,mMJ$,opmr"D`7Rlr;P^8C4'^sYi2O,NP<*g)c_:NN&0h,Z#+t^#`Ue,g2AXe0Io?e
%p=3BXGh;Yhi?-'#h2NY=rqGf%D#RnU%DDKH=1;P.?1HJl`u"3s;n0RGiA]SI%fU'iHeSDF\d9DTjfoi+m4"->J+0@_gB%?37P1h:
%j%nHH"+Kj>gXUT=kJnA,V]X5@gJ6o"7euRb*6oM(j9TAVLl;!=Y^$ZJrelIpjNuhH8&$9iad+BA<;g12q:qNhH1Cf^^UVoZg5TIZ
%<ciP2/lYca\UF#G6J-+gU;Q`=-PpE&dJlDKA@t]%]?_Osc[8IeFf9e8HiE#NltX9t]0Bf&63r7?E+?`P;*FfI[Jg$_rl)4K/`1sS
%@XOBqVmjuY4B(t03"^T!Tt=*,gcl__kLaO)NI:QZCjD#jp&+OK`Br8DoB)*_9:Po"roCbBs6[eSb88dR0E8:R"!?h^EGaN=g^IEc
%drDHoh!`>F71\`JqehAlQa^UO:Nt$NUCHRE67ne"4W@Rr?XCLW>+(-V7P=icG'aBU'o?s,T3Zn"+0J_lB=IX4cTAbMI(h8Gk$0SX
%mt-[KG,CV'^]!0\WLLM\?JOGl0]GN:?HKgoZ6?d=G)ou#K\MJTIWfdm^\RBn^O>\![neZAMY[:$WoL[LpO?IUh2E,1keD#tYT@`P
%nr.c-DUGjRlgOSOT%Tl']":&QdG4'-=AWX+a#*cZHK!bl(GCQ_FnXq,03o-np*\:PT12>"m.'lJg$8L)bH%Ob(Cr.BV<M(^_e+@;
%J+;;0c`p(Anp`hfUO+_4S:?-/r>ja3YN,7fci<1O2u!'[s6&P?(ZX75s8*&TY$DQfK$Q2Zjk'gt+5cW@cX/fL^V0V\^ZY;t?T1p@
%I;Y"I4m'$iK5Va>08F*r)YfriW3%^oCk>pJSq"r=EGp0NS(jEf`oBkoP'Dg*IVsP"p%6_j2;Wf#p4hQ%=+C.sSu0i;0$jR'N`(>$
%cYm1GSR6b<&Z;8jbO,!#eXLnXSFKSR99&M7e4OuY^rcE7[u,Inbl"8Cl+`7ndPi!'H[PF3-*"%HIZeW(=#fo"J%U0OgamAg]C(03
%Dl134p0qCch@INjai.?UTA3_$I<kE"lOA'tT@>A4^;j%8^`KE-?cmZmr>ntrheOcLP3kYKf+`S)mTs5dIWt<hpUacq]t?T,o()):
%*a<a.<4q]DT@D0T^(u2P2pQtHF$A59m-`).I&#OOkLY3Yg9hH0<':'I7_N.Mc9Q-b$.R;H`[<cr24f6lFSC1Z[G5A=1%r6&kI4N*
%pD63Y"lEWmhtl)s@9um*n*@Sio4Y9KDY9Bf?X5kUl??;Gs#&[$lS1>i^Yqt[iN(kM]XW;X%b`l?`N@Y3gHB1c$<j?=<7Is?lhLL0
%ECNl?pZ1>q`RU)04f8"'bWhT(+0KjB]d\G]B@q:[NcG!IVk<GW!C_jjDP!jQGMdPTE=r)Pqrf,GPi#76jnr2m,[TpaQG<:Ac]Top
%`P].UKDnCL(39:8PB4/mnl=(h4+,C_I?(ZoI*A(oJse86c>Dd_B4#"qqn_sYh7(^K^\[3t3KEg!eCsiuqLd1rMbDg,hEpJ_@\:=-
%Iqnl+k2^faiU:E6rt%fd`MWBE9MGS^Va.23KGM_@TDQh/gL!P?`YCISc!3W?fTfL<D;+Z+]IiS>Da&Fpm(dV14abmd]pH`oj5Ib%
%TP$=?eJ-(r7brkSmgm%LC+V@)7>#i5-1/hd&$s1$45OlNU%A_KB[GbOSMDmqY7hVsr86ASe#H;*^kgfqG#fQ%</!'_.F89XJ<G^0
%_1q\Q6\GJg.89W6GIlP#;!^P`ct!;?OZ?arA(EsIF>7=24aE+Oa\dGK`+*CphR6q"/.%",I!3?h)TMAO=E:rko^oBBX,TCV'aFX'
%-@g'5bnt2G$W/,Xo>p'>8Iq72B&43*)-E^^H#g]nj)hjq.P6i&ZsQW/<?`G'[6&b_s/T_X;@21UT]8"!d]"4nl$e-O,3qL6C2amE
%pJ=-aL[u'I@X^n'!i#n$=r<SHa%%bmm9g>;RT<TC'UY+&Z(p1@W$F9hU!q9$b`*cYp0S(n!HMF[)3ipPXbc"7@@h-XE',I_p127$
%YMBu.;1gWDP[u"$P\7?GZTr9hpVf]k[XclS_o5Ho[I:)[X/m8!3mLNqJNP_V4E``Vbn"k1LhdtKRU\ch"m,I_me9RI\/`3:q=b`W
%_Pr@Tfm8-Mlo8cLK2HSsAYk-tlhTP9FCKs@qSX2fC4h55AHY):2^[R;,44@)"#"LjD<u`L%EtaSUTm\=RG;Uko*$uEoZ/<Q1E[9*
%n.drEIR5&kSs:T`J)Q6LQgruNY/bkub((PS/.e.3$'Yc8YNIH)eU\,s.>nFkg@(%PPoYLp^_Z:i2[IM9gDurbTuI.1[B[I%KZXm+
%*6cL<rU-K"L/81#R,]E&7VE[O;qZ)4i.R--.up.EO/q`OL]B26G.BuDOB0uQ)TN-uCa:KYrkZ+p#+RlN'c;hI@*Z+<&,9`ZmY@um
%<ZKBk,'d0aNT<YS.GY46cDXu,D.iZh>15ue^K4=5E#]=S)lNcq(^pk[2*Y?EiE)+rk(i>82O3'fW#r7H(U"03a]$usiHsA\s7,N%
%'5Tc?-<TGud1=T:f'#?A0g*AZHs)_EE<*/eiAf_gp:9apLI7-;X$)ON>@g/1SP%OtGJ*m??=e7<JU)nG2=e)bW)s1fpZ:^=q-82r
%qhN?a2d1eee)e(@N-Q0%R+JA]k+s@I%t[X#_W*9OKgW5M64c5@?N_9jdi&c#Psdqk:N3r+,(1!&/W(<1XYeYNRSoXY$/$HB&JII5
%XOh)qSEp_>N!q%:)"4G3nnQH%N&U+^L@Za%aD+NDPRLCPa@2=:M8m?4ZjX[2oP(ej9p^XkAkq^lfi%WPQZ5Q1!.G3(+ouos9SEZc
%eUk/Dm+*]<\!D2>Qmn70j*qf*9?$=dT,*NDYS(1ci/6i;SL8r78RUMl_VNWenX6f5[8d/i$[d"EetA,dTkU)7"_\Sc")RQkB:B,@
%W<P;AUKRidhV;Z9?]@*?\9kFi'%r80);)pY@`?K48LoC\!nB,["O*&kSGq1^Id<Nl&$%:h^c?;?eQ+,\`;H]b=D_Hh;2.:6O:i2I
%<GfO1/ag>@J&%6K`a(Q#dSD'F>)Ko`6D:ptf-rZmqC)4jN7t88>[?"r<502G>#afEhTj,r)?4MG91LQom5";);]@pWmhI&rbXc2l
%"Bkf!&.i!$SJYq$RiZa:nYn_OGCDMdi*OK,d``Z[,\Ns'X0aokXB)c.T[+mLW59"I.M6$Rah^aFk*,4Jrf;fYkoAm-1i)^#Z-#QL
%*=),&e0CkDZj[&4]``]X0KoI`?HsX+PPYA#+_Vf7+9#Eg[h$OLIj+UWp47,u5Y)FG,Q+!VZS0,6?B0=R^a^Kun@oOe^Us*T*p@9>
%BJl\]&;6JRpC6"'YS&(!56,6\:Ua_9*_nd&@QK!@+[]uAYTEfP04Ft2KDhXlbOI]#_Wb(/"S+uA0GLrIf_I=jh/:'&?QC66gL"(U
%m+"R1!.&rnmF;q8`W&bJ!%4JR4DuS$nS50CJJN36S+S!(IMnVG_BQM:D+_,JlPB>G=MlfFMb5QkKbBtohX.r[%$YR7Z-JFd&^X,a
%W1Zq;ZkY69R%FB]LTb,$fg$qiKlkm)2h?[Y_:Y#J&5\iI7nUM/+VUmjgDiA*1e-/g(%%JkNCW:['IA8HgK`$di\(:5<4LTHF_78[
%+7k`!\fE'^A>nfXf#!1nQ92%t-;q56iCH)`_#VW(/$N>$j.JhMbcNMgGH8?t_[DW_`s83=o&Wr3gR;mm.[=\'QpY>VVnpT8p"bo"
%V/2!.hd$[n?Te/NTsRtB^UM34Blr*HL"4h&["LO&@b;[HG"V"s?m]4[YWZP.k@oT#qOaLCGVEgNYTr[*I(M++2DOhbZUsojQp'$u
%5(FuLW#H8kW9Pi3?#J6"al'g3=JaGE_X"UX?f7s1"or(b+<TX+\'g-.q90*$4RV!:=$PgsXjb^`%\(ci&[_3$5AOI6THP(QFWq.:
%&rA1ah<+T)Y$LO?jg"Bs`BU]N?h,ul5C,7@_Yn^+mA8J;TL&2o^ApJ2MpG]T^Ws"ZnO7nP.P)f_\:>c1<aps<s0Bb*X[`BnP<Kb:
%hnpK0AGm`&Z\gL+M>gUt/WY0M9qjkDSH523O52ZF:.%a&@2U%2P.AV`eWkW-J%;ig>DFcRcd$XAC0i6ae+#*hZuQltod,;1a*cpg
%@:f7lYD1S1If5Y=Gn.!<F0=B*rkSatZAIj%!76B4h9TnT41/p1WMbD&ZM@%n+q`^P&]bui(#8I$a'"L&U3c/-b!g.<82#M<ii@ZL
%$oSuQ9%cAqH%$cJCoB3"lAsUb-#)c^h6@N=8I/1=&"D%1_J\R0G%^8`s2=hli23uE?qKUedgW_I4kpE([uaSRr3%@3Tc(4!X(1q&
%q2+U#P?-,qH94AK@JF5dTV*G.%5oq@K'3_HRS;/%P.b=a)IIG"^F3dpJ\M7G\<"2Kl(Zp.AA1u!TO'+9R/K,Xd;H6G#4Psi+U/Am
%Q*7JlpuJ<&gJb:pe3&Q$$Q8QS#a$(IT1gs:(B0`ag;K&1=SQW\`UVSmabM77B!P*hd^f'lHHJ)re#-I*++Po(MgQ#Yi((,_@fIs"
%AuS0QYCKi4^DsWEg3Y5(Rl8n2McOhP8.+:8*Nlb0dA(jk63_+\,M^ho#Q%LVHT3Q<_>$q^K6A[^=rkIf#G#a6IMWr\W@;(5TC`Pk
%W6L$h!1JQkFgdLP)UDpD:`TC7_H%ADFEk+7-JBhGY$F2]0<$DS9ciPeh<uGEn@LTCBn+u>:/%\ZCMZc"Xa<QH)1Hua:9^OXQlcfU
%Cu.]/fU5PM@EDA"j[N5inQaN67D^9Ro+I=\aI&7pe?28FJ"'X0AXIrk$]Aa6_eYGR=dX%18<QU36Rfb[Vg9?Pn>W"*bEpuGP\:[0
%%@G36Kdcm`c2k([&dk*.[YX[$Qh(rQRt=H(;e^0=`+#l;n6&/C7-1p_'NW7S(l;#6Hc,;+=3B=0'(`VU"4$P>"#APn.oh"u10D:U
%J4p?$ViPt5kqniGEilMpiEHI[71-iI<Y"<H:V6(3[p9l8`FuRgd);P]INAp-%j=Em]TV?s@9h5Fa1ee;'Nf!=C*qbh9IUbq)NQm0
%I?&:,MA+mZ-.d*KhPhqj0b)JP8^/@8=[+4gk#FXtDHkpZD1lD_F4%F5]X)skE>?+a18A6I<aq1!b^#(rI0s,-*`-)SeV!JZo&oGe
%E6haH&<$6*9N3&2<p?kg%:\Bg2?9B;J27!cPI]rT!hAo9*uOQ(!'HM)4b]qnk?^mH)q#c84,P*R,"UdeXEIWP\`1=jd270-SAbI]
%B=$O264s2%%iLdF5"4DY65k<>'mrNg=$d1A6k*^W=X^Mh7%YC]8*nRTE?tEgJV=':_Z'mR80gZu+c?D,BG:sg6:5"pi24j!,"437
%U#o<>:hV\2G,8nr=tSku$<i!Ldu^5#:(D%P;26J:"BieOI\)5q;Xh:4#:%8!cE`+>$A^s0oU1Drj/n'N>>"dnI5=8Q6)3BsUVtT]
%^j_V^8L:/<[4^mn4M,!!1^P'0]:ktLB\4*m>NukN`6.t@66j_rlF]t1XGc,*$dPTqaO6!@H!W`JhPse#F;5kC!m+s9Mj6%^U->h9
%7+3;JXIU,97I[VThJa/P0=R5k?\+bZ&X,C6'^=T&;XE)0Ga%3n!!QF[\MZ,OU3`7tdpR[DmQU)0/`rC$0I(&o*1mBA/G9nR;i=oe
%Rf5*ST4F8.1Sk@Qou]r$E-coV[Eag[U&N[F1]M,!^MSiIBFY+0W9RUT*lD*fpfE!/hapKLKak9-o=mO,Y<kA?"-3KOUQuGFJ-"hH
%ngp&Lp$C](5lS8'1^D(]OL,tG\"Zc=4Jg*07n=RB#6B./DP5&-P(Fugk%rX]LVee5Xm;T)&UO&,cpSLbFYXcUqDq$t^,>(gK@X)m
%FSl_71s<";dM">I<L5]kE!h-u$LKI.E=6#A5&KkSDdr,cecfjN=Wf?TYI+=MNJcbKQiKWV!W_=,,AS3jU#lPBY0_1cR]!74e)&i$
%A\-nd`lsF&D_Z<qeO`uV&6]Io,VOjMnSS!pmJfdj#g0H'k'$;G8J5*.mKa8;]X*QS(.[,jGklt/DbE6,nG\S>*&rkYE6OC%4"D(L
%Rcf2PiNSM'S&C<l!X6rtd-BRPR4Nf3=aS/hm!rgC^*'?[5SNC0c>1@mH#3:WNV>P`Gi6F@Iabp7:T;I0m/91FRc]RSj"DFU&:+nj
%IH$0l05B>`Q>F>3*L:,sYlslu,/-4#%)jO;^u$bGlh)jf(qC1g(#`nPqk3:sn7D`L"#<BjflR-bmg(+O0BM0<60rf%.j/9l1indd
%UNDI9f*B&';h],5pH.VQX:se7F4#M_eaKc$i,\5ikA/F^P`J;(_qp<Xk]DV\J&c.#=2NX@:U0\2Zc7OZ`2cFb.@mYc,b(_A9Yfgo
%)Hdi+7=[&nnrddRAj:gp;?q][@uO7i`GP.YVsJ'r*&q?W"ndE-H/qQWDL3NRoF/^!EWXE0^(?`M[t$&>KaJi33"I'O0Dg,W+$A^@
%gtaurL\K7*K]r:e(JE7?m"74V]V`FfOg]=k<Qh6B+Lp$gR)G='KGqkZ,d?/F2,\3(G+(5+!?(plYIUn80ZID_dV'm+m]GT#T3N.5
%]!:1R@N9:&0`UH7)7]tP%3$S_'6@[T3PV0Kn\WHDD?Bquh]so!10:"Fr`RX/`-r1NOrQ*32DWmc!-qpd;LT2>&*L%$XR90]^e:-7
%Hr$pf3=%VfL^mb^9b(fjrWFL>BfsCHp]`ZX/#o-#fUCSIZlETT9P>4aU1'etGc=MDMa98DlRr4Uq=:T'o">#uI/)sl'(2a8*Fi/s
%nEFKW#4nbm2F%t()mb$^l($F"gGp(@m(^5Y\a,!od"^udJ67&U+c<(plJ[P!hFgF@@27hQn\e(Wdrb@&"1['fEp=n5(C#]ojUYRu
%?$L&qhUe/C)h7imE@Qq-4t6hR/\h"Qlhk(2n".h8QuDBQ5ga"-ki1?([VZ^PH1QCa`AQl[i);k<cfq/!*T3)]i/=PaG)=)fDa"GC
%N:73PRC\jF]/EF=#;gmRiHn.BJD"Nn79bWI>B/Z?^7iY'n\)'acejRZERM;p$-eqn'j5<V/M2!R[_@p"7d^D3g_8r:Im<pa4cGe:
%`3]s2'gqe>V!3IDR^7;gr=i#\ZNj:mS810B7G\]MmmU@=GguL^3X1QW0WOU[qk3@LeXgElC_Ll2W5/i.G0"B.cIrB@3>iMnZRpUK
%q=';n1$:\'HWW%Tj#J&js71C98>^pJkV7D$il/1_+:E^nl1cH(X3$BR6Rq%Z?c%:IADMPW8&*tY2VtJV`G*=1,&.j&/(StC+g]4(
%rJ-6bd_b.0QO57,,tsrOGS*Un^NYSRKYHI8/[O8%-P*\3cSleW:iL>FT+Qi3(Fjo8K]XeuqpADm>TAq+:9L#K4n9"lH6ZpCU3^Xk
%lgq?ioN:r,jgM#2QqWfb3sUYOe)"fqo?OYHj[X1tN\g3iHYmEqpguNL2]o8>lcrbr,>lP%H[i(e0+aN6g:?#Cj7u'WJ,,0N$uP4`
%[d<o:PN;AWA!qEg*2)9-nVl^hrqm>38u<fW-"4+d9Oe!l%IYi%3gahLm_YQt]?QdIWBdWBc2;1;l2>\+j/XJa'3e"N8/LIn`t9fA
%*%RF"29TU;OSeq[s*7'fSjkQ.r0K*tmd/6J/q_'*=Gi/plrr'M"[8/piWGoH(.6Duh!$,onN]Fmg4a,%e0'-GHY<?@ZrupMpJO;M
%0OBf/QSZ;4>OLE6c[M*#B"OAXM45>mJQ2%&*,AO25'^pu,!#-Ph1Re/Z_@.T'#2!.l$YuOXQ=R]F@c&NF\ZC0Cb-m"#'(X3BGDY=
%S5uqWO#`mCpC%JEgn?_,HFNKiFdbH,hr]t#n4i8ui\^!mk-/rM,<>m_H,i,qW_]0L&?KFR@.!\$,b!X:`DQDr1;0R`k675ukle*5
%rYJF+"oQ?ubN+jh['s?O0"act+9rVEKm8ls56HoK-S659#!i'Cj^*,ZII&sNWe,*@^&fOdfZlopYM[2aq*S:Ti7!js]-%+FD_?!L
%'"QW]'2b8N7O^nc?rYJoHNC\]CDNh]CfGf7YbV(Ir:]Cq"7sO`QVnZ/'DZ0mRnt6-`W[]E-M2J1Ob](e"H0feAl0rC[8MtH=t(Fo
%Rep5E8dBm+gV:u@X&LF'/kl&,?68,[44jk`MPGs*<1m7PbHHbJEbL'AVU9d<#0'R?M6@+n\IGb[H5>5`TJ&1[EimH46/=!c;tH%-
%(VHtA`_Rr:-8tc&UP#X>8^Sm5?.[gbp22=>p9OoH&77dIeo#r(iIa!0CY89MhjC-&4F\eahZ'k$POTr41qc.p*(_to)Sg1Qpb*qC
%kWi**X!:c7k;Qe+lS//-oGEcnoe5h\$pk`$Ap&1R\^8<,%>\\6kF357]<Xq<>he!0"K/h?b&:Ncl#XaMDe,I:?u&gUq$Ark`"ZK1
%95)HJ0X&-Lpld5tSnkeWRp;21d6NEK@e6)_-.54$1:IE:Uud8aUb*C*<smX!B4m4*,:qc[46S5L;u_J$&tqi[m&G-*K?3?-+_lRu
%D4c>^IG^A4an@p5hX$t'K4lE>&94ab=C%o]Ms[k7#tK0'd*'*@%u<-#H#232YG9"cN[rt41Ga]#R\8VHK$n4f0(ORL*<C<];(Y]?
%8+:h\[l7$SL7UpTR&.+q9J;ksmn"ea6Gb)MrZm"Uk[\+j_7PMDiH+Uu%nu&ERlP3IQ,)HOQIaf95574/--3@!W:f>TKMDVFDsmm#
%T\Tdg)>b0u*R7DiSVPm7g8<q4i"UE/\d)Tur7Ze497tXk9.8(&8]D)l<l%[SMiQI5[2/bZ@jQA&M<059[hads7TB8eX<==kG`/rD
%MY<kCr36U,s."r*[-:*figOOOfgc\<*5(&(6)=5dq0KWqL5#g^!0f/!1a-iSI6AC<^o*+p=CPLgFqK<oLQ\T95Q?h4jMW8PF>YVB
%nA@@10:i)SPD]Hs=]7T"=rn`Q'_*1lPWA1NOVo^6Qk`oQ9e5^'F#,_W)hu;r,QFX3lOi$JYUT:8rMaESVG3+3`)`W?p"9d`&jMh^
%icHl(:Q0Y4+2V+WGpJ<qf.p]"(L\FoRX;$!a2lRpU(^/I-o!er]=D3b&JbmpR)<3aqm):1[UgE?J9-A%Sb2Zb3.l,I%lm8FhI3dj
%,Sg7^d+mMDfH$Mj&pl\9b@^kDhuOe)g\L1_a,@q76Jq847AA%49;Kl;J37c'A0udQ*J[6Y$:$G28X4iNZ?cP(GR!Y^$:=8kGf+DL
%:=#e;I%E*3=;&RJ*]KqHnkm-m<*an#;Ub#/E2XG.FU>Xh^`P'8!0_iNl*&DBTE.-.G9C#eo"75us*QR(2-dL&LVNTsLcEgPOP<X)
%q#(-0f\+phP[kpqfDoR=DJ*%7%eo=CYM]%Nd#_?7]D=n=aad[,ec?IR:L(aNBe@m0Y+41ToFmM*PFo(la0E1[OU;s6:)oYdjWj#3
%\=k)H18sZa-Jc"FnRSbtTS<+X49g"XOuU-XEj%R_H2cM^^FXs9QSu'ZI_q=2!kmQ_8kJ*,ZDlVB=:)^:`egbGp`K_$P*\UL]_5!m
%mJnr)OD5^7?Ur$sKUm5$"9)BM=b*YsM"h.nc;tpR=^,&$B0')%r,</Jq.LlXpjVgh11?9V_#%8[1bTgYl-q!AhEP)J[Fd2S/LPmO
%Eq^@9((VL*(^q\&Ob5Q[b,(spn3FHj)][,\0joR+\;:af\Xr`8A2Be_AD3qDZ&"ZobN@F+(s'fbRXOIFV-_&4UE`T1)*L1<X3m43
%9c>,:Gg5GYrj2YDp^QHse77E(CB$h7=IoTY]d(&mPHJfe8WR6MoV\m-#-Go24,3aMVq1iV#[$%?8oEC4HYd)@Og1;h7r*A.VKMYn
%IRaG(kh24R)6L`Ms7jOJNKsXZKGh9RU!akWG!Ia^Xre10`:<6aR:s6@^0o-E-B#)p1_ep^rXnKMlY]:qTATIM/Cq'*a(LXS3]RUs
%/pMdj6;1m;c9'7@rOOV8ok5D$o5[sVl"4J\'k'OE&E9@Xmn-8\StrS3c<kS'o.atWP/<*===,JL2/K]h'8m^Hck=M2%R)SPSSq-'
%eO8icO"[Q3=%TJ>o<'^_b+'E(fN,*ZTB(g`3IFO!<J]1F6/e!+(O-@ZCuAsBh8R+J/W^-L`!r21['d_nUpNTn_1A$hKigPMTA@Vi
%%+b2%e<ta^334fPN^Gr$[%Cp77XU,[9c@fqkVsRBY+mi)7Kga,(cK*1ma7=Ai%eD%98>)`01fX_3^-ik`.ka%.^PPtg2Y43(Ht&T
%@E$;k1G=A<Cjld]6Q$cC!uO\JaBcD0\Qi(TP-W[%bDmk!;D[$lUN"oO0m]0#f&F_'M7cA#O\Lk2/aGkoG$\Q.O#E[rk8j_-,C;/r
%HKFsd`]EVA7;ITYM]o:uNC,7!mTUa5Djh8PX;02E=s$G5P#u)Bo.l(9mYqctc24tob@#aB@BKC`=W2'-0W^IK`[HNUmS1=!WlQg%
%ob;:na^HL"/iJY[A$(+%mFfRK5Zj/H,$]#0Qo`B!mFp`u]c>TNXQR^dV6C"X!--E:b=3!G8Ktp[gI#,F5GiTe08&pBN.$`$>R2hp
%Y7N>\\[2-l5<c\*YmuQfOY#)>4CeDW_@"XT`)##eYtdh'RI&k/ri'%__Kn1(Hd"=t8\cK14Kb'X(dM1()LQ?^Q%Tc"IQ.Q>(rY^R
%_"s5"rsanb/AR]8Lp4JM]7HHkqAXKr=J:D&L`[H%-;(uKo)lWLPSLB(nbKj$Z$J%1m'Fa<%3uhlCZ-P9E3]2u79IsofSaX0>dVa\
%["Jcgie<gt0$[b%kjpmSlFXtQIPdl*jYFVT20)er6lB01rqss&>&G\DoSSJ&ZV)$_.BJq4]e6*7f\E+\%V]'R=Z$QaVuG/bk`9X0
%N6-'"i+t7TAt-L+e"?d_SoeWup[eGFib?@p'oC5oTRdiA01BWkKmiHV_Wog)+$I<%pMUqNrgF-c4f'"l/Vhkh[BSH4$eUZJ(R9>N
%`*T=+=1P4RXB#$Y0grVnnF";"?*dDrW>B>_TBpSo6WhD(kN/:moo0PFS;e,,^noO1A)3/"76MA-\);TJl[F19;GSa9^"9N\-'jbl
%q(pS0(CP7Z)q^W?ngX>*#Q*l&3E`(^%/>WdT0E^mgs[)ulm)XQ:UA\%4Gn,S`LJhIi*L%J,kLW4*KPXET4FNgb]qu*,isk@C#QIs
%W@IN2kmi4Borhntc5cW;Ve23C)B*MJM<*nqQ>$8-_e=*jT@$TP/T!-KTB;*hE]-WT'h^jmBl-NJX$>B<8@3uhq9&HZm'F,N^H4VX
%16D(bK'l\gU%3a2k'8EMP]f;Jpg_m!Z5(H(-8IjS-Lk,1H=<c(GJ_EfhE*;'o"LQNn)AaYY2P<@'LEjUF23OC73qDr+8!iM6/PU_
%CVtP!rYZc=G9A:M8KJ7%R=2-c_uYm^WHa@[isgS74dc/U<5V)&($GnmKK^JnBF4X1SHpb")h^11kTe$/=A@l#-]8`85r)PneI2;J
%Z+s,p0/klc;SZK,`->Bs<i_Y+ML5LACB.e>gaJW4co4KL=A*E1O\L!_emQ\<@0J8.mZkbKHiq*R((`&6q?A%i=G)6M=fd.j)nuY/
%5f4s)n-rp56Jl/tLNP512>W7]Bk3Qg$k4)Ud5!O87WMV#U4!2YHn09n9hte<U,bDd_#i'F&fSd;k$VI.aIo:oNMGQh^E+.[Ns$ht
%49L)gp0Q[/.HB#B1@?PN_pF`3qcV_1_;4I-msL`K&00,@cTbE:Xt9eGb"e[f(qO/3_$LmeGT%Ao_Q'<M8+[nYeK3U5VD5`fdikB2
%8>79%8/4CRNg2X7n;[+'rbpTT=jqJ;NB+g_n2l1;5E@,IK%W`5bI'k:5PNWeU(6Lk0uB>_"(9*"J;/I:kC(N6nHf-sCmi*hb&]m:
%BRM*]/U,T:rC<%cQ\leA+k=o]<(As.%/&jR,55;^KajgR$IO@,U-02OKkMEV%K.Q[NVkpZSXn!s.A'+FKfaII")Q1NI2c`uQuHct
%;MJlMd+l,"4M)Mhm7W*1IJ=1Si2-NFH6`ZsV`p#8jTNE[WCei1#(#Z*JZ^Zp:*bVqCA2%bJ`T(d;@%ON?m-g;%,ODR:C9+`LcqTV
%2fPCRVo.^;oH-dk'Q00Y?h'n,PS<')a-1OkUlHht)R%\0>b&hc=rb"1!chfBL=]%'77^5n/@_r^?^I$](N2/t[N?9iq=1q<l[J4]
%Kg?g,J2G<5C0$H?0A%bkVh#?j@F2QIVp.b=EF\T=a%*HHbKuLN,/_d(amfRK68JW!?_"ies,ZklDE`Rr$oq<uGE]Tb3no/spuH$5
%P[-a(N_0963F?84/@22B5C2`spq"T#!eNiJ7A9dN4)_%[`1NDiG%0*ui-f8+D_>,fdZh&_PdVn5GHia7d0!PgFbM1pH*p6fYcdt&
%:/+T_,Rd!h=d.VfQc((KXJV5*=Q$<4nZril[b/`H0WKS37ZN7XQc2(5V'^@c`g`7kq6sI+H;<gKi.&C\,<mcdXS1_`:O*HgNrW#L
%f:lqqQo4?+KV?Et9uAlHk_7:%UQ/B8&DZ8;6i39qYN.?&\=84"<%uoiUHgDIJ,T6V9ka%P9!h%BrcUN#5ll0e1cc&b`,&355L-l0
%N"!T7q>O2k,jDS(^WWq>,2*uuV]i1KbOC7`XO6PM>7^)jbkHT]G<)7+G_8mmk-PM?g*'+^J0e'nCN?<RFdSQ@`Jh0NL6C[6T[(WZ
%.\V-BL>6On`.MGE13!=S)=:ailqCN,_"2KI+H'Um9_`sU3>lB/+EegdJ'n\iPWki%.B<KG>^(;'.El..Ic3S6io8m(3^4?%&&q'"
%@#>5B9_cO*H/,EQ5G5J4O<eiOjenhbM^ZhAi'r93S]l9i"Vm.JOGsW]&HtB6XeL?($cit[jKe$4hi`&ToF9^`'a$eH]X4LgB&8K;
%38r0\%k1[*Q-lG#[?d7W-6i[Rmp3Scl-dW0c1F?@Jud:EfG3TrHd\atk9[fpLY[<&fJcfPfO`ku%ZP3K0OTa,9Y,fc*;Oj5F&Q(X
%"nhX1)4V$]BF(K6#BIZ?E1>FtaX_s;23@(2T@CMcV*ISe')TSb^8F:K7*_a2!]8`(L*b4[>.eE/%MBZ9qL_0R]R!%m2LGOT-#GuK
%d6Vc^6mfQF<K-<9#mFX+!a.EJ903f*S4&Zd+ObVc&:]p'Z[(_G?P?Vsf8qZ7_&oMN"4?=4NA[u+/BnrX]dSAJp,/OY]P_^<#?i*k
%_lc?nEAJ2B6TK=f*"P&iO#N%b?$P1g*eW1@K8QCrG+nmf#t%>d2;3jCT-S9<bZr^7J-6K758aN:137:4[FrQ*lI$)H!+4J<"No9n
%gjVo]C.$Du</d-0)B8Y?Nsjf;5eAX@.g69Q\bQrV_h2`gd#'@^GKsX3L%0F>i,IP!Je/W_'GNH45R/F@rom\C7Nk#<IJ3q$M@b@0
%C,7lWh/bOqQ^2="c!=,LG+)N^BF`r$B^4l<o%#XBAoMVp[mne)L$\X^p1@q0CV%aL)5^$S%JVe(#L1WA*#e<h>_@a.6+V1ukpF#$
%>,5AHVcC<B#i7p^[n8U)pB8k2+Pi'mJU9ogGcuUN:qG_pbCkagU`5!(P9n)X28+OQ>,S-7Mi.T2ADMamEp$%L]Hh>9#f>D:hcre*
%9"Z*6T;:j@kE4.^#'r\_bG[K">0CNV?f`'=K8QHeig]5u(0ePSHm^HqE@(2[!&WLi^\l#X2MM&\Y#^B8fPBudWJc/#K+3$bbF,q>
%4>8=*Zf+\GO`U7bTcnPDf=B_S?j[%426BIG4Aqj)_l,FW9i4-89dQ-.3K?gVT$JViGO*e?4fsQ8MG>>e_X8*8U)4e6]9i3jnL(.Q
%V'<Ckm"V!/i\MM'g=Z%>#IOc/>[2S\$g8YR8I,lNQZ_9H\A6Yk&T4%-3=`/u5K<).Oa_u@adWKdS6HI!&^9>7Ua[sT9C2`FQar32
%F-H?%"k;U.VVDn-E$S83s':63&=Vr/(F]D;kBqBuA-<:-7Y,73q`(6V2nL+oBlGh:\uutBVV$Jn+4W2"NGNTSaI$)-85o?UrIIJ7
%W@j>gFJpX.7TY)4UoC_s`k;X)[PTIe<9;Go1qsa;P0VNVWP&k3-<2:1pEM5J@A)G7Qh(<C<Dsl@nm^Qe2cVY^"ZPd'a*r&.b4Of%
%L$Y=SYtd,-q1,d5Zrg)>@6S_mP]8hLIA#F;o<KpL]AjK3St1dMb`X!0m<#*O<R.LIbBIA)?<b^qY=,t'jl:1@)pA&AC\ap0mlQd*
%.G+-1%"2VGT1cGTcbPi!hH8&NK9`V$j,)(9b5%9;q$^Nmibde)nlT<PT0]o-;.hn]E\3o>"g0NA;m,4<YVh+nQLcQWo$P:<gWTDW
%C\daLdWSW'o::t8U/CLHkXm,"bkm.f:H=8$o:4GUJulj"N$(j&MSan.>]M@PL6fFTGUJ0QYr\iu!lPP;nNN`]#,EMcTX9kSV#2n;
%fE<65qk=tmP!D;WOCkYY!ep9+1660VTgAo)BA!P+.6B-3@Ku'W?%a;UMq]@S_TU4r6_I)'<'mjbWHdke#>,rm%Z@ph94XPZ0`;ej
%^Kaih8J/q1[02:CKU[`cA[e#tUfD0Z50W;PRX@Mp9"9OcGM5qg<6FXi_TY%B`3AT'o7`/P+D'K]iYFDIR&JkB!5_:fQgbt*9o]Q&
%R]qf=dH@2d!Wb,T.E06?'3Q*F+L;coCR*6[s&jUh1`*ic9d:=@6*0`;>:+EW<%b(:GAB6K!&/HXf,nZ>&ks3YKQaS((f;_Jg(ZEs
%(g8Q*AgIU\-`BO6/OkYimTEIJ4=b1qK:\Mu24Mh3O)YKg,g<p1V<5'P3#^"W6&hCDk5EK(7*VZXJX0L%]rmejq7sVn4_4*e:uLqW
%BIkR8#aCQ*TH0L!rOW=L=0A1r9r6c<-dhG\&PZMAE#[1+2\Jh%0;`'#.EJ:\/uol\!dbPP!?(48XBnNC*.-5I4bHuGQ3J1@Z3MCj
%>Y?7&GPPj#O>EP)):`fRf[Vab>T'Rt!#4NkJWW,'dh3A'>E1%$8ZNU!WpZ&6@RX2PYdTR.Z(:0j<@,[S*PiI);(pOD;YQbtGGfCO
%5s8'IZ$@ej4Yq9@+L3^"T?$Da%TcW$Tn,DX(#ZTr:lfZ[KKcMc=dHKuO;9qFVfJE9&*[WT@&I]`PuK;*`2^0Y:aMC@=HIp'9<Lra
%4sZgUVi0aJh^R(!T%';&6uNLV`I>Cm2[XU]W7U#YO@gA'8Y*fI)d!lPRWbebHF'ScLu,)-_$)B0]B/2=%38HPhCVlL;nY\A&m/Dc
%Y!55r^1#nuDi`bjN>G$%p_PHllJY^Fe4%b(k3?/qA?,B[hS;HD7]e-fOfR*M6NUu#%T63Q6:9INBh7].b,)Aud:RulEe\]'p=GmI
%ilt!D";n7i80HB<a;;22;0AuQT\>[74VKS-=J+UpAS`1)&/Y14>D]!/f:GRhXe?BB4-X8>o$UXC:/S*,/7:3U`]?P2Ie&V"eRQhC
%kEs=B'UUfKSLjP2Kd3s=^4+7EQhLui<p!8r7Vg`7eWkDX\$uFl]dr]W:PRD"RAZ8XHcO8kD7P9X=6:AWQS.,oRE(Y.]]-SN=6B$/
%]%U6:M+F.,EFk`WNRD)[U:E&*n/od34Rq:`>+*Dc1g>>-Mt;$lk,DT.)u+Pk2es;0mj(tOi7G)F:;$eW<,-eL1dmi\oB$Jf:&[aU
%8)[TDgSL6W]i7LK_PK:99s<GN\L^4#KO4A[l]S^G%JgFS3`j%&<SHsk.)4\B6QLgC0N-ltZr;>nM]W+6)JVq/!'>`A,<pVKb5*`U
%1(`T.5Z9/>m8)1;P'[Xu6!WZNc_m#_=,Bn5.nk(f^Nc)H*@!hYSOWkkI2LM?]@?pro!f.ODs'E:ZlB"M<^/0P\ejhR;0u0+;SE99
%Td\u5T^119HJXNs2lqXXPq8HP.FWTe/X#MWY=Q*GV]sfT^\\_ei[3!"MIZa\3u#e'.!I,'Kn/Sh,RZ-e[(Y[,\r9CoBq,tlH+g5L
%%4+3!UVfM%+oI?`N!?iE[qe'd>)Vr>C/)-Ckf0>Z;+MF&dethVnmmT#hkE5M(Qp]njU$=\bOh$G($4u5k^"\m^7m_Ba[4*_]WNZD
%B/*::Y,p#13@]8m3o5<]/*VW[Fih+Xq#-(Wl?IT.V_Mfl6Mj]q5N5,&fr2JUi#+jCBlN:C=Z-BP/!R6MR@n<Z/h_a"_%]U^*epuV
%Vk=-'FG4Q-.%HUeQ0.p8r+K@ZW6!;[f8rNGj>U5N^KMh[X#b'r?8m2)SrqE'9Ai8un_,e1]>Kr^4drd<c?:fK5;hB/K$dL9Kod8(
%s,GD%.CK'7:R\hp&XM8+(!>q_5)`9LVY\P&G:Pi1/3A<M=CKmRI:@L#Ppq6)HmlDL)gXo\J>hfe++B?g)E%t<Zc$F!6fhdlOte5i
%>e5-$kqHMMMCZOXRb9!HT;"q2;(5[)qoZf+._A?T43oZa6VD(#kM45rqZR3,V6[^O9GT-JI[9)Rr>pH:h2+G3fPdjA[=lM1Yo\q_
%<O2t3JR@bVr%NmfE^Y($XgMUQm41<.*eYV`@TaiMI%DbtV8p9:k?>ln?;a6i_PPK'_g1mtYAf8t^+`EP'+B?U[Ykj$b1kk(o6WpG
%D8Wps-g(kiY]NG/b!M]5Clh7'?nl?Yl'57t(U]Ph;'As*iBAQ'Z>]HqATZb/]q/1SarjVWUtT-Nj7_/"3]">]3lS(A>7p$.hUktl
%:FZAnJa]S3Z_$:o$K(S/cFfJl#Z+Ws3$hjR:39$,Bj.N.Ri:EWM,(IUHJ1qj%t7'oahTgkPYS?oU9IF.M?[CLm%"L\jG8!B_EKD1
%eKEbOo\./GWPpSn&NiOr[BNH,W_`WNoBO1VI>+%i(\[C-MN(Nk'^h8>m$%!7p^DSK_ERY"laml)aXZQP(A;GLGMc`Z-WS\eXlcd?
%I7dX0G:`*mjIo_uTNK*\<FMMa3\dl-I^iTjT9Pk2^0\LPYYQr#\uLf5;S?";T2\f4>tT.`_EOq^'Es<];:m6re]0B9%FA(V.*\*t
%\dJ>Ae9g&GYYV:!mg_`aBcj.7BUT>+A;GEt_EOr'(g7O,Z`m44!#6<[CLNjb+m4PYmoA!f<Rk_YG[Z=H%$e[n.0(Q#F-"1%WN&-Z
%*;U_1I8X'n67Hl?_EOsq++qdQF(?_ocUS\aXAQL'lO3SXF(0Mba]i#P5%=G7;*JM<,jc(=;P1st5.NSCZ=QeZ-:^M,Q`"L)jP.Gs
%/c;D=NgmWT8Mt<?B^HP.hSi9iG`I9_<`/2JWL6^YYsqfXC!)?4DqN7&P>Y_bL'E*1k<u5,.(ANm8h0X8c'di88Yt.<=)q%K_?N[a
%I"hJ4^'H#mM>d91J'#K*iJCg:bM4Er@5HU!J,3'FY&=4d<I])Cs%c_IUL8(`o=pch*86n^dH(]brVpa@gec8qDU4*heGP@?SZ;@C
%[l47B_"La-rVn^gVH:M-hZZA_b&u4ir6M%rh0)%XR'5QV^:pT&Xi=jX',<H_N*BTLp@79.WekJZniP?90TG;\NS3-,j0`Do6SrO8
%I5bg<mqWQio/bT=.$)j.!<a#`Eof$Q,IaDI-MsW$%6O8hYPEhUe9jBAD#U<@^+:ZB.:8]^Kfjt!V-9SE'AT#rNs[U[5(t]J?b+%F
%1Y">_dTboc=b6eWh:r+!JoZ,HV%Ug*!7KVW;a,106G#aq0B7;mW.b,Dg@o6_EZ:jgqWqjT)77q@WgeGKRT!7kM3>r*b"O]TYdN"L
%9tmOiid9)d=khcUgL9lJmLfk@LV7YhO)ef[fc?PDG4+)>Z#f"G%)c&:]=YVa2ek`.<C.i9FD1iQ^P(UppS7fFUVPB%nVZgO!@dXY
%';WV<Uk%fW":%B39u#hr(t`Ack7N)cCIo3,Gf[Andog$)A*`_B;m`.:/,K7%AD1V\^DiFeh=pA-;dF1r5D,g;JiB#Q)41V[2kNUZ
%^4.?7V@)P0^4-d47bIQ5(GoI$.9j<5qYh?bqr6HYGm!0BE'&&l9ES=f9"d?"r#!r?V$`o1Wm=[%Ib6^`!%iH%CBFi+Q`U)2(EJ0_
%R!Pf]\`f\'d-]At4coil(H/i*Bn*m`K';PM^=uCi+Vd\$\]EL8Xnl?JAZ%fTEcdO'R`=qY3[iU,lDUPR/(=,+;GfiGX\>5*#Q/[h
%pCu#@)KHHJUjBk6rG"Ec)Hr<sobUNJqjsR8VO-Nr(K/6>?DMjXD#o'-[pVsgKiA95Hdt")h+fTjDUEZc(*f#2Y,1PEhk-J$=@K&X
%T9PKkG]-7:'/#K@h0j(p/V'_n<\:"VUK2S#3U1O;WBdh+6^j@R3V&'N's=LI*@U2<EB1J)Bk_)cBjJOZn%"XP%R"YT&^pPQ59:=6
%PD(V+XMtIKcEIcXb8OYbD\\QT(/UQq2c,Q<pn"im1dUu%TLS?g`#fNfK.:\3BCa)Q1<ohmn1$c5,k,dPnp:'>,&I7FoRG&ni=iU=
%KR4rB<dRap7/Xl4Z!ueR\L!.KTX!M,d8[7[EMh6S0&PYs("UGHc-&,N1(PC$!Kki\Q4:H2;.Z=d^)dh^3$mI:&$c0Q_rM.:_e.*X
%`]o]g#Q.Q$bW?#_2RKCoZ/koLb$qd'm?+5M4ePjl.mO1Jf57h:4WHOtUF]GUp=%J+m-?dRi('F'SH*=CKt#`)_beDC]\0<F$_.0N
%`Vtd/*-2i<(`HT+gd`ki=?6#9':GUhoZ"VU:o<=L+HfEMq\r<+ai9[$L9/=9dQ8V;SLKntVPL@$k`:i]!@c,uMGr@VGUN,0DTU32
%=Mi;=BM)p"YPBB-?Qc/>0b'g"ED&1q/9VBX$%7Y7ZD8,e^P86#j.*F3QgXE(Pnjms>U9Q2M@Msd3mteX=")bY7Nk2tWRssI%N(Rs
%6+3jOTpc(eF\W,/qjl#,69^0j/,$SK`>+7_a/.u<(3RTn%ItNLMKa<km_F7u"mc#BW8^<Kg#H[Neu6DZ0&Gc[B]-EZ=%?)1-QNE?
%(JfZ0M-&M_MpclY8`HiaBipEEIKetIQDujsk^<E+6Hl;TRg,`ET!fH(KB4canoAF's&4jTC(W@6nrB=6,[aNA'9`j*i=6kt&[-U[
%QUG.-UmJs1s#%ai7,aKikT1$L@:($p9_.K8ne,T]8LF5ulr9ltcV[F%[+-J&]S]!^V:S,]Wu0p0kF"_ZdVGijjs1@t.MX6b8m7o@
%;(2FIX"C.VW*)^"nW2hddXtMiOP'*M!DT];N":eDdL+?#)[U5I(too79qD$d/lPD#O`kDQ2k^#'VV4p=(XWpHj"@@!A^*^?H:6_g
%f2XGeQ?kqGgjNa*U=OWY2,deW,a"j]E]p/"3:um'#!%FPW[(Fq$&*[n6#*V&P!lFaA72H>Y:<-)klo%P7)lOCZ6W:_4X-^.XtE;1
%=H[4VP(G'`V'JpT>j4e]$e]6gP)'''ZU0tOs0p5['uP4hCK;i*[_$=]6?+dIs/9(o`.d:PU042:p\^X@.l:pa)r)I&'rkj%hl0a%
%+rZj"%F#66F.,`C@p233W>V[8/1WP><-Es))W#5*WSsP*K!K_[4JW>,meBg5l%Xt>;gY]aGc9EbO;G@S;a,<Vn5+C%16Gf>%1abo
%l99-oi\ru!:0pdn<7]^k:cT,G004#dGc5<#f*qE;[g!cmW^`Yg"p1#.*\->F$+%88f/Gf+/l(3Vm[@7UAA^cG/i?2-Uq!;\Ti;'N
%4d'5B%1e_"YX,8Fo.GGe\-g?iPsEH73u$F`=2of"@AD98isK:6Cj;oEj]U1o4Hu9OVuCQ_,oMb#[40SQVbhGkZ?!EA<>Ns8n5*Wa
%rmlgZb#"I_Q(&^6$KiZe'U03#qAUK]-V1PtTgAV=Uh^nj.Ta[;n[.$i*qGP`"?"lG\[CCiEjnC?c-6\.\U#hV]3aR&CFUQ-=gaK2
%+_,Z[Dg859mI2/p!&ZmgFS1'/_a@u`#-Lb\m3NS>h%"RnP/oREe6,Cag$nM-Opg^&dfMJnQBDX;DMJSuNP:.&G:8O$ddU)den8K`
%[l->_:/("N?=U!.2E\Xh<55<hTa[1RmWKD5hsaG[MEsV%_J@Gl#R\Ob.M4J=V(D2n%^d(lW&?b[.<[e;\6)TZoT3p7W4tI_?JV2u
%h$sm7L&ZH<*\*XW#1_="Bl&$mX\YXFl<l42"m(>C_OJC])BL@q&^%I")BOd/Lb?\9:>tjT%jgY?[(I\kDo4s(0GkbA^U<$o<8j+,
%>._&uTkKi<mp<@[q?jDq#HciGca^ZjiM#hE.%b032*;T>k!caH7Gh$5Le0Ke]K/JY?c,6BMii1XDJscuA2-i>."h:9%1gpFh$tmS
%islM/Q#D$u;uI18%i$bR:s&03)BPaj],ccHUTSN[-l3nhIF68]%1hR`"KMQVkrcQ3J-^89r8P:#I4*<k&l+nD'In$5`>5#S:E0rN
%hhb.:-kd60Q-8n<'i>=JC+fp>JIQ?.31!LL2d`^>T+7e`JZZg.S$iKhU^T*VB;9b2E(IaHZG'8CR_to6QJ[ud&SMG$ksEogmDep/
%I/IqdNA,<^Zjk2OUGqk0F!]7a0ip.#3cMK.^H8N!r:+47+&<k$CJ=jTGH3c*C;rA<^%+;&lC5aOp9L8CZ.;hrL:&P40%N$8(K_J8
%U#XfHVTr;ie$W\(mZ%DHS=!WeiNU)47^%@Vp(cfGYcfF$o5HZ'I>?k'/o`l2g[=#_MV=-"L_Ug7Y:!FeC@eN=jd5OZCm"+6^3prk
%f#N6W&l#I$3V_6?Q)`Esn"[u=o0(jQlfhn*(pgqMIelI\aj_UTcgH5Nq$V$I<IgD\g[.MT17s-d)EUMn6LRVhMG>jdit9kPer?:!
%+NS>[8U"9qk@Nil%g%WYs0/]fcuD$-HX*jl7;.:5^+1)*AMGrIb@BUB>/a)ec^U\T(nSNh=sK"\rE"*;U<i:qNuT$GKk(iIFsA6]
%rt+e8bh]!l`>p0*;iAh32uA>fdde0oBd8o\E(@!!8+JZRo_<6.=9_G9/O\*$F??d2pg)G6C7:^p)H[LI%%h*iSm5Z8F?fHA7d$B]
%/9h".V-09M_s;Za$OT`=mO[:Q_J8GTiOVM37,<)Q)akJ?:JpV\[E%+\heDSZqo@J(@(p!3(]?I(M/?!)B(u/KT27l.ktaNb-hpQl
%5rCK)f`#.F:D`tBh!T`CHK[TZ5oK`b#H-SRpFh9JKIU)AZ`>0h[9i;8aFdEMSn^=Gi#_C>OA<?2&&so%MKr%fE"DmB[n[,j5\SR\
%+862rAD]E07kZk!?jJ[XEK0cd.4=j1+*FR@juqXr/lfQKp2iBIDYnAR5\>fOoD!A2cX(V`B->YXJj12W%ep=_No3"I%>QoorB8IO
%_#f="'F<99'M,);Ydo`0+,ib&.IHqD!T.u1>UQpF^;bN8pXK$KJ=j<e(7::tps]I$GW2".;!2N``M!#.],uLn&AE/4)ZS[J3b5N5
%r8BFg;]f3.2u2=4e>8YL*b0l%!aH=6hA)U`>XmQo\;k=2)2jg%XDQf@.PnYq-Wje!B,J5IG7j8`1MJLD.XoEa":Hpra+7+J+A7JE
%TA:hI*_7qC+ED!#rp9F,;#m6b(d=p#*8o:-:)V'caj?Z?<W$7f-K>+&`.]:HX]XM^6,6KJ;8=5P*MOY_5?6ZlYk&#E'&8!6(MQ_h
%DDgde_St2BG68+eH6Fq_-T[JWrO/50rCD1KpU&D_=$mgV&]jU%@rgXTY<`3IKa6@-[3D.`Ipl)pfh%fWguS&?Sp(u1g*nte,>\^I
%'*<P_n3WV@:O1aR56kggLIe%Z*!OChL'8`=0FS!mDpStGHnRCagZ-M/Nh_<\n_u6oAA66u.8DZd6f[hMHp`4*ZJtI8q9?*;>7u/K
%$Q)`8m]]@+!'G@<qg`q,JW0X5k-GH_SER6qfe1X]jn:X(g2hP90OZD1P.!8Vk(#=>jac6Q6B/h!pgjDrnrG\[.cMsX0lEZ=mp;SZ
%6m+GN>D47U]UX6Vi?c,J_rd.!T4CKZQh]K_j+3^6$O!QV5gd&G"Hb]8Kb..7+<2Ik(;/#L7mT*R7$nBb*A9B32o-b?*KY0<S2ms*
%WRP6$!WmSf`hOMg]ko2.6]CDQC^T#-JW@t%"29\bWPR/"[)Q;nqTa>k+"?69K$h)Y&Tj>O_/aFGboX@4iK2bRq8sZpJOpC6BcsJ&
%DiY>/SEW[L5`^0u](`"/9W]*bnie*'SEuS]N\+pISJp/.)>1,[SKcM3^6LdO7[feAY5=![L8_9\#N+fXlO$aWaY.a*".ARuNKZNt
%Wi>.;N4"jCCgIuHa3fYQbS$JK;4riQ-fC05?eKsfCNKH'#Y]b(EKT/[mR:&C%ik;eqjO8hFd:+X#\RL0n]ktQX`#0fD8KmXjONcO
%fb9jX4f"B#j=a*s^6.=:?8QMLL77pJd^\<a8;.?u(rW[*f*pKQmMl;t`HsrWD$3e^eN]u\8$GCDjW[](@cdqH]bpq*c(Nt.cRap8
%!kL8l$>]qL"*eF0VWD:lJCh[>!,0;)J?A!F@%c%C_,-R':_PJ/,hTemS&Y\k\D=9&+UEVVNWAq@Sm,<dp384k!&T9[nDG"j@je0"
%/g3%1m_Y_lEh!sfeK>kA"_VB.F%O.@"V(]N9b*tbrIPIFYuGZ\=/h_QE'[D#nSjcaIh$'c5<(Ui1&+Fi$+%[hr',\n&^fIbK.6el
%_eb(B,hk)krtF-Vq1$t$$3$R784pB1pNJ)]4)lD`=:kYJ+po[dV06GaK@=aZT)Zbh7Xm_pr?5=g760SQ""\>85Ho<JLq]s%`'9WB
%X/HamAZW/21Y>%N>(DO&E7[lZhtjX<Q"3Xs/X1B)Tp<S/(&B*rGNNN@RSb1L%7K6_\'0B2VoF3L$971P6nu>`9-?`%O(Ip?CjcE9
%mX538[m6A!Q,p^`T383;&]h=T:!.S^]#?1I:nt^#F4h>55/25:jo>fB]DQ%8TcY079]DH.g$HuY*Lh5)]a/)MHA"r^YKj)`.7WV=
%Zuc4mO<5`(B.SU=nMs?Oa4#mf:g#RW735.D6NmrJKY1GG49941r-[?Lj:TYQ9UmF/(\'j=OoiD+=9[8YYlQ[GTHS<(:LFS-&:+KS
%jEjAk5>Uu$<h6$q!+b[=Qun?2FC#U<4D^*RqLS4SZ,Htnn^>i`U\4^^/e7rqQ]MgC[sr>]\/V&+9/'TTQJc6]T4TQ?C,Nfr06[5(
%BGQ'tlMFi#eR2JgjLR-3HL7hQe`c%`_8hVrd@>[]J04IV)jjqDaE$lgRs!%lSmJ9UTD]r-qD6i='jcjjm5\XppOh].MURkND5tJe
%&'hPqbVER2%r`?=>UCdjGj+oImm*]Z#(@X)+De\K^(lhMXH@/<'+1*$D6-CX&T[_@\2h$oOlM/T!eMX1GogTroP:8tR0-IED'-X;
%Q=&PhFC+#,Y?j<5a9]lie`:tB+rXqNDA88LF33<m+"T59iZG:!fhEP?qRrjVaDV-Mp/;<#&(:ZFGX=4cj_>F#Ro,Fa^XT-;Ef-H3
%p/E1/p!mHVDs8hgXG19&%nqK!K7i:D,daaj!Gclm7ViKIhFBsAA3+^W^e0QLOFuI:5)uj(iWH7\(:%'8oKp@Rjp/Wh3!6gcX:klO
%!""<!#sEl*mV*LC8#uf?Ud2%O*G9&^6]kIR\10M?(<7ZPr7"O&meBE^0M_upW;83-<?#HL!Y59<Y+H6cM#L69*$UI%/k;&s1FX=u
%Zat]50D4\QK8(qmL0+.Vp<.hV7p,grpdaG6)[]FQ'juP("o*-l*DYgc]ZAQ3r)W:nhT>oF#s-G*-nb"Oh'$)khpAAMPk@k&INIZ#
%ChD]I+(upI1D.p$SMs>P++1=(SD43W$PXX0ln^U#7icus54J+bI&@bH",usS(eIB__(ufC`Ck@&(nb<PG4ES=L>FBV^r(Z+O(7Z@
%*ttu+`fONFbMbK=\=]bQ%R(aoNYqgk(Sa-EB#W`NCjK2,@UY9jdn:.<L'nPh'12r+ppBsNrhSLJhqi?6!]D0,Ch1r<$6)JpcI/TW
%j_N"]l`oZ63JQ2if!Pdb(tY))Hmnb7b`s!@?iZi`p*0ONE&#)'i\SK^5gn1S*5^r8n2V<\SCo?4bjj7>11A(E58QNFfZikEc[H`U
%oQZnd-d!lO:%p&ZpChH[S5('1pke6.M#OdLputT;pE?C(MiR=`'jVDpql&+odUBc;J-s,F"-Q$,d`HG7Z9%5Ii9[/q!"?s$1#L(_
%B/DZS0f^1(rVhG(2i??OW-B@:N'Gs?l%><[Ia[D[i,p7f%U%`]S?2KdrKEQT"0L?D]>D&oZ;[R)'9U5.\;L4qWAT2QEk$r$k9=+[
%GV>$NRjrb!m&/igCn)RNq6A;BQD"e"3moSr^4(,ZJ9@Js!qgO<A==l6>Te$\3$KW4!i:ntL1S,,BEb")IqcfMU,Wp;M#&?)0,BE'
%&&-ZeH@C*!XM.cj#=*opiBP%]"ii^ZfoA2=kO&*FSVZ+o]U<\6&+Km3Y#VE"U*3u0h9G'mDC4uSiYGU'mN[,rILC)NP+F=I([2+-
%fnDqZ*cF^;ma!0Yp!h4Igfs\4OhnY,_E9otYT6RhIo$iD\6&C1\hHo2@\qtfq)(#V(>'bSZP8MkA_X]oi!is0?9::gh4rZ8dHr;c
%7XOq:<s-2T:iQopXqLLLXZ`SS-%),$3rE)>'5usEO(M_n/A:bpc\7bnh6ppD`u-#i,8i<;2N#1a@$l2>Dpr+QrJt2DCn1"]007J1
%ZK&+F#^kIl@*"k^V_*,Q_Wo>u_!Ytk*V6.4<RRcK$9dOYct<ZPD9OB_NYE[c;%SVXE3kO9b>='o8]]@JiGRdjU^nJ.g4nbU%,f75
%[rO>2s$?"ib4Z`\CB3gheJ^<Zec:0e*'KtAe9q1,qZ<Z6EPAHps$;/(fua8s@qSg$1LDGo^4WN>J+bYF6/Y%>0hN^V4XAMkcT%ak
%b*c?+B9NjRo'M%ID7XF]@u8-</)C02UTWXTSeMSR1jqnC_;bhA&1FrT1u)fOKAZrY='`V+UID9%'83ZpmGVCTA[2W.nR(m'n$b+)
%QnIYlX^Z*Tr0H>Yl%^\8/X:Aae3o]u.`2u%2>lW7'AR1_`?!ITWF;3]52W*l\^oH>._a.Gcou.'*('gR4Nu5oDD6ak62!VraB)*(
%#g5=n&$;Im"W0Dfq.LK]l2fh,:Df,ZiJ_[=+noCM56[u]_X)0VNAu,&cA2PqT^!'ln^!Pm^"CLm<<8Q$@sr"j\I^CVMjUu%.100c
%6]2!bIK,jrg<^9[Z]N1e5*Wj8U\G"iKV9o7A4)h)<qb,A86Z'Z!2(_pI:EYd<4&?hM99'0!DeJ.bJ>jCE0n_gTut6HDD/Sr62G3W
%KdG8\T1fS,O:_m/>'UO.lrp?t`?m/t(.(q80f8a<K7\GZ)qN&7Fk&3IEJc#/Qr8c34>6tjKCTJ)C"KBZSl.L3]PAVMA11d](dr9d
%f7*=dle4jn25K9p8(Y/0JbPlVI5aC%Y'oL:Qn*''FC"bt_0c,>5J""G\19\T2a=mVIDhYQrT6W%[1D?*lY_092aaqcN*=\[o:tX*
%LN;%N\bXW1#un'He]j/XCEIe=Y.OMWFmUE`n^)FMU[-Wh>0So`5J""GGdgO2Dgle6qhU'*j5rkog8DNEnfa+!dHa9cpE?Il31Xr?
%INO18#kYY>qL&WXFAS_OU#1WuDEN$P&c-n]MJ,',#lQpiMPo]],P:jEcrAWa7d0Ri$queb*]F/c^lY^h2$8.tr'f>n]lVc'j*?cq
%G41qY-9k4h[W_,022\(\dahg)$O0dB/8J5?cM2B1Qk0bAC<]Q;4W4qOjlbO%D12?N*(UhBJbk.QJ+3J/liHiN+8hfDp`fpVX\TB*
%Z(o\W\Ds7m"l@=e4.M,WoX*=ha+o-dion#R;nZ*Q*o[^[kReZ&Gd)f\@3[HG4E@)+g'GuGAG?]/OG!T+s+13b_Z-PpeDNi36K%+C
%n?4>:o^dTY6P'2Z"<X3VhES9#R/oDR5Do]]f6AG1YQ9Zu,NrXnn=LJ$g-:<W(b>pdU8RK:(@X)?iLdWPH5)<(+D;njOS8p'*!sNt
%Ge`?g!R[VPr1ESq@HN8_0f."(]tjSc6;_n+pfM1K7aOXbJG50EE28,PE0DI,Ym2A0?,@F*UbDRc]U;j0ZhaXK?aNS?_nYOSJGp7j
%q_Q->_@Lh16beDb@kY)#OQHb)`aB,mL>K`hZP5B)l3[=.Hf.C5'D"h5%K4n5)i(]JM8cusZ+EXnib^Rl`r52HO;3+e@?uF,r).>2
%O[QH>"T8C_`V^!,e/O9ur7lL=rc^)8&<DLC*FXFKq'Ge$L!Hg:[;AVCb_u:%cdRXdS8!)h4<@Jm1&dcR&*)1YT'>_(pqQEUnTMN+
%NDK./GkCKRQlc@+q873_qZhQPJ&M<d8;J'i1B2iP@t6i~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 555 4402 a(T)-8 b(o)41 b(mo)s(del)h(the)h(physical)e(b)s
(ehaviour)h(of)f(this)i(system,)i(our)d(sta)m(rting)g(p)s(oint)g(is)456
4518 y(Newton's)36 b(second)f(la)m(w,)h Fl(F)45 b Fk(=)31
b Fl(ma)k Fn(\(fo)m(rce)g(equals)h(mass)f(times)g(acceleration\).)51
b(If)456 4634 y(w)m(e)44 b(let)f Fl(y)t Fk(\()p Fl(t)p
Fk(\))g Fn(denote)g(the)h(displacement)h(of)d(the)i(free)g(end)f(of)g
(the)h(sp)m(ring)g(from)456 4751 y(it's)39 b(rest)h(p)s(osition)e(as)h
(a)f(function)h(of)f(time,)j(then)e(the)h(acceleration)f(is)g(given)f
(b)m(y)462 4867 y Fk(\177)-55 b Fl(y)s Fn(.)49 b(There)35
b(will)f(also)g(b)s(e)h(at)f(least)h(t)m(w)m(o)g(fo)m(rces)h(acting)e
(on)g(the)h(mass:)48 b(the)35 b(sp)m(ring's)456 4983
y(resto)m(ring)i(fo)m(rce,)h(which)f(Ho)s(ok)m(e's)h(La)m(w)e(tells)h
(us)g(w)m(e)g(can)g(mo)s(del)f(b)m(y)g(assuming)h(it)456
5099 y(is)c(p)m(rop)s(o)m(rtional)h(to)f(the)h(displacement)h(from)e
(rest)h(p)s(osition:)45 b Fl(F)2764 5114 y Fj(s)2830
5099 y Fk(=)29 b Fi(\000)p Fl(k)s(y)t Fn(.)46 b(\(Here,)456
5216 y(the)28 b(sp)m(ring)h(constant)g Fl(k)i Fn(is)d(p)s(ositive,)h
(and)f(the)h(direction)g(of)e(the)i(sp)m(ring's)g(resto)m(ring)1931
5315 y Fh(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 456 251 a Fh(2)456 450 y Fn(fo)m(rce)41
b(is)g(in)g(the)g(direction)g(opp)s(osite)g(the)g(displacement.)70
b(Also,)43 b(w)m(e)f(will)e(mo)s(del)456 566 y(the)k(damping)f(fo)m
(rce)i(b)m(y)e(assuming)h(it)g(is)g(p)m(rop)s(o)m(rtional)g(to)g(the)g
(velo)s(cit)m(y)f(of)h(the)456 683 y(mass,)34 b(and)e(in)i(the)f(opp)s
(osite)h(direction:)45 b Fl(F)2019 698 y Fj(d)2088 683
y Fk(=)29 b Fi(\000)p Fl(C)c Fk(_)-45 b Fl(y)s Fn(.)46
b(Let)33 b(us)g(denote)h(any)f(other)456 799 y(external)j(driving)g(fo)
m(rce)i(b)m(y)e Fl(F)1544 814 y Fj(e)1581 799 y Fn(.)55
b(Supp)s(ose)37 b(this)g(driving)f(fo)m(rce)i(is)e(describ)s(ed)i(b)m
(y)f(a)456 915 y(function)32 b(of)g(time,)i Fl(F)1231
930 y Fj(e)1295 915 y Fk(=)28 b Fl(f)11 b Fk(\()p Fl(t)p
Fk(\))p Fn(.)43 b(With)33 b(these)g(conventions)h(w)m(e)f(have:)1544
1077 y Fl(ma)28 b Fk(=)g Fl(F)1875 1092 y Fj(s)1934 1077
y Fk(+)22 b Fl(F)2095 1092 y Fj(d)2158 1077 y Fk(+)g
Fl(F)2319 1092 y Fj(e)456 1239 y Fn(o)m(r)1441 1361 y
Fl(m)7 b Fk(\177)-56 b Fl(y)31 b Fk(=)d Fi(\000)p Fl(k)s(y)e
Fi(\000)d Fl(C)h Fk(_)-44 b Fl(y)25 b Fk(+)d Fl(f)11
b Fk(\()p Fl(t)p Fk(\))p Fl(;)456 1503 y Fn(which)33
b(w)m(e)g(rea)m(rrange)g(as)1481 1665 y Fl(m)7 b Fk(\177)-56
b Fl(y)26 b Fk(+)c Fl(C)i Fk(_)-44 b Fl(y)25 b Fk(+)d
Fl(k)s(y)31 b Fk(=)c Fl(f)11 b Fk(\()p Fl(t)p Fk(\))p
Fl(:)456 1827 y Fn(W)m(e)39 b(no)m(w)g(see)h(that)g(this)f(is)h(a)f
(second)h(o)m(rder)f(constant)h(co)s(e\016cient)h(linea)m(r)e(ODE,)456
1943 y(so)48 b(w)m(e)i(can)e(study)h(the)g(b)s(ehaviour)f(of)g(this)h
(system)g(using)g(the)g(mathematical)456 2059 y(techniques)34
b(no)m(w)f(available)e(to)i(us.)555 2176 y(A)h(standa)m(rd)g(choice)g
(of)f(units)h(fo)m(r)f(fo)m(rce)h(w)m(ould)f(b)s(e)h(Newtons,)h(and)e
(a)g(standa)m(rd)456 2292 y(choice)42 b(fo)m(r)g(measuring)g
(displacement)h Fl(y)h Fn(w)m(ould)e(b)s(e)g(meters.)72
b(Thus)42 b(the)g(sp)m(ring)456 2408 y(constant)49 b(could)g(have)f
(units)h(of)1729 2369 y Fj(N)p 1729 2385 64 4 v 1729
2442 a(m)1802 2408 y Fn(,)k(indicating)48 b(that)h(the)g(magnitude)g
(of)f(the)456 2524 y(sp)m(ring's)30 b(resto)m(ring)h(fo)m(rce)f(is)g
Fl(k)j Fn(Newtons)e(fo)m(r)e(each)h(meter)h(the)f(sp)m(ring)h(is)f
(displaced)456 2641 y(from)35 b(rest)i(p)s(osition.)53
b(If)35 b(these)i(units)f(a)m(re)h(used,)g(then)f(the)h(last)f(term)g
(on)g(the)g(left)456 2757 y(side)f(of)g(our)f(ODE)i(will)f(have)f
(units)i(of)e(Newtons,)j(which)f(is)f(consistent)h(with)g(the)456
2873 y(kind)28 b(of)g(units)i(w)m(e)f(w)m(ould)g(see)g(on)g(the)g
(right)f(side)i(of)e(the)h(equation)f(fo)m(r)h(an)f(external)456
2989 y(driving)i(fo)m(rce)h Fl(F)1048 3004 y Fj(e)1085
2989 y Fn(.)43 b(T)-8 b(o)30 b(maintain)g(consistency)i(with)f(the)g
(other)h(terms)f(on)g(the)g(left)456 3105 y(side)26 b(of)f(the)h
(equation,)h(w)m(e)f(should)g(select)h(mass)f Fl(m)f
Fn(to)h(b)s(e)f(measured)i(in)e(kilograms,)456 3222 y(and)30
b(time)h(should)g(b)s(e)f(measured)i(in)e(seconds;)j(that)d(w)m(a)m(y)h
(the)g(units)g(of)f Fl(m)7 b Fk(\177)-56 b Fl(y)34 b
Fn(will)c(b)s(e)466 3295 y Fj(k)r(g)r Fg(\001)p Fj(m)p
466 3316 157 4 v 510 3374 a(s)543 3355 y Ff(2)632 3339
y Fn(,)i(which)h(a)m(re)g(the)g(same)f(as)h(Newtons.)44
b(Simila)m(rly)-8 b(,)33 b(the)f(units)h(of)f(the)h(damping)456
3467 y(co)s(e\016cient)g(will)g(have)f(to)h(b)s(e)1540
3427 y Fj(N)7 b Fg(\001)p Fj(s)p 1540 3444 116 4 v 1567
3501 a(m)1666 3467 y Fn(.)456 3683 y Fe(Example)44 b(1:)f
Fn(Consider)33 b(a)f(mass)g(of)f Fk(3)h Fl(k)s(g)j Fn(attached)e(to)e
(the)i(end)f(of)f(a)h(sp)m(ring)456 3799 y(with)g(sp)m(ring)g(constant)
h Fk(15)1420 3760 y Fj(N)p 1420 3776 64 4 v 1420 3833
a(m)1492 3799 y Fn(.)43 b(If)31 b(there)i(is)f(no)g(damping)f(o)m(r)h
(outside)g(driving)g(fo)m(rce,)456 3915 y(and)26 b(the)i(mass)f(is)g
(initially)f(stretch)j Fk(0)p Fl(:)p Fk(05)d Fl(m)h Fn(from)g(its)g
(rest)h(p)s(osition)f(then)g(released,)456 4031 y(determine)40
b(ho)m(w)g(long)e(it)i(will)f(tak)m(e)h(b)s(efo)m(re)g(the)f(sp)m(ring)
h(\014rst)g(returns)h(to)e(its)g(rest)456 4148 y(p)s(osition.)k(What)32
b(will)h(the)g(velo)s(cit)m(y)f(b)s(e)h(at)f(that)h(instant?)555
4264 y(With)i(the)g(pa)m(rameters)h Fl(m)31 b Fk(=)g(3)p
Fn(,)k Fl(C)j Fk(=)31 b(0)k Fn(and)f Fl(k)g Fk(=)d(15)p
Fn(,)k(and)f(the)i(driving)e(fo)m(rce)456 4380 y Fl(f)11
b Fk(\()p Fl(t)p Fk(\))27 b(=)h(0)p Fn(,)k(w)m(e)h(a)m(re)h(faced)e
(with)h(the)g(di\013erential)h(equation)1662 4542 y Fk(3)7
b(\177)-56 b Fl(y)25 b Fk(+)d(15)p Fl(y)31 b Fk(=)c(0)p
Fl(;)456 4704 y Fn(and)32 b(the)i(initial)f(conditions)h
Fl(y)t Fk(\(0\))27 b(=)h(0)p Fl(:)p Fk(05)33 b Fn(and)g
Fl(y)2244 4668 y Fg(0)2266 4704 y Fk(\(0\))c(=)f(0)p
Fn(.)45 b(The)33 b(solution)g(of)g(this)456 4821 y(IVP)f(is)1574
4942 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27 b(=)g(0)p Fl(:)p
Fk(5)17 b(cos\(3)p Fl(t)p Fk(\))p Fl(:)456 5084 y Fn(The)43
b(free)h(end)g(of)f(the)g(sp)m(ring)h(will)g(b)s(e)f(at)h(the)g(rest)g
(p)s(osition)f(when)h Fl(y)t Fk(\()p Fl(t)p Fk(\))i(=)g(0)p
Fn(,)456 5214 y(which)29 b(will)g(o)s(ccurs)h(when)g
Fk(3)p Fl(t)e Fk(=)1633 5175 y Fj(\031)p 1633 5192 43
4 v 1637 5249 a Fd(2)1701 5214 y Fk(+)15 b Fl(n\031)t
Fn(,)29 b(o)m(r)h Fl(t)e Fk(=)2250 5167 y Fd(\(2)p Fj(n)p
Fd(+1\))p Fj(\031)p 2250 5192 267 4 v 2365 5249 a Fd(6)2526
5214 y Fn(.)42 b(The)29 b(smallest)h(p)s(ositive)p eop
end
%%Page: 3 3
TeXDict begin 3 2 bop 3406 251 a Fh(3)456 450 y Fn(solution)41
b(will)h(b)s(e)g Fl(t)h Fk(=)1335 411 y Fj(\031)p 1335
427 43 4 v 1339 484 a Fd(6)1431 450 y Fi(\031)g Fk(0)p
Fl(:)p Fk(524)e Fl(s)p Fn(.)70 b(A)m(t)43 b(that)f(instant,)i(the)e
(velo)s(cit)m(y)g(will)f(b)s(e)456 577 y Fl(y)508 541
y Fg(0)547 497 y Fc(\000)602 538 y Fj(\031)p 602 555
V 606 612 a Fd(6)655 497 y Fc(\001)728 577 y Fk(=)28
b(1)p Fl(:)p Fk(5)17 b(sin)1110 497 y Fc(\000)1165 538
y Fj(\031)p 1165 555 V 1169 612 a Fd(2)1218 497 y Fc(\001)1291
577 y Fk(=)28 b(1)p Fl(:)p Fk(5)1530 538 y Fj(m)p 1530
555 63 4 v 1545 612 a(s)1602 577 y Fn(.)1738 b Fb(\003)456
789 y Fe(Exer)m(cise)50 b(1:)k Fn(A)38 b(mass)g Fl(m)f
Fn(is)h(attached)g(to)g(the)g(free)g(end)g(of)f(a)g(sp)m(ring)h(with)
456 906 y(sp)m(ring)e(constant)h Fl(k)s Fn(,)g(and)f(the)g(system)h(is)
g(subject)g(to)f(a)f(damping)h(co)s(e\016cient)h Fl(C)7
b Fn(.)456 1022 y(The)34 b(sp)m(ring)g(is)g(stretched)j
Fk(0)p Fl(:)p Fk(05)c Fn(meters)j(from)d(it's)i(natural)f(length)g(and)
g(released.)456 1138 y(Determine)29 b(ho)m(w)g(long)e(it)i(will)f(tak)m
(e)h(fo)m(r)f(the)h(mass)f(to)g(return)h(it)f(it's)h(natural)f(length)
456 1254 y(fo)m(r)k(each)h(of)f(the)h(follo)m(wing)f(sets)i(of)e
(conditions.)555 1370 y Fm(\(a\))g Fl(m)c Fk(=)g(3)p
Fl(;)49 b(C)35 b Fk(=)27 b(6)p Fl(;)49 b(k)31 b Fk(=)c(30)555
1487 y Fm(\(b\))32 b Fl(m)c Fk(=)g(3)p Fl(;)49 b(C)34
b Fk(=)28 b(9)p Fl(;)49 b(k)31 b Fk(=)c(6)555 1603 y
Fm(\(c\))32 b Fl(m)c Fk(=)f(3)p Fl(;)49 b(C)35 b Fk(=)27
b(6)p Fl(;)49 b(k)31 b Fk(=)d(3)555 1806 y Fn(The)36
b(follo)m(wing)f(graphs)g(illustrate)i(the)f(va)m(rious)g(solutions)g
Fl(y)t Fk(\()p Fl(t)p Fk(\))e Fn(from)i(the)g(p)m(re-)456
1922 y(vious)c(example)h(and)f(the)h(p)m(revious)g(exercise.)642
3172 y @beginspecial 20 @llx 118 @lly 575 @urx 673 @ury
1440 @rwi @setspecial
%%BeginDocument: nodamping.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 1:17:48 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 375 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
46.0000 -1.00000 341.994 375.000 rc
newpath
47.0000 1.00000 m
47.9236 1.22363 l
48.8472 1.89404 l
49.7709 3.00961 l
50.6945 4.56756 l
52.5418 8.99493 l
54.3891 15.1335 l
57.6037 29.7115 l
60.8183 48.8611 l
64.4335 75.1611 l
68.0487 105.569 l
71.6878 139.198 l
75.3269 174.605 l
78.9488 210.305 l
82.5706 245.146 l
85.9285 275.559 l
89.2864 303.164 l
92.7634 327.856 l
96.2403 347.761 l
99.8361 362.594 l
103.432 371.044 l
104.328 372.115 l
105.224 372.768 l
106.120 373.000 l
107.016 372.810 l
107.912 372.201 l
108.808 371.172 l
109.704 369.726 l
110.600 367.867 l
114.287 355.971 l
117.974 337.619 l
121.221 316.661 l
124.469 291.857 l
128.125 260.253 l
131.780 225.897 l
135.451 189.932 l
139.122 153.856 l
142.660 120.262 l
146.197 89.0164 l
149.410 63.6015 l
152.622 41.7681 l
156.442 21.3368 l
160.262 7.69738 l
161.880 4.11450 l
163.498 1.88058 l
164.307 1.27505 l
165.116 1.01214 l
165.925 1.09240 l
166.734 1.51559 l
170.498 7.95599 l
174.262 21.5250 l
177.594 39.0565 l
180.926 61.2065 l
184.582 89.9972 l
188.237 122.431 l
191.718 155.589 l
195.199 189.818 l
198.831 225.411 l
202.463 259.580 l
205.799 288.616 l
209.134 314.474 l
212.732 337.873 l
216.330 355.783 l
218.198 362.694 l
220.067 367.878 l
221.001 369.805 l
221.935 371.282 l
222.869 372.306 l
223.804 372.874 l
224.617 372.996 l
225.430 372.772 l
226.243 372.201 l
227.057 371.285 l
228.683 368.424 l
230.310 364.210 l
233.823 350.656 l
237.336 331.422 l
240.966 306.298 l
244.596 276.756 l
248.147 244.631 l
251.698 210.463 l
255.133 176.599 l
258.569 143.080 l
262.384 107.618 l
266.199 75.4014 l
269.626 50.3112 l
273.054 29.7366 l
276.714 13.5173 l
280.374 3.82888 l
281.203 2.58413 l
282.032 1.69677 l
282.861 1.16842 l
283.690 1.00021 l
284.519 1.19238 l
285.348 1.74459 l
286.177 2.65582 l
287.006 3.92422 l
290.632 13.5918 l
294.258 29.6666 l
297.669 50.1134 l
301.081 75.0396 l
304.647 104.996 l
308.213 137.884 l
311.699 171.744 l
315.185 206.125 l
318.835 241.399 l
322.485 274.637 l
326.000 303.560 l
329.516 328.434 l
333.111 348.784 l
336.706 363.257 l
338.488 368.083 l
340.271 371.288 l
341.162 372.273 l
342.053 372.843 l
342.945 372.997 l
343.836 372.734 l
345.474 371.168 l
347.112 368.210 l
348.750 363.882 l
350.388 358.216 l
354.142 340.433 l
357.897 316.571 l
361.255 290.847 l
364.614 261.830 l
368.194 228.302 l
371.775 193.286 l
375.202 159.541 l
378.629 126.703 l
382.312 93.6636 l
385.994 64.1811 l
S
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
75.2495 187.000 m
75.2495 189.600 l
S
newpath
131.748 187.000 m
131.748 189.600 l
S
newpath
188.247 187.000 m
188.247 189.600 l
S
newpath
244.747 187.000 m
244.747 189.600 l
S
newpath
301.246 187.000 m
301.246 189.600 l
S
newpath
357.745 187.000 m
357.745 189.600 l
S
newpath
47.0000 187.000 m
385.994 187.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
210 210 12 15 rc
newpath
217.375 214.687 m
216.875 216.406 l
217.875 216.406 l
217.765 216.812 l
216.781 216.812 l
215.687 220.546 l
215.572 220.953 215.515 221.213 215.515 221.328  c
215.515 221.401 215.531 221.458 215.562 221.500  c
215.593 221.541 215.635 221.562 215.687 221.562  c
215.791 221.562 215.927 221.484 216.093 221.328  c
216.197 221.244 216.427 220.984 216.781 220.546  c
216.984 220.718 l
216.599 221.281 216.234 221.677 215.890 221.906  c
215.651 222.072 215.411 222.156 215.171 222.156  c
214.984 222.156 214.830 222.096 214.710 221.976  c
214.591 221.856 214.531 221.708 214.531 221.531  c
214.531 221.302 214.599 220.953 214.734 220.484  c
215.796 216.812 l
214.843 216.812 l
214.906 216.562 l
215.364 216.437 215.750 216.247 216.062 215.992  c
216.375 215.737 216.718 215.302 217.093 214.687  c
217.375 214.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 187.000 m
47.0000 192.200 l
S
Q
q
newpath
103.499 187.000 m
103.499 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
106.531 203.234 m
108.625 202.218 l
108.828 202.218 l
108.828 209.484 l
108.828 209.963 108.849 210.263 108.890 210.382  c
108.932 210.502 109.015 210.593 109.140 210.656  c
109.265 210.718 109.520 210.755 109.906 210.765  c
109.906 211.000 l
106.671 211.000 l
106.671 210.765 l
107.078 210.755 107.341 210.718 107.460 210.656  c
107.580 210.593 107.664 210.510 107.710 210.406  c
107.757 210.302 107.781 209.994 107.781 209.484  c
107.781 204.843 l
107.781 204.208 107.760 203.802 107.718 203.625  c
107.687 203.489 107.632 203.390 107.554 203.328  c
107.476 203.265 107.380 203.234 107.265 203.234  c
107.109 203.234 106.895 203.302 106.625 203.437  c
106.531 203.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
159.998 187.000 m
159.998 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
166.953 209.343 m
166.359 211.000 l
161.281 211.000 l
161.281 210.765 l
162.770 209.401 163.820 208.286 164.429 207.421  c
165.039 206.557 165.343 205.770 165.343 205.062  c
165.343 204.510 165.177 204.059 164.843 203.710  c
164.510 203.362 164.109 203.187 163.640 203.187  c
163.224 203.187 162.846 203.309 162.507 203.554  c
162.169 203.799 161.921 204.161 161.765 204.640  c
161.531 204.640 l
161.635 203.859 161.906 203.260 162.343 202.843  c
162.781 202.427 163.328 202.218 163.984 202.218  c
164.682 202.218 165.265 202.442 165.734 202.890  c
166.203 203.338 166.437 203.864 166.437 204.468  c
166.437 204.906 166.333 205.343 166.125 205.781  c
165.812 206.468 165.307 207.192 164.609 207.953  c
163.557 209.109 162.895 209.807 162.625 210.046  c
164.875 210.046 l
165.333 210.046 165.653 210.028 165.835 209.992  c
166.018 209.955 166.184 209.885 166.335 209.781  c
166.487 209.677 166.614 209.531 166.718 209.343  c
166.953 209.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
216.497 187.000 m
216.497 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
218.656 204.031 m
218.906 203.447 219.218 203.000 219.593 202.687  c
219.968 202.375 220.432 202.218 220.984 202.218  c
221.682 202.218 222.213 202.442 222.578 202.890  c
222.859 203.224 223.000 203.578 223.000 203.953  c
223.000 204.588 222.604 205.239 221.812 205.906  c
222.343 206.114 222.744 206.411 223.015 206.796  c
223.286 207.182 223.421 207.635 223.421 208.156  c
223.421 208.895 223.182 209.536 222.703 210.078  c
222.088 210.796 221.197 211.156 220.031 211.156  c
219.447 211.156 219.052 211.083 218.843 210.937  c
218.635 210.791 218.531 210.635 218.531 210.468  c
218.531 210.343 218.580 210.237 218.679 210.148  c
218.778 210.059 218.895 210.015 219.031 210.015  c
219.135 210.015 219.244 210.031 219.359 210.062  c
219.432 210.083 219.596 210.158 219.851 210.289  c
220.106 210.419 220.281 210.500 220.375 210.531  c
220.531 210.572 220.697 210.593 220.875 210.593  c
221.302 210.593 221.677 210.427 222.000 210.093  c
222.322 209.760 222.484 209.364 222.484 208.906  c
222.484 208.572 222.411 208.250 222.265 207.937  c
222.151 207.697 222.026 207.515 221.890 207.390  c
221.713 207.224 221.466 207.072 221.148 206.937  c
220.830 206.802 220.505 206.734 220.171 206.734  c
219.968 206.734 l
219.968 206.531 l
220.302 206.489 220.638 206.369 220.976 206.171  c
221.315 205.974 221.559 205.737 221.710 205.460  c
221.862 205.184 221.937 204.875 221.937 204.531  c
221.937 204.104 221.802 203.755 221.531 203.484  c
221.260 203.213 220.921 203.078 220.515 203.078  c
219.859 203.078 219.312 203.427 218.875 204.125  c
218.656 204.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
272.996 187.000 m
272.996 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
280.046 207.828 m
280.046 208.734 l
278.890 208.734 l
278.890 211.000 l
277.843 211.000 l
277.843 208.734 l
274.203 208.734 l
274.203 207.921 l
278.203 202.218 l
278.890 202.218 l
278.890 207.828 l
280.046 207.828 l
h
277.843 207.828 m
277.843 203.546 l
274.828 207.828 l
277.843 207.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
329.495 187.000 m
329.495 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
336.640 202.390 m
336.140 203.468 l
333.562 203.468 l
333.000 204.625 l
334.114 204.791 335.000 205.208 335.656 205.875  c
336.218 206.447 336.500 207.125 336.500 207.906  c
336.500 208.364 336.408 208.786 336.226 209.171  c
336.044 209.557 335.812 209.885 335.531 210.156  c
335.250 210.427 334.937 210.640 334.593 210.796  c
334.114 211.036 333.614 211.156 333.093 211.156  c
332.583 211.156 332.210 211.067 331.976 210.890  c
331.742 210.713 331.625 210.520 331.625 210.312  c
331.625 210.187 331.674 210.080 331.773 209.992  c
331.872 209.903 331.994 209.859 332.140 209.859  c
332.244 209.859 332.338 209.875 332.421 209.906  c
332.505 209.937 332.645 210.026 332.843 210.171  c
333.166 210.390 333.489 210.500 333.812 210.500  c
334.312 210.500 334.747 210.312 335.117 209.937  c
335.487 209.562 335.671 209.104 335.671 208.562  c
335.671 208.041 335.505 207.557 335.171 207.109  c
334.838 206.661 334.380 206.312 333.796 206.062  c
333.328 205.875 332.697 205.765 331.906 205.734  c
333.562 202.390 l
336.640 202.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 187.000 m
385.994 192.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.828 202.218 m
392.828 202.453 l
392.265 202.505 391.807 202.614 391.453 202.781  c
391.099 202.947 390.750 203.203 390.406 203.546  c
390.062 203.890 389.778 204.273 389.554 204.695  c
389.330 205.117 389.140 205.614 388.984 206.187  c
389.599 205.770 390.213 205.562 390.828 205.562  c
391.411 205.562 391.919 205.799 392.351 206.273  c
392.783 206.747 393.000 207.359 393.000 208.109  c
393.000 208.828 392.781 209.484 392.343 210.078  c
391.822 210.796 391.130 211.156 390.265 211.156  c
389.671 211.156 389.171 210.958 388.765 210.562  c
387.963 209.812 387.562 208.833 387.562 207.625  c
387.562 206.854 387.716 206.122 388.023 205.429  c
388.330 204.737 388.770 204.119 389.343 203.578  c
389.916 203.036 390.466 202.674 390.992 202.492  c
391.518 202.309 392.005 202.218 392.453 202.218  c
392.828 202.218 l
h
388.875 206.656 m
388.802 207.229 388.765 207.692 388.765 208.046  c
388.765 208.453 388.841 208.893 388.992 209.367  c
389.143 209.841 389.364 210.218 389.656 210.500  c
389.875 210.697 390.140 210.796 390.453 210.796  c
390.817 210.796 391.145 210.622 391.437 210.273  c
391.729 209.924 391.875 209.432 391.875 208.796  c
391.875 208.067 391.729 207.440 391.437 206.914  c
391.145 206.388 390.739 206.125 390.218 206.125  c
390.052 206.125 389.877 206.158 389.695 206.226  c
389.513 206.294 389.239 206.437 388.875 206.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
47.0000 1.00000 m
44.4000 1.00000 l
S
newpath
47.0000 75.4001 m
44.4000 75.4001 l
S
newpath
47.0000 149.800 m
44.4000 149.800 l
S
newpath
47.0000 224.200 m
44.4000 224.200 l
S
newpath
47.0000 298.600 m
44.4000 298.600 l
S
newpath
47.0000 373.000 m
47.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 87 8 15 rc
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 335.800 m
41.8000 335.800 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 334 7 13 rc
newpath
29.7968 341.437 m
21.2031 341.437 l
21.2031 340.765 l
29.7968 340.765 l
29.7968 341.437 l
h
f
Q
newpath
28.4687 340.750 m
28.4687 339.770 28.6171 338.924 28.9140 338.210  c
29.2109 337.497 29.6041 336.968 30.0937 336.625  c
30.4791 336.354 30.8750 336.218 31.2812 336.218  c
31.9375 336.218 32.5260 336.552 33.0468 337.218  c
33.7031 338.052 34.0312 339.182 34.0312 340.609  c
34.0312 341.609 33.8880 342.458 33.6015 343.156  c
33.3151 343.854 32.9479 344.362 32.5000 344.679  c
32.0520 344.997 31.6250 345.156 31.2187 345.156  c
30.3958 345.156 29.7083 344.671 29.1562 343.703  c
28.6979 342.880 28.4687 341.895 28.4687 340.750  c
h
29.7187 340.906 m
29.7187 342.093 29.8645 343.062 30.1562 343.812  c
30.3958 344.437 30.7552 344.750 31.2343 344.750  c
31.4635 344.750 31.7005 344.648 31.9453 344.445  c
32.1901 344.242 32.3750 343.895 32.5000 343.406  c
32.6979 342.687 32.7968 341.661 32.7968 340.328  c
32.7968 339.349 32.6927 338.531 32.4843 337.875  c
32.3385 337.385 32.1406 337.041 31.8906 336.843  c
31.7239 336.708 31.5156 336.640 31.2656 336.640  c
30.9843 336.640 30.7291 336.765 30.5000 337.015  c
30.1979 337.369 29.9921 337.924 29.8828 338.679  c
29.7734 339.434 29.7187 340.177 29.7187 340.906  c
h
36.1250 343.765 m
36.3229 343.765 36.4895 343.835 36.6250 343.976  c
36.7604 344.117 36.8281 344.281 36.8281 344.468  c
36.8281 344.666 36.7604 344.833 36.6250 344.968  c
36.4895 345.104 36.3229 345.171 36.1250 345.171  c
35.9270 345.171 35.7604 345.104 35.6250 344.968  c
35.4895 344.833 35.4218 344.666 35.4218 344.468  c
35.4218 344.270 35.4895 344.104 35.6250 343.968  c
35.7604 343.833 35.9270 343.765 36.1250 343.765  c
h
43.7968 341.828 m
43.7968 342.734 l
42.6406 342.734 l
42.6406 345.000 l
41.5937 345.000 l
41.5937 342.734 l
37.9531 342.734 l
37.9531 341.921 l
41.9531 336.218 l
42.6406 336.218 l
42.6406 341.828 l
43.7968 341.828 l
h
41.5937 341.828 m
41.5937 337.546 l
38.5781 341.828 l
41.5937 341.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 261.400 m
41.8000 261.400 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 260 7 13 rc
newpath
29.7968 267.437 m
21.2031 267.437 l
21.2031 266.765 l
29.7968 266.765 l
29.7968 267.437 l
h
f
Q
newpath
28.4687 266.750 m
28.4687 265.770 28.6171 264.924 28.9140 264.210  c
29.2109 263.497 29.6041 262.968 30.0937 262.625  c
30.4791 262.354 30.8750 262.218 31.2812 262.218  c
31.9375 262.218 32.5260 262.552 33.0468 263.218  c
33.7031 264.052 34.0312 265.182 34.0312 266.609  c
34.0312 267.609 33.8880 268.458 33.6015 269.156  c
33.3151 269.854 32.9479 270.362 32.5000 270.679  c
32.0520 270.997 31.6250 271.156 31.2187 271.156  c
30.3958 271.156 29.7083 270.671 29.1562 269.703  c
28.6979 268.880 28.4687 267.895 28.4687 266.750  c
h
29.7187 266.906 m
29.7187 268.093 29.8645 269.062 30.1562 269.812  c
30.3958 270.437 30.7552 270.750 31.2343 270.750  c
31.4635 270.750 31.7005 270.648 31.9453 270.445  c
32.1901 270.242 32.3750 269.895 32.5000 269.406  c
32.6979 268.687 32.7968 267.661 32.7968 266.328  c
32.7968 265.349 32.6927 264.531 32.4843 263.875  c
32.3385 263.385 32.1406 263.041 31.8906 262.843  c
31.7239 262.708 31.5156 262.640 31.2656 262.640  c
30.9843 262.640 30.7291 262.765 30.5000 263.015  c
30.1979 263.369 29.9921 263.924 29.8828 264.679  c
29.7734 265.434 29.7187 266.177 29.7187 266.906  c
h
36.1250 269.765 m
36.3229 269.765 36.4895 269.835 36.6250 269.976  c
36.7604 270.117 36.8281 270.281 36.8281 270.468  c
36.8281 270.666 36.7604 270.833 36.6250 270.968  c
36.4895 271.104 36.3229 271.171 36.1250 271.171  c
35.9270 271.171 35.7604 271.104 35.6250 270.968  c
35.4895 270.833 35.4218 270.666 35.4218 270.468  c
35.4218 270.270 35.4895 270.104 35.6250 269.968  c
35.7604 269.833 35.9270 269.765 36.1250 269.765  c
h
43.7031 269.343 m
43.1093 271.000 l
38.0312 271.000 l
38.0312 270.765 l
39.5208 269.401 40.5703 268.286 41.1796 267.421  c
41.7890 266.557 42.0937 265.770 42.0937 265.062  c
42.0937 264.510 41.9270 264.059 41.5937 263.710  c
41.2604 263.362 40.8593 263.187 40.3906 263.187  c
39.9739 263.187 39.5963 263.309 39.2578 263.554  c
38.9192 263.799 38.6718 264.161 38.5156 264.640  c
38.2812 264.640 l
38.3854 263.859 38.6562 263.260 39.0937 262.843  c
39.5312 262.427 40.0781 262.218 40.7343 262.218  c
41.4322 262.218 42.0156 262.442 42.4843 262.890  c
42.9531 263.338 43.1875 263.864 43.1875 264.468  c
43.1875 264.906 43.0833 265.343 42.8750 265.781  c
42.5625 266.468 42.0572 267.192 41.3593 267.953  c
40.3072 269.109 39.6458 269.807 39.3750 270.046  c
41.6250 270.046 l
42.0833 270.046 42.4036 270.028 42.5859 269.992  c
42.7682 269.955 42.9349 269.885 43.0859 269.781  c
43.2369 269.677 43.3645 269.531 43.4687 269.343  c
43.7031 269.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 187.000 m
41.8000 187.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.4687 192.750 m
37.4687 191.770 37.6171 190.924 37.9140 190.210  c
38.2109 189.497 38.6041 188.968 39.0937 188.625  c
39.4791 188.354 39.8750 188.218 40.2812 188.218  c
40.9375 188.218 41.5260 188.552 42.0468 189.218  c
42.7031 190.052 43.0312 191.182 43.0312 192.609  c
43.0312 193.609 42.8880 194.458 42.6015 195.156  c
42.3151 195.854 41.9479 196.362 41.5000 196.679  c
41.0520 196.997 40.6250 197.156 40.2187 197.156  c
39.3958 197.156 38.7083 196.671 38.1562 195.703  c
37.6979 194.880 37.4687 193.895 37.4687 192.750  c
h
38.7187 192.906 m
38.7187 194.093 38.8645 195.062 39.1562 195.812  c
39.3958 196.437 39.7552 196.750 40.2343 196.750  c
40.4635 196.750 40.7005 196.648 40.9453 196.445  c
41.1901 196.242 41.3750 195.895 41.5000 195.406  c
41.6979 194.687 41.7968 193.661 41.7968 192.328  c
41.7968 191.349 41.6927 190.531 41.4843 189.875  c
41.3385 189.385 41.1406 189.041 40.8906 188.843  c
40.7239 188.708 40.5156 188.640 40.2656 188.640  c
39.9843 188.640 39.7291 188.765 39.5000 189.015  c
39.1979 189.369 38.9921 189.924 38.8828 190.679  c
38.7734 191.434 38.7187 192.177 38.7187 192.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 112.600 m
41.8000 112.600 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 117.750 m
28.4687 116.770 28.6171 115.924 28.9140 115.210  c
29.2109 114.497 29.6041 113.968 30.0937 113.625  c
30.4791 113.354 30.8750 113.218 31.2812 113.218  c
31.9375 113.218 32.5260 113.552 33.0468 114.218  c
33.7031 115.052 34.0312 116.182 34.0312 117.609  c
34.0312 118.609 33.8880 119.458 33.6015 120.156  c
33.3151 120.854 32.9479 121.362 32.5000 121.679  c
32.0520 121.997 31.6250 122.156 31.2187 122.156  c
30.3958 122.156 29.7083 121.671 29.1562 120.703  c
28.6979 119.880 28.4687 118.895 28.4687 117.750  c
h
29.7187 117.906 m
29.7187 119.093 29.8645 120.062 30.1562 120.812  c
30.3958 121.437 30.7552 121.750 31.2343 121.750  c
31.4635 121.750 31.7005 121.648 31.9453 121.445  c
32.1901 121.242 32.3750 120.895 32.5000 120.406  c
32.6979 119.687 32.7968 118.661 32.7968 117.328  c
32.7968 116.349 32.6927 115.531 32.4843 114.875  c
32.3385 114.385 32.1406 114.041 31.8906 113.843  c
31.7239 113.708 31.5156 113.640 31.2656 113.640  c
30.9843 113.640 30.7291 113.765 30.5000 114.015  c
30.1979 114.369 29.9921 114.924 29.8828 115.679  c
29.7734 116.434 29.7187 117.177 29.7187 117.906  c
h
36.1250 120.765 m
36.3229 120.765 36.4895 120.835 36.6250 120.976  c
36.7604 121.117 36.8281 121.281 36.8281 121.468  c
36.8281 121.666 36.7604 121.833 36.6250 121.968  c
36.4895 122.104 36.3229 122.171 36.1250 122.171  c
35.9270 122.171 35.7604 122.104 35.6250 121.968  c
35.4895 121.833 35.4218 121.666 35.4218 121.468  c
35.4218 121.270 35.4895 121.104 35.6250 120.968  c
35.7604 120.833 35.9270 120.765 36.1250 120.765  c
h
43.7031 120.343 m
43.1093 122.000 l
38.0312 122.000 l
38.0312 121.765 l
39.5208 120.401 40.5703 119.286 41.1796 118.421  c
41.7890 117.557 42.0937 116.770 42.0937 116.062  c
42.0937 115.510 41.9270 115.059 41.5937 114.710  c
41.2604 114.362 40.8593 114.187 40.3906 114.187  c
39.9739 114.187 39.5963 114.309 39.2578 114.554  c
38.9192 114.799 38.6718 115.161 38.5156 115.640  c
38.2812 115.640 l
38.3854 114.859 38.6562 114.260 39.0937 113.843  c
39.5312 113.427 40.0781 113.218 40.7343 113.218  c
41.4322 113.218 42.0156 113.442 42.4843 113.890  c
42.9531 114.338 43.1875 114.864 43.1875 115.468  c
43.1875 115.906 43.0833 116.343 42.8750 116.781  c
42.5625 117.468 42.0572 118.192 41.3593 118.953  c
40.3072 120.109 39.6458 120.807 39.3750 121.046  c
41.6250 121.046 l
42.0833 121.046 42.4036 121.028 42.5859 120.992  c
42.7682 120.955 42.9349 120.885 43.0859 120.781  c
43.2369 120.677 43.3645 120.531 43.4687 120.343  c
43.7031 120.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 38.2000 m
41.8000 38.2000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 43.7500 m
28.4687 42.7708 28.6171 41.9244 28.9140 41.2109  c
29.2109 40.4974 29.6041 39.9687 30.0937 39.6250  c
30.4791 39.3541 30.8750 39.2187 31.2812 39.2187  c
31.9375 39.2187 32.5260 39.5520 33.0468 40.2187  c
33.7031 41.0520 34.0312 42.1822 34.0312 43.6093  c
34.0312 44.6093 33.8880 45.4583 33.6015 46.1562  c
33.3151 46.8541 32.9479 47.3619 32.5000 47.6796  c
32.0520 47.9974 31.6250 48.1562 31.2187 48.1562  c
30.3958 48.1562 29.7083 47.6718 29.1562 46.7031  c
28.6979 45.8802 28.4687 44.8958 28.4687 43.7500  c
h
29.7187 43.9062 m
29.7187 45.0937 29.8645 46.0625 30.1562 46.8125  c
30.3958 47.4375 30.7552 47.7500 31.2343 47.7500  c
31.4635 47.7500 31.7005 47.6484 31.9453 47.4453  c
32.1901 47.2421 32.3750 46.8958 32.5000 46.4062  c
32.6979 45.6875 32.7968 44.6614 32.7968 43.3281  c
32.7968 42.3489 32.6927 41.5312 32.4843 40.8750  c
32.3385 40.3854 32.1406 40.0416 31.8906 39.8437  c
31.7239 39.7083 31.5156 39.6406 31.2656 39.6406  c
30.9843 39.6406 30.7291 39.7656 30.5000 40.0156  c
30.1979 40.3697 29.9921 40.9244 29.8828 41.6796  c
29.7734 42.4349 29.7187 43.1770 29.7187 43.9062  c
h
36.1250 46.7656 m
36.3229 46.7656 36.4895 46.8359 36.6250 46.9765  c
36.7604 47.1171 36.8281 47.2812 36.8281 47.4687  c
36.8281 47.6666 36.7604 47.8333 36.6250 47.9687  c
36.4895 48.1041 36.3229 48.1718 36.1250 48.1718  c
35.9270 48.1718 35.7604 48.1041 35.6250 47.9687  c
35.4895 47.8333 35.4218 47.6666 35.4218 47.4687  c
35.4218 47.2708 35.4895 47.1041 35.6250 46.9687  c
35.7604 46.8333 35.9270 46.7656 36.1250 46.7656  c
h
43.7968 44.8281 m
43.7968 45.7343 l
42.6406 45.7343 l
42.6406 48.0000 l
41.5937 48.0000 l
41.5937 45.7343 l
37.9531 45.7343 l
37.9531 44.9218 l
41.9531 39.2187 l
42.6406 39.2187 l
42.6406 44.8281 l
43.7968 44.8281 l
h
41.5937 44.8281 m
41.5937 40.5468 l
38.5781 44.8281 l
41.5937 44.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
0 380 391 16 rc
[ 1.00000 0 0 1.00000 0 380.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 15 rc
newpath
112.140 7.25000 m
112.557 6.82291 112.802 6.57812 112.875 6.51562  c
113.072 6.35937 113.281 6.23697 113.500 6.14843  c
113.718 6.05989 113.937 6.01562 114.156 6.01562  c
114.520 6.01562 114.833 6.12239 115.093 6.33593  c
115.354 6.54947 115.531 6.85416 115.625 7.25000  c
116.052 6.73958 116.416 6.40625 116.718 6.25000  c
117.020 6.09375 117.333 6.01562 117.656 6.01562  c
117.958 6.01562 118.229 6.09375 118.468 6.25000  c
118.708 6.40625 118.901 6.66666 119.046 7.03125  c
119.130 7.27083 119.171 7.65625 119.171 8.18750  c
119.171 10.6875 l
119.171 11.0520 119.203 11.3020 119.265 11.4375  c
119.307 11.5312 119.385 11.6093 119.500 11.6718  c
119.614 11.7343 119.802 11.7656 120.062 11.7656  c
120.062 12.0000 l
117.187 12.0000 l
117.187 11.7656 l
117.312 11.7656 l
117.562 11.7656 117.755 11.7187 117.890 11.6250  c
117.984 11.5625 118.052 11.4531 118.093 11.2968  c
118.114 11.2239 118.125 11.0208 118.125 10.6875  c
118.125 8.18750 l
118.125 7.70833 118.067 7.37500 117.953 7.18750  c
117.786 6.91666 117.520 6.78125 117.156 6.78125  c
116.937 6.78125 116.713 6.83593 116.484 6.94531  c
116.255 7.05468 115.979 7.26041 115.656 7.56250  c
115.656 7.64062 l
115.656 7.90625 l
115.656 10.6875 l
115.656 11.0833 115.679 11.3307 115.726 11.4296  c
115.773 11.5286 115.856 11.6093 115.976 11.6718  c
116.096 11.7343 116.307 11.7656 116.609 11.7656  c
116.609 12.0000 l
113.671 12.0000 l
113.671 11.7656 l
113.994 11.7656 114.216 11.7291 114.335 11.6562  c
114.455 11.5833 114.536 11.4687 114.578 11.3125  c
114.599 11.2395 114.609 11.0312 114.609 10.6875  c
114.609 8.18750 l
114.609 7.70833 114.541 7.36458 114.406 7.15625  c
114.218 6.88541 113.958 6.75000 113.625 6.75000  c
113.395 6.75000 113.171 6.81250 112.953 6.93750  c
112.599 7.12500 112.328 7.33333 112.140 7.56250  c
112.140 10.6875 l
112.140 11.0625 112.166 11.3072 112.218 11.4218  c
112.270 11.5364 112.349 11.6224 112.453 11.6796  c
112.557 11.7369 112.765 11.7656 113.078 11.7656  c
113.078 12.0000 l
110.203 12.0000 l
110.203 11.7656 l
110.474 11.7656 110.661 11.7369 110.765 11.6796  c
110.869 11.6224 110.947 11.5312 111.000 11.4062  c
111.052 11.2812 111.078 11.0416 111.078 10.6875  c
111.078 8.46875 l
111.078 7.82291 111.062 7.40625 111.031 7.21875  c
111.000 7.08333 110.953 6.98958 110.890 6.93750  c
110.828 6.88541 110.739 6.85937 110.625 6.85937  c
110.510 6.85937 110.369 6.89062 110.203 6.95312  c
110.109 6.71875 l
111.859 6.01562 l
112.140 6.01562 l
112.140 7.25000 l
h
120.346 6.39062 m
127.189 6.39062 l
127.189 6.92187 l
120.346 6.92187 l
120.346 6.39062 l
h
120.346 8.46875 m
127.189 8.46875 l
127.189 8.98437 l
120.346 8.98437 l
120.346 8.46875 l
h
128.099 5.03125 m
128.349 4.44791 128.662 4.00000 129.037 3.68750  c
129.412 3.37500 129.875 3.21875 130.427 3.21875  c
131.125 3.21875 131.656 3.44270 132.021 3.89062  c
132.302 4.22395 132.443 4.57812 132.443 4.95312  c
132.443 5.58854 132.047 6.23958 131.255 6.90625  c
131.787 7.11458 132.188 7.41145 132.459 7.79687  c
132.729 8.18229 132.865 8.63541 132.865 9.15625  c
132.865 9.89583 132.625 10.5364 132.146 11.0781  c
131.531 11.7968 130.641 12.1562 129.474 12.1562  c
128.891 12.1562 128.495 12.0833 128.287 11.9375  c
128.078 11.7916 127.974 11.6354 127.974 11.4687  c
127.974 11.3437 128.024 11.2369 128.123 11.1484  c
128.222 11.0599 128.339 11.0156 128.474 11.0156  c
128.578 11.0156 128.688 11.0312 128.802 11.0625  c
128.875 11.0833 129.039 11.1588 129.294 11.2890  c
129.550 11.4192 129.724 11.5000 129.818 11.5312  c
129.974 11.5729 130.141 11.5937 130.318 11.5937  c
130.745 11.5937 131.120 11.4270 131.443 11.0937  c
131.766 10.7604 131.927 10.3645 131.927 9.90625  c
131.927 9.57291 131.854 9.25000 131.709 8.93750  c
131.594 8.69791 131.469 8.51562 131.334 8.39062  c
131.156 8.22395 130.909 8.07291 130.591 7.93750  c
130.274 7.80208 129.948 7.73437 129.615 7.73437  c
129.412 7.73437 l
129.412 7.53125 l
129.745 7.48958 130.081 7.36979 130.419 7.17187  c
130.758 6.97395 131.003 6.73697 131.154 6.46093  c
131.305 6.18489 131.380 5.87500 131.380 5.53125  c
131.380 5.10416 131.245 4.75520 130.974 4.48437  c
130.703 4.21354 130.365 4.07812 129.959 4.07812  c
129.302 4.07812 128.755 4.42708 128.318 5.12500  c
128.099 5.03125 l
h
134.646 14.1718 m
134.646 13.8906 l
135.084 13.7447 135.419 13.5208 135.654 13.2187  c
135.888 12.9166 136.005 12.5937 136.005 12.2500  c
136.005 12.1770 135.990 12.1093 135.959 12.0468  c
135.927 12.0156 135.896 12.0000 135.865 12.0000  c
135.823 12.0000 135.724 12.0416 135.568 12.1250  c
135.485 12.1562 135.401 12.1718 135.318 12.1718  c
135.110 12.1718 134.946 12.1119 134.826 11.9921  c
134.706 11.8724 134.646 11.7031 134.646 11.4843  c
134.646 11.2760 134.724 11.0989 134.880 10.9531  c
135.037 10.8072 135.229 10.7343 135.459 10.7343  c
135.740 10.7343 135.990 10.8541 136.209 11.0937  c
136.427 11.3333 136.537 11.6562 136.537 12.0625  c
136.537 12.5000 136.386 12.9062 136.084 13.2812  c
135.781 13.6562 135.302 13.9531 134.646 14.1718  c
h
148.271 3.20312 m
148.474 6.12500 l
148.271 6.12500 l
148.011 5.25000 147.636 4.61979 147.146 4.23437  c
146.656 3.84895 146.073 3.65625 145.396 3.65625  c
144.823 3.65625 144.305 3.79947 143.841 4.08593  c
143.378 4.37239 143.016 4.83333 142.755 5.46875  c
142.495 6.10416 142.365 6.89583 142.365 7.84375  c
142.365 8.62500 142.490 9.29947 142.740 9.86718  c
142.990 10.4349 143.365 10.8724 143.865 11.1796  c
144.365 11.4869 144.938 11.6406 145.584 11.6406  c
146.136 11.6406 146.625 11.5208 147.052 11.2812  c
147.479 11.0416 147.953 10.5677 148.474 9.85937  c
148.662 9.98437 l
148.235 10.7447 147.732 11.3046 147.154 11.6640  c
146.576 12.0234 145.891 12.2031 145.099 12.2031  c
143.672 12.2031 142.568 11.6718 141.787 10.6093  c
141.203 9.81770 140.912 8.89062 140.912 7.82812  c
140.912 6.97395 141.104 6.18489 141.490 5.46093  c
141.875 4.73697 142.406 4.17968 143.084 3.78906  c
143.761 3.39843 144.495 3.20312 145.287 3.20312  c
145.912 3.20312 146.526 3.35416 147.130 3.65625  c
147.307 3.75000 147.438 3.79687 147.521 3.79687  c
147.636 3.79687 147.735 3.75520 147.818 3.67187  c
147.922 3.55729 148.000 3.40104 148.052 3.20312  c
148.271 3.20312 l
h
149.348 6.39062 m
156.192 6.39062 l
156.192 6.92187 l
149.348 6.92187 l
149.348 6.39062 l
h
149.348 8.46875 m
156.192 8.46875 l
156.192 8.98437 l
149.348 8.98437 l
149.348 8.46875 l
h
156.914 7.75000 m
156.914 6.77083 157.063 5.92447 157.359 5.21093  c
157.656 4.49739 158.050 3.96875 158.539 3.62500  c
158.925 3.35416 159.320 3.21875 159.727 3.21875  c
160.383 3.21875 160.971 3.55208 161.492 4.21875  c
162.148 5.05208 162.477 6.18229 162.477 7.60937  c
162.477 8.60937 162.333 9.45833 162.047 10.1562  c
161.760 10.8541 161.393 11.3619 160.945 11.6796  c
160.497 11.9974 160.070 12.1562 159.664 12.1562  c
158.841 12.1562 158.154 11.6718 157.602 10.7031  c
157.143 9.88020 156.914 8.89583 156.914 7.75000  c
h
158.164 7.90625 m
158.164 9.09375 158.310 10.0625 158.602 10.8125  c
158.841 11.4375 159.201 11.7500 159.680 11.7500  c
159.909 11.7500 160.146 11.6484 160.391 11.4453  c
160.635 11.2421 160.820 10.8958 160.945 10.4062  c
161.143 9.68750 161.242 8.66145 161.242 7.32812  c
161.242 6.34895 161.138 5.53125 160.930 4.87500  c
160.784 4.38541 160.586 4.04166 160.336 3.84375  c
160.169 3.70833 159.961 3.64062 159.711 3.64062  c
159.430 3.64062 159.175 3.76562 158.945 4.01562  c
158.643 4.36979 158.438 4.92447 158.328 5.67968  c
158.219 6.43489 158.164 7.17708 158.164 7.90625  c
h
163.648 14.1718 m
163.648 13.8906 l
164.086 13.7447 164.422 13.5208 164.656 13.2187  c
164.891 12.9166 165.008 12.5937 165.008 12.2500  c
165.008 12.1770 164.992 12.1093 164.961 12.0468  c
164.930 12.0156 164.898 12.0000 164.867 12.0000  c
164.826 12.0000 164.727 12.0416 164.570 12.1250  c
164.487 12.1562 164.404 12.1718 164.320 12.1718  c
164.112 12.1718 163.948 12.1119 163.828 11.9921  c
163.708 11.8724 163.648 11.7031 163.648 11.4843  c
163.648 11.2760 163.727 11.0989 163.883 10.9531  c
164.039 10.8072 164.232 10.7343 164.461 10.7343  c
164.742 10.7343 164.992 10.8541 165.211 11.0937  c
165.430 11.3333 165.539 11.6562 165.539 12.0625  c
165.539 12.5000 165.388 12.9062 165.086 13.2812  c
164.784 13.6562 164.305 13.9531 163.648 14.1718  c
h
171.570 2.96875 m
171.570 8.75000 l
173.055 7.40625 l
173.367 7.12500 173.550 6.94270 173.602 6.85937  c
173.633 6.80729 173.648 6.76041 173.648 6.71875  c
173.648 6.62500 173.615 6.54947 173.547 6.49218  c
173.479 6.43489 173.362 6.40104 173.195 6.39062  c
173.195 6.18750 l
175.727 6.18750 l
175.727 6.39062 l
175.372 6.40104 175.081 6.45312 174.852 6.54687  c
174.622 6.64062 174.372 6.81250 174.102 7.06250  c
172.602 8.43750 l
174.102 10.3281 l
174.518 10.8489 174.794 11.1822 174.930 11.3281  c
175.138 11.5260 175.320 11.6510 175.477 11.7031  c
175.581 11.7447 175.763 11.7656 176.023 11.7656  c
176.023 12.0000 l
173.195 12.0000 l
173.195 11.7656 l
173.362 11.7656 173.474 11.7421 173.531 11.6953  c
173.589 11.6484 173.617 11.5885 173.617 11.5156  c
173.617 11.4114 173.529 11.2552 173.352 11.0468  c
171.570 8.76562 l
171.570 10.6875 l
171.570 11.0625 171.596 11.3099 171.648 11.4296  c
171.701 11.5494 171.776 11.6354 171.875 11.6875  c
171.974 11.7395 172.185 11.7656 172.508 11.7656  c
172.508 12.0000 l
169.555 12.0000 l
169.555 11.7656 l
169.846 11.7656 170.070 11.7291 170.227 11.6562  c
170.310 11.6145 170.378 11.5468 170.430 11.4531  c
170.492 11.3072 170.523 11.0625 170.523 10.7187  c
170.523 5.43750 l
170.523 4.76041 170.508 4.34635 170.477 4.19531  c
170.445 4.04427 170.396 3.94010 170.328 3.88281  c
170.260 3.82552 170.169 3.79687 170.055 3.79687  c
169.971 3.79687 169.841 3.83333 169.664 3.90625  c
169.555 3.68750 l
171.273 2.96875 l
171.570 2.96875 l
h
176.180 6.39062 m
183.023 6.39062 l
183.023 6.92187 l
176.180 6.92187 l
176.180 6.39062 l
h
176.180 8.46875 m
183.023 8.46875 l
183.023 8.98437 l
176.180 8.98437 l
176.180 8.46875 l
h
184.808 4.23437 m
186.902 3.21875 l
187.105 3.21875 l
187.105 10.4843 l
187.105 10.9635 187.126 11.2630 187.168 11.3828  c
187.209 11.5026 187.293 11.5937 187.418 11.6562  c
187.543 11.7187 187.798 11.7552 188.183 11.7656  c
188.183 12.0000 l
184.949 12.0000 l
184.949 11.7656 l
185.355 11.7552 185.618 11.7187 185.738 11.6562  c
185.858 11.5937 185.941 11.5104 185.988 11.4062  c
186.035 11.3020 186.058 10.9947 186.058 10.4843  c
186.058 5.84375 l
186.058 5.20833 186.037 4.80208 185.996 4.62500  c
185.964 4.48958 185.910 4.39062 185.832 4.32812  c
185.753 4.26562 185.657 4.23437 185.543 4.23437  c
185.386 4.23437 185.173 4.30208 184.902 4.43750  c
184.808 4.23437 l
h
195.418 3.39062 m
194.918 4.46875 l
192.339 4.46875 l
191.777 5.62500 l
192.891 5.79166 193.777 6.20833 194.433 6.87500  c
194.996 7.44791 195.277 8.12500 195.277 8.90625  c
195.277 9.36458 195.186 9.78645 195.003 10.1718  c
194.821 10.5572 194.589 10.8854 194.308 11.1562  c
194.027 11.4270 193.714 11.6406 193.371 11.7968  c
192.891 12.0364 192.391 12.1562 191.871 12.1562  c
191.360 12.1562 190.988 12.0677 190.753 11.8906  c
190.519 11.7135 190.402 11.5208 190.402 11.3125  c
190.402 11.1875 190.451 11.0807 190.550 10.9921  c
190.649 10.9036 190.772 10.8593 190.918 10.8593  c
191.022 10.8593 191.115 10.8750 191.199 10.9062  c
191.282 10.9375 191.423 11.0260 191.621 11.1718  c
191.944 11.3906 192.266 11.5000 192.589 11.5000  c
193.089 11.5000 193.524 11.3125 193.894 10.9375  c
194.264 10.5625 194.449 10.1041 194.449 9.56250  c
194.449 9.04166 194.282 8.55729 193.949 8.10937  c
193.615 7.66145 193.157 7.31250 192.574 7.06250  c
192.105 6.87500 191.475 6.76562 190.683 6.73437  c
192.339 3.39062 l
195.418 3.39062 l
h
200.058 8.60937 m
203.339 8.60937 l
203.339 9.56250 l
200.058 9.56250 l
200.058 8.60937 l
h
206.934 3.39062 m
209.278 3.39062 l
214.528 9.84375 l
214.528 4.89062 l
214.528 4.35937 214.471 4.02604 214.356 3.89062  c
214.200 3.71354 213.950 3.62500 213.606 3.62500  c
213.309 3.62500 l
213.309 3.39062 l
216.309 3.39062 l
216.309 3.62500 l
216.012 3.62500 l
215.648 3.62500 215.387 3.73437 215.231 3.95312  c
215.137 4.08854 215.090 4.40104 215.090 4.89062  c
215.090 12.1406 l
214.856 12.1406 l
209.184 5.20312 l
209.184 10.5156 l
209.184 11.0364 209.241 11.3645 209.356 11.5000  c
209.523 11.6770 209.773 11.7656 210.106 11.7656  c
210.403 11.7656 l
210.403 12.0000 l
207.418 12.0000 l
207.418 11.7656 l
207.715 11.7656 l
208.080 11.7656 208.340 11.6562 208.497 11.4375  c
208.590 11.3020 208.637 10.9947 208.637 10.5156  c
208.637 4.51562 l
208.387 4.22395 208.197 4.03385 208.067 3.94531  c
207.937 3.85677 207.747 3.77083 207.497 3.68750  c
207.372 3.64583 207.184 3.62500 206.934 3.62500  c
206.934 3.39062 l
h
221.244 3.20312 m
222.369 3.20312 223.341 3.62500 224.158 4.46875  c
224.976 5.31250 225.385 6.36979 225.385 7.64062  c
225.385 8.95312 224.971 10.0416 224.143 10.9062  c
223.314 11.7708 222.317 12.2031 221.150 12.2031  c
219.963 12.2031 218.966 11.7812 218.158 10.9375  c
217.351 10.0937 216.947 9.00520 216.947 7.67187  c
216.947 6.29687 217.416 5.17708 218.354 4.31250  c
219.156 3.57291 220.119 3.20312 221.244 3.20312  c
h
221.135 3.65625 m
220.364 3.65625 219.744 3.94270 219.275 4.51562  c
218.692 5.22395 218.400 6.26562 218.400 7.64062  c
218.400 9.04687 218.703 10.1250 219.307 10.8750  c
219.765 11.4583 220.374 11.7500 221.135 11.7500  c
221.947 11.7500 222.617 11.4349 223.143 10.8046  c
223.669 10.1744 223.932 9.17708 223.932 7.81250  c
223.932 6.34375 223.640 5.24479 223.057 4.51562  c
222.588 3.94270 221.947 3.65625 221.135 3.65625  c
h
229.351 12.0000 m
229.351 11.7656 l
229.679 11.7656 l
230.044 11.7656 230.304 11.6510 230.460 11.4218  c
230.544 11.2760 230.585 10.9583 230.585 10.4687  c
230.585 4.92187 l
230.585 4.38020 230.528 4.04166 230.414 3.90625  c
230.247 3.71875 230.002 3.62500 229.679 3.62500  c
229.351 3.62500 l
229.351 3.39062 l
232.851 3.39062 l
234.143 3.39062 235.125 3.53645 235.796 3.82812  c
236.468 4.11979 237.007 4.60677 237.414 5.28906  c
237.820 5.97135 238.023 6.76041 238.023 7.65625  c
238.023 8.85416 237.658 9.85416 236.929 10.6562  c
236.117 11.5520 234.872 12.0000 233.195 12.0000  c
229.351 12.0000 l
h
231.804 11.3750 m
232.346 11.5000 232.799 11.5625 233.164 11.5625  c
234.143 11.5625 234.958 11.2161 235.609 10.5234  c
236.260 9.83072 236.585 8.89583 236.585 7.71875  c
236.585 6.53125 236.260 5.59375 235.609 4.90625  c
234.958 4.21875 234.127 3.87500 233.117 3.87500  c
232.731 3.87500 232.294 3.93750 231.804 4.06250  c
231.804 11.3750 l
h
244.474 9.12500 m
241.130 9.12500 l
240.552 10.4687 l
240.406 10.8125 240.333 11.0625 240.333 11.2187  c
240.333 11.3541 240.396 11.4713 240.521 11.5703  c
240.646 11.6692 240.916 11.7343 241.333 11.7656  c
241.333 12.0000 l
238.630 12.0000 l
238.630 11.7656 l
238.984 11.7031 239.213 11.6197 239.317 11.5156  c
239.536 11.3177 239.776 10.9062 240.036 10.2812  c
243.067 3.20312 l
243.286 3.20312 l
246.286 10.3593 l
246.526 10.9322 246.745 11.3046 246.942 11.4765  c
247.140 11.6484 247.416 11.7447 247.771 11.7656  c
247.771 12.0000 l
244.364 12.0000 l
244.364 11.7656 l
244.708 11.7447 244.940 11.6875 245.060 11.5937  c
245.179 11.5000 245.239 11.3802 245.239 11.2343  c
245.239 11.0468 245.156 10.7552 244.989 10.3593  c
244.474 9.12500 l
h
244.286 8.64062 m
242.833 5.17187 l
241.333 8.64062 l
244.286 8.64062 l
h
253.221 12.0000 m
249.909 4.75000 l
249.909 10.5156 l
249.909 11.0364 249.966 11.3645 250.081 11.5000  c
250.237 11.6770 250.482 11.7656 250.815 11.7656  c
251.127 11.7656 l
251.127 12.0000 l
248.127 12.0000 l
248.127 11.7656 l
248.424 11.7656 l
248.789 11.7656 249.049 11.6562 249.206 11.4375  c
249.299 11.3020 249.346 10.9947 249.346 10.5156  c
249.346 4.89062 l
249.346 4.50520 249.305 4.22916 249.221 4.06250  c
249.159 3.93750 249.049 3.83333 248.893 3.75000  c
248.737 3.66666 248.482 3.62500 248.127 3.62500  c
248.127 3.39062 l
250.565 3.39062 l
253.690 10.1250 l
256.752 3.39062 l
259.190 3.39062 l
259.190 3.62500 l
258.893 3.62500 l
258.529 3.62500 258.268 3.73437 258.112 3.95312  c
258.018 4.08854 257.971 4.40104 257.971 4.89062  c
257.971 10.5156 l
257.971 11.0364 258.034 11.3645 258.159 11.5000  c
258.315 11.6770 258.560 11.7656 258.893 11.7656  c
259.190 11.7656 l
259.190 12.0000 l
255.534 12.0000 l
255.534 11.7656 l
255.846 11.7656 l
256.211 11.7656 256.466 11.6562 256.612 11.4375  c
256.706 11.3020 256.752 10.9947 256.752 10.5156  c
256.752 4.75000 l
253.440 12.0000 l
253.221 12.0000 l
h
262.140 7.96875 m
262.140 10.4687 l
262.140 11.0104 262.197 11.3489 262.312 11.4843  c
262.468 11.6718 262.713 11.7656 263.046 11.7656  c
263.374 11.7656 l
263.374 12.0000 l
259.687 12.0000 l
259.687 11.7656 l
260.015 11.7656 l
260.369 11.7656 260.629 11.6458 260.796 11.4062  c
260.879 11.2812 260.921 10.9687 260.921 10.4687  c
260.921 4.92187 l
260.921 4.38020 260.864 4.04166 260.749 3.90625  c
260.582 3.71875 260.338 3.62500 260.015 3.62500  c
259.687 3.62500 l
259.687 3.39062 l
262.843 3.39062 l
263.614 3.39062 264.220 3.47135 264.663 3.63281  c
265.106 3.79427 265.478 4.06250 265.780 4.43750  c
266.082 4.81250 266.233 5.25520 266.233 5.76562  c
266.233 6.47395 266.004 7.04687 265.546 7.48437  c
265.088 7.92187 264.431 8.14062 263.577 8.14062  c
263.369 8.14062 263.145 8.12760 262.905 8.10156  c
262.666 8.07552 262.411 8.03125 262.140 7.96875  c
h
262.140 7.60937 m
262.358 7.65104 262.554 7.68229 262.726 7.70312  c
262.897 7.72395 263.046 7.73437 263.171 7.73437  c
263.619 7.73437 264.002 7.56510 264.319 7.22656  c
264.637 6.88802 264.796 6.44791 264.796 5.90625  c
264.796 5.53125 264.720 5.18229 264.569 4.85937  c
264.418 4.53645 264.202 4.29687 263.921 4.14062  c
263.640 3.98437 263.322 3.90625 262.968 3.90625  c
262.749 3.90625 262.473 3.94791 262.140 4.03125  c
262.140 7.60937 l
h
270.713 11.7656 m
270.713 12.0000 l
267.026 12.0000 l
267.026 11.7656 l
267.323 11.7656 l
267.677 11.7656 267.937 11.6614 268.104 11.4531  c
268.208 11.3177 268.260 10.9895 268.260 10.4687  c
268.260 4.92187 l
268.260 4.48437 268.229 4.19270 268.167 4.04687  c
268.125 3.94270 268.042 3.85416 267.917 3.78125  c
267.729 3.67708 267.531 3.62500 267.323 3.62500  c
267.026 3.62500 l
267.026 3.39062 l
270.713 3.39062 l
270.713 3.62500 l
270.401 3.62500 l
270.047 3.62500 269.792 3.72916 269.635 3.93750  c
269.531 4.07291 269.479 4.40104 269.479 4.92187  c
269.479 10.4687 l
269.479 10.9062 269.505 11.1979 269.557 11.3437  c
269.599 11.4479 269.687 11.5364 269.823 11.6093  c
270.000 11.7135 270.193 11.7656 270.401 11.7656  c
270.713 11.7656 l
h
270.855 3.39062 m
273.199 3.39062 l
278.449 9.84375 l
278.449 4.89062 l
278.449 4.35937 278.391 4.02604 278.277 3.89062  c
278.121 3.71354 277.871 3.62500 277.527 3.62500  c
277.230 3.62500 l
277.230 3.39062 l
280.230 3.39062 l
280.230 3.62500 l
279.933 3.62500 l
279.569 3.62500 279.308 3.73437 279.152 3.95312  c
279.058 4.08854 279.011 4.40104 279.011 4.89062  c
279.011 12.1406 l
278.777 12.1406 l
273.105 5.20312 l
273.105 10.5156 l
273.105 11.0364 273.162 11.3645 273.277 11.5000  c
273.444 11.6770 273.694 11.7656 274.027 11.7656  c
274.324 11.7656 l
274.324 12.0000 l
271.339 12.0000 l
271.339 11.7656 l
271.636 11.7656 l
272.001 11.7656 272.261 11.6562 272.418 11.4375  c
272.511 11.3020 272.558 10.9947 272.558 10.5156  c
272.558 4.51562 l
272.308 4.22395 272.118 4.03385 271.988 3.94531  c
271.858 3.85677 271.668 3.77083 271.418 3.68750  c
271.293 3.64583 271.105 3.62500 270.855 3.62500  c
270.855 3.39062 l
h
288.399 3.20312 m
288.618 5.90625 l
288.399 5.90625 l
288.170 5.22916 287.879 4.71875 287.524 4.37500  c
287.014 3.88541 286.358 3.64062 285.556 3.64062  c
284.452 3.64062 283.618 4.07291 283.056 4.93750  c
282.577 5.67708 282.337 6.55208 282.337 7.56250  c
282.337 8.37500 282.496 9.11979 282.814 9.79687  c
283.131 10.4739 283.545 10.9713 284.056 11.2890  c
284.566 11.6067 285.092 11.7656 285.634 11.7656  c
285.957 11.7656 286.267 11.7265 286.564 11.6484  c
286.860 11.5703 287.144 11.4479 287.415 11.2812  c
287.415 8.79687 l
287.415 8.36979 287.384 8.08854 287.321 7.95312  c
287.259 7.81770 287.157 7.71614 287.017 7.64843  c
286.876 7.58072 286.634 7.54687 286.290 7.54687  c
286.290 7.29687 l
289.618 7.29687 l
289.618 7.54687 l
289.462 7.54687 l
289.129 7.54687 288.899 7.65625 288.774 7.87500  c
288.691 8.03125 288.649 8.33854 288.649 8.79687  c
288.649 11.4375 l
288.170 11.6979 287.694 11.8906 287.220 12.0156  c
286.746 12.1406 286.217 12.2031 285.634 12.2031  c
283.967 12.2031 282.702 11.6666 281.837 10.5937  c
281.191 9.79166 280.868 8.86979 280.868 7.82812  c
280.868 7.06770 281.050 6.34375 281.415 5.65625  c
281.853 4.83333 282.446 4.19791 283.196 3.75000  c
283.821 3.38541 284.566 3.20312 285.431 3.20312  c
285.743 3.20312 286.027 3.22656 286.282 3.27343  c
286.537 3.32031 286.899 3.43229 287.368 3.60937  c
287.608 3.69270 287.769 3.73437 287.853 3.73437  c
287.925 3.73437 287.991 3.69791 288.048 3.62500  c
288.105 3.55208 288.144 3.41145 288.165 3.20312  c
288.399 3.20312 l
h
f
Q
cliprestore
newpath
0 0 m
0 16.0000 l
391.000 16.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 380.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 -380.000 ] concat
cliprestore
Q
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1416 w @beginspecial 20 @llx 118 @lly 575
@urx 673 @ury 1440 @rwi @setspecial
%%BeginDocument: underdamping.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 1:18:00 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 375 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
46.0000 -1.00000 341.994 369.287 rc
newpath
47.0000 36.2420 m
50.6945 12.3419 l
54.3891 1.74810 l
55.1927 1.09460 l
55.9964 1.00000 l
56.8000 1.44882 l
57.6037 2.42492 l
59.2110 5.89154 l
60.8183 11.2596 l
64.4335 29.5101 l
68.0487 54.8611 l
71.6878 85.7053 l
75.3269 120.053 l
78.9488 155.977 l
82.5706 192.042 l
85.9285 224.380 l
89.2864 254.680 l
92.7634 283.078 l
96.2403 307.800 l
99.8361 329.019 l
103.432 345.546 l
107.016 357.285 l
110.600 364.418 l
111.522 365.539 l
112.444 366.379 l
113.365 366.945 l
114.287 367.245 l
115.209 367.287 l
116.131 367.078 l
117.052 366.627 l
117.974 365.943 l
121.221 361.818 l
124.469 355.349 l
131.780 334.586 l
139.122 309.367 l
146.197 285.315 l
152.622 266.465 l
160.262 249.960 l
163.498 245.192 l
166.734 241.774 l
168.616 240.392 l
170.498 239.440 l
172.380 238.899 l
174.262 238.750 l
177.594 239.372 l
180.926 240.997 l
184.582 243.737 l
188.237 247.256 l
195.199 255.281 l
202.463 264.154 l
209.134 271.568 l
216.330 277.881 l
223.804 282.075 l
230.310 283.699 l
237.336 283.566 l
244.596 281.844 l
251.698 279.185 l
258.569 276.245 l
266.199 273.116 l
273.054 270.797 l
280.374 269.066 l
287.006 268.227 l
294.258 268.051 l
301.081 268.461 l
308.213 269.296 l
315.185 270.315 l
322.485 271.402 l
329.516 272.318 l
336.706 273.021 l
343.836 273.439 l
350.388 273.582 l
357.897 273.501 l
364.614 273.267 l
371.775 272.919 l
378.629 272.556 l
385.994 272.195 l
S
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
357.745 272.142 m
357.745 274.742 l
S
newpath
301.246 272.142 m
301.246 274.742 l
S
newpath
244.747 272.142 m
244.747 274.742 l
S
newpath
188.247 272.142 m
188.247 274.742 l
S
newpath
131.748 272.142 m
131.748 274.742 l
S
newpath
75.2495 272.142 m
75.2495 274.742 l
S
newpath
47.0000 272.142 m
385.994 272.142 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
210 295 12 15 rc
newpath
217.375 299.687 m
216.875 301.406 l
217.875 301.406 l
217.765 301.812 l
216.781 301.812 l
215.687 305.546 l
215.572 305.953 215.515 306.213 215.515 306.328  c
215.515 306.401 215.531 306.458 215.562 306.500  c
215.593 306.541 215.635 306.562 215.687 306.562  c
215.791 306.562 215.927 306.484 216.093 306.328  c
216.197 306.244 216.427 305.984 216.781 305.546  c
216.984 305.718 l
216.599 306.281 216.234 306.677 215.890 306.906  c
215.651 307.072 215.411 307.156 215.171 307.156  c
214.984 307.156 214.830 307.096 214.710 306.976  c
214.591 306.856 214.531 306.708 214.531 306.531  c
214.531 306.302 214.599 305.953 214.734 305.484  c
215.796 301.812 l
214.843 301.812 l
214.906 301.562 l
215.364 301.437 215.750 301.247 216.062 300.992  c
216.375 300.737 216.718 300.302 217.093 299.687  c
217.375 299.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 272.142 m
47.0000 277.342 l
S
Q
q
newpath
103.499 272.142 m
103.499 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
106.531 288.234 m
108.625 287.218 l
108.828 287.218 l
108.828 294.484 l
108.828 294.963 108.849 295.263 108.890 295.382  c
108.932 295.502 109.015 295.593 109.140 295.656  c
109.265 295.718 109.520 295.755 109.906 295.765  c
109.906 296.000 l
106.671 296.000 l
106.671 295.765 l
107.078 295.755 107.341 295.718 107.460 295.656  c
107.580 295.593 107.664 295.510 107.710 295.406  c
107.757 295.302 107.781 294.994 107.781 294.484  c
107.781 289.843 l
107.781 289.208 107.760 288.802 107.718 288.625  c
107.687 288.489 107.632 288.390 107.554 288.328  c
107.476 288.265 107.380 288.234 107.265 288.234  c
107.109 288.234 106.895 288.302 106.625 288.437  c
106.531 288.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
159.998 272.142 m
159.998 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
166.953 294.343 m
166.359 296.000 l
161.281 296.000 l
161.281 295.765 l
162.770 294.401 163.820 293.286 164.429 292.421  c
165.039 291.557 165.343 290.770 165.343 290.062  c
165.343 289.510 165.177 289.059 164.843 288.710  c
164.510 288.362 164.109 288.187 163.640 288.187  c
163.224 288.187 162.846 288.309 162.507 288.554  c
162.169 288.799 161.921 289.161 161.765 289.640  c
161.531 289.640 l
161.635 288.859 161.906 288.260 162.343 287.843  c
162.781 287.427 163.328 287.218 163.984 287.218  c
164.682 287.218 165.265 287.442 165.734 287.890  c
166.203 288.338 166.437 288.864 166.437 289.468  c
166.437 289.906 166.333 290.343 166.125 290.781  c
165.812 291.468 165.307 292.192 164.609 292.953  c
163.557 294.109 162.895 294.807 162.625 295.046  c
164.875 295.046 l
165.333 295.046 165.653 295.028 165.835 294.992  c
166.018 294.955 166.184 294.885 166.335 294.781  c
166.487 294.677 166.614 294.531 166.718 294.343  c
166.953 294.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
216.497 272.142 m
216.497 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
218.656 289.031 m
218.906 288.447 219.218 288.000 219.593 287.687  c
219.968 287.375 220.432 287.218 220.984 287.218  c
221.682 287.218 222.213 287.442 222.578 287.890  c
222.859 288.224 223.000 288.578 223.000 288.953  c
223.000 289.588 222.604 290.239 221.812 290.906  c
222.343 291.114 222.744 291.411 223.015 291.796  c
223.286 292.182 223.421 292.635 223.421 293.156  c
223.421 293.895 223.182 294.536 222.703 295.078  c
222.088 295.796 221.197 296.156 220.031 296.156  c
219.447 296.156 219.052 296.083 218.843 295.937  c
218.635 295.791 218.531 295.635 218.531 295.468  c
218.531 295.343 218.580 295.237 218.679 295.148  c
218.778 295.059 218.895 295.015 219.031 295.015  c
219.135 295.015 219.244 295.031 219.359 295.062  c
219.432 295.083 219.596 295.158 219.851 295.289  c
220.106 295.419 220.281 295.500 220.375 295.531  c
220.531 295.572 220.697 295.593 220.875 295.593  c
221.302 295.593 221.677 295.427 222.000 295.093  c
222.322 294.760 222.484 294.364 222.484 293.906  c
222.484 293.572 222.411 293.250 222.265 292.937  c
222.151 292.697 222.026 292.515 221.890 292.390  c
221.713 292.224 221.466 292.072 221.148 291.937  c
220.830 291.802 220.505 291.734 220.171 291.734  c
219.968 291.734 l
219.968 291.531 l
220.302 291.489 220.638 291.369 220.976 291.171  c
221.315 290.974 221.559 290.737 221.710 290.460  c
221.862 290.184 221.937 289.875 221.937 289.531  c
221.937 289.104 221.802 288.755 221.531 288.484  c
221.260 288.213 220.921 288.078 220.515 288.078  c
219.859 288.078 219.312 288.427 218.875 289.125  c
218.656 289.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
272.996 272.142 m
272.996 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
280.046 292.828 m
280.046 293.734 l
278.890 293.734 l
278.890 296.000 l
277.843 296.000 l
277.843 293.734 l
274.203 293.734 l
274.203 292.921 l
278.203 287.218 l
278.890 287.218 l
278.890 292.828 l
280.046 292.828 l
h
277.843 292.828 m
277.843 288.546 l
274.828 292.828 l
277.843 292.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
329.495 272.142 m
329.495 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
336.640 287.390 m
336.140 288.468 l
333.562 288.468 l
333.000 289.625 l
334.114 289.791 335.000 290.208 335.656 290.875  c
336.218 291.447 336.500 292.125 336.500 292.906  c
336.500 293.364 336.408 293.786 336.226 294.171  c
336.044 294.557 335.812 294.885 335.531 295.156  c
335.250 295.427 334.937 295.640 334.593 295.796  c
334.114 296.036 333.614 296.156 333.093 296.156  c
332.583 296.156 332.210 296.067 331.976 295.890  c
331.742 295.713 331.625 295.520 331.625 295.312  c
331.625 295.187 331.674 295.080 331.773 294.992  c
331.872 294.903 331.994 294.859 332.140 294.859  c
332.244 294.859 332.338 294.875 332.421 294.906  c
332.505 294.937 332.645 295.026 332.843 295.171  c
333.166 295.390 333.489 295.500 333.812 295.500  c
334.312 295.500 334.747 295.312 335.117 294.937  c
335.487 294.562 335.671 294.104 335.671 293.562  c
335.671 293.041 335.505 292.557 335.171 292.109  c
334.838 291.661 334.380 291.312 333.796 291.062  c
333.328 290.875 332.697 290.765 331.906 290.734  c
333.562 287.390 l
336.640 287.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 272.142 m
385.994 277.342 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.828 287.218 m
392.828 287.453 l
392.265 287.505 391.807 287.614 391.453 287.781  c
391.099 287.947 390.750 288.203 390.406 288.546  c
390.062 288.890 389.778 289.273 389.554 289.695  c
389.330 290.117 389.140 290.614 388.984 291.187  c
389.599 290.770 390.213 290.562 390.828 290.562  c
391.411 290.562 391.919 290.799 392.351 291.273  c
392.783 291.747 393.000 292.359 393.000 293.109  c
393.000 293.828 392.781 294.484 392.343 295.078  c
391.822 295.796 391.130 296.156 390.265 296.156  c
389.671 296.156 389.171 295.958 388.765 295.562  c
387.963 294.812 387.562 293.833 387.562 292.625  c
387.562 291.854 387.716 291.122 388.023 290.429  c
388.330 289.737 388.770 289.119 389.343 288.578  c
389.916 288.036 390.466 287.674 390.992 287.492  c
391.518 287.309 392.005 287.218 392.453 287.218  c
392.828 287.218 l
h
388.875 291.656 m
388.802 292.229 388.765 292.692 388.765 293.046  c
388.765 293.453 388.841 293.893 388.992 294.367  c
389.143 294.841 389.364 295.218 389.656 295.500  c
389.875 295.697 390.140 295.796 390.453 295.796  c
390.817 295.796 391.145 295.622 391.437 295.273  c
391.729 294.924 391.875 294.432 391.875 293.796  c
391.875 293.067 391.729 292.440 391.437 291.914  c
391.145 291.388 390.739 291.125 390.218 291.125  c
390.052 291.125 389.877 291.158 389.695 291.226  c
389.513 291.294 389.239 291.437 388.875 291.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
47.0000 12.6520 m
44.4000 12.6520 l
S
newpath
47.0000 59.8320 m
44.4000 59.8320 l
S
newpath
47.0000 107.012 m
44.4000 107.012 l
S
newpath
47.0000 154.192 m
44.4000 154.192 l
S
newpath
47.0000 201.372 m
44.4000 201.372 l
S
newpath
47.0000 248.552 m
44.4000 248.552 l
S
newpath
47.0000 295.732 m
44.4000 295.732 l
S
newpath
47.0000 342.912 m
44.4000 342.912 l
S
newpath
47.0000 367.287 m
47.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 129 8 15 rc
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 366.502 m
41.8000 366.502 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 365 7 13 rc
newpath
29.7968 372.437 m
21.2031 372.437 l
21.2031 371.765 l
29.7968 371.765 l
29.7968 372.437 l
h
f
Q
newpath
28.4687 371.750 m
28.4687 370.770 28.6171 369.924 28.9140 369.210  c
29.2109 368.497 29.6041 367.968 30.0937 367.625  c
30.4791 367.354 30.8750 367.218 31.2812 367.218  c
31.9375 367.218 32.5260 367.552 33.0468 368.218  c
33.7031 369.052 34.0312 370.182 34.0312 371.609  c
34.0312 372.609 33.8880 373.458 33.6015 374.156  c
33.3151 374.854 32.9479 375.362 32.5000 375.679  c
32.0520 375.997 31.6250 376.156 31.2187 376.156  c
30.3958 376.156 29.7083 375.671 29.1562 374.703  c
28.6979 373.880 28.4687 372.895 28.4687 371.750  c
h
29.7187 371.906 m
29.7187 373.093 29.8645 374.062 30.1562 374.812  c
30.3958 375.437 30.7552 375.750 31.2343 375.750  c
31.4635 375.750 31.7005 375.648 31.9453 375.445  c
32.1901 375.242 32.3750 374.895 32.5000 374.406  c
32.6979 373.687 32.7968 372.661 32.7968 371.328  c
32.7968 370.349 32.6927 369.531 32.4843 368.875  c
32.3385 368.385 32.1406 368.041 31.8906 367.843  c
31.7239 367.708 31.5156 367.640 31.2656 367.640  c
30.9843 367.640 30.7291 367.765 30.5000 368.015  c
30.1979 368.369 29.9921 368.924 29.8828 369.679  c
29.7734 370.434 29.7187 371.177 29.7187 371.906  c
h
36.1250 374.765 m
36.3229 374.765 36.4895 374.835 36.6250 374.976  c
36.7604 375.117 36.8281 375.281 36.8281 375.468  c
36.8281 375.666 36.7604 375.833 36.6250 375.968  c
36.4895 376.104 36.3229 376.171 36.1250 376.171  c
35.9270 376.171 35.7604 376.104 35.6250 375.968  c
35.4895 375.833 35.4218 375.666 35.4218 375.468  c
35.4218 375.270 35.4895 375.104 35.6250 374.968  c
35.7604 374.833 35.9270 374.765 36.1250 374.765  c
h
43.7031 374.343 m
43.1093 376.000 l
38.0312 376.000 l
38.0312 375.765 l
39.5208 374.401 40.5703 373.286 41.1796 372.421  c
41.7890 371.557 42.0937 370.770 42.0937 370.062  c
42.0937 369.510 41.9270 369.059 41.5937 368.710  c
41.2604 368.362 40.8593 368.187 40.3906 368.187  c
39.9739 368.187 39.5963 368.309 39.2578 368.554  c
38.9192 368.799 38.6718 369.161 38.5156 369.640  c
38.2812 369.640 l
38.3854 368.859 38.6562 368.260 39.0937 367.843  c
39.5312 367.427 40.0781 367.218 40.7343 367.218  c
41.4322 367.218 42.0156 367.442 42.4843 367.890  c
42.9531 368.338 43.1875 368.864 43.1875 369.468  c
43.1875 369.906 43.0833 370.343 42.8750 370.781  c
42.5625 371.468 42.0572 372.192 41.3593 372.953  c
40.3072 374.109 39.6458 374.807 39.3750 375.046  c
41.6250 375.046 l
42.0833 375.046 42.4036 375.028 42.5859 374.992  c
42.7682 374.955 42.9349 374.885 43.0859 374.781  c
43.2369 374.677 43.3645 374.531 43.4687 374.343  c
43.7031 374.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 319.322 m
41.8000 319.322 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 318 7 13 rc
newpath
29.7968 325.437 m
21.2031 325.437 l
21.2031 324.765 l
29.7968 324.765 l
29.7968 325.437 l
h
f
Q
newpath
28.4687 324.750 m
28.4687 323.770 28.6171 322.924 28.9140 322.210  c
29.2109 321.497 29.6041 320.968 30.0937 320.625  c
30.4791 320.354 30.8750 320.218 31.2812 320.218  c
31.9375 320.218 32.5260 320.552 33.0468 321.218  c
33.7031 322.052 34.0312 323.182 34.0312 324.609  c
34.0312 325.609 33.8880 326.458 33.6015 327.156  c
33.3151 327.854 32.9479 328.362 32.5000 328.679  c
32.0520 328.997 31.6250 329.156 31.2187 329.156  c
30.3958 329.156 29.7083 328.671 29.1562 327.703  c
28.6979 326.880 28.4687 325.895 28.4687 324.750  c
h
29.7187 324.906 m
29.7187 326.093 29.8645 327.062 30.1562 327.812  c
30.3958 328.437 30.7552 328.750 31.2343 328.750  c
31.4635 328.750 31.7005 328.648 31.9453 328.445  c
32.1901 328.242 32.3750 327.895 32.5000 327.406  c
32.6979 326.687 32.7968 325.661 32.7968 324.328  c
32.7968 323.349 32.6927 322.531 32.4843 321.875  c
32.3385 321.385 32.1406 321.041 31.8906 320.843  c
31.7239 320.708 31.5156 320.640 31.2656 320.640  c
30.9843 320.640 30.7291 320.765 30.5000 321.015  c
30.1979 321.369 29.9921 321.924 29.8828 322.679  c
29.7734 323.434 29.7187 324.177 29.7187 324.906  c
h
36.1250 327.765 m
36.3229 327.765 36.4895 327.835 36.6250 327.976  c
36.7604 328.117 36.8281 328.281 36.8281 328.468  c
36.8281 328.666 36.7604 328.833 36.6250 328.968  c
36.4895 329.104 36.3229 329.171 36.1250 329.171  c
35.9270 329.171 35.7604 329.104 35.6250 328.968  c
35.4895 328.833 35.4218 328.666 35.4218 328.468  c
35.4218 328.270 35.4895 328.104 35.6250 327.968  c
35.7604 327.833 35.9270 327.765 36.1250 327.765  c
h
39.2812 321.234 m
41.3750 320.218 l
41.5781 320.218 l
41.5781 327.484 l
41.5781 327.963 41.5989 328.263 41.6406 328.382  c
41.6822 328.502 41.7656 328.593 41.8906 328.656  c
42.0156 328.718 42.2708 328.755 42.6562 328.765  c
42.6562 329.000 l
39.4218 329.000 l
39.4218 328.765 l
39.8281 328.755 40.0911 328.718 40.2109 328.656  c
40.3307 328.593 40.4140 328.510 40.4609 328.406  c
40.5078 328.302 40.5312 327.994 40.5312 327.484  c
40.5312 322.843 l
40.5312 322.208 40.5104 321.802 40.4687 321.625  c
40.4375 321.489 40.3828 321.390 40.3046 321.328  c
40.2265 321.265 40.1302 321.234 40.0156 321.234  c
39.8593 321.234 39.6458 321.302 39.3750 321.437  c
39.2812 321.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 272.142 m
41.8000 272.142 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.4687 277.750 m
37.4687 276.770 37.6171 275.924 37.9140 275.210  c
38.2109 274.497 38.6041 273.968 39.0937 273.625  c
39.4791 273.354 39.8750 273.218 40.2812 273.218  c
40.9375 273.218 41.5260 273.552 42.0468 274.218  c
42.7031 275.052 43.0312 276.182 43.0312 277.609  c
43.0312 278.609 42.8880 279.458 42.6015 280.156  c
42.3151 280.854 41.9479 281.362 41.5000 281.679  c
41.0520 281.997 40.6250 282.156 40.2187 282.156  c
39.3958 282.156 38.7083 281.671 38.1562 280.703  c
37.6979 279.880 37.4687 278.895 37.4687 277.750  c
h
38.7187 277.906 m
38.7187 279.093 38.8645 280.062 39.1562 280.812  c
39.3958 281.437 39.7552 281.750 40.2343 281.750  c
40.4635 281.750 40.7005 281.648 40.9453 281.445  c
41.1901 281.242 41.3750 280.895 41.5000 280.406  c
41.6979 279.687 41.7968 278.661 41.7968 277.328  c
41.7968 276.349 41.6927 275.531 41.4843 274.875  c
41.3385 274.385 41.1406 274.041 40.8906 273.843  c
40.7239 273.708 40.5156 273.640 40.2656 273.640  c
39.9843 273.640 39.7291 273.765 39.5000 274.015  c
39.1979 274.369 38.9921 274.924 38.8828 275.679  c
38.7734 276.434 38.7187 277.177 38.7187 277.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 224.962 m
41.8000 224.962 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 229.750 m
28.4687 228.770 28.6171 227.924 28.9140 227.210  c
29.2109 226.497 29.6041 225.968 30.0937 225.625  c
30.4791 225.354 30.8750 225.218 31.2812 225.218  c
31.9375 225.218 32.5260 225.552 33.0468 226.218  c
33.7031 227.052 34.0312 228.182 34.0312 229.609  c
34.0312 230.609 33.8880 231.458 33.6015 232.156  c
33.3151 232.854 32.9479 233.362 32.5000 233.679  c
32.0520 233.997 31.6250 234.156 31.2187 234.156  c
30.3958 234.156 29.7083 233.671 29.1562 232.703  c
28.6979 231.880 28.4687 230.895 28.4687 229.750  c
h
29.7187 229.906 m
29.7187 231.093 29.8645 232.062 30.1562 232.812  c
30.3958 233.437 30.7552 233.750 31.2343 233.750  c
31.4635 233.750 31.7005 233.648 31.9453 233.445  c
32.1901 233.242 32.3750 232.895 32.5000 232.406  c
32.6979 231.687 32.7968 230.661 32.7968 229.328  c
32.7968 228.349 32.6927 227.531 32.4843 226.875  c
32.3385 226.385 32.1406 226.041 31.8906 225.843  c
31.7239 225.708 31.5156 225.640 31.2656 225.640  c
30.9843 225.640 30.7291 225.765 30.5000 226.015  c
30.1979 226.369 29.9921 226.924 29.8828 227.679  c
29.7734 228.434 29.7187 229.177 29.7187 229.906  c
h
36.1250 232.765 m
36.3229 232.765 36.4895 232.835 36.6250 232.976  c
36.7604 233.117 36.8281 233.281 36.8281 233.468  c
36.8281 233.666 36.7604 233.833 36.6250 233.968  c
36.4895 234.104 36.3229 234.171 36.1250 234.171  c
35.9270 234.171 35.7604 234.104 35.6250 233.968  c
35.4895 233.833 35.4218 233.666 35.4218 233.468  c
35.4218 233.270 35.4895 233.104 35.6250 232.968  c
35.7604 232.833 35.9270 232.765 36.1250 232.765  c
h
39.2812 226.234 m
41.3750 225.218 l
41.5781 225.218 l
41.5781 232.484 l
41.5781 232.963 41.5989 233.263 41.6406 233.382  c
41.6822 233.502 41.7656 233.593 41.8906 233.656  c
42.0156 233.718 42.2708 233.755 42.6562 233.765  c
42.6562 234.000 l
39.4218 234.000 l
39.4218 233.765 l
39.8281 233.755 40.0911 233.718 40.2109 233.656  c
40.3307 233.593 40.4140 233.510 40.4609 233.406  c
40.5078 233.302 40.5312 232.994 40.5312 232.484  c
40.5312 227.843 l
40.5312 227.208 40.5104 226.802 40.4687 226.625  c
40.4375 226.489 40.3828 226.390 40.3046 226.328  c
40.2265 226.265 40.1302 226.234 40.0156 226.234  c
39.8593 226.234 39.6458 226.302 39.3750 226.437  c
39.2812 226.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 177.782 m
41.8000 177.782 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 182.750 m
28.4687 181.770 28.6171 180.924 28.9140 180.210  c
29.2109 179.497 29.6041 178.968 30.0937 178.625  c
30.4791 178.354 30.8750 178.218 31.2812 178.218  c
31.9375 178.218 32.5260 178.552 33.0468 179.218  c
33.7031 180.052 34.0312 181.182 34.0312 182.609  c
34.0312 183.609 33.8880 184.458 33.6015 185.156  c
33.3151 185.854 32.9479 186.362 32.5000 186.679  c
32.0520 186.997 31.6250 187.156 31.2187 187.156  c
30.3958 187.156 29.7083 186.671 29.1562 185.703  c
28.6979 184.880 28.4687 183.895 28.4687 182.750  c
h
29.7187 182.906 m
29.7187 184.093 29.8645 185.062 30.1562 185.812  c
30.3958 186.437 30.7552 186.750 31.2343 186.750  c
31.4635 186.750 31.7005 186.648 31.9453 186.445  c
32.1901 186.242 32.3750 185.895 32.5000 185.406  c
32.6979 184.687 32.7968 183.661 32.7968 182.328  c
32.7968 181.349 32.6927 180.531 32.4843 179.875  c
32.3385 179.385 32.1406 179.041 31.8906 178.843  c
31.7239 178.708 31.5156 178.640 31.2656 178.640  c
30.9843 178.640 30.7291 178.765 30.5000 179.015  c
30.1979 179.369 29.9921 179.924 29.8828 180.679  c
29.7734 181.434 29.7187 182.177 29.7187 182.906  c
h
36.1250 185.765 m
36.3229 185.765 36.4895 185.835 36.6250 185.976  c
36.7604 186.117 36.8281 186.281 36.8281 186.468  c
36.8281 186.666 36.7604 186.833 36.6250 186.968  c
36.4895 187.104 36.3229 187.171 36.1250 187.171  c
35.9270 187.171 35.7604 187.104 35.6250 186.968  c
35.4895 186.833 35.4218 186.666 35.4218 186.468  c
35.4218 186.270 35.4895 186.104 35.6250 185.968  c
35.7604 185.833 35.9270 185.765 36.1250 185.765  c
h
43.7031 185.343 m
43.1093 187.000 l
38.0312 187.000 l
38.0312 186.765 l
39.5208 185.401 40.5703 184.286 41.1796 183.421  c
41.7890 182.557 42.0937 181.770 42.0937 181.062  c
42.0937 180.510 41.9270 180.059 41.5937 179.710  c
41.2604 179.362 40.8593 179.187 40.3906 179.187  c
39.9739 179.187 39.5963 179.309 39.2578 179.554  c
38.9192 179.799 38.6718 180.161 38.5156 180.640  c
38.2812 180.640 l
38.3854 179.859 38.6562 179.260 39.0937 178.843  c
39.5312 178.427 40.0781 178.218 40.7343 178.218  c
41.4322 178.218 42.0156 178.442 42.4843 178.890  c
42.9531 179.338 43.1875 179.864 43.1875 180.468  c
43.1875 180.906 43.0833 181.343 42.8750 181.781  c
42.5625 182.468 42.0572 183.192 41.3593 183.953  c
40.3072 185.109 39.6458 185.807 39.3750 186.046  c
41.6250 186.046 l
42.0833 186.046 42.4036 186.028 42.5859 185.992  c
42.7682 185.955 42.9349 185.885 43.0859 185.781  c
43.2369 185.677 43.3645 185.531 43.4687 185.343  c
43.7031 185.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 130.602 m
41.8000 130.602 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 135.750 m
28.4687 134.770 28.6171 133.924 28.9140 133.210  c
29.2109 132.497 29.6041 131.968 30.0937 131.625  c
30.4791 131.354 30.8750 131.218 31.2812 131.218  c
31.9375 131.218 32.5260 131.552 33.0468 132.218  c
33.7031 133.052 34.0312 134.182 34.0312 135.609  c
34.0312 136.609 33.8880 137.458 33.6015 138.156  c
33.3151 138.854 32.9479 139.362 32.5000 139.679  c
32.0520 139.997 31.6250 140.156 31.2187 140.156  c
30.3958 140.156 29.7083 139.671 29.1562 138.703  c
28.6979 137.880 28.4687 136.895 28.4687 135.750  c
h
29.7187 135.906 m
29.7187 137.093 29.8645 138.062 30.1562 138.812  c
30.3958 139.437 30.7552 139.750 31.2343 139.750  c
31.4635 139.750 31.7005 139.648 31.9453 139.445  c
32.1901 139.242 32.3750 138.895 32.5000 138.406  c
32.6979 137.687 32.7968 136.661 32.7968 135.328  c
32.7968 134.349 32.6927 133.531 32.4843 132.875  c
32.3385 132.385 32.1406 132.041 31.8906 131.843  c
31.7239 131.708 31.5156 131.640 31.2656 131.640  c
30.9843 131.640 30.7291 131.765 30.5000 132.015  c
30.1979 132.369 29.9921 132.924 29.8828 133.679  c
29.7734 134.434 29.7187 135.177 29.7187 135.906  c
h
36.1250 138.765 m
36.3229 138.765 36.4895 138.835 36.6250 138.976  c
36.7604 139.117 36.8281 139.281 36.8281 139.468  c
36.8281 139.666 36.7604 139.833 36.6250 139.968  c
36.4895 140.104 36.3229 140.171 36.1250 140.171  c
35.9270 140.171 35.7604 140.104 35.6250 139.968  c
35.4895 139.833 35.4218 139.666 35.4218 139.468  c
35.4218 139.270 35.4895 139.104 35.6250 138.968  c
35.7604 138.833 35.9270 138.765 36.1250 138.765  c
h
38.4062 133.031 m
38.6562 132.447 38.9687 132.000 39.3437 131.687  c
39.7187 131.375 40.1822 131.218 40.7343 131.218  c
41.4322 131.218 41.9635 131.442 42.3281 131.890  c
42.6093 132.224 42.7500 132.578 42.7500 132.953  c
42.7500 133.588 42.3541 134.239 41.5625 134.906  c
42.0937 135.114 42.4947 135.411 42.7656 135.796  c
43.0364 136.182 43.1718 136.635 43.1718 137.156  c
43.1718 137.895 42.9322 138.536 42.4531 139.078  c
41.8385 139.796 40.9479 140.156 39.7812 140.156  c
39.1979 140.156 38.8020 140.083 38.5937 139.937  c
38.3854 139.791 38.2812 139.635 38.2812 139.468  c
38.2812 139.343 38.3307 139.237 38.4296 139.148  c
38.5286 139.059 38.6458 139.015 38.7812 139.015  c
38.8854 139.015 38.9947 139.031 39.1093 139.062  c
39.1822 139.083 39.3463 139.158 39.6015 139.289  c
39.8567 139.419 40.0312 139.500 40.1250 139.531  c
40.2812 139.572 40.4479 139.593 40.6250 139.593  c
41.0520 139.593 41.4270 139.427 41.7500 139.093  c
42.0729 138.760 42.2343 138.364 42.2343 137.906  c
42.2343 137.572 42.1614 137.250 42.0156 136.937  c
41.9010 136.697 41.7760 136.515 41.6406 136.390  c
41.4635 136.224 41.2161 136.072 40.8984 135.937  c
40.5807 135.802 40.2552 135.734 39.9218 135.734  c
39.7187 135.734 l
39.7187 135.531 l
40.0520 135.489 40.3880 135.369 40.7265 135.171  c
41.0651 134.974 41.3099 134.737 41.4609 134.460  c
41.6119 134.184 41.6875 133.875 41.6875 133.531  c
41.6875 133.104 41.5520 132.755 41.2812 132.484  c
41.0104 132.213 40.6718 132.078 40.2656 132.078  c
39.6093 132.078 39.0625 132.427 38.6250 133.125  c
38.4062 133.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 83.4220 m
41.8000 83.4220 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 88.7500 m
28.4687 87.7708 28.6171 86.9244 28.9140 86.2109  c
29.2109 85.4974 29.6041 84.9687 30.0937 84.6250  c
30.4791 84.3541 30.8750 84.2187 31.2812 84.2187  c
31.9375 84.2187 32.5260 84.5520 33.0468 85.2187  c
33.7031 86.0520 34.0312 87.1822 34.0312 88.6093  c
34.0312 89.6093 33.8880 90.4583 33.6015 91.1562  c
33.3151 91.8541 32.9479 92.3619 32.5000 92.6796  c
32.0520 92.9974 31.6250 93.1562 31.2187 93.1562  c
30.3958 93.1562 29.7083 92.6718 29.1562 91.7031  c
28.6979 90.8802 28.4687 89.8958 28.4687 88.7500  c
h
29.7187 88.9062 m
29.7187 90.0937 29.8645 91.0625 30.1562 91.8125  c
30.3958 92.4375 30.7552 92.7500 31.2343 92.7500  c
31.4635 92.7500 31.7005 92.6484 31.9453 92.4453  c
32.1901 92.2421 32.3750 91.8958 32.5000 91.4062  c
32.6979 90.6875 32.7968 89.6614 32.7968 88.3281  c
32.7968 87.3489 32.6927 86.5312 32.4843 85.8750  c
32.3385 85.3854 32.1406 85.0416 31.8906 84.8437  c
31.7239 84.7083 31.5156 84.6406 31.2656 84.6406  c
30.9843 84.6406 30.7291 84.7656 30.5000 85.0156  c
30.1979 85.3697 29.9921 85.9244 29.8828 86.6796  c
29.7734 87.4349 29.7187 88.1770 29.7187 88.9062  c
h
36.1250 91.7656 m
36.3229 91.7656 36.4895 91.8359 36.6250 91.9765  c
36.7604 92.1171 36.8281 92.2812 36.8281 92.4687  c
36.8281 92.6666 36.7604 92.8333 36.6250 92.9687  c
36.4895 93.1041 36.3229 93.1718 36.1250 93.1718  c
35.9270 93.1718 35.7604 93.1041 35.6250 92.9687  c
35.4895 92.8333 35.4218 92.6666 35.4218 92.4687  c
35.4218 92.2708 35.4895 92.1041 35.6250 91.9687  c
35.7604 91.8333 35.9270 91.7656 36.1250 91.7656  c
h
43.7968 89.8281 m
43.7968 90.7343 l
42.6406 90.7343 l
42.6406 93.0000 l
41.5937 93.0000 l
41.5937 90.7343 l
37.9531 90.7343 l
37.9531 89.9218 l
41.9531 84.2187 l
42.6406 84.2187 l
42.6406 89.8281 l
43.7968 89.8281 l
h
41.5937 89.8281 m
41.5937 85.5468 l
38.5781 89.8281 l
41.5937 89.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 36.2420 m
41.8000 36.2420 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 41.7500 m
28.4687 40.7708 28.6171 39.9244 28.9140 39.2109  c
29.2109 38.4974 29.6041 37.9687 30.0937 37.6250  c
30.4791 37.3541 30.8750 37.2187 31.2812 37.2187  c
31.9375 37.2187 32.5260 37.5520 33.0468 38.2187  c
33.7031 39.0520 34.0312 40.1822 34.0312 41.6093  c
34.0312 42.6093 33.8880 43.4583 33.6015 44.1562  c
33.3151 44.8541 32.9479 45.3619 32.5000 45.6796  c
32.0520 45.9974 31.6250 46.1562 31.2187 46.1562  c
30.3958 46.1562 29.7083 45.6718 29.1562 44.7031  c
28.6979 43.8802 28.4687 42.8958 28.4687 41.7500  c
h
29.7187 41.9062 m
29.7187 43.0937 29.8645 44.0625 30.1562 44.8125  c
30.3958 45.4375 30.7552 45.7500 31.2343 45.7500  c
31.4635 45.7500 31.7005 45.6484 31.9453 45.4453  c
32.1901 45.2421 32.3750 44.8958 32.5000 44.4062  c
32.6979 43.6875 32.7968 42.6614 32.7968 41.3281  c
32.7968 40.3489 32.6927 39.5312 32.4843 38.8750  c
32.3385 38.3854 32.1406 38.0416 31.8906 37.8437  c
31.7239 37.7083 31.5156 37.6406 31.2656 37.6406  c
30.9843 37.6406 30.7291 37.7656 30.5000 38.0156  c
30.1979 38.3697 29.9921 38.9244 29.8828 39.6796  c
29.7734 40.4349 29.7187 41.1770 29.7187 41.9062  c
h
36.1250 44.7656 m
36.3229 44.7656 36.4895 44.8359 36.6250 44.9765  c
36.7604 45.1171 36.8281 45.2812 36.8281 45.4687  c
36.8281 45.6666 36.7604 45.8333 36.6250 45.9687  c
36.4895 46.1041 36.3229 46.1718 36.1250 46.1718  c
35.9270 46.1718 35.7604 46.1041 35.6250 45.9687  c
35.4895 45.8333 35.4218 45.6666 35.4218 45.4687  c
35.4218 45.2708 35.4895 45.1041 35.6250 44.9687  c
35.7604 44.8333 35.9270 44.7656 36.1250 44.7656  c
h
43.3906 37.3906 m
42.8906 38.4687 l
40.3125 38.4687 l
39.7500 39.6250 l
40.8645 39.7916 41.7500 40.2083 42.4062 40.8750  c
42.9687 41.4479 43.2500 42.1250 43.2500 42.9062  c
43.2500 43.3645 43.1588 43.7864 42.9765 44.1718  c
42.7942 44.5572 42.5625 44.8854 42.2812 45.1562  c
42.0000 45.4270 41.6875 45.6406 41.3437 45.7968  c
40.8645 46.0364 40.3645 46.1562 39.8437 46.1562  c
39.3333 46.1562 38.9609 46.0677 38.7265 45.8906  c
38.4921 45.7135 38.3750 45.5208 38.3750 45.3125  c
38.3750 45.1875 38.4244 45.0807 38.5234 44.9921  c
38.6224 44.9036 38.7447 44.8593 38.8906 44.8593  c
38.9947 44.8593 39.0885 44.8750 39.1718 44.9062  c
39.2552 44.9375 39.3958 45.0260 39.5937 45.1718  c
39.9166 45.3906 40.2395 45.5000 40.5625 45.5000  c
41.0625 45.5000 41.4974 45.3125 41.8671 44.9375  c
42.2369 44.5625 42.4218 44.1041 42.4218 43.5625  c
42.4218 43.0416 42.2552 42.5572 41.9218 42.1093  c
41.5885 41.6614 41.1302 41.3125 40.5468 41.0625  c
40.0781 40.8750 39.4479 40.7656 38.6562 40.7343  c
40.3125 37.3906 l
43.3906 37.3906 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
0 380 391 16 rc
[ 1.00000 0 0 1.00000 0 380.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 15 rc
newpath
102.140 7.25000 m
102.557 6.82291 102.802 6.57812 102.875 6.51562  c
103.072 6.35937 103.281 6.23697 103.500 6.14843  c
103.718 6.05989 103.937 6.01562 104.156 6.01562  c
104.520 6.01562 104.833 6.12239 105.093 6.33593  c
105.354 6.54947 105.531 6.85416 105.625 7.25000  c
106.052 6.73958 106.416 6.40625 106.718 6.25000  c
107.020 6.09375 107.333 6.01562 107.656 6.01562  c
107.958 6.01562 108.229 6.09375 108.468 6.25000  c
108.708 6.40625 108.901 6.66666 109.046 7.03125  c
109.130 7.27083 109.171 7.65625 109.171 8.18750  c
109.171 10.6875 l
109.171 11.0520 109.203 11.3020 109.265 11.4375  c
109.307 11.5312 109.385 11.6093 109.500 11.6718  c
109.614 11.7343 109.802 11.7656 110.062 11.7656  c
110.062 12.0000 l
107.187 12.0000 l
107.187 11.7656 l
107.312 11.7656 l
107.562 11.7656 107.755 11.7187 107.890 11.6250  c
107.984 11.5625 108.052 11.4531 108.093 11.2968  c
108.114 11.2239 108.125 11.0208 108.125 10.6875  c
108.125 8.18750 l
108.125 7.70833 108.067 7.37500 107.953 7.18750  c
107.786 6.91666 107.520 6.78125 107.156 6.78125  c
106.937 6.78125 106.713 6.83593 106.484 6.94531  c
106.255 7.05468 105.979 7.26041 105.656 7.56250  c
105.656 7.64062 l
105.656 7.90625 l
105.656 10.6875 l
105.656 11.0833 105.679 11.3307 105.726 11.4296  c
105.773 11.5286 105.856 11.6093 105.976 11.6718  c
106.096 11.7343 106.307 11.7656 106.609 11.7656  c
106.609 12.0000 l
103.671 12.0000 l
103.671 11.7656 l
103.994 11.7656 104.216 11.7291 104.335 11.6562  c
104.455 11.5833 104.536 11.4687 104.578 11.3125  c
104.599 11.2395 104.609 11.0312 104.609 10.6875  c
104.609 8.18750 l
104.609 7.70833 104.541 7.36458 104.406 7.15625  c
104.218 6.88541 103.958 6.75000 103.625 6.75000  c
103.395 6.75000 103.171 6.81250 102.953 6.93750  c
102.599 7.12500 102.328 7.33333 102.140 7.56250  c
102.140 10.6875 l
102.140 11.0625 102.166 11.3072 102.218 11.4218  c
102.270 11.5364 102.349 11.6224 102.453 11.6796  c
102.557 11.7369 102.765 11.7656 103.078 11.7656  c
103.078 12.0000 l
100.203 12.0000 l
100.203 11.7656 l
100.474 11.7656 100.661 11.7369 100.765 11.6796  c
100.869 11.6224 100.947 11.5312 101.000 11.4062  c
101.052 11.2812 101.078 11.0416 101.078 10.6875  c
101.078 8.46875 l
101.078 7.82291 101.062 7.40625 101.031 7.21875  c
101.000 7.08333 100.953 6.98958 100.890 6.93750  c
100.828 6.88541 100.739 6.85937 100.625 6.85937  c
100.510 6.85937 100.369 6.89062 100.203 6.95312  c
100.109 6.71875 l
101.859 6.01562 l
102.140 6.01562 l
102.140 7.25000 l
h
110.346 6.39062 m
117.189 6.39062 l
117.189 6.92187 l
110.346 6.92187 l
110.346 6.39062 l
h
110.346 8.46875 m
117.189 8.46875 l
117.189 8.98437 l
110.346 8.98437 l
110.346 8.46875 l
h
118.099 5.03125 m
118.349 4.44791 118.662 4.00000 119.037 3.68750  c
119.412 3.37500 119.875 3.21875 120.427 3.21875  c
121.125 3.21875 121.656 3.44270 122.021 3.89062  c
122.302 4.22395 122.443 4.57812 122.443 4.95312  c
122.443 5.58854 122.047 6.23958 121.255 6.90625  c
121.787 7.11458 122.188 7.41145 122.459 7.79687  c
122.729 8.18229 122.865 8.63541 122.865 9.15625  c
122.865 9.89583 122.625 10.5364 122.146 11.0781  c
121.531 11.7968 120.641 12.1562 119.474 12.1562  c
118.891 12.1562 118.495 12.0833 118.287 11.9375  c
118.078 11.7916 117.974 11.6354 117.974 11.4687  c
117.974 11.3437 118.024 11.2369 118.123 11.1484  c
118.222 11.0599 118.339 11.0156 118.474 11.0156  c
118.578 11.0156 118.688 11.0312 118.802 11.0625  c
118.875 11.0833 119.039 11.1588 119.294 11.2890  c
119.550 11.4192 119.724 11.5000 119.818 11.5312  c
119.974 11.5729 120.141 11.5937 120.318 11.5937  c
120.745 11.5937 121.120 11.4270 121.443 11.0937  c
121.766 10.7604 121.927 10.3645 121.927 9.90625  c
121.927 9.57291 121.854 9.25000 121.709 8.93750  c
121.594 8.69791 121.469 8.51562 121.334 8.39062  c
121.156 8.22395 120.909 8.07291 120.591 7.93750  c
120.274 7.80208 119.948 7.73437 119.615 7.73437  c
119.412 7.73437 l
119.412 7.53125 l
119.745 7.48958 120.081 7.36979 120.419 7.17187  c
120.758 6.97395 121.003 6.73697 121.154 6.46093  c
121.305 6.18489 121.380 5.87500 121.380 5.53125  c
121.380 5.10416 121.245 4.75520 120.974 4.48437  c
120.703 4.21354 120.365 4.07812 119.959 4.07812  c
119.302 4.07812 118.755 4.42708 118.318 5.12500  c
118.099 5.03125 l
h
124.646 14.1718 m
124.646 13.8906 l
125.084 13.7447 125.419 13.5208 125.654 13.2187  c
125.888 12.9166 126.005 12.5937 126.005 12.2500  c
126.005 12.1770 125.990 12.1093 125.959 12.0468  c
125.927 12.0156 125.896 12.0000 125.865 12.0000  c
125.823 12.0000 125.724 12.0416 125.568 12.1250  c
125.485 12.1562 125.401 12.1718 125.318 12.1718  c
125.110 12.1718 124.946 12.1119 124.826 11.9921  c
124.706 11.8724 124.646 11.7031 124.646 11.4843  c
124.646 11.2760 124.724 11.0989 124.880 10.9531  c
125.037 10.8072 125.229 10.7343 125.459 10.7343  c
125.740 10.7343 125.990 10.8541 126.209 11.0937  c
126.427 11.3333 126.537 11.6562 126.537 12.0625  c
126.537 12.5000 126.386 12.9062 126.084 13.2812  c
125.781 13.6562 125.302 13.9531 124.646 14.1718  c
h
138.271 3.20312 m
138.474 6.12500 l
138.271 6.12500 l
138.011 5.25000 137.636 4.61979 137.146 4.23437  c
136.656 3.84895 136.073 3.65625 135.396 3.65625  c
134.823 3.65625 134.305 3.79947 133.841 4.08593  c
133.378 4.37239 133.016 4.83333 132.755 5.46875  c
132.495 6.10416 132.365 6.89583 132.365 7.84375  c
132.365 8.62500 132.490 9.29947 132.740 9.86718  c
132.990 10.4349 133.365 10.8724 133.865 11.1796  c
134.365 11.4869 134.938 11.6406 135.584 11.6406  c
136.136 11.6406 136.625 11.5208 137.052 11.2812  c
137.479 11.0416 137.953 10.5677 138.474 9.85937  c
138.662 9.98437 l
138.235 10.7447 137.732 11.3046 137.154 11.6640  c
136.576 12.0234 135.891 12.2031 135.099 12.2031  c
133.672 12.2031 132.568 11.6718 131.787 10.6093  c
131.203 9.81770 130.912 8.89062 130.912 7.82812  c
130.912 6.97395 131.104 6.18489 131.490 5.46093  c
131.875 4.73697 132.406 4.17968 133.084 3.78906  c
133.761 3.39843 134.495 3.20312 135.287 3.20312  c
135.912 3.20312 136.526 3.35416 137.130 3.65625  c
137.307 3.75000 137.438 3.79687 137.521 3.79687  c
137.636 3.79687 137.735 3.75520 137.818 3.67187  c
137.922 3.55729 138.000 3.40104 138.052 3.20312  c
138.271 3.20312 l
h
139.348 6.39062 m
146.192 6.39062 l
146.192 6.92187 l
139.348 6.92187 l
139.348 6.39062 l
h
139.348 8.46875 m
146.192 8.46875 l
146.192 8.98437 l
139.348 8.98437 l
139.348 8.46875 l
h
152.273 3.21875 m
152.273 3.45312 l
151.711 3.50520 151.253 3.61458 150.898 3.78125  c
150.544 3.94791 150.195 4.20312 149.852 4.54687  c
149.508 4.89062 149.224 5.27343 149.000 5.69531  c
148.776 6.11718 148.586 6.61458 148.430 7.18750  c
149.044 6.77083 149.659 6.56250 150.273 6.56250  c
150.857 6.56250 151.365 6.79947 151.797 7.27343  c
152.229 7.74739 152.445 8.35937 152.445 9.10937  c
152.445 9.82812 152.227 10.4843 151.789 11.0781  c
151.268 11.7968 150.576 12.1562 149.711 12.1562  c
149.117 12.1562 148.617 11.9583 148.211 11.5625  c
147.409 10.8125 147.008 9.83333 147.008 8.62500  c
147.008 7.85416 147.161 7.12239 147.469 6.42968  c
147.776 5.73697 148.216 5.11979 148.789 4.57812  c
149.362 4.03645 149.911 3.67447 150.438 3.49218  c
150.964 3.30989 151.451 3.21875 151.898 3.21875  c
152.273 3.21875 l
h
148.320 7.65625 m
148.247 8.22916 148.211 8.69270 148.211 9.04687  c
148.211 9.45312 148.286 9.89322 148.438 10.3671  c
148.589 10.8411 148.810 11.2187 149.102 11.5000  c
149.320 11.6979 149.586 11.7968 149.898 11.7968  c
150.263 11.7968 150.591 11.6224 150.883 11.2734  c
151.175 10.9244 151.320 10.4322 151.320 9.79687  c
151.320 9.06770 151.175 8.44010 150.883 7.91406  c
150.591 7.38802 150.185 7.12500 149.664 7.12500  c
149.497 7.12500 149.323 7.15885 149.141 7.22656  c
148.958 7.29427 148.685 7.43750 148.320 7.65625  c
h
153.648 14.1718 m
153.648 13.8906 l
154.086 13.7447 154.422 13.5208 154.656 13.2187  c
154.891 12.9166 155.008 12.5937 155.008 12.2500  c
155.008 12.1770 154.992 12.1093 154.961 12.0468  c
154.930 12.0156 154.898 12.0000 154.867 12.0000  c
154.826 12.0000 154.727 12.0416 154.570 12.1250  c
154.487 12.1562 154.404 12.1718 154.320 12.1718  c
154.112 12.1718 153.948 12.1119 153.828 11.9921  c
153.708 11.8724 153.648 11.7031 153.648 11.4843  c
153.648 11.2760 153.727 11.0989 153.883 10.9531  c
154.039 10.8072 154.232 10.7343 154.461 10.7343  c
154.742 10.7343 154.992 10.8541 155.211 11.0937  c
155.430 11.3333 155.539 11.6562 155.539 12.0625  c
155.539 12.5000 155.388 12.9062 155.086 13.2812  c
154.784 13.6562 154.305 13.9531 153.648 14.1718  c
h
161.570 2.96875 m
161.570 8.75000 l
163.055 7.40625 l
163.367 7.12500 163.550 6.94270 163.602 6.85937  c
163.633 6.80729 163.648 6.76041 163.648 6.71875  c
163.648 6.62500 163.615 6.54947 163.547 6.49218  c
163.479 6.43489 163.362 6.40104 163.195 6.39062  c
163.195 6.18750 l
165.727 6.18750 l
165.727 6.39062 l
165.372 6.40104 165.081 6.45312 164.852 6.54687  c
164.622 6.64062 164.372 6.81250 164.102 7.06250  c
162.602 8.43750 l
164.102 10.3281 l
164.518 10.8489 164.794 11.1822 164.930 11.3281  c
165.138 11.5260 165.320 11.6510 165.477 11.7031  c
165.581 11.7447 165.763 11.7656 166.023 11.7656  c
166.023 12.0000 l
163.195 12.0000 l
163.195 11.7656 l
163.362 11.7656 163.474 11.7421 163.531 11.6953  c
163.589 11.6484 163.617 11.5885 163.617 11.5156  c
163.617 11.4114 163.529 11.2552 163.352 11.0468  c
161.570 8.76562 l
161.570 10.6875 l
161.570 11.0625 161.596 11.3099 161.648 11.4296  c
161.701 11.5494 161.776 11.6354 161.875 11.6875  c
161.974 11.7395 162.185 11.7656 162.508 11.7656  c
162.508 12.0000 l
159.555 12.0000 l
159.555 11.7656 l
159.846 11.7656 160.070 11.7291 160.227 11.6562  c
160.310 11.6145 160.378 11.5468 160.430 11.4531  c
160.492 11.3072 160.523 11.0625 160.523 10.7187  c
160.523 5.43750 l
160.523 4.76041 160.508 4.34635 160.477 4.19531  c
160.445 4.04427 160.396 3.94010 160.328 3.88281  c
160.260 3.82552 160.169 3.79687 160.055 3.79687  c
159.971 3.79687 159.841 3.83333 159.664 3.90625  c
159.555 3.68750 l
161.273 2.96875 l
161.570 2.96875 l
h
166.180 6.39062 m
173.023 6.39062 l
173.023 6.92187 l
166.180 6.92187 l
166.180 6.39062 l
h
166.180 8.46875 m
173.023 8.46875 l
173.023 8.98437 l
166.180 8.98437 l
166.180 8.46875 l
h
174.808 4.23437 m
176.902 3.21875 l
177.105 3.21875 l
177.105 10.4843 l
177.105 10.9635 177.126 11.2630 177.168 11.3828  c
177.209 11.5026 177.293 11.5937 177.418 11.6562  c
177.543 11.7187 177.798 11.7552 178.183 11.7656  c
178.183 12.0000 l
174.949 12.0000 l
174.949 11.7656 l
175.355 11.7552 175.618 11.7187 175.738 11.6562  c
175.858 11.5937 175.941 11.5104 175.988 11.4062  c
176.035 11.3020 176.058 10.9947 176.058 10.4843  c
176.058 5.84375 l
176.058 5.20833 176.037 4.80208 175.996 4.62500  c
175.964 4.48958 175.910 4.39062 175.832 4.32812  c
175.753 4.26562 175.657 4.23437 175.543 4.23437  c
175.386 4.23437 175.173 4.30208 174.902 4.43750  c
174.808 4.23437 l
h
180.246 7.75000 m
180.246 6.77083 180.394 5.92447 180.691 5.21093  c
180.988 4.49739 181.381 3.96875 181.871 3.62500  c
182.256 3.35416 182.652 3.21875 183.058 3.21875  c
183.714 3.21875 184.303 3.55208 184.824 4.21875  c
185.480 5.05208 185.808 6.18229 185.808 7.60937  c
185.808 8.60937 185.665 9.45833 185.378 10.1562  c
185.092 10.8541 184.725 11.3619 184.277 11.6796  c
183.829 11.9974 183.402 12.1562 182.996 12.1562  c
182.173 12.1562 181.485 11.6718 180.933 10.7031  c
180.475 9.88020 180.246 8.89583 180.246 7.75000  c
h
181.496 7.90625 m
181.496 9.09375 181.641 10.0625 181.933 10.8125  c
182.173 11.4375 182.532 11.7500 183.011 11.7500  c
183.240 11.7500 183.477 11.6484 183.722 11.4453  c
183.967 11.2421 184.152 10.8958 184.277 10.4062  c
184.475 9.68750 184.574 8.66145 184.574 7.32812  c
184.574 6.34895 184.470 5.53125 184.261 4.87500  c
184.115 4.38541 183.918 4.04166 183.668 3.84375  c
183.501 3.70833 183.293 3.64062 183.043 3.64062  c
182.761 3.64062 182.506 3.76562 182.277 4.01562  c
181.975 4.36979 181.769 4.92447 181.660 5.67968  c
181.550 6.43489 181.496 7.17708 181.496 7.90625  c
h
190.058 8.60937 m
193.339 8.60937 l
193.339 9.56250 l
190.058 9.56250 l
190.058 8.60937 l
h
203.309 3.62500 m
203.309 3.39062 l
206.356 3.39062 l
206.356 3.62500 l
206.028 3.62500 l
205.695 3.62500 205.434 3.76562 205.247 4.04687  c
205.163 4.18229 205.122 4.48958 205.122 4.96875  c
205.122 8.45312 l
205.122 9.31770 205.036 9.98958 204.864 10.4687  c
204.692 10.9479 204.356 11.3567 203.856 11.6953  c
203.356 12.0338 202.674 12.2031 201.809 12.2031  c
200.861 12.2031 200.145 12.0390 199.661 11.7109  c
199.176 11.3828 198.835 10.9479 198.637 10.4062  c
198.502 10.0208 198.434 9.31250 198.434 8.28125  c
198.434 4.92187 l
198.434 4.39062 198.359 4.04166 198.208 3.87500  c
198.057 3.70833 197.820 3.62500 197.497 3.62500  c
197.168 3.62500 l
197.168 3.39062 l
200.903 3.39062 l
200.903 3.62500 l
200.559 3.62500 l
200.205 3.62500 199.955 3.73958 199.809 3.96875  c
199.705 4.11458 199.653 4.43229 199.653 4.92187  c
199.653 8.67187 l
199.653 9.00520 199.682 9.38802 199.739 9.82031  c
199.796 10.2526 199.905 10.5885 200.067 10.8281  c
200.228 11.0677 200.460 11.2656 200.762 11.4218  c
201.064 11.5781 201.439 11.6562 201.887 11.6562  c
202.450 11.6562 202.952 11.5338 203.395 11.2890  c
203.838 11.0442 204.140 10.7291 204.301 10.3437  c
204.463 9.95833 204.543 9.31250 204.543 8.40625  c
204.543 4.92187 l
204.543 4.38020 204.486 4.04166 204.372 3.90625  c
204.205 3.71875 203.960 3.62500 203.637 3.62500  c
203.309 3.62500 l
h
206.322 3.39062 m
208.666 3.39062 l
213.916 9.84375 l
213.916 4.89062 l
213.916 4.35937 213.859 4.02604 213.744 3.89062  c
213.588 3.71354 213.338 3.62500 212.994 3.62500  c
212.697 3.62500 l
212.697 3.39062 l
215.697 3.39062 l
215.697 3.62500 l
215.400 3.62500 l
215.036 3.62500 214.775 3.73437 214.619 3.95312  c
214.525 4.08854 214.479 4.40104 214.479 4.89062  c
214.479 12.1406 l
214.244 12.1406 l
208.572 5.20312 l
208.572 10.5156 l
208.572 11.0364 208.630 11.3645 208.744 11.5000  c
208.911 11.6770 209.161 11.7656 209.494 11.7656  c
209.791 11.7656 l
209.791 12.0000 l
206.807 12.0000 l
206.807 11.7656 l
207.104 11.7656 l
207.468 11.7656 207.729 11.6562 207.885 11.4375  c
207.979 11.3020 208.025 10.9947 208.025 10.5156  c
208.025 4.51562 l
207.775 4.22395 207.585 4.03385 207.455 3.94531  c
207.325 3.85677 207.135 3.77083 206.885 3.68750  c
206.760 3.64583 206.572 3.62500 206.322 3.62500  c
206.322 3.39062 l
h
216.101 12.0000 m
216.101 11.7656 l
216.429 11.7656 l
216.794 11.7656 217.054 11.6510 217.210 11.4218  c
217.294 11.2760 217.335 10.9583 217.335 10.4687  c
217.335 4.92187 l
217.335 4.38020 217.278 4.04166 217.164 3.90625  c
216.997 3.71875 216.752 3.62500 216.429 3.62500  c
216.101 3.62500 l
216.101 3.39062 l
219.601 3.39062 l
220.893 3.39062 221.875 3.53645 222.546 3.82812  c
223.218 4.11979 223.757 4.60677 224.164 5.28906  c
224.570 5.97135 224.773 6.76041 224.773 7.65625  c
224.773 8.85416 224.408 9.85416 223.679 10.6562  c
222.867 11.5520 221.622 12.0000 219.945 12.0000  c
216.101 12.0000 l
h
218.554 11.3750 m
219.096 11.5000 219.549 11.5625 219.914 11.5625  c
220.893 11.5625 221.708 11.2161 222.359 10.5234  c
223.010 9.83072 223.335 8.89583 223.335 7.71875  c
223.335 6.53125 223.010 5.59375 222.359 4.90625  c
221.708 4.21875 220.877 3.87500 219.867 3.87500  c
219.481 3.87500 219.044 3.93750 218.554 4.06250  c
218.554 11.3750 l
h
227.989 3.85937 m
227.989 7.26562 l
229.880 7.26562 l
230.370 7.26562 230.698 7.19270 230.864 7.04687  c
231.083 6.84895 231.203 6.50520 231.224 6.01562  c
231.474 6.01562 l
231.474 9.01562 l
231.224 9.01562 l
231.172 8.58854 231.114 8.31770 231.052 8.20312  c
230.979 8.05729 230.854 7.94270 230.677 7.85937  c
230.500 7.77604 230.234 7.73437 229.880 7.73437  c
227.989 7.73437 l
227.989 10.5625 l
227.989 10.9479 228.005 11.1822 228.036 11.2656  c
228.067 11.3489 228.127 11.4140 228.216 11.4609  c
228.304 11.5078 228.463 11.5312 228.692 11.5312  c
230.161 11.5312 l
230.651 11.5312 231.005 11.4974 231.224 11.4296  c
231.442 11.3619 231.651 11.2291 231.849 11.0312  c
232.109 10.7708 232.380 10.3750 232.661 9.84375  c
232.911 9.84375 l
232.177 12.0000 l
225.536 12.0000 l
225.536 11.7656 l
225.849 11.7656 l
226.047 11.7656 226.239 11.7187 226.427 11.6250  c
226.562 11.5520 226.653 11.4479 226.700 11.3125  c
226.747 11.1770 226.771 10.9010 226.771 10.4843  c
226.771 4.89062 l
226.771 4.34895 226.713 4.01041 226.599 3.87500  c
226.453 3.70833 226.203 3.62500 225.849 3.62500  c
225.536 3.62500 l
225.536 3.39062 l
232.177 3.39062 l
232.271 5.28125 l
232.021 5.28125 l
231.927 4.82291 231.828 4.51041 231.724 4.34375  c
231.620 4.17708 231.458 4.04687 231.239 3.95312  c
231.073 3.89062 230.776 3.85937 230.349 3.85937  c
227.989 3.85937 l
h
241.993 12.0000 m
239.696 12.0000 l
236.790 7.96875 l
236.571 7.97916 236.394 7.98437 236.258 7.98437  c
236.206 7.98437 236.149 7.98437 236.086 7.98437  c
236.024 7.98437 235.956 7.97916 235.883 7.96875  c
235.883 10.4687 l
235.883 11.0104 235.941 11.3489 236.055 11.4843  c
236.222 11.6718 236.467 11.7656 236.790 11.7656  c
237.118 11.7656 l
237.118 12.0000 l
233.430 12.0000 l
233.430 11.7656 l
233.758 11.7656 l
234.123 11.7656 234.383 11.6458 234.540 11.4062  c
234.623 11.2812 234.665 10.9687 234.665 10.4687  c
234.665 4.92187 l
234.665 4.38020 234.607 4.04166 234.493 3.90625  c
234.326 3.71875 234.081 3.62500 233.758 3.62500  c
233.430 3.62500 l
233.430 3.39062 l
236.571 3.39062 l
237.488 3.39062 238.162 3.45833 238.594 3.59375  c
239.027 3.72916 239.394 3.97395 239.696 4.32812  c
239.998 4.68229 240.149 5.10937 240.149 5.60937  c
240.149 6.14062 239.977 6.59895 239.633 6.98437  c
239.290 7.36979 238.753 7.64583 238.024 7.81250  c
239.805 10.2812 l
240.211 10.8437 240.560 11.2187 240.852 11.4062  c
241.144 11.5937 241.524 11.7135 241.993 11.7656  c
241.993 12.0000 l
h
235.883 7.57812 m
235.967 7.57812 236.037 7.57812 236.094 7.57812  c
236.152 7.57812 236.201 7.57812 236.243 7.57812  c
237.066 7.57812 237.685 7.40104 238.102 7.04687  c
238.519 6.69270 238.727 6.23958 238.727 5.68750  c
238.727 5.15625 238.558 4.72135 238.219 4.38281  c
237.881 4.04427 237.435 3.87500 236.883 3.87500  c
236.633 3.87500 236.300 3.91666 235.883 4.00000  c
235.883 7.57812 l
h
242.101 12.0000 m
242.101 11.7656 l
242.429 11.7656 l
242.794 11.7656 243.054 11.6510 243.210 11.4218  c
243.294 11.2760 243.335 10.9583 243.335 10.4687  c
243.335 4.92187 l
243.335 4.38020 243.278 4.04166 243.164 3.90625  c
242.997 3.71875 242.752 3.62500 242.429 3.62500  c
242.101 3.62500 l
242.101 3.39062 l
245.601 3.39062 l
246.893 3.39062 247.875 3.53645 248.546 3.82812  c
249.218 4.11979 249.757 4.60677 250.164 5.28906  c
250.570 5.97135 250.773 6.76041 250.773 7.65625  c
250.773 8.85416 250.408 9.85416 249.679 10.6562  c
248.867 11.5520 247.622 12.0000 245.945 12.0000  c
242.101 12.0000 l
h
244.554 11.3750 m
245.096 11.5000 245.549 11.5625 245.914 11.5625  c
246.893 11.5625 247.708 11.2161 248.359 10.5234  c
249.010 9.83072 249.335 8.89583 249.335 7.71875  c
249.335 6.53125 249.010 5.59375 248.359 4.90625  c
247.708 4.21875 246.877 3.87500 245.867 3.87500  c
245.481 3.87500 245.044 3.93750 244.554 4.06250  c
244.554 11.3750 l
h
257.224 9.12500 m
253.880 9.12500 l
253.302 10.4687 l
253.156 10.8125 253.083 11.0625 253.083 11.2187  c
253.083 11.3541 253.146 11.4713 253.271 11.5703  c
253.396 11.6692 253.666 11.7343 254.083 11.7656  c
254.083 12.0000 l
251.380 12.0000 l
251.380 11.7656 l
251.734 11.7031 251.963 11.6197 252.067 11.5156  c
252.286 11.3177 252.526 10.9062 252.786 10.2812  c
255.817 3.20312 l
256.036 3.20312 l
259.036 10.3593 l
259.276 10.9322 259.495 11.3046 259.692 11.4765  c
259.890 11.6484 260.166 11.7447 260.521 11.7656  c
260.521 12.0000 l
257.114 12.0000 l
257.114 11.7656 l
257.458 11.7447 257.690 11.6875 257.810 11.5937  c
257.929 11.5000 257.989 11.3802 257.989 11.2343  c
257.989 11.0468 257.906 10.7552 257.739 10.3593  c
257.224 9.12500 l
h
257.036 8.64062 m
255.583 5.17187 l
254.083 8.64062 l
257.036 8.64062 l
h
265.971 12.0000 m
262.659 4.75000 l
262.659 10.5156 l
262.659 11.0364 262.716 11.3645 262.831 11.5000  c
262.987 11.6770 263.232 11.7656 263.565 11.7656  c
263.877 11.7656 l
263.877 12.0000 l
260.877 12.0000 l
260.877 11.7656 l
261.174 11.7656 l
261.539 11.7656 261.799 11.6562 261.956 11.4375  c
262.049 11.3020 262.096 10.9947 262.096 10.5156  c
262.096 4.89062 l
262.096 4.50520 262.055 4.22916 261.971 4.06250  c
261.909 3.93750 261.799 3.83333 261.643 3.75000  c
261.487 3.66666 261.232 3.62500 260.877 3.62500  c
260.877 3.39062 l
263.315 3.39062 l
266.440 10.1250 l
269.502 3.39062 l
271.940 3.39062 l
271.940 3.62500 l
271.643 3.62500 l
271.279 3.62500 271.018 3.73437 270.862 3.95312  c
270.768 4.08854 270.721 4.40104 270.721 4.89062  c
270.721 10.5156 l
270.721 11.0364 270.784 11.3645 270.909 11.5000  c
271.065 11.6770 271.310 11.7656 271.643 11.7656  c
271.940 11.7656 l
271.940 12.0000 l
268.284 12.0000 l
268.284 11.7656 l
268.596 11.7656 l
268.961 11.7656 269.216 11.6562 269.362 11.4375  c
269.456 11.3020 269.502 10.9947 269.502 10.5156  c
269.502 4.75000 l
266.190 12.0000 l
265.971 12.0000 l
h
274.890 7.96875 m
274.890 10.4687 l
274.890 11.0104 274.947 11.3489 275.062 11.4843  c
275.218 11.6718 275.463 11.7656 275.796 11.7656  c
276.124 11.7656 l
276.124 12.0000 l
272.437 12.0000 l
272.437 11.7656 l
272.765 11.7656 l
273.119 11.7656 273.379 11.6458 273.546 11.4062  c
273.629 11.2812 273.671 10.9687 273.671 10.4687  c
273.671 4.92187 l
273.671 4.38020 273.614 4.04166 273.499 3.90625  c
273.332 3.71875 273.088 3.62500 272.765 3.62500  c
272.437 3.62500 l
272.437 3.39062 l
275.593 3.39062 l
276.364 3.39062 276.970 3.47135 277.413 3.63281  c
277.856 3.79427 278.228 4.06250 278.530 4.43750  c
278.832 4.81250 278.983 5.25520 278.983 5.76562  c
278.983 6.47395 278.754 7.04687 278.296 7.48437  c
277.838 7.92187 277.181 8.14062 276.327 8.14062  c
276.119 8.14062 275.895 8.12760 275.655 8.10156  c
275.416 8.07552 275.161 8.03125 274.890 7.96875  c
h
274.890 7.60937 m
275.108 7.65104 275.304 7.68229 275.476 7.70312  c
275.647 7.72395 275.796 7.73437 275.921 7.73437  c
276.369 7.73437 276.752 7.56510 277.069 7.22656  c
277.387 6.88802 277.546 6.44791 277.546 5.90625  c
277.546 5.53125 277.470 5.18229 277.319 4.85937  c
277.168 4.53645 276.952 4.29687 276.671 4.14062  c
276.390 3.98437 276.072 3.90625 275.718 3.90625  c
275.499 3.90625 275.223 3.94791 274.890 4.03125  c
274.890 7.60937 l
h
283.463 11.7656 m
283.463 12.0000 l
279.776 12.0000 l
279.776 11.7656 l
280.073 11.7656 l
280.427 11.7656 280.687 11.6614 280.854 11.4531  c
280.958 11.3177 281.010 10.9895 281.010 10.4687  c
281.010 4.92187 l
281.010 4.48437 280.979 4.19270 280.917 4.04687  c
280.875 3.94270 280.792 3.85416 280.667 3.78125  c
280.479 3.67708 280.281 3.62500 280.073 3.62500  c
279.776 3.62500 l
279.776 3.39062 l
283.463 3.39062 l
283.463 3.62500 l
283.151 3.62500 l
282.797 3.62500 282.542 3.72916 282.385 3.93750  c
282.281 4.07291 282.229 4.40104 282.229 4.92187  c
282.229 10.4687 l
282.229 10.9062 282.255 11.1979 282.307 11.3437  c
282.349 11.4479 282.437 11.5364 282.573 11.6093  c
282.750 11.7135 282.943 11.7656 283.151 11.7656  c
283.463 11.7656 l
h
283.605 3.39062 m
285.949 3.39062 l
291.199 9.84375 l
291.199 4.89062 l
291.199 4.35937 291.141 4.02604 291.027 3.89062  c
290.871 3.71354 290.621 3.62500 290.277 3.62500  c
289.980 3.62500 l
289.980 3.39062 l
292.980 3.39062 l
292.980 3.62500 l
292.683 3.62500 l
292.319 3.62500 292.058 3.73437 291.902 3.95312  c
291.808 4.08854 291.761 4.40104 291.761 4.89062  c
291.761 12.1406 l
291.527 12.1406 l
285.855 5.20312 l
285.855 10.5156 l
285.855 11.0364 285.912 11.3645 286.027 11.5000  c
286.194 11.6770 286.444 11.7656 286.777 11.7656  c
287.074 11.7656 l
287.074 12.0000 l
284.089 12.0000 l
284.089 11.7656 l
284.386 11.7656 l
284.751 11.7656 285.011 11.6562 285.168 11.4375  c
285.261 11.3020 285.308 10.9947 285.308 10.5156  c
285.308 4.51562 l
285.058 4.22395 284.868 4.03385 284.738 3.94531  c
284.608 3.85677 284.418 3.77083 284.168 3.68750  c
284.043 3.64583 283.855 3.62500 283.605 3.62500  c
283.605 3.39062 l
h
301.149 3.20312 m
301.368 5.90625 l
301.149 5.90625 l
300.920 5.22916 300.629 4.71875 300.274 4.37500  c
299.764 3.88541 299.108 3.64062 298.306 3.64062  c
297.202 3.64062 296.368 4.07291 295.806 4.93750  c
295.327 5.67708 295.087 6.55208 295.087 7.56250  c
295.087 8.37500 295.246 9.11979 295.564 9.79687  c
295.881 10.4739 296.295 10.9713 296.806 11.2890  c
297.316 11.6067 297.842 11.7656 298.384 11.7656  c
298.707 11.7656 299.017 11.7265 299.314 11.6484  c
299.610 11.5703 299.894 11.4479 300.165 11.2812  c
300.165 8.79687 l
300.165 8.36979 300.134 8.08854 300.071 7.95312  c
300.009 7.81770 299.907 7.71614 299.767 7.64843  c
299.626 7.58072 299.384 7.54687 299.040 7.54687  c
299.040 7.29687 l
302.368 7.29687 l
302.368 7.54687 l
302.212 7.54687 l
301.879 7.54687 301.649 7.65625 301.524 7.87500  c
301.441 8.03125 301.399 8.33854 301.399 8.79687  c
301.399 11.4375 l
300.920 11.6979 300.444 11.8906 299.970 12.0156  c
299.496 12.1406 298.967 12.2031 298.384 12.2031  c
296.717 12.2031 295.452 11.6666 294.587 10.5937  c
293.941 9.79166 293.618 8.86979 293.618 7.82812  c
293.618 7.06770 293.800 6.34375 294.165 5.65625  c
294.603 4.83333 295.196 4.19791 295.946 3.75000  c
296.571 3.38541 297.316 3.20312 298.181 3.20312  c
298.493 3.20312 298.777 3.22656 299.032 3.27343  c
299.287 3.32031 299.649 3.43229 300.118 3.60937  c
300.358 3.69270 300.519 3.73437 300.603 3.73437  c
300.675 3.73437 300.741 3.69791 300.798 3.62500  c
300.855 3.55208 300.894 3.41145 300.915 3.20312  c
301.149 3.20312 l
h
f
Q
cliprestore
newpath
0 0 m
0 16.0000 l
391.000 16.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 380.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 -380.000 ] concat
cliprestore
Q
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 642 4380 a @beginspecial 20 @llx 118 @lly
575 @urx 673 @ury 1440 @rwi @setspecial
%%BeginDocument: overdamping.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 1:18:11 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 375 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
37.0000 6.01785 350.994 331.982 rc
newpath
38.0000 8.01785 m
39.8963 8.35995 l
41.7926 9.34256 l
43.6889 10.9039 l
45.5853 12.9866 l
48.8852 17.6990 l
52.1852 23.5812 l
59.6075 40.0006 l
67.0790 59.4200 l
74.5150 80.1790 l
81.4091 99.8049 l
88.5476 119.885 l
95.9302 139.942 l
103.289 158.911 l
110.858 177.164 l
117.526 192.105 l
125.031 207.620 l
132.568 221.826 l
139.831 234.258 l
146.426 244.531 l
154.269 255.564 l
160.913 263.976 l
168.641 272.769 l
175.481 279.736 l
182.987 286.577 l
190.134 292.385 l
197.591 297.780 l
204.439 302.197 l
211.825 306.442 l
219.498 310.342 l
226.176 313.358 l
233.390 316.262 l
240.842 318.919 l
248.132 321.216 l
255.186 323.187 l
263.018 325.118 l
270.056 326.649 l
277.570 328.094 l
284.378 329.253 l
291.822 330.376 l
298.826 331.310 l
306.148 332.175 l
313.305 332.922 l
320.799 333.612 l
328.016 334.198 l
335.397 334.727 l
342.717 335.189 l
349.443 335.566 l
357.151 335.947 l
364.046 336.248 l
371.397 336.532 l
378.433 336.772 l
385.994 337.000 l
S
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
356.995 340.000 m
356.995 342.600 l
S
newpath
298.996 340.000 m
298.996 342.600 l
S
newpath
240.997 340.000 m
240.997 342.600 l
S
newpath
182.997 340.000 m
182.997 342.600 l
S
newpath
124.998 340.000 m
124.998 342.600 l
S
newpath
66.9995 340.000 m
66.9995 342.600 l
S
newpath
38.0000 340.000 m
385.994 340.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 360 12 15 rc
newpath
212.375 364.687 m
211.875 366.406 l
212.875 366.406 l
212.765 366.812 l
211.781 366.812 l
210.687 370.546 l
210.572 370.953 210.515 371.213 210.515 371.328  c
210.515 371.401 210.531 371.458 210.562 371.500  c
210.593 371.541 210.635 371.562 210.687 371.562  c
210.791 371.562 210.927 371.484 211.093 371.328  c
211.197 371.244 211.427 370.984 211.781 370.546  c
211.984 370.718 l
211.599 371.281 211.234 371.677 210.890 371.906  c
210.651 372.072 210.411 372.156 210.171 372.156  c
209.984 372.156 209.830 372.096 209.710 371.976  c
209.591 371.856 209.531 371.708 209.531 371.531  c
209.531 371.302 209.599 370.953 209.734 370.484  c
210.796 366.812 l
209.843 366.812 l
209.906 366.562 l
210.364 366.437 210.750 366.247 211.062 365.992  c
211.375 365.737 211.718 365.302 212.093 364.687  c
212.375 364.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 340.000 m
38.0000 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
40.4687 356.750 m
40.4687 355.770 40.6171 354.924 40.9140 354.210  c
41.2109 353.497 41.6041 352.968 42.0937 352.625  c
42.4791 352.354 42.8750 352.218 43.2812 352.218  c
43.9375 352.218 44.5260 352.552 45.0468 353.218  c
45.7031 354.052 46.0312 355.182 46.0312 356.609  c
46.0312 357.609 45.8880 358.458 45.6015 359.156  c
45.3151 359.854 44.9479 360.362 44.5000 360.679  c
44.0520 360.997 43.6250 361.156 43.2187 361.156  c
42.3958 361.156 41.7083 360.671 41.1562 359.703  c
40.6979 358.880 40.4687 357.895 40.4687 356.750  c
h
41.7187 356.906 m
41.7187 358.093 41.8645 359.062 42.1562 359.812  c
42.3958 360.437 42.7552 360.750 43.2343 360.750  c
43.4635 360.750 43.7005 360.648 43.9453 360.445  c
44.1901 360.242 44.3750 359.895 44.5000 359.406  c
44.6979 358.687 44.7968 357.661 44.7968 356.328  c
44.7968 355.349 44.6927 354.531 44.4843 353.875  c
44.3385 353.385 44.1406 353.041 43.8906 352.843  c
43.7239 352.708 43.5156 352.640 43.2656 352.640  c
42.9843 352.640 42.7291 352.765 42.5000 353.015  c
42.1979 353.369 41.9921 353.924 41.8828 354.679  c
41.7734 355.434 41.7187 356.177 41.7187 356.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
95.9991 340.000 m
95.9991 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
98.5312 353.234 m
100.625 352.218 l
100.828 352.218 l
100.828 359.484 l
100.828 359.963 100.849 360.263 100.890 360.382  c
100.932 360.502 101.015 360.593 101.140 360.656  c
101.265 360.718 101.520 360.755 101.906 360.765  c
101.906 361.000 l
98.6718 361.000 l
98.6718 360.765 l
99.0781 360.755 99.3411 360.718 99.4609 360.656  c
99.5807 360.593 99.6640 360.510 99.7109 360.406  c
99.7578 360.302 99.7812 359.994 99.7812 359.484  c
99.7812 354.843 l
99.7812 354.208 99.7604 353.802 99.7187 353.625  c
99.6875 353.489 99.6328 353.390 99.5546 353.328  c
99.4765 353.265 99.3802 353.234 99.2656 353.234  c
99.1093 353.234 98.8958 353.302 98.6250 353.437  c
98.5312 353.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
153.998 340.000 m
153.998 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
160.953 359.343 m
160.359 361.000 l
155.281 361.000 l
155.281 360.765 l
156.770 359.401 157.820 358.286 158.429 357.421  c
159.039 356.557 159.343 355.770 159.343 355.062  c
159.343 354.510 159.177 354.059 158.843 353.710  c
158.510 353.362 158.109 353.187 157.640 353.187  c
157.224 353.187 156.846 353.309 156.507 353.554  c
156.169 353.799 155.921 354.161 155.765 354.640  c
155.531 354.640 l
155.635 353.859 155.906 353.260 156.343 352.843  c
156.781 352.427 157.328 352.218 157.984 352.218  c
158.682 352.218 159.265 352.442 159.734 352.890  c
160.203 353.338 160.437 353.864 160.437 354.468  c
160.437 354.906 160.333 355.343 160.125 355.781  c
159.812 356.468 159.307 357.192 158.609 357.953  c
157.557 359.109 156.895 359.807 156.625 360.046  c
158.875 360.046 l
159.333 360.046 159.653 360.028 159.835 359.992  c
160.018 359.955 160.184 359.885 160.335 359.781  c
160.487 359.677 160.614 359.531 160.718 359.343  c
160.953 359.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
211.997 340.000 m
211.997 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
213.656 354.031 m
213.906 353.447 214.218 353.000 214.593 352.687  c
214.968 352.375 215.432 352.218 215.984 352.218  c
216.682 352.218 217.213 352.442 217.578 352.890  c
217.859 353.224 218.000 353.578 218.000 353.953  c
218.000 354.588 217.604 355.239 216.812 355.906  c
217.343 356.114 217.744 356.411 218.015 356.796  c
218.286 357.182 218.421 357.635 218.421 358.156  c
218.421 358.895 218.182 359.536 217.703 360.078  c
217.088 360.796 216.197 361.156 215.031 361.156  c
214.447 361.156 214.052 361.083 213.843 360.937  c
213.635 360.791 213.531 360.635 213.531 360.468  c
213.531 360.343 213.580 360.237 213.679 360.148  c
213.778 360.059 213.895 360.015 214.031 360.015  c
214.135 360.015 214.244 360.031 214.359 360.062  c
214.432 360.083 214.596 360.158 214.851 360.289  c
215.106 360.419 215.281 360.500 215.375 360.531  c
215.531 360.572 215.697 360.593 215.875 360.593  c
216.302 360.593 216.677 360.427 217.000 360.093  c
217.322 359.760 217.484 359.364 217.484 358.906  c
217.484 358.572 217.411 358.250 217.265 357.937  c
217.151 357.697 217.026 357.515 216.890 357.390  c
216.713 357.224 216.466 357.072 216.148 356.937  c
215.830 356.802 215.505 356.734 215.171 356.734  c
214.968 356.734 l
214.968 356.531 l
215.302 356.489 215.638 356.369 215.976 356.171  c
216.315 355.974 216.559 355.737 216.710 355.460  c
216.862 355.184 216.937 354.875 216.937 354.531  c
216.937 354.104 216.802 353.755 216.531 353.484  c
216.260 353.213 215.921 353.078 215.515 353.078  c
214.859 353.078 214.312 353.427 213.875 354.125  c
213.656 354.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
269.996 340.000 m
269.996 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
277.046 357.828 m
277.046 358.734 l
275.890 358.734 l
275.890 361.000 l
274.843 361.000 l
274.843 358.734 l
271.203 358.734 l
271.203 357.921 l
275.203 352.218 l
275.890 352.218 l
275.890 357.828 l
277.046 357.828 l
h
274.843 357.828 m
274.843 353.546 l
271.828 357.828 l
274.843 357.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
327.995 340.000 m
327.995 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
334.640 352.390 m
334.140 353.468 l
331.562 353.468 l
331.000 354.625 l
332.114 354.791 333.000 355.208 333.656 355.875  c
334.218 356.447 334.500 357.125 334.500 357.906  c
334.500 358.364 334.408 358.786 334.226 359.171  c
334.044 359.557 333.812 359.885 333.531 360.156  c
333.250 360.427 332.937 360.640 332.593 360.796  c
332.114 361.036 331.614 361.156 331.093 361.156  c
330.583 361.156 330.210 361.067 329.976 360.890  c
329.742 360.713 329.625 360.520 329.625 360.312  c
329.625 360.187 329.674 360.080 329.773 359.992  c
329.872 359.903 329.994 359.859 330.140 359.859  c
330.244 359.859 330.338 359.875 330.421 359.906  c
330.505 359.937 330.645 360.026 330.843 360.171  c
331.166 360.390 331.489 360.500 331.812 360.500  c
332.312 360.500 332.747 360.312 333.117 359.937  c
333.487 359.562 333.671 359.104 333.671 358.562  c
333.671 358.041 333.505 357.557 333.171 357.109  c
332.838 356.661 332.380 356.312 331.796 356.062  c
331.328 355.875 330.697 355.765 329.906 355.734  c
331.562 352.390 l
334.640 352.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 340.000 m
385.994 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.828 352.218 m
392.828 352.453 l
392.265 352.505 391.807 352.614 391.453 352.781  c
391.099 352.947 390.750 353.203 390.406 353.546  c
390.062 353.890 389.778 354.273 389.554 354.695  c
389.330 355.117 389.140 355.614 388.984 356.187  c
389.599 355.770 390.213 355.562 390.828 355.562  c
391.411 355.562 391.919 355.799 392.351 356.273  c
392.783 356.747 393.000 357.359 393.000 358.109  c
393.000 358.828 392.781 359.484 392.343 360.078  c
391.822 360.796 391.130 361.156 390.265 361.156  c
389.671 361.156 389.171 360.958 388.765 360.562  c
387.963 359.812 387.562 358.833 387.562 357.625  c
387.562 356.854 387.716 356.122 388.023 355.429  c
388.330 354.737 388.770 354.119 389.343 353.578  c
389.916 353.036 390.466 352.674 390.992 352.492  c
391.518 352.309 392.005 352.218 392.453 352.218  c
392.828 352.218 l
h
388.875 356.656 m
388.802 357.229 388.765 357.692 388.765 358.046  c
388.765 358.453 388.841 358.893 388.992 359.367  c
389.143 359.841 389.364 360.218 389.656 360.500  c
389.875 360.697 390.140 360.796 390.453 360.796  c
390.817 360.796 391.145 360.622 391.437 360.273  c
391.729 359.924 391.875 359.432 391.875 358.796  c
391.875 358.067 391.729 357.440 391.437 356.914  c
391.145 356.388 390.739 356.125 390.218 356.125  c
390.052 356.125 389.877 356.158 389.695 356.226  c
389.513 356.294 389.239 356.437 388.875 356.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
38.0000 41.0797 m
35.4000 41.0797 l
S
newpath
38.0000 107.203 m
35.4000 107.203 l
S
newpath
38.0000 173.327 m
35.4000 173.327 l
S
newpath
38.0000 239.451 m
35.4000 239.451 l
S
newpath
38.0000 305.575 m
35.4000 305.575 l
S
newpath
38.0000 340.000 m
38.0000 8.01785 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 166 8 15 rc
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 272.513 m
32.8000 272.513 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 277.750 m
19.4687 276.770 19.6171 275.924 19.9140 275.210  c
20.2109 274.497 20.6041 273.968 21.0937 273.625  c
21.4791 273.354 21.8750 273.218 22.2812 273.218  c
22.9375 273.218 23.5260 273.552 24.0468 274.218  c
24.7031 275.052 25.0312 276.182 25.0312 277.609  c
25.0312 278.609 24.8880 279.458 24.6015 280.156  c
24.3151 280.854 23.9479 281.362 23.5000 281.679  c
23.0520 281.997 22.6250 282.156 22.2187 282.156  c
21.3958 282.156 20.7083 281.671 20.1562 280.703  c
19.6979 279.880 19.4687 278.895 19.4687 277.750  c
h
20.7187 277.906 m
20.7187 279.093 20.8645 280.062 21.1562 280.812  c
21.3958 281.437 21.7552 281.750 22.2343 281.750  c
22.4635 281.750 22.7005 281.648 22.9453 281.445  c
23.1901 281.242 23.3750 280.895 23.5000 280.406  c
23.6979 279.687 23.7968 278.661 23.7968 277.328  c
23.7968 276.349 23.6927 275.531 23.4843 274.875  c
23.3385 274.385 23.1406 274.041 22.8906 273.843  c
22.7239 273.708 22.5156 273.640 22.2656 273.640  c
21.9843 273.640 21.7291 273.765 21.5000 274.015  c
21.1979 274.369 20.9921 274.924 20.8828 275.679  c
20.7734 276.434 20.7187 277.177 20.7187 277.906  c
h
27.1250 280.765 m
27.3229 280.765 27.4895 280.835 27.6250 280.976  c
27.7604 281.117 27.8281 281.281 27.8281 281.468  c
27.8281 281.666 27.7604 281.833 27.6250 281.968  c
27.4895 282.104 27.3229 282.171 27.1250 282.171  c
26.9270 282.171 26.7604 282.104 26.6250 281.968  c
26.4895 281.833 26.4218 281.666 26.4218 281.468  c
26.4218 281.270 26.4895 281.104 26.6250 280.968  c
26.7604 280.833 26.9270 280.765 27.1250 280.765  c
h
30.2812 274.234 m
32.3750 273.218 l
32.5781 273.218 l
32.5781 280.484 l
32.5781 280.963 32.5989 281.263 32.6406 281.382  c
32.6822 281.502 32.7656 281.593 32.8906 281.656  c
33.0156 281.718 33.2708 281.755 33.6562 281.765  c
33.6562 282.000 l
30.4218 282.000 l
30.4218 281.765 l
30.8281 281.755 31.0911 281.718 31.2109 281.656  c
31.3307 281.593 31.4140 281.510 31.4609 281.406  c
31.5078 281.302 31.5312 280.994 31.5312 280.484  c
31.5312 275.843 l
31.5312 275.208 31.5104 274.802 31.4687 274.625  c
31.4375 274.489 31.3828 274.390 31.3046 274.328  c
31.2265 274.265 31.1302 274.234 31.0156 274.234  c
30.8593 274.234 30.6458 274.302 30.3750 274.437  c
30.2812 274.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 206.389 m
32.8000 206.389 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 211.750 m
19.4687 210.770 19.6171 209.924 19.9140 209.210  c
20.2109 208.497 20.6041 207.968 21.0937 207.625  c
21.4791 207.354 21.8750 207.218 22.2812 207.218  c
22.9375 207.218 23.5260 207.552 24.0468 208.218  c
24.7031 209.052 25.0312 210.182 25.0312 211.609  c
25.0312 212.609 24.8880 213.458 24.6015 214.156  c
24.3151 214.854 23.9479 215.362 23.5000 215.679  c
23.0520 215.997 22.6250 216.156 22.2187 216.156  c
21.3958 216.156 20.7083 215.671 20.1562 214.703  c
19.6979 213.880 19.4687 212.895 19.4687 211.750  c
h
20.7187 211.906 m
20.7187 213.093 20.8645 214.062 21.1562 214.812  c
21.3958 215.437 21.7552 215.750 22.2343 215.750  c
22.4635 215.750 22.7005 215.648 22.9453 215.445  c
23.1901 215.242 23.3750 214.895 23.5000 214.406  c
23.6979 213.687 23.7968 212.661 23.7968 211.328  c
23.7968 210.349 23.6927 209.531 23.4843 208.875  c
23.3385 208.385 23.1406 208.041 22.8906 207.843  c
22.7239 207.708 22.5156 207.640 22.2656 207.640  c
21.9843 207.640 21.7291 207.765 21.5000 208.015  c
21.1979 208.369 20.9921 208.924 20.8828 209.679  c
20.7734 210.434 20.7187 211.177 20.7187 211.906  c
h
27.1250 214.765 m
27.3229 214.765 27.4895 214.835 27.6250 214.976  c
27.7604 215.117 27.8281 215.281 27.8281 215.468  c
27.8281 215.666 27.7604 215.833 27.6250 215.968  c
27.4895 216.104 27.3229 216.171 27.1250 216.171  c
26.9270 216.171 26.7604 216.104 26.6250 215.968  c
26.4895 215.833 26.4218 215.666 26.4218 215.468  c
26.4218 215.270 26.4895 215.104 26.6250 214.968  c
26.7604 214.833 26.9270 214.765 27.1250 214.765  c
h
34.7031 214.343 m
34.1093 216.000 l
29.0312 216.000 l
29.0312 215.765 l
30.5208 214.401 31.5703 213.286 32.1796 212.421  c
32.7890 211.557 33.0937 210.770 33.0937 210.062  c
33.0937 209.510 32.9270 209.059 32.5937 208.710  c
32.2604 208.362 31.8593 208.187 31.3906 208.187  c
30.9739 208.187 30.5963 208.309 30.2578 208.554  c
29.9192 208.799 29.6718 209.161 29.5156 209.640  c
29.2812 209.640 l
29.3854 208.859 29.6562 208.260 30.0937 207.843  c
30.5312 207.427 31.0781 207.218 31.7343 207.218  c
32.4322 207.218 33.0156 207.442 33.4843 207.890  c
33.9531 208.338 34.1875 208.864 34.1875 209.468  c
34.1875 209.906 34.0833 210.343 33.8750 210.781  c
33.5625 211.468 33.0572 212.192 32.3593 212.953  c
31.3072 214.109 30.6458 214.807 30.3750 215.046  c
32.6250 215.046 l
33.0833 215.046 33.4036 215.028 33.5859 214.992  c
33.7682 214.955 33.9349 214.885 34.0859 214.781  c
34.2369 214.677 34.3645 214.531 34.4687 214.343  c
34.7031 214.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 140.265 m
32.8000 140.265 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 145.750 m
19.4687 144.770 19.6171 143.924 19.9140 143.210  c
20.2109 142.497 20.6041 141.968 21.0937 141.625  c
21.4791 141.354 21.8750 141.218 22.2812 141.218  c
22.9375 141.218 23.5260 141.552 24.0468 142.218  c
24.7031 143.052 25.0312 144.182 25.0312 145.609  c
25.0312 146.609 24.8880 147.458 24.6015 148.156  c
24.3151 148.854 23.9479 149.362 23.5000 149.679  c
23.0520 149.997 22.6250 150.156 22.2187 150.156  c
21.3958 150.156 20.7083 149.671 20.1562 148.703  c
19.6979 147.880 19.4687 146.895 19.4687 145.750  c
h
20.7187 145.906 m
20.7187 147.093 20.8645 148.062 21.1562 148.812  c
21.3958 149.437 21.7552 149.750 22.2343 149.750  c
22.4635 149.750 22.7005 149.648 22.9453 149.445  c
23.1901 149.242 23.3750 148.895 23.5000 148.406  c
23.6979 147.687 23.7968 146.661 23.7968 145.328  c
23.7968 144.349 23.6927 143.531 23.4843 142.875  c
23.3385 142.385 23.1406 142.041 22.8906 141.843  c
22.7239 141.708 22.5156 141.640 22.2656 141.640  c
21.9843 141.640 21.7291 141.765 21.5000 142.015  c
21.1979 142.369 20.9921 142.924 20.8828 143.679  c
20.7734 144.434 20.7187 145.177 20.7187 145.906  c
h
27.1250 148.765 m
27.3229 148.765 27.4895 148.835 27.6250 148.976  c
27.7604 149.117 27.8281 149.281 27.8281 149.468  c
27.8281 149.666 27.7604 149.833 27.6250 149.968  c
27.4895 150.104 27.3229 150.171 27.1250 150.171  c
26.9270 150.171 26.7604 150.104 26.6250 149.968  c
26.4895 149.833 26.4218 149.666 26.4218 149.468  c
26.4218 149.270 26.4895 149.104 26.6250 148.968  c
26.7604 148.833 26.9270 148.765 27.1250 148.765  c
h
29.4062 143.031 m
29.6562 142.447 29.9687 142.000 30.3437 141.687  c
30.7187 141.375 31.1822 141.218 31.7343 141.218  c
32.4322 141.218 32.9635 141.442 33.3281 141.890  c
33.6093 142.224 33.7500 142.578 33.7500 142.953  c
33.7500 143.588 33.3541 144.239 32.5625 144.906  c
33.0937 145.114 33.4947 145.411 33.7656 145.796  c
34.0364 146.182 34.1718 146.635 34.1718 147.156  c
34.1718 147.895 33.9322 148.536 33.4531 149.078  c
32.8385 149.796 31.9479 150.156 30.7812 150.156  c
30.1979 150.156 29.8020 150.083 29.5937 149.937  c
29.3854 149.791 29.2812 149.635 29.2812 149.468  c
29.2812 149.343 29.3307 149.237 29.4296 149.148  c
29.5286 149.059 29.6458 149.015 29.7812 149.015  c
29.8854 149.015 29.9947 149.031 30.1093 149.062  c
30.1822 149.083 30.3463 149.158 30.6015 149.289  c
30.8567 149.419 31.0312 149.500 31.1250 149.531  c
31.2812 149.572 31.4479 149.593 31.6250 149.593  c
32.0520 149.593 32.4270 149.427 32.7500 149.093  c
33.0729 148.760 33.2343 148.364 33.2343 147.906  c
33.2343 147.572 33.1614 147.250 33.0156 146.937  c
32.9010 146.697 32.7760 146.515 32.6406 146.390  c
32.4635 146.224 32.2161 146.072 31.8984 145.937  c
31.5807 145.802 31.2552 145.734 30.9218 145.734  c
30.7187 145.734 l
30.7187 145.531 l
31.0520 145.489 31.3880 145.369 31.7265 145.171  c
32.0651 144.974 32.3099 144.737 32.4609 144.460  c
32.6119 144.184 32.6875 143.875 32.6875 143.531  c
32.6875 143.104 32.5520 142.755 32.2812 142.484  c
32.0104 142.213 31.6718 142.078 31.2656 142.078  c
30.6093 142.078 30.0625 142.427 29.6250 143.125  c
29.4062 143.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 74.1416 m
32.8000 74.1416 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 79.7500 m
19.4687 78.7708 19.6171 77.9244 19.9140 77.2109  c
20.2109 76.4974 20.6041 75.9687 21.0937 75.6250  c
21.4791 75.3541 21.8750 75.2187 22.2812 75.2187  c
22.9375 75.2187 23.5260 75.5520 24.0468 76.2187  c
24.7031 77.0520 25.0312 78.1822 25.0312 79.6093  c
25.0312 80.6093 24.8880 81.4583 24.6015 82.1562  c
24.3151 82.8541 23.9479 83.3619 23.5000 83.6796  c
23.0520 83.9974 22.6250 84.1562 22.2187 84.1562  c
21.3958 84.1562 20.7083 83.6718 20.1562 82.7031  c
19.6979 81.8802 19.4687 80.8958 19.4687 79.7500  c
h
20.7187 79.9062 m
20.7187 81.0937 20.8645 82.0625 21.1562 82.8125  c
21.3958 83.4375 21.7552 83.7500 22.2343 83.7500  c
22.4635 83.7500 22.7005 83.6484 22.9453 83.4453  c
23.1901 83.2421 23.3750 82.8958 23.5000 82.4062  c
23.6979 81.6875 23.7968 80.6614 23.7968 79.3281  c
23.7968 78.3489 23.6927 77.5312 23.4843 76.8750  c
23.3385 76.3854 23.1406 76.0416 22.8906 75.8437  c
22.7239 75.7083 22.5156 75.6406 22.2656 75.6406  c
21.9843 75.6406 21.7291 75.7656 21.5000 76.0156  c
21.1979 76.3697 20.9921 76.9244 20.8828 77.6796  c
20.7734 78.4349 20.7187 79.1770 20.7187 79.9062  c
h
27.1250 82.7656 m
27.3229 82.7656 27.4895 82.8359 27.6250 82.9765  c
27.7604 83.1171 27.8281 83.2812 27.8281 83.4687  c
27.8281 83.6666 27.7604 83.8333 27.6250 83.9687  c
27.4895 84.1041 27.3229 84.1718 27.1250 84.1718  c
26.9270 84.1718 26.7604 84.1041 26.6250 83.9687  c
26.4895 83.8333 26.4218 83.6666 26.4218 83.4687  c
26.4218 83.2708 26.4895 83.1041 26.6250 82.9687  c
26.7604 82.8333 26.9270 82.7656 27.1250 82.7656  c
h
34.7968 80.8281 m
34.7968 81.7343 l
33.6406 81.7343 l
33.6406 84.0000 l
32.5937 84.0000 l
32.5937 81.7343 l
28.9531 81.7343 l
28.9531 80.9218 l
32.9531 75.2187 l
33.6406 75.2187 l
33.6406 80.8281 l
34.7968 80.8281 l
h
32.5937 80.8281 m
32.5937 76.5468 l
29.5781 80.8281 l
32.5937 80.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 8.01785 m
32.8000 8.01785 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 13.7500 m
19.4687 12.7708 19.6171 11.9244 19.9140 11.2109  c
20.2109 10.4974 20.6041 9.96875 21.0937 9.62500  c
21.4791 9.35416 21.8750 9.21875 22.2812 9.21875  c
22.9375 9.21875 23.5260 9.55208 24.0468 10.2187  c
24.7031 11.0520 25.0312 12.1822 25.0312 13.6093  c
25.0312 14.6093 24.8880 15.4583 24.6015 16.1562  c
24.3151 16.8541 23.9479 17.3619 23.5000 17.6796  c
23.0520 17.9974 22.6250 18.1562 22.2187 18.1562  c
21.3958 18.1562 20.7083 17.6718 20.1562 16.7031  c
19.6979 15.8802 19.4687 14.8958 19.4687 13.7500  c
h
20.7187 13.9062 m
20.7187 15.0937 20.8645 16.0625 21.1562 16.8125  c
21.3958 17.4375 21.7552 17.7500 22.2343 17.7500  c
22.4635 17.7500 22.7005 17.6484 22.9453 17.4453  c
23.1901 17.2421 23.3750 16.8958 23.5000 16.4062  c
23.6979 15.6875 23.7968 14.6614 23.7968 13.3281  c
23.7968 12.3489 23.6927 11.5312 23.4843 10.8750  c
23.3385 10.3854 23.1406 10.0416 22.8906 9.84375  c
22.7239 9.70833 22.5156 9.64062 22.2656 9.64062  c
21.9843 9.64062 21.7291 9.76562 21.5000 10.0156  c
21.1979 10.3697 20.9921 10.9244 20.8828 11.6796  c
20.7734 12.4349 20.7187 13.1770 20.7187 13.9062  c
h
27.1250 16.7656 m
27.3229 16.7656 27.4895 16.8359 27.6250 16.9765  c
27.7604 17.1171 27.8281 17.2812 27.8281 17.4687  c
27.8281 17.6666 27.7604 17.8333 27.6250 17.9687  c
27.4895 18.1041 27.3229 18.1718 27.1250 18.1718  c
26.9270 18.1718 26.7604 18.1041 26.6250 17.9687  c
26.4895 17.8333 26.4218 17.6666 26.4218 17.4687  c
26.4218 17.2708 26.4895 17.1041 26.6250 16.9687  c
26.7604 16.8333 26.9270 16.7656 27.1250 16.7656  c
h
34.3906 9.39062 m
33.8906 10.4687 l
31.3125 10.4687 l
30.7500 11.6250 l
31.8645 11.7916 32.7500 12.2083 33.4062 12.8750  c
33.9687 13.4479 34.2500 14.1250 34.2500 14.9062  c
34.2500 15.3645 34.1588 15.7864 33.9765 16.1718  c
33.7942 16.5572 33.5625 16.8854 33.2812 17.1562  c
33.0000 17.4270 32.6875 17.6406 32.3437 17.7968  c
31.8645 18.0364 31.3645 18.1562 30.8437 18.1562  c
30.3333 18.1562 29.9609 18.0677 29.7265 17.8906  c
29.4921 17.7135 29.3750 17.5208 29.3750 17.3125  c
29.3750 17.1875 29.4244 17.0807 29.5234 16.9921  c
29.6224 16.9036 29.7447 16.8593 29.8906 16.8593  c
29.9947 16.8593 30.0885 16.8750 30.1718 16.9062  c
30.2552 16.9375 30.3958 17.0260 30.5937 17.1718  c
30.9166 17.3906 31.2395 17.5000 31.5625 17.5000  c
32.0625 17.5000 32.4974 17.3125 32.8671 16.9375  c
33.2369 16.5625 33.4218 16.1041 33.4218 15.5625  c
33.4218 15.0416 33.2552 14.5572 32.9218 14.1093  c
32.5885 13.6614 32.1302 13.3125 31.5468 13.0625  c
31.0781 12.8750 30.4479 12.7656 29.6562 12.7343  c
31.3125 9.39062 l
34.3906 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
0 380 391 16 rc
[ 1.00000 0 0 1.00000 0 380.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 15 rc
newpath
110.140 7.25000 m
110.557 6.82291 110.802 6.57812 110.875 6.51562  c
111.072 6.35937 111.281 6.23697 111.500 6.14843  c
111.718 6.05989 111.937 6.01562 112.156 6.01562  c
112.520 6.01562 112.833 6.12239 113.093 6.33593  c
113.354 6.54947 113.531 6.85416 113.625 7.25000  c
114.052 6.73958 114.416 6.40625 114.718 6.25000  c
115.020 6.09375 115.333 6.01562 115.656 6.01562  c
115.958 6.01562 116.229 6.09375 116.468 6.25000  c
116.708 6.40625 116.901 6.66666 117.046 7.03125  c
117.130 7.27083 117.171 7.65625 117.171 8.18750  c
117.171 10.6875 l
117.171 11.0520 117.203 11.3020 117.265 11.4375  c
117.307 11.5312 117.385 11.6093 117.500 11.6718  c
117.614 11.7343 117.802 11.7656 118.062 11.7656  c
118.062 12.0000 l
115.187 12.0000 l
115.187 11.7656 l
115.312 11.7656 l
115.562 11.7656 115.755 11.7187 115.890 11.6250  c
115.984 11.5625 116.052 11.4531 116.093 11.2968  c
116.114 11.2239 116.125 11.0208 116.125 10.6875  c
116.125 8.18750 l
116.125 7.70833 116.067 7.37500 115.953 7.18750  c
115.786 6.91666 115.520 6.78125 115.156 6.78125  c
114.937 6.78125 114.713 6.83593 114.484 6.94531  c
114.255 7.05468 113.979 7.26041 113.656 7.56250  c
113.656 7.64062 l
113.656 7.90625 l
113.656 10.6875 l
113.656 11.0833 113.679 11.3307 113.726 11.4296  c
113.773 11.5286 113.856 11.6093 113.976 11.6718  c
114.096 11.7343 114.307 11.7656 114.609 11.7656  c
114.609 12.0000 l
111.671 12.0000 l
111.671 11.7656 l
111.994 11.7656 112.216 11.7291 112.335 11.6562  c
112.455 11.5833 112.536 11.4687 112.578 11.3125  c
112.599 11.2395 112.609 11.0312 112.609 10.6875  c
112.609 8.18750 l
112.609 7.70833 112.541 7.36458 112.406 7.15625  c
112.218 6.88541 111.958 6.75000 111.625 6.75000  c
111.395 6.75000 111.171 6.81250 110.953 6.93750  c
110.599 7.12500 110.328 7.33333 110.140 7.56250  c
110.140 10.6875 l
110.140 11.0625 110.166 11.3072 110.218 11.4218  c
110.270 11.5364 110.349 11.6224 110.453 11.6796  c
110.557 11.7369 110.765 11.7656 111.078 11.7656  c
111.078 12.0000 l
108.203 12.0000 l
108.203 11.7656 l
108.474 11.7656 108.661 11.7369 108.765 11.6796  c
108.869 11.6224 108.947 11.5312 109.000 11.4062  c
109.052 11.2812 109.078 11.0416 109.078 10.6875  c
109.078 8.46875 l
109.078 7.82291 109.062 7.40625 109.031 7.21875  c
109.000 7.08333 108.953 6.98958 108.890 6.93750  c
108.828 6.88541 108.739 6.85937 108.625 6.85937  c
108.510 6.85937 108.369 6.89062 108.203 6.95312  c
108.109 6.71875 l
109.859 6.01562 l
110.140 6.01562 l
110.140 7.25000 l
h
118.346 6.39062 m
125.189 6.39062 l
125.189 6.92187 l
118.346 6.92187 l
118.346 6.39062 l
h
118.346 8.46875 m
125.189 8.46875 l
125.189 8.98437 l
118.346 8.98437 l
118.346 8.46875 l
h
126.099 5.03125 m
126.349 4.44791 126.662 4.00000 127.037 3.68750  c
127.412 3.37500 127.875 3.21875 128.427 3.21875  c
129.125 3.21875 129.656 3.44270 130.021 3.89062  c
130.302 4.22395 130.443 4.57812 130.443 4.95312  c
130.443 5.58854 130.047 6.23958 129.255 6.90625  c
129.787 7.11458 130.188 7.41145 130.459 7.79687  c
130.729 8.18229 130.865 8.63541 130.865 9.15625  c
130.865 9.89583 130.625 10.5364 130.146 11.0781  c
129.531 11.7968 128.641 12.1562 127.474 12.1562  c
126.891 12.1562 126.495 12.0833 126.287 11.9375  c
126.078 11.7916 125.974 11.6354 125.974 11.4687  c
125.974 11.3437 126.024 11.2369 126.123 11.1484  c
126.222 11.0599 126.339 11.0156 126.474 11.0156  c
126.578 11.0156 126.688 11.0312 126.802 11.0625  c
126.875 11.0833 127.039 11.1588 127.294 11.2890  c
127.550 11.4192 127.724 11.5000 127.818 11.5312  c
127.974 11.5729 128.141 11.5937 128.318 11.5937  c
128.745 11.5937 129.120 11.4270 129.443 11.0937  c
129.766 10.7604 129.927 10.3645 129.927 9.90625  c
129.927 9.57291 129.854 9.25000 129.709 8.93750  c
129.594 8.69791 129.469 8.51562 129.334 8.39062  c
129.156 8.22395 128.909 8.07291 128.591 7.93750  c
128.274 7.80208 127.948 7.73437 127.615 7.73437  c
127.412 7.73437 l
127.412 7.53125 l
127.745 7.48958 128.081 7.36979 128.419 7.17187  c
128.758 6.97395 129.003 6.73697 129.154 6.46093  c
129.305 6.18489 129.380 5.87500 129.380 5.53125  c
129.380 5.10416 129.245 4.75520 128.974 4.48437  c
128.703 4.21354 128.365 4.07812 127.959 4.07812  c
127.302 4.07812 126.755 4.42708 126.318 5.12500  c
126.099 5.03125 l
h
132.646 14.1718 m
132.646 13.8906 l
133.084 13.7447 133.419 13.5208 133.654 13.2187  c
133.888 12.9166 134.005 12.5937 134.005 12.2500  c
134.005 12.1770 133.990 12.1093 133.959 12.0468  c
133.927 12.0156 133.896 12.0000 133.865 12.0000  c
133.823 12.0000 133.724 12.0416 133.568 12.1250  c
133.485 12.1562 133.401 12.1718 133.318 12.1718  c
133.110 12.1718 132.946 12.1119 132.826 11.9921  c
132.706 11.8724 132.646 11.7031 132.646 11.4843  c
132.646 11.2760 132.724 11.0989 132.880 10.9531  c
133.037 10.8072 133.229 10.7343 133.459 10.7343  c
133.740 10.7343 133.990 10.8541 134.209 11.0937  c
134.427 11.3333 134.537 11.6562 134.537 12.0625  c
134.537 12.5000 134.386 12.9062 134.084 13.2812  c
133.781 13.6562 133.302 13.9531 132.646 14.1718  c
h
146.271 3.20312 m
146.474 6.12500 l
146.271 6.12500 l
146.011 5.25000 145.636 4.61979 145.146 4.23437  c
144.656 3.84895 144.073 3.65625 143.396 3.65625  c
142.823 3.65625 142.305 3.79947 141.841 4.08593  c
141.378 4.37239 141.016 4.83333 140.755 5.46875  c
140.495 6.10416 140.365 6.89583 140.365 7.84375  c
140.365 8.62500 140.490 9.29947 140.740 9.86718  c
140.990 10.4349 141.365 10.8724 141.865 11.1796  c
142.365 11.4869 142.938 11.6406 143.584 11.6406  c
144.136 11.6406 144.625 11.5208 145.052 11.2812  c
145.479 11.0416 145.953 10.5677 146.474 9.85937  c
146.662 9.98437 l
146.235 10.7447 145.732 11.3046 145.154 11.6640  c
144.576 12.0234 143.891 12.2031 143.099 12.2031  c
141.672 12.2031 140.568 11.6718 139.787 10.6093  c
139.203 9.81770 138.912 8.89062 138.912 7.82812  c
138.912 6.97395 139.104 6.18489 139.490 5.46093  c
139.875 4.73697 140.406 4.17968 141.084 3.78906  c
141.761 3.39843 142.495 3.20312 143.287 3.20312  c
143.912 3.20312 144.526 3.35416 145.130 3.65625  c
145.307 3.75000 145.438 3.79687 145.521 3.79687  c
145.636 3.79687 145.735 3.75520 145.818 3.67187  c
145.922 3.55729 146.000 3.40104 146.052 3.20312  c
146.271 3.20312 l
h
147.348 6.39062 m
154.192 6.39062 l
154.192 6.92187 l
147.348 6.92187 l
147.348 6.39062 l
h
147.348 8.46875 m
154.192 8.46875 l
154.192 8.98437 l
147.348 8.98437 l
147.348 8.46875 l
h
155.133 12.1718 m
155.133 11.9375 l
155.685 11.9375 156.198 11.8125 156.672 11.5625  c
157.146 11.3125 157.604 10.8776 158.047 10.2578  c
158.490 9.63802 158.794 8.95833 158.961 8.21875  c
158.294 8.64583 157.695 8.85937 157.164 8.85937  c
156.560 8.85937 156.042 8.62760 155.609 8.16406  c
155.177 7.70052 154.961 7.07812 154.961 6.29687  c
154.961 5.54687 155.175 4.87500 155.602 4.28125  c
156.122 3.57291 156.805 3.21875 157.648 3.21875  c
158.357 3.21875 158.961 3.51041 159.461 4.09375  c
160.076 4.81250 160.383 5.70312 160.383 6.76562  c
160.383 7.72395 160.148 8.61718 159.680 9.44531  c
159.211 10.2734 158.560 10.9583 157.727 11.5000  c
157.039 11.9479 156.294 12.1718 155.492 12.1718  c
155.133 12.1718 l
h
159.070 7.75000 m
159.143 7.19791 159.180 6.76041 159.180 6.43750  c
159.180 6.02083 159.109 5.57552 158.969 5.10156  c
158.828 4.62760 158.630 4.26302 158.375 4.00781  c
158.120 3.75260 157.831 3.62500 157.508 3.62500  c
157.133 3.62500 156.802 3.79427 156.516 4.13281  c
156.229 4.47135 156.086 4.97395 156.086 5.64062  c
156.086 6.53645 156.273 7.23437 156.648 7.73437  c
156.930 8.09895 157.268 8.28125 157.664 8.28125  c
157.862 8.28125 158.094 8.23437 158.359 8.14062  c
158.625 8.04687 158.862 7.91666 159.070 7.75000  c
h
161.648 14.1718 m
161.648 13.8906 l
162.086 13.7447 162.422 13.5208 162.656 13.2187  c
162.891 12.9166 163.008 12.5937 163.008 12.2500  c
163.008 12.1770 162.992 12.1093 162.961 12.0468  c
162.930 12.0156 162.898 12.0000 162.867 12.0000  c
162.826 12.0000 162.727 12.0416 162.570 12.1250  c
162.487 12.1562 162.404 12.1718 162.320 12.1718  c
162.112 12.1718 161.948 12.1119 161.828 11.9921  c
161.708 11.8724 161.648 11.7031 161.648 11.4843  c
161.648 11.2760 161.727 11.0989 161.883 10.9531  c
162.039 10.8072 162.232 10.7343 162.461 10.7343  c
162.742 10.7343 162.992 10.8541 163.211 11.0937  c
163.430 11.3333 163.539 11.6562 163.539 12.0625  c
163.539 12.5000 163.388 12.9062 163.086 13.2812  c
162.784 13.6562 162.305 13.9531 161.648 14.1718  c
h
169.570 2.96875 m
169.570 8.75000 l
171.055 7.40625 l
171.367 7.12500 171.550 6.94270 171.602 6.85937  c
171.633 6.80729 171.648 6.76041 171.648 6.71875  c
171.648 6.62500 171.615 6.54947 171.547 6.49218  c
171.479 6.43489 171.362 6.40104 171.195 6.39062  c
171.195 6.18750 l
173.727 6.18750 l
173.727 6.39062 l
173.372 6.40104 173.081 6.45312 172.852 6.54687  c
172.622 6.64062 172.372 6.81250 172.102 7.06250  c
170.602 8.43750 l
172.102 10.3281 l
172.518 10.8489 172.794 11.1822 172.930 11.3281  c
173.138 11.5260 173.320 11.6510 173.477 11.7031  c
173.581 11.7447 173.763 11.7656 174.023 11.7656  c
174.023 12.0000 l
171.195 12.0000 l
171.195 11.7656 l
171.362 11.7656 171.474 11.7421 171.531 11.6953  c
171.589 11.6484 171.617 11.5885 171.617 11.5156  c
171.617 11.4114 171.529 11.2552 171.352 11.0468  c
169.570 8.76562 l
169.570 10.6875 l
169.570 11.0625 169.596 11.3099 169.648 11.4296  c
169.701 11.5494 169.776 11.6354 169.875 11.6875  c
169.974 11.7395 170.185 11.7656 170.508 11.7656  c
170.508 12.0000 l
167.555 12.0000 l
167.555 11.7656 l
167.846 11.7656 168.070 11.7291 168.227 11.6562  c
168.310 11.6145 168.378 11.5468 168.430 11.4531  c
168.492 11.3072 168.523 11.0625 168.523 10.7187  c
168.523 5.43750 l
168.523 4.76041 168.508 4.34635 168.477 4.19531  c
168.445 4.04427 168.396 3.94010 168.328 3.88281  c
168.260 3.82552 168.169 3.79687 168.055 3.79687  c
167.971 3.79687 167.841 3.83333 167.664 3.90625  c
167.555 3.68750 l
169.273 2.96875 l
169.570 2.96875 l
h
174.180 6.39062 m
181.023 6.39062 l
181.023 6.92187 l
174.180 6.92187 l
174.180 6.39062 l
h
174.180 8.46875 m
181.023 8.46875 l
181.023 8.98437 l
174.180 8.98437 l
174.180 8.46875 l
h
187.105 3.21875 m
187.105 3.45312 l
186.543 3.50520 186.084 3.61458 185.730 3.78125  c
185.376 3.94791 185.027 4.20312 184.683 4.54687  c
184.339 4.89062 184.056 5.27343 183.832 5.69531  c
183.608 6.11718 183.418 6.61458 183.261 7.18750  c
183.876 6.77083 184.490 6.56250 185.105 6.56250  c
185.688 6.56250 186.196 6.79947 186.628 7.27343  c
187.061 7.74739 187.277 8.35937 187.277 9.10937  c
187.277 9.82812 187.058 10.4843 186.621 11.0781  c
186.100 11.7968 185.407 12.1562 184.543 12.1562  c
183.949 12.1562 183.449 11.9583 183.043 11.5625  c
182.240 10.8125 181.839 9.83333 181.839 8.62500  c
181.839 7.85416 181.993 7.12239 182.300 6.42968  c
182.608 5.73697 183.048 5.11979 183.621 4.57812  c
184.194 4.03645 184.743 3.67447 185.269 3.49218  c
185.795 3.30989 186.282 3.21875 186.730 3.21875  c
187.105 3.21875 l
h
183.152 7.65625 m
183.079 8.22916 183.043 8.69270 183.043 9.04687  c
183.043 9.45312 183.118 9.89322 183.269 10.3671  c
183.420 10.8411 183.641 11.2187 183.933 11.5000  c
184.152 11.6979 184.418 11.7968 184.730 11.7968  c
185.095 11.7968 185.423 11.6224 185.714 11.2734  c
186.006 10.9244 186.152 10.4322 186.152 9.79687  c
186.152 9.06770 186.006 8.44010 185.714 7.91406  c
185.423 7.38802 185.016 7.12500 184.496 7.12500  c
184.329 7.12500 184.154 7.15885 183.972 7.22656  c
183.790 7.29427 183.516 7.43750 183.152 7.65625  c
h
191.558 8.60937 m
194.839 8.60937 l
194.839 9.56250 l
191.558 9.56250 l
191.558 8.60937 l
h
203.356 3.20312 m
204.481 3.20312 205.452 3.62500 206.270 4.46875  c
207.088 5.31250 207.497 6.36979 207.497 7.64062  c
207.497 8.95312 207.083 10.0416 206.254 10.9062  c
205.426 11.7708 204.429 12.2031 203.262 12.2031  c
202.075 12.2031 201.077 11.7812 200.270 10.9375  c
199.463 10.0937 199.059 9.00520 199.059 7.67187  c
199.059 6.29687 199.528 5.17708 200.465 4.31250  c
201.267 3.57291 202.231 3.20312 203.356 3.20312  c
h
203.247 3.65625 m
202.476 3.65625 201.856 3.94270 201.387 4.51562  c
200.804 5.22395 200.512 6.26562 200.512 7.64062  c
200.512 9.04687 200.814 10.1250 201.418 10.8750  c
201.877 11.4583 202.486 11.7500 203.247 11.7500  c
204.059 11.7500 204.728 11.4349 205.254 10.8046  c
205.780 10.1744 206.043 9.17708 206.043 7.81250  c
206.043 6.34375 205.752 5.24479 205.168 4.51562  c
204.700 3.94270 204.059 3.65625 203.247 3.65625  c
h
217.229 3.39062 m
217.229 3.62500 l
216.916 3.67708 216.682 3.77604 216.525 3.92187  c
216.307 4.13020 216.109 4.44791 215.932 4.87500  c
212.932 12.2031 l
212.697 12.2031 l
209.479 4.78125 l
209.312 4.39583 209.192 4.16145 209.119 4.07812  c
209.015 3.94270 208.887 3.83854 208.736 3.76562  c
208.585 3.69270 208.374 3.64583 208.104 3.62500  c
208.104 3.39062 l
211.619 3.39062 l
211.619 3.62500 l
211.223 3.66666 210.966 3.73437 210.846 3.82812  c
210.726 3.92187 210.666 4.04687 210.666 4.20312  c
210.666 4.41145 210.765 4.73958 210.963 5.18750  c
213.150 10.2343 l
215.182 5.26562 l
215.380 4.76562 215.479 4.42187 215.479 4.23437  c
215.479 4.10937 215.419 3.99218 215.299 3.88281  c
215.179 3.77343 214.973 3.69270 214.682 3.64062  c
214.661 3.64062 214.624 3.63541 214.572 3.62500  c
214.572 3.39062 l
217.229 3.39062 l
h
220.101 3.85937 m
220.101 7.26562 l
221.992 7.26562 l
222.481 7.26562 222.809 7.19270 222.976 7.04687  c
223.195 6.84895 223.315 6.50520 223.335 6.01562  c
223.585 6.01562 l
223.585 9.01562 l
223.335 9.01562 l
223.283 8.58854 223.226 8.31770 223.164 8.20312  c
223.091 8.05729 222.966 7.94270 222.789 7.85937  c
222.612 7.77604 222.346 7.73437 221.992 7.73437  c
220.101 7.73437 l
220.101 10.5625 l
220.101 10.9479 220.117 11.1822 220.148 11.2656  c
220.179 11.3489 220.239 11.4140 220.328 11.4609  c
220.416 11.5078 220.575 11.5312 220.804 11.5312  c
222.273 11.5312 l
222.763 11.5312 223.117 11.4974 223.335 11.4296  c
223.554 11.3619 223.763 11.2291 223.960 11.0312  c
224.221 10.7708 224.492 10.3750 224.773 9.84375  c
225.023 9.84375 l
224.289 12.0000 l
217.648 12.0000 l
217.648 11.7656 l
217.960 11.7656 l
218.158 11.7656 218.351 11.7187 218.539 11.6250  c
218.674 11.5520 218.765 11.4479 218.812 11.3125  c
218.859 11.1770 218.882 10.9010 218.882 10.4843  c
218.882 4.89062 l
218.882 4.34895 218.825 4.01041 218.710 3.87500  c
218.565 3.70833 218.315 3.62500 217.960 3.62500  c
217.648 3.62500 l
217.648 3.39062 l
224.289 3.39062 l
224.382 5.28125 l
224.132 5.28125 l
224.039 4.82291 223.940 4.51041 223.835 4.34375  c
223.731 4.17708 223.570 4.04687 223.351 3.95312  c
223.184 3.89062 222.888 3.85937 222.460 3.85937  c
220.101 3.85937 l
h
234.105 12.0000 m
231.808 12.0000 l
228.901 7.96875 l
228.683 7.97916 228.506 7.98437 228.370 7.98437  c
228.318 7.98437 228.261 7.98437 228.198 7.98437  c
228.136 7.98437 228.068 7.97916 227.995 7.96875  c
227.995 10.4687 l
227.995 11.0104 228.052 11.3489 228.167 11.4843  c
228.334 11.6718 228.578 11.7656 228.901 11.7656  c
229.230 11.7656 l
229.230 12.0000 l
225.542 12.0000 l
225.542 11.7656 l
225.870 11.7656 l
226.235 11.7656 226.495 11.6458 226.651 11.4062  c
226.735 11.2812 226.776 10.9687 226.776 10.4687  c
226.776 4.92187 l
226.776 4.38020 226.719 4.04166 226.605 3.90625  c
226.438 3.71875 226.193 3.62500 225.870 3.62500  c
225.542 3.62500 l
225.542 3.39062 l
228.683 3.39062 l
229.599 3.39062 230.274 3.45833 230.706 3.59375  c
231.138 3.72916 231.506 3.97395 231.808 4.32812  c
232.110 4.68229 232.261 5.10937 232.261 5.60937  c
232.261 6.14062 232.089 6.59895 231.745 6.98437  c
231.401 7.36979 230.865 7.64583 230.136 7.81250  c
231.917 10.2812 l
232.323 10.8437 232.672 11.2187 232.964 11.4062  c
233.256 11.5937 233.636 11.7135 234.105 11.7656  c
234.105 12.0000 l
h
227.995 7.57812 m
228.078 7.57812 228.149 7.57812 228.206 7.57812  c
228.263 7.57812 228.313 7.57812 228.355 7.57812  c
229.177 7.57812 229.797 7.40104 230.214 7.04687  c
230.631 6.69270 230.839 6.23958 230.839 5.68750  c
230.839 5.15625 230.670 4.72135 230.331 4.38281  c
229.993 4.04427 229.547 3.87500 228.995 3.87500  c
228.745 3.87500 228.412 3.91666 227.995 4.00000  c
227.995 7.57812 l
h
234.213 12.0000 m
234.213 11.7656 l
234.541 11.7656 l
234.906 11.7656 235.166 11.6510 235.322 11.4218  c
235.406 11.2760 235.447 10.9583 235.447 10.4687  c
235.447 4.92187 l
235.447 4.38020 235.390 4.04166 235.275 3.90625  c
235.109 3.71875 234.864 3.62500 234.541 3.62500  c
234.213 3.62500 l
234.213 3.39062 l
237.713 3.39062 l
239.005 3.39062 239.986 3.53645 240.658 3.82812  c
241.330 4.11979 241.869 4.60677 242.275 5.28906  c
242.682 5.97135 242.885 6.76041 242.885 7.65625  c
242.885 8.85416 242.520 9.85416 241.791 10.6562  c
240.979 11.5520 239.734 12.0000 238.057 12.0000  c
234.213 12.0000 l
h
236.666 11.3750 m
237.208 11.5000 237.661 11.5625 238.025 11.5625  c
239.005 11.5625 239.820 11.2161 240.471 10.5234  c
241.122 9.83072 241.447 8.89583 241.447 7.71875  c
241.447 6.53125 241.122 5.59375 240.471 4.90625  c
239.820 4.21875 238.989 3.87500 237.979 3.87500  c
237.593 3.87500 237.156 3.93750 236.666 4.06250  c
236.666 11.3750 l
h
249.335 9.12500 m
245.992 9.12500 l
245.414 10.4687 l
245.268 10.8125 245.195 11.0625 245.195 11.2187  c
245.195 11.3541 245.257 11.4713 245.382 11.5703  c
245.507 11.6692 245.778 11.7343 246.195 11.7656  c
246.195 12.0000 l
243.492 12.0000 l
243.492 11.7656 l
243.846 11.7031 244.075 11.6197 244.179 11.5156  c
244.398 11.3177 244.638 10.9062 244.898 10.2812  c
247.929 3.20312 l
248.148 3.20312 l
251.148 10.3593 l
251.388 10.9322 251.606 11.3046 251.804 11.4765  c
252.002 11.6484 252.278 11.7447 252.632 11.7656  c
252.632 12.0000 l
249.226 12.0000 l
249.226 11.7656 l
249.570 11.7447 249.802 11.6875 249.921 11.5937  c
250.041 11.5000 250.101 11.3802 250.101 11.2343  c
250.101 11.0468 250.018 10.7552 249.851 10.3593  c
249.335 9.12500 l
h
249.148 8.64062 m
247.695 5.17187 l
246.195 8.64062 l
249.148 8.64062 l
h
258.083 12.0000 m
254.771 4.75000 l
254.771 10.5156 l
254.771 11.0364 254.828 11.3645 254.942 11.5000  c
255.099 11.6770 255.343 11.7656 255.677 11.7656  c
255.989 11.7656 l
255.989 12.0000 l
252.989 12.0000 l
252.989 11.7656 l
253.286 11.7656 l
253.651 11.7656 253.911 11.6562 254.067 11.4375  c
254.161 11.3020 254.208 10.9947 254.208 10.5156  c
254.208 4.89062 l
254.208 4.50520 254.166 4.22916 254.083 4.06250  c
254.021 3.93750 253.911 3.83333 253.755 3.75000  c
253.599 3.66666 253.343 3.62500 252.989 3.62500  c
252.989 3.39062 l
255.427 3.39062 l
258.552 10.1250 l
261.614 3.39062 l
264.052 3.39062 l
264.052 3.62500 l
263.755 3.62500 l
263.390 3.62500 263.130 3.73437 262.974 3.95312  c
262.880 4.08854 262.833 4.40104 262.833 4.89062  c
262.833 10.5156 l
262.833 11.0364 262.896 11.3645 263.021 11.5000  c
263.177 11.6770 263.422 11.7656 263.755 11.7656  c
264.052 11.7656 l
264.052 12.0000 l
260.396 12.0000 l
260.396 11.7656 l
260.708 11.7656 l
261.073 11.7656 261.328 11.6562 261.474 11.4375  c
261.567 11.3020 261.614 10.9947 261.614 10.5156  c
261.614 4.75000 l
258.302 12.0000 l
258.083 12.0000 l
h
267.002 7.96875 m
267.002 10.4687 l
267.002 11.0104 267.059 11.3489 267.173 11.4843  c
267.330 11.6718 267.574 11.7656 267.908 11.7656  c
268.236 11.7656 l
268.236 12.0000 l
264.548 12.0000 l
264.548 11.7656 l
264.877 11.7656 l
265.231 11.7656 265.491 11.6458 265.658 11.4062  c
265.741 11.2812 265.783 10.9687 265.783 10.4687  c
265.783 4.92187 l
265.783 4.38020 265.725 4.04166 265.611 3.90625  c
265.444 3.71875 265.199 3.62500 264.877 3.62500  c
264.548 3.62500 l
264.548 3.39062 l
267.705 3.39062 l
268.475 3.39062 269.082 3.47135 269.525 3.63281  c
269.968 3.79427 270.340 4.06250 270.642 4.43750  c
270.944 4.81250 271.095 5.25520 271.095 5.76562  c
271.095 6.47395 270.866 7.04687 270.408 7.48437  c
269.949 7.92187 269.293 8.14062 268.439 8.14062  c
268.231 8.14062 268.007 8.12760 267.767 8.10156  c
267.528 8.07552 267.272 8.03125 267.002 7.96875  c
h
267.002 7.60937 m
267.220 7.65104 267.416 7.68229 267.587 7.70312  c
267.759 7.72395 267.908 7.73437 268.033 7.73437  c
268.481 7.73437 268.863 7.56510 269.181 7.22656  c
269.499 6.88802 269.658 6.44791 269.658 5.90625  c
269.658 5.53125 269.582 5.18229 269.431 4.85937  c
269.280 4.53645 269.064 4.29687 268.783 4.14062  c
268.502 3.98437 268.184 3.90625 267.830 3.90625  c
267.611 3.90625 267.335 3.94791 267.002 4.03125  c
267.002 7.60937 l
h
275.575 11.7656 m
275.575 12.0000 l
271.888 12.0000 l
271.888 11.7656 l
272.185 11.7656 l
272.539 11.7656 272.799 11.6614 272.966 11.4531  c
273.070 11.3177 273.122 10.9895 273.122 10.4687  c
273.122 4.92187 l
273.122 4.48437 273.091 4.19270 273.028 4.04687  c
272.987 3.94270 272.903 3.85416 272.778 3.78125  c
272.591 3.67708 272.393 3.62500 272.185 3.62500  c
271.888 3.62500 l
271.888 3.39062 l
275.575 3.39062 l
275.575 3.62500 l
275.263 3.62500 l
274.909 3.62500 274.653 3.72916 274.497 3.93750  c
274.393 4.07291 274.341 4.40104 274.341 4.92187  c
274.341 10.4687 l
274.341 10.9062 274.367 11.1979 274.419 11.3437  c
274.461 11.4479 274.549 11.5364 274.685 11.6093  c
274.862 11.7135 275.054 11.7656 275.263 11.7656  c
275.575 11.7656 l
h
275.717 3.39062 m
278.061 3.39062 l
283.311 9.84375 l
283.311 4.89062 l
283.311 4.35937 283.253 4.02604 283.139 3.89062  c
282.982 3.71354 282.732 3.62500 282.389 3.62500  c
282.092 3.62500 l
282.092 3.39062 l
285.092 3.39062 l
285.092 3.62500 l
284.795 3.62500 l
284.430 3.62500 284.170 3.73437 284.014 3.95312  c
283.920 4.08854 283.873 4.40104 283.873 4.89062  c
283.873 12.1406 l
283.639 12.1406 l
277.967 5.20312 l
277.967 10.5156 l
277.967 11.0364 278.024 11.3645 278.139 11.5000  c
278.305 11.6770 278.555 11.7656 278.889 11.7656  c
279.186 11.7656 l
279.186 12.0000 l
276.201 12.0000 l
276.201 11.7656 l
276.498 11.7656 l
276.863 11.7656 277.123 11.6562 277.279 11.4375  c
277.373 11.3020 277.420 10.9947 277.420 10.5156  c
277.420 4.51562 l
277.170 4.22395 276.980 4.03385 276.850 3.94531  c
276.719 3.85677 276.529 3.77083 276.279 3.68750  c
276.154 3.64583 275.967 3.62500 275.717 3.62500  c
275.717 3.39062 l
h
293.261 3.20312 m
293.480 5.90625 l
293.261 5.90625 l
293.032 5.22916 292.740 4.71875 292.386 4.37500  c
291.876 3.88541 291.220 3.64062 290.418 3.64062  c
289.313 3.64062 288.480 4.07291 287.918 4.93750  c
287.438 5.67708 287.199 6.55208 287.199 7.56250  c
287.199 8.37500 287.358 9.11979 287.675 9.79687  c
287.993 10.4739 288.407 10.9713 288.918 11.2890  c
289.428 11.6067 289.954 11.7656 290.496 11.7656  c
290.819 11.7656 291.128 11.7265 291.425 11.6484  c
291.722 11.5703 292.006 11.4479 292.277 11.2812  c
292.277 8.79687 l
292.277 8.36979 292.246 8.08854 292.183 7.95312  c
292.121 7.81770 292.019 7.71614 291.878 7.64843  c
291.738 7.58072 291.496 7.54687 291.152 7.54687  c
291.152 7.29687 l
294.480 7.29687 l
294.480 7.54687 l
294.324 7.54687 l
293.990 7.54687 293.761 7.65625 293.636 7.87500  c
293.553 8.03125 293.511 8.33854 293.511 8.79687  c
293.511 11.4375 l
293.032 11.6979 292.556 11.8906 292.082 12.0156  c
291.608 12.1406 291.079 12.2031 290.496 12.2031  c
288.829 12.2031 287.563 11.6666 286.699 10.5937  c
286.053 9.79166 285.730 8.86979 285.730 7.82812  c
285.730 7.06770 285.912 6.34375 286.277 5.65625  c
286.714 4.83333 287.308 4.19791 288.058 3.75000  c
288.683 3.38541 289.428 3.20312 290.293 3.20312  c
290.605 3.20312 290.889 3.22656 291.144 3.27343  c
291.399 3.32031 291.761 3.43229 292.230 3.60937  c
292.470 3.69270 292.631 3.73437 292.714 3.73437  c
292.787 3.73437 292.852 3.69791 292.910 3.62500  c
292.967 3.55208 293.006 3.41145 293.027 3.20312  c
293.261 3.20312 l
h
f
Q
cliprestore
newpath
0 0 m
0 16.0000 l
391.000 16.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 380.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 -380.000 ] concat
cliprestore
Q
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 1416 w @beginspecial 20 @llx 118 @lly 575
@urx 673 @ury 1440 @rwi @setspecial
%%BeginDocument: criticaldamping.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 1:18:30 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 375 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
37.0000 6.01785 350.994 331.982 rc
newpath
38.0000 8.01785 m
41.7926 8.70318 l
45.5853 10.6432 l
48.8852 13.2258 l
52.1852 16.5388 l
59.6075 26.2127 l
67.0790 38.3565 l
74.5150 52.1212 l
81.4091 65.8723 l
88.5476 80.7063 l
103.289 111.925 l
110.858 127.734 l
117.526 141.321 l
125.031 156.117 l
132.568 170.347 l
139.831 183.403 l
146.426 194.666 l
154.269 207.304 l
160.913 217.363 l
168.641 228.323 l
175.481 237.370 l
182.987 246.612 l
190.134 254.770 l
197.591 262.644 l
204.439 269.330 l
211.825 275.987 l
219.498 282.330 l
226.176 287.405 l
233.390 292.451 l
240.842 297.220 l
248.132 301.481 l
255.186 305.251 l
263.018 309.061 l
270.056 312.174 l
277.570 315.200 l
284.378 317.696 l
291.822 320.181 l
298.826 322.304 l
306.148 324.321 l
313.305 326.109 l
320.799 327.803 l
328.016 329.278 l
335.397 330.642 l
342.717 331.864 l
349.443 332.881 l
357.151 333.935 l
364.046 334.786 l
371.397 335.606 l
378.433 336.314 l
385.994 337.000 l
S
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
356.995 340.000 m
356.995 342.600 l
S
newpath
298.996 340.000 m
298.996 342.600 l
S
newpath
240.997 340.000 m
240.997 342.600 l
S
newpath
182.997 340.000 m
182.997 342.600 l
S
newpath
124.998 340.000 m
124.998 342.600 l
S
newpath
66.9995 340.000 m
66.9995 342.600 l
S
newpath
38.0000 340.000 m
385.994 340.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 360 12 15 rc
newpath
212.375 364.687 m
211.875 366.406 l
212.875 366.406 l
212.765 366.812 l
211.781 366.812 l
210.687 370.546 l
210.572 370.953 210.515 371.213 210.515 371.328  c
210.515 371.401 210.531 371.458 210.562 371.500  c
210.593 371.541 210.635 371.562 210.687 371.562  c
210.791 371.562 210.927 371.484 211.093 371.328  c
211.197 371.244 211.427 370.984 211.781 370.546  c
211.984 370.718 l
211.599 371.281 211.234 371.677 210.890 371.906  c
210.651 372.072 210.411 372.156 210.171 372.156  c
209.984 372.156 209.830 372.096 209.710 371.976  c
209.591 371.856 209.531 371.708 209.531 371.531  c
209.531 371.302 209.599 370.953 209.734 370.484  c
210.796 366.812 l
209.843 366.812 l
209.906 366.562 l
210.364 366.437 210.750 366.247 211.062 365.992  c
211.375 365.737 211.718 365.302 212.093 364.687  c
212.375 364.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 340.000 m
38.0000 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
40.4687 356.750 m
40.4687 355.770 40.6171 354.924 40.9140 354.210  c
41.2109 353.497 41.6041 352.968 42.0937 352.625  c
42.4791 352.354 42.8750 352.218 43.2812 352.218  c
43.9375 352.218 44.5260 352.552 45.0468 353.218  c
45.7031 354.052 46.0312 355.182 46.0312 356.609  c
46.0312 357.609 45.8880 358.458 45.6015 359.156  c
45.3151 359.854 44.9479 360.362 44.5000 360.679  c
44.0520 360.997 43.6250 361.156 43.2187 361.156  c
42.3958 361.156 41.7083 360.671 41.1562 359.703  c
40.6979 358.880 40.4687 357.895 40.4687 356.750  c
h
41.7187 356.906 m
41.7187 358.093 41.8645 359.062 42.1562 359.812  c
42.3958 360.437 42.7552 360.750 43.2343 360.750  c
43.4635 360.750 43.7005 360.648 43.9453 360.445  c
44.1901 360.242 44.3750 359.895 44.5000 359.406  c
44.6979 358.687 44.7968 357.661 44.7968 356.328  c
44.7968 355.349 44.6927 354.531 44.4843 353.875  c
44.3385 353.385 44.1406 353.041 43.8906 352.843  c
43.7239 352.708 43.5156 352.640 43.2656 352.640  c
42.9843 352.640 42.7291 352.765 42.5000 353.015  c
42.1979 353.369 41.9921 353.924 41.8828 354.679  c
41.7734 355.434 41.7187 356.177 41.7187 356.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
95.9991 340.000 m
95.9991 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
98.5312 353.234 m
100.625 352.218 l
100.828 352.218 l
100.828 359.484 l
100.828 359.963 100.849 360.263 100.890 360.382  c
100.932 360.502 101.015 360.593 101.140 360.656  c
101.265 360.718 101.520 360.755 101.906 360.765  c
101.906 361.000 l
98.6718 361.000 l
98.6718 360.765 l
99.0781 360.755 99.3411 360.718 99.4609 360.656  c
99.5807 360.593 99.6640 360.510 99.7109 360.406  c
99.7578 360.302 99.7812 359.994 99.7812 359.484  c
99.7812 354.843 l
99.7812 354.208 99.7604 353.802 99.7187 353.625  c
99.6875 353.489 99.6328 353.390 99.5546 353.328  c
99.4765 353.265 99.3802 353.234 99.2656 353.234  c
99.1093 353.234 98.8958 353.302 98.6250 353.437  c
98.5312 353.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
153.998 340.000 m
153.998 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
160.953 359.343 m
160.359 361.000 l
155.281 361.000 l
155.281 360.765 l
156.770 359.401 157.820 358.286 158.429 357.421  c
159.039 356.557 159.343 355.770 159.343 355.062  c
159.343 354.510 159.177 354.059 158.843 353.710  c
158.510 353.362 158.109 353.187 157.640 353.187  c
157.224 353.187 156.846 353.309 156.507 353.554  c
156.169 353.799 155.921 354.161 155.765 354.640  c
155.531 354.640 l
155.635 353.859 155.906 353.260 156.343 352.843  c
156.781 352.427 157.328 352.218 157.984 352.218  c
158.682 352.218 159.265 352.442 159.734 352.890  c
160.203 353.338 160.437 353.864 160.437 354.468  c
160.437 354.906 160.333 355.343 160.125 355.781  c
159.812 356.468 159.307 357.192 158.609 357.953  c
157.557 359.109 156.895 359.807 156.625 360.046  c
158.875 360.046 l
159.333 360.046 159.653 360.028 159.835 359.992  c
160.018 359.955 160.184 359.885 160.335 359.781  c
160.487 359.677 160.614 359.531 160.718 359.343  c
160.953 359.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
211.997 340.000 m
211.997 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
213.656 354.031 m
213.906 353.447 214.218 353.000 214.593 352.687  c
214.968 352.375 215.432 352.218 215.984 352.218  c
216.682 352.218 217.213 352.442 217.578 352.890  c
217.859 353.224 218.000 353.578 218.000 353.953  c
218.000 354.588 217.604 355.239 216.812 355.906  c
217.343 356.114 217.744 356.411 218.015 356.796  c
218.286 357.182 218.421 357.635 218.421 358.156  c
218.421 358.895 218.182 359.536 217.703 360.078  c
217.088 360.796 216.197 361.156 215.031 361.156  c
214.447 361.156 214.052 361.083 213.843 360.937  c
213.635 360.791 213.531 360.635 213.531 360.468  c
213.531 360.343 213.580 360.237 213.679 360.148  c
213.778 360.059 213.895 360.015 214.031 360.015  c
214.135 360.015 214.244 360.031 214.359 360.062  c
214.432 360.083 214.596 360.158 214.851 360.289  c
215.106 360.419 215.281 360.500 215.375 360.531  c
215.531 360.572 215.697 360.593 215.875 360.593  c
216.302 360.593 216.677 360.427 217.000 360.093  c
217.322 359.760 217.484 359.364 217.484 358.906  c
217.484 358.572 217.411 358.250 217.265 357.937  c
217.151 357.697 217.026 357.515 216.890 357.390  c
216.713 357.224 216.466 357.072 216.148 356.937  c
215.830 356.802 215.505 356.734 215.171 356.734  c
214.968 356.734 l
214.968 356.531 l
215.302 356.489 215.638 356.369 215.976 356.171  c
216.315 355.974 216.559 355.737 216.710 355.460  c
216.862 355.184 216.937 354.875 216.937 354.531  c
216.937 354.104 216.802 353.755 216.531 353.484  c
216.260 353.213 215.921 353.078 215.515 353.078  c
214.859 353.078 214.312 353.427 213.875 354.125  c
213.656 354.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
269.996 340.000 m
269.996 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
277.046 357.828 m
277.046 358.734 l
275.890 358.734 l
275.890 361.000 l
274.843 361.000 l
274.843 358.734 l
271.203 358.734 l
271.203 357.921 l
275.203 352.218 l
275.890 352.218 l
275.890 357.828 l
277.046 357.828 l
h
274.843 357.828 m
274.843 353.546 l
271.828 357.828 l
274.843 357.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
327.995 340.000 m
327.995 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
334.640 352.390 m
334.140 353.468 l
331.562 353.468 l
331.000 354.625 l
332.114 354.791 333.000 355.208 333.656 355.875  c
334.218 356.447 334.500 357.125 334.500 357.906  c
334.500 358.364 334.408 358.786 334.226 359.171  c
334.044 359.557 333.812 359.885 333.531 360.156  c
333.250 360.427 332.937 360.640 332.593 360.796  c
332.114 361.036 331.614 361.156 331.093 361.156  c
330.583 361.156 330.210 361.067 329.976 360.890  c
329.742 360.713 329.625 360.520 329.625 360.312  c
329.625 360.187 329.674 360.080 329.773 359.992  c
329.872 359.903 329.994 359.859 330.140 359.859  c
330.244 359.859 330.338 359.875 330.421 359.906  c
330.505 359.937 330.645 360.026 330.843 360.171  c
331.166 360.390 331.489 360.500 331.812 360.500  c
332.312 360.500 332.747 360.312 333.117 359.937  c
333.487 359.562 333.671 359.104 333.671 358.562  c
333.671 358.041 333.505 357.557 333.171 357.109  c
332.838 356.661 332.380 356.312 331.796 356.062  c
331.328 355.875 330.697 355.765 329.906 355.734  c
331.562 352.390 l
334.640 352.390 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
385.994 340.000 m
385.994 345.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.828 352.218 m
392.828 352.453 l
392.265 352.505 391.807 352.614 391.453 352.781  c
391.099 352.947 390.750 353.203 390.406 353.546  c
390.062 353.890 389.778 354.273 389.554 354.695  c
389.330 355.117 389.140 355.614 388.984 356.187  c
389.599 355.770 390.213 355.562 390.828 355.562  c
391.411 355.562 391.919 355.799 392.351 356.273  c
392.783 356.747 393.000 357.359 393.000 358.109  c
393.000 358.828 392.781 359.484 392.343 360.078  c
391.822 360.796 391.130 361.156 390.265 361.156  c
389.671 361.156 389.171 360.958 388.765 360.562  c
387.963 359.812 387.562 358.833 387.562 357.625  c
387.562 356.854 387.716 356.122 388.023 355.429  c
388.330 354.737 388.770 354.119 389.343 353.578  c
389.916 353.036 390.466 352.674 390.992 352.492  c
391.518 352.309 392.005 352.218 392.453 352.218  c
392.828 352.218 l
h
388.875 356.656 m
388.802 357.229 388.765 357.692 388.765 358.046  c
388.765 358.453 388.841 358.893 388.992 359.367  c
389.143 359.841 389.364 360.218 389.656 360.500  c
389.875 360.697 390.140 360.796 390.453 360.796  c
390.817 360.796 391.145 360.622 391.437 360.273  c
391.729 359.924 391.875 359.432 391.875 358.796  c
391.875 358.067 391.729 357.440 391.437 356.914  c
391.145 356.388 390.739 356.125 390.218 356.125  c
390.052 356.125 389.877 356.158 389.695 356.226  c
389.513 356.294 389.239 356.437 388.875 356.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
38.0000 41.4969 m
35.4000 41.4969 l
S
newpath
38.0000 108.455 m
35.4000 108.455 l
S
newpath
38.0000 175.413 m
35.4000 175.413 l
S
newpath
38.0000 242.371 m
35.4000 242.371 l
S
newpath
38.0000 309.329 m
35.4000 309.329 l
S
newpath
38.0000 340.000 m
38.0000 8.01785 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 168 8 15 rc
Q
cliprestore
newpath
0 0 m
0 375.000 l
390.000 375.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
38.0000 275.850 m
32.8000 275.850 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 280.750 m
19.4687 279.770 19.6171 278.924 19.9140 278.210  c
20.2109 277.497 20.6041 276.968 21.0937 276.625  c
21.4791 276.354 21.8750 276.218 22.2812 276.218  c
22.9375 276.218 23.5260 276.552 24.0468 277.218  c
24.7031 278.052 25.0312 279.182 25.0312 280.609  c
25.0312 281.609 24.8880 282.458 24.6015 283.156  c
24.3151 283.854 23.9479 284.362 23.5000 284.679  c
23.0520 284.997 22.6250 285.156 22.2187 285.156  c
21.3958 285.156 20.7083 284.671 20.1562 283.703  c
19.6979 282.880 19.4687 281.895 19.4687 280.750  c
h
20.7187 280.906 m
20.7187 282.093 20.8645 283.062 21.1562 283.812  c
21.3958 284.437 21.7552 284.750 22.2343 284.750  c
22.4635 284.750 22.7005 284.648 22.9453 284.445  c
23.1901 284.242 23.3750 283.895 23.5000 283.406  c
23.6979 282.687 23.7968 281.661 23.7968 280.328  c
23.7968 279.349 23.6927 278.531 23.4843 277.875  c
23.3385 277.385 23.1406 277.041 22.8906 276.843  c
22.7239 276.708 22.5156 276.640 22.2656 276.640  c
21.9843 276.640 21.7291 276.765 21.5000 277.015  c
21.1979 277.369 20.9921 277.924 20.8828 278.679  c
20.7734 279.434 20.7187 280.177 20.7187 280.906  c
h
27.1250 283.765 m
27.3229 283.765 27.4895 283.835 27.6250 283.976  c
27.7604 284.117 27.8281 284.281 27.8281 284.468  c
27.8281 284.666 27.7604 284.833 27.6250 284.968  c
27.4895 285.104 27.3229 285.171 27.1250 285.171  c
26.9270 285.171 26.7604 285.104 26.6250 284.968  c
26.4895 284.833 26.4218 284.666 26.4218 284.468  c
26.4218 284.270 26.4895 284.104 26.6250 283.968  c
26.7604 283.833 26.9270 283.765 27.1250 283.765  c
h
30.2812 277.234 m
32.3750 276.218 l
32.5781 276.218 l
32.5781 283.484 l
32.5781 283.963 32.5989 284.263 32.6406 284.382  c
32.6822 284.502 32.7656 284.593 32.8906 284.656  c
33.0156 284.718 33.2708 284.755 33.6562 284.765  c
33.6562 285.000 l
30.4218 285.000 l
30.4218 284.765 l
30.8281 284.755 31.0911 284.718 31.2109 284.656  c
31.3307 284.593 31.4140 284.510 31.4609 284.406  c
31.5078 284.302 31.5312 283.994 31.5312 283.484  c
31.5312 278.843 l
31.5312 278.208 31.5104 277.802 31.4687 277.625  c
31.4375 277.489 31.3828 277.390 31.3046 277.328  c
31.2265 277.265 31.1302 277.234 31.0156 277.234  c
30.8593 277.234 30.6458 277.302 30.3750 277.437  c
30.2812 277.234 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 208.892 m
32.8000 208.892 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 213.750 m
19.4687 212.770 19.6171 211.924 19.9140 211.210  c
20.2109 210.497 20.6041 209.968 21.0937 209.625  c
21.4791 209.354 21.8750 209.218 22.2812 209.218  c
22.9375 209.218 23.5260 209.552 24.0468 210.218  c
24.7031 211.052 25.0312 212.182 25.0312 213.609  c
25.0312 214.609 24.8880 215.458 24.6015 216.156  c
24.3151 216.854 23.9479 217.362 23.5000 217.679  c
23.0520 217.997 22.6250 218.156 22.2187 218.156  c
21.3958 218.156 20.7083 217.671 20.1562 216.703  c
19.6979 215.880 19.4687 214.895 19.4687 213.750  c
h
20.7187 213.906 m
20.7187 215.093 20.8645 216.062 21.1562 216.812  c
21.3958 217.437 21.7552 217.750 22.2343 217.750  c
22.4635 217.750 22.7005 217.648 22.9453 217.445  c
23.1901 217.242 23.3750 216.895 23.5000 216.406  c
23.6979 215.687 23.7968 214.661 23.7968 213.328  c
23.7968 212.349 23.6927 211.531 23.4843 210.875  c
23.3385 210.385 23.1406 210.041 22.8906 209.843  c
22.7239 209.708 22.5156 209.640 22.2656 209.640  c
21.9843 209.640 21.7291 209.765 21.5000 210.015  c
21.1979 210.369 20.9921 210.924 20.8828 211.679  c
20.7734 212.434 20.7187 213.177 20.7187 213.906  c
h
27.1250 216.765 m
27.3229 216.765 27.4895 216.835 27.6250 216.976  c
27.7604 217.117 27.8281 217.281 27.8281 217.468  c
27.8281 217.666 27.7604 217.833 27.6250 217.968  c
27.4895 218.104 27.3229 218.171 27.1250 218.171  c
26.9270 218.171 26.7604 218.104 26.6250 217.968  c
26.4895 217.833 26.4218 217.666 26.4218 217.468  c
26.4218 217.270 26.4895 217.104 26.6250 216.968  c
26.7604 216.833 26.9270 216.765 27.1250 216.765  c
h
34.7031 216.343 m
34.1093 218.000 l
29.0312 218.000 l
29.0312 217.765 l
30.5208 216.401 31.5703 215.286 32.1796 214.421  c
32.7890 213.557 33.0937 212.770 33.0937 212.062  c
33.0937 211.510 32.9270 211.059 32.5937 210.710  c
32.2604 210.362 31.8593 210.187 31.3906 210.187  c
30.9739 210.187 30.5963 210.309 30.2578 210.554  c
29.9192 210.799 29.6718 211.161 29.5156 211.640  c
29.2812 211.640 l
29.3854 210.859 29.6562 210.260 30.0937 209.843  c
30.5312 209.427 31.0781 209.218 31.7343 209.218  c
32.4322 209.218 33.0156 209.442 33.4843 209.890  c
33.9531 210.338 34.1875 210.864 34.1875 211.468  c
34.1875 211.906 34.0833 212.343 33.8750 212.781  c
33.5625 213.468 33.0572 214.192 32.3593 214.953  c
31.3072 216.109 30.6458 216.807 30.3750 217.046  c
32.6250 217.046 l
33.0833 217.046 33.4036 217.028 33.5859 216.992  c
33.7682 216.955 33.9349 216.885 34.0859 216.781  c
34.2369 216.677 34.3645 216.531 34.4687 216.343  c
34.7031 216.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 141.934 m
32.8000 141.934 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 146.750 m
19.4687 145.770 19.6171 144.924 19.9140 144.210  c
20.2109 143.497 20.6041 142.968 21.0937 142.625  c
21.4791 142.354 21.8750 142.218 22.2812 142.218  c
22.9375 142.218 23.5260 142.552 24.0468 143.218  c
24.7031 144.052 25.0312 145.182 25.0312 146.609  c
25.0312 147.609 24.8880 148.458 24.6015 149.156  c
24.3151 149.854 23.9479 150.362 23.5000 150.679  c
23.0520 150.997 22.6250 151.156 22.2187 151.156  c
21.3958 151.156 20.7083 150.671 20.1562 149.703  c
19.6979 148.880 19.4687 147.895 19.4687 146.750  c
h
20.7187 146.906 m
20.7187 148.093 20.8645 149.062 21.1562 149.812  c
21.3958 150.437 21.7552 150.750 22.2343 150.750  c
22.4635 150.750 22.7005 150.648 22.9453 150.445  c
23.1901 150.242 23.3750 149.895 23.5000 149.406  c
23.6979 148.687 23.7968 147.661 23.7968 146.328  c
23.7968 145.349 23.6927 144.531 23.4843 143.875  c
23.3385 143.385 23.1406 143.041 22.8906 142.843  c
22.7239 142.708 22.5156 142.640 22.2656 142.640  c
21.9843 142.640 21.7291 142.765 21.5000 143.015  c
21.1979 143.369 20.9921 143.924 20.8828 144.679  c
20.7734 145.434 20.7187 146.177 20.7187 146.906  c
h
27.1250 149.765 m
27.3229 149.765 27.4895 149.835 27.6250 149.976  c
27.7604 150.117 27.8281 150.281 27.8281 150.468  c
27.8281 150.666 27.7604 150.833 27.6250 150.968  c
27.4895 151.104 27.3229 151.171 27.1250 151.171  c
26.9270 151.171 26.7604 151.104 26.6250 150.968  c
26.4895 150.833 26.4218 150.666 26.4218 150.468  c
26.4218 150.270 26.4895 150.104 26.6250 149.968  c
26.7604 149.833 26.9270 149.765 27.1250 149.765  c
h
29.4062 144.031 m
29.6562 143.447 29.9687 143.000 30.3437 142.687  c
30.7187 142.375 31.1822 142.218 31.7343 142.218  c
32.4322 142.218 32.9635 142.442 33.3281 142.890  c
33.6093 143.224 33.7500 143.578 33.7500 143.953  c
33.7500 144.588 33.3541 145.239 32.5625 145.906  c
33.0937 146.114 33.4947 146.411 33.7656 146.796  c
34.0364 147.182 34.1718 147.635 34.1718 148.156  c
34.1718 148.895 33.9322 149.536 33.4531 150.078  c
32.8385 150.796 31.9479 151.156 30.7812 151.156  c
30.1979 151.156 29.8020 151.083 29.5937 150.937  c
29.3854 150.791 29.2812 150.635 29.2812 150.468  c
29.2812 150.343 29.3307 150.237 29.4296 150.148  c
29.5286 150.059 29.6458 150.015 29.7812 150.015  c
29.8854 150.015 29.9947 150.031 30.1093 150.062  c
30.1822 150.083 30.3463 150.158 30.6015 150.289  c
30.8567 150.419 31.0312 150.500 31.1250 150.531  c
31.2812 150.572 31.4479 150.593 31.6250 150.593  c
32.0520 150.593 32.4270 150.427 32.7500 150.093  c
33.0729 149.760 33.2343 149.364 33.2343 148.906  c
33.2343 148.572 33.1614 148.250 33.0156 147.937  c
32.9010 147.697 32.7760 147.515 32.6406 147.390  c
32.4635 147.224 32.2161 147.072 31.8984 146.937  c
31.5807 146.802 31.2552 146.734 30.9218 146.734  c
30.7187 146.734 l
30.7187 146.531 l
31.0520 146.489 31.3880 146.369 31.7265 146.171  c
32.0651 145.974 32.3099 145.737 32.4609 145.460  c
32.6119 145.184 32.6875 144.875 32.6875 144.531  c
32.6875 144.104 32.5520 143.755 32.2812 143.484  c
32.0104 143.213 31.6718 143.078 31.2656 143.078  c
30.6093 143.078 30.0625 143.427 29.6250 144.125  c
29.4062 144.031 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 74.9760 m
32.8000 74.9760 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 79.7500 m
19.4687 78.7708 19.6171 77.9244 19.9140 77.2109  c
20.2109 76.4974 20.6041 75.9687 21.0937 75.6250  c
21.4791 75.3541 21.8750 75.2187 22.2812 75.2187  c
22.9375 75.2187 23.5260 75.5520 24.0468 76.2187  c
24.7031 77.0520 25.0312 78.1822 25.0312 79.6093  c
25.0312 80.6093 24.8880 81.4583 24.6015 82.1562  c
24.3151 82.8541 23.9479 83.3619 23.5000 83.6796  c
23.0520 83.9974 22.6250 84.1562 22.2187 84.1562  c
21.3958 84.1562 20.7083 83.6718 20.1562 82.7031  c
19.6979 81.8802 19.4687 80.8958 19.4687 79.7500  c
h
20.7187 79.9062 m
20.7187 81.0937 20.8645 82.0625 21.1562 82.8125  c
21.3958 83.4375 21.7552 83.7500 22.2343 83.7500  c
22.4635 83.7500 22.7005 83.6484 22.9453 83.4453  c
23.1901 83.2421 23.3750 82.8958 23.5000 82.4062  c
23.6979 81.6875 23.7968 80.6614 23.7968 79.3281  c
23.7968 78.3489 23.6927 77.5312 23.4843 76.8750  c
23.3385 76.3854 23.1406 76.0416 22.8906 75.8437  c
22.7239 75.7083 22.5156 75.6406 22.2656 75.6406  c
21.9843 75.6406 21.7291 75.7656 21.5000 76.0156  c
21.1979 76.3697 20.9921 76.9244 20.8828 77.6796  c
20.7734 78.4349 20.7187 79.1770 20.7187 79.9062  c
h
27.1250 82.7656 m
27.3229 82.7656 27.4895 82.8359 27.6250 82.9765  c
27.7604 83.1171 27.8281 83.2812 27.8281 83.4687  c
27.8281 83.6666 27.7604 83.8333 27.6250 83.9687  c
27.4895 84.1041 27.3229 84.1718 27.1250 84.1718  c
26.9270 84.1718 26.7604 84.1041 26.6250 83.9687  c
26.4895 83.8333 26.4218 83.6666 26.4218 83.4687  c
26.4218 83.2708 26.4895 83.1041 26.6250 82.9687  c
26.7604 82.8333 26.9270 82.7656 27.1250 82.7656  c
h
34.7968 80.8281 m
34.7968 81.7343 l
33.6406 81.7343 l
33.6406 84.0000 l
32.5937 84.0000 l
32.5937 81.7343 l
28.9531 81.7343 l
28.9531 80.9218 l
32.9531 75.2187 l
33.6406 75.2187 l
33.6406 80.8281 l
34.7968 80.8281 l
h
32.5937 80.8281 m
32.5937 76.5468 l
29.5781 80.8281 l
32.5937 80.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.0000 8.01785 m
32.8000 8.01785 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
19.4687 13.7500 m
19.4687 12.7708 19.6171 11.9244 19.9140 11.2109  c
20.2109 10.4974 20.6041 9.96875 21.0937 9.62500  c
21.4791 9.35416 21.8750 9.21875 22.2812 9.21875  c
22.9375 9.21875 23.5260 9.55208 24.0468 10.2187  c
24.7031 11.0520 25.0312 12.1822 25.0312 13.6093  c
25.0312 14.6093 24.8880 15.4583 24.6015 16.1562  c
24.3151 16.8541 23.9479 17.3619 23.5000 17.6796  c
23.0520 17.9974 22.6250 18.1562 22.2187 18.1562  c
21.3958 18.1562 20.7083 17.6718 20.1562 16.7031  c
19.6979 15.8802 19.4687 14.8958 19.4687 13.7500  c
h
20.7187 13.9062 m
20.7187 15.0937 20.8645 16.0625 21.1562 16.8125  c
21.3958 17.4375 21.7552 17.7500 22.2343 17.7500  c
22.4635 17.7500 22.7005 17.6484 22.9453 17.4453  c
23.1901 17.2421 23.3750 16.8958 23.5000 16.4062  c
23.6979 15.6875 23.7968 14.6614 23.7968 13.3281  c
23.7968 12.3489 23.6927 11.5312 23.4843 10.8750  c
23.3385 10.3854 23.1406 10.0416 22.8906 9.84375  c
22.7239 9.70833 22.5156 9.64062 22.2656 9.64062  c
21.9843 9.64062 21.7291 9.76562 21.5000 10.0156  c
21.1979 10.3697 20.9921 10.9244 20.8828 11.6796  c
20.7734 12.4349 20.7187 13.1770 20.7187 13.9062  c
h
27.1250 16.7656 m
27.3229 16.7656 27.4895 16.8359 27.6250 16.9765  c
27.7604 17.1171 27.8281 17.2812 27.8281 17.4687  c
27.8281 17.6666 27.7604 17.8333 27.6250 17.9687  c
27.4895 18.1041 27.3229 18.1718 27.1250 18.1718  c
26.9270 18.1718 26.7604 18.1041 26.6250 17.9687  c
26.4895 17.8333 26.4218 17.6666 26.4218 17.4687  c
26.4218 17.2708 26.4895 17.1041 26.6250 16.9687  c
26.7604 16.8333 26.9270 16.7656 27.1250 16.7656  c
h
34.3906 9.39062 m
33.8906 10.4687 l
31.3125 10.4687 l
30.7500 11.6250 l
31.8645 11.7916 32.7500 12.2083 33.4062 12.8750  c
33.9687 13.4479 34.2500 14.1250 34.2500 14.9062  c
34.2500 15.3645 34.1588 15.7864 33.9765 16.1718  c
33.7942 16.5572 33.5625 16.8854 33.2812 17.1562  c
33.0000 17.4270 32.6875 17.6406 32.3437 17.7968  c
31.8645 18.0364 31.3645 18.1562 30.8437 18.1562  c
30.3333 18.1562 29.9609 18.0677 29.7265 17.8906  c
29.4921 17.7135 29.3750 17.5208 29.3750 17.3125  c
29.3750 17.1875 29.4244 17.0807 29.5234 16.9921  c
29.6224 16.9036 29.7447 16.8593 29.8906 16.8593  c
29.9947 16.8593 30.0885 16.8750 30.1718 16.9062  c
30.2552 16.9375 30.3958 17.0260 30.5937 17.1718  c
30.9166 17.3906 31.2395 17.5000 31.5625 17.5000  c
32.0625 17.5000 32.4974 17.3125 32.8671 16.9375  c
33.2369 16.5625 33.4218 16.1041 33.4218 15.5625  c
33.4218 15.0416 33.2552 14.5572 32.9218 14.1093  c
32.5885 13.6614 32.1302 13.3125 31.5468 13.0625  c
31.0781 12.8750 30.4479 12.7656 29.6562 12.7343  c
31.3125 9.39062 l
34.3906 9.39062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
0 380 391 16 rc
[ 1.00000 0 0 1.00000 0 380.000 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 0 392 15 rc
newpath
96.1406 7.25000 m
96.5572 6.82291 96.8020 6.57812 96.8750 6.51562  c
97.0729 6.35937 97.2812 6.23697 97.5000 6.14843  c
97.7187 6.05989 97.9375 6.01562 98.1562 6.01562  c
98.5208 6.01562 98.8333 6.12239 99.0937 6.33593  c
99.3541 6.54947 99.5312 6.85416 99.6250 7.25000  c
100.052 6.73958 100.416 6.40625 100.718 6.25000  c
101.020 6.09375 101.333 6.01562 101.656 6.01562  c
101.958 6.01562 102.229 6.09375 102.468 6.25000  c
102.708 6.40625 102.901 6.66666 103.046 7.03125  c
103.130 7.27083 103.171 7.65625 103.171 8.18750  c
103.171 10.6875 l
103.171 11.0520 103.203 11.3020 103.265 11.4375  c
103.307 11.5312 103.385 11.6093 103.500 11.6718  c
103.614 11.7343 103.802 11.7656 104.062 11.7656  c
104.062 12.0000 l
101.187 12.0000 l
101.187 11.7656 l
101.312 11.7656 l
101.562 11.7656 101.755 11.7187 101.890 11.6250  c
101.984 11.5625 102.052 11.4531 102.093 11.2968  c
102.114 11.2239 102.125 11.0208 102.125 10.6875  c
102.125 8.18750 l
102.125 7.70833 102.067 7.37500 101.953 7.18750  c
101.786 6.91666 101.520 6.78125 101.156 6.78125  c
100.937 6.78125 100.713 6.83593 100.484 6.94531  c
100.255 7.05468 99.9791 7.26041 99.6562 7.56250  c
99.6562 7.64062 l
99.6562 7.90625 l
99.6562 10.6875 l
99.6562 11.0833 99.6796 11.3307 99.7265 11.4296  c
99.7734 11.5286 99.8567 11.6093 99.9765 11.6718  c
100.096 11.7343 100.307 11.7656 100.609 11.7656  c
100.609 12.0000 l
97.6718 12.0000 l
97.6718 11.7656 l
97.9947 11.7656 98.2161 11.7291 98.3359 11.6562  c
98.4557 11.5833 98.5364 11.4687 98.5781 11.3125  c
98.5989 11.2395 98.6093 11.0312 98.6093 10.6875  c
98.6093 8.18750 l
98.6093 7.70833 98.5416 7.36458 98.4062 7.15625  c
98.2187 6.88541 97.9583 6.75000 97.6250 6.75000  c
97.3958 6.75000 97.1718 6.81250 96.9531 6.93750  c
96.5989 7.12500 96.3281 7.33333 96.1406 7.56250  c
96.1406 10.6875 l
96.1406 11.0625 96.1666 11.3072 96.2187 11.4218  c
96.2708 11.5364 96.3489 11.6224 96.4531 11.6796  c
96.5572 11.7369 96.7656 11.7656 97.0781 11.7656  c
97.0781 12.0000 l
94.2031 12.0000 l
94.2031 11.7656 l
94.4739 11.7656 94.6614 11.7369 94.7656 11.6796  c
94.8697 11.6224 94.9479 11.5312 95.0000 11.4062  c
95.0520 11.2812 95.0781 11.0416 95.0781 10.6875  c
95.0781 8.46875 l
95.0781 7.82291 95.0625 7.40625 95.0312 7.21875  c
95.0000 7.08333 94.9531 6.98958 94.8906 6.93750  c
94.8281 6.88541 94.7395 6.85937 94.6250 6.85937  c
94.5104 6.85937 94.3697 6.89062 94.2031 6.95312  c
94.1093 6.71875 l
95.8593 6.01562 l
96.1406 6.01562 l
96.1406 7.25000 l
h
104.346 6.39062 m
111.189 6.39062 l
111.189 6.92187 l
104.346 6.92187 l
104.346 6.39062 l
h
104.346 8.46875 m
111.189 8.46875 l
111.189 8.98437 l
104.346 8.98437 l
104.346 8.46875 l
h
112.099 5.03125 m
112.349 4.44791 112.662 4.00000 113.037 3.68750  c
113.412 3.37500 113.875 3.21875 114.427 3.21875  c
115.125 3.21875 115.656 3.44270 116.021 3.89062  c
116.302 4.22395 116.443 4.57812 116.443 4.95312  c
116.443 5.58854 116.047 6.23958 115.255 6.90625  c
115.787 7.11458 116.188 7.41145 116.459 7.79687  c
116.729 8.18229 116.865 8.63541 116.865 9.15625  c
116.865 9.89583 116.625 10.5364 116.146 11.0781  c
115.531 11.7968 114.641 12.1562 113.474 12.1562  c
112.891 12.1562 112.495 12.0833 112.287 11.9375  c
112.078 11.7916 111.974 11.6354 111.974 11.4687  c
111.974 11.3437 112.024 11.2369 112.123 11.1484  c
112.222 11.0599 112.339 11.0156 112.474 11.0156  c
112.578 11.0156 112.688 11.0312 112.802 11.0625  c
112.875 11.0833 113.039 11.1588 113.294 11.2890  c
113.550 11.4192 113.724 11.5000 113.818 11.5312  c
113.974 11.5729 114.141 11.5937 114.318 11.5937  c
114.745 11.5937 115.120 11.4270 115.443 11.0937  c
115.766 10.7604 115.927 10.3645 115.927 9.90625  c
115.927 9.57291 115.854 9.25000 115.709 8.93750  c
115.594 8.69791 115.469 8.51562 115.334 8.39062  c
115.156 8.22395 114.909 8.07291 114.591 7.93750  c
114.274 7.80208 113.948 7.73437 113.615 7.73437  c
113.412 7.73437 l
113.412 7.53125 l
113.745 7.48958 114.081 7.36979 114.419 7.17187  c
114.758 6.97395 115.003 6.73697 115.154 6.46093  c
115.305 6.18489 115.380 5.87500 115.380 5.53125  c
115.380 5.10416 115.245 4.75520 114.974 4.48437  c
114.703 4.21354 114.365 4.07812 113.959 4.07812  c
113.302 4.07812 112.755 4.42708 112.318 5.12500  c
112.099 5.03125 l
h
118.646 14.1718 m
118.646 13.8906 l
119.084 13.7447 119.419 13.5208 119.654 13.2187  c
119.888 12.9166 120.005 12.5937 120.005 12.2500  c
120.005 12.1770 119.990 12.1093 119.959 12.0468  c
119.927 12.0156 119.896 12.0000 119.865 12.0000  c
119.823 12.0000 119.724 12.0416 119.568 12.1250  c
119.485 12.1562 119.401 12.1718 119.318 12.1718  c
119.110 12.1718 118.946 12.1119 118.826 11.9921  c
118.706 11.8724 118.646 11.7031 118.646 11.4843  c
118.646 11.2760 118.724 11.0989 118.880 10.9531  c
119.037 10.8072 119.229 10.7343 119.459 10.7343  c
119.740 10.7343 119.990 10.8541 120.209 11.0937  c
120.427 11.3333 120.537 11.6562 120.537 12.0625  c
120.537 12.5000 120.386 12.9062 120.084 13.2812  c
119.781 13.6562 119.302 13.9531 118.646 14.1718  c
h
132.271 3.20312 m
132.474 6.12500 l
132.271 6.12500 l
132.011 5.25000 131.636 4.61979 131.146 4.23437  c
130.656 3.84895 130.073 3.65625 129.396 3.65625  c
128.823 3.65625 128.305 3.79947 127.841 4.08593  c
127.378 4.37239 127.016 4.83333 126.755 5.46875  c
126.495 6.10416 126.365 6.89583 126.365 7.84375  c
126.365 8.62500 126.490 9.29947 126.740 9.86718  c
126.990 10.4349 127.365 10.8724 127.865 11.1796  c
128.365 11.4869 128.938 11.6406 129.584 11.6406  c
130.136 11.6406 130.625 11.5208 131.052 11.2812  c
131.479 11.0416 131.953 10.5677 132.474 9.85937  c
132.662 9.98437 l
132.235 10.7447 131.732 11.3046 131.154 11.6640  c
130.576 12.0234 129.891 12.2031 129.099 12.2031  c
127.672 12.2031 126.568 11.6718 125.787 10.6093  c
125.203 9.81770 124.912 8.89062 124.912 7.82812  c
124.912 6.97395 125.104 6.18489 125.490 5.46093  c
125.875 4.73697 126.406 4.17968 127.084 3.78906  c
127.761 3.39843 128.495 3.20312 129.287 3.20312  c
129.912 3.20312 130.526 3.35416 131.130 3.65625  c
131.307 3.75000 131.438 3.79687 131.521 3.79687  c
131.636 3.79687 131.735 3.75520 131.818 3.67187  c
131.922 3.55729 132.000 3.40104 132.052 3.20312  c
132.271 3.20312 l
h
133.348 6.39062 m
140.192 6.39062 l
140.192 6.92187 l
133.348 6.92187 l
133.348 6.39062 l
h
133.348 8.46875 m
140.192 8.46875 l
140.192 8.98437 l
133.348 8.98437 l
133.348 8.46875 l
h
146.273 3.21875 m
146.273 3.45312 l
145.711 3.50520 145.253 3.61458 144.898 3.78125  c
144.544 3.94791 144.195 4.20312 143.852 4.54687  c
143.508 4.89062 143.224 5.27343 143.000 5.69531  c
142.776 6.11718 142.586 6.61458 142.430 7.18750  c
143.044 6.77083 143.659 6.56250 144.273 6.56250  c
144.857 6.56250 145.365 6.79947 145.797 7.27343  c
146.229 7.74739 146.445 8.35937 146.445 9.10937  c
146.445 9.82812 146.227 10.4843 145.789 11.0781  c
145.268 11.7968 144.576 12.1562 143.711 12.1562  c
143.117 12.1562 142.617 11.9583 142.211 11.5625  c
141.409 10.8125 141.008 9.83333 141.008 8.62500  c
141.008 7.85416 141.161 7.12239 141.469 6.42968  c
141.776 5.73697 142.216 5.11979 142.789 4.57812  c
143.362 4.03645 143.911 3.67447 144.438 3.49218  c
144.964 3.30989 145.451 3.21875 145.898 3.21875  c
146.273 3.21875 l
h
142.320 7.65625 m
142.247 8.22916 142.211 8.69270 142.211 9.04687  c
142.211 9.45312 142.286 9.89322 142.438 10.3671  c
142.589 10.8411 142.810 11.2187 143.102 11.5000  c
143.320 11.6979 143.586 11.7968 143.898 11.7968  c
144.263 11.7968 144.591 11.6224 144.883 11.2734  c
145.175 10.9244 145.320 10.4322 145.320 9.79687  c
145.320 9.06770 145.175 8.44010 144.883 7.91406  c
144.591 7.38802 144.185 7.12500 143.664 7.12500  c
143.497 7.12500 143.323 7.15885 143.141 7.22656  c
142.958 7.29427 142.685 7.43750 142.320 7.65625  c
h
147.648 14.1718 m
147.648 13.8906 l
148.086 13.7447 148.422 13.5208 148.656 13.2187  c
148.891 12.9166 149.008 12.5937 149.008 12.2500  c
149.008 12.1770 148.992 12.1093 148.961 12.0468  c
148.930 12.0156 148.898 12.0000 148.867 12.0000  c
148.826 12.0000 148.727 12.0416 148.570 12.1250  c
148.487 12.1562 148.404 12.1718 148.320 12.1718  c
148.112 12.1718 147.948 12.1119 147.828 11.9921  c
147.708 11.8724 147.648 11.7031 147.648 11.4843  c
147.648 11.2760 147.727 11.0989 147.883 10.9531  c
148.039 10.8072 148.232 10.7343 148.461 10.7343  c
148.742 10.7343 148.992 10.8541 149.211 11.0937  c
149.430 11.3333 149.539 11.6562 149.539 12.0625  c
149.539 12.5000 149.388 12.9062 149.086 13.2812  c
148.784 13.6562 148.305 13.9531 147.648 14.1718  c
h
155.570 2.96875 m
155.570 8.75000 l
157.055 7.40625 l
157.367 7.12500 157.550 6.94270 157.602 6.85937  c
157.633 6.80729 157.648 6.76041 157.648 6.71875  c
157.648 6.62500 157.615 6.54947 157.547 6.49218  c
157.479 6.43489 157.362 6.40104 157.195 6.39062  c
157.195 6.18750 l
159.727 6.18750 l
159.727 6.39062 l
159.372 6.40104 159.081 6.45312 158.852 6.54687  c
158.622 6.64062 158.372 6.81250 158.102 7.06250  c
156.602 8.43750 l
158.102 10.3281 l
158.518 10.8489 158.794 11.1822 158.930 11.3281  c
159.138 11.5260 159.320 11.6510 159.477 11.7031  c
159.581 11.7447 159.763 11.7656 160.023 11.7656  c
160.023 12.0000 l
157.195 12.0000 l
157.195 11.7656 l
157.362 11.7656 157.474 11.7421 157.531 11.6953  c
157.589 11.6484 157.617 11.5885 157.617 11.5156  c
157.617 11.4114 157.529 11.2552 157.352 11.0468  c
155.570 8.76562 l
155.570 10.6875 l
155.570 11.0625 155.596 11.3099 155.648 11.4296  c
155.701 11.5494 155.776 11.6354 155.875 11.6875  c
155.974 11.7395 156.185 11.7656 156.508 11.7656  c
156.508 12.0000 l
153.555 12.0000 l
153.555 11.7656 l
153.846 11.7656 154.070 11.7291 154.227 11.6562  c
154.310 11.6145 154.378 11.5468 154.430 11.4531  c
154.492 11.3072 154.523 11.0625 154.523 10.7187  c
154.523 5.43750 l
154.523 4.76041 154.508 4.34635 154.477 4.19531  c
154.445 4.04427 154.396 3.94010 154.328 3.88281  c
154.260 3.82552 154.169 3.79687 154.055 3.79687  c
153.971 3.79687 153.841 3.83333 153.664 3.90625  c
153.555 3.68750 l
155.273 2.96875 l
155.570 2.96875 l
h
160.180 6.39062 m
167.023 6.39062 l
167.023 6.92187 l
160.180 6.92187 l
160.180 6.39062 l
h
160.180 8.46875 m
167.023 8.46875 l
167.023 8.98437 l
160.180 8.98437 l
160.180 8.46875 l
h
167.933 5.03125 m
168.183 4.44791 168.496 4.00000 168.871 3.68750  c
169.246 3.37500 169.709 3.21875 170.261 3.21875  c
170.959 3.21875 171.490 3.44270 171.855 3.89062  c
172.136 4.22395 172.277 4.57812 172.277 4.95312  c
172.277 5.58854 171.881 6.23958 171.089 6.90625  c
171.621 7.11458 172.022 7.41145 172.293 7.79687  c
172.563 8.18229 172.699 8.63541 172.699 9.15625  c
172.699 9.89583 172.459 10.5364 171.980 11.0781  c
171.365 11.7968 170.475 12.1562 169.308 12.1562  c
168.725 12.1562 168.329 12.0833 168.121 11.9375  c
167.912 11.7916 167.808 11.6354 167.808 11.4687  c
167.808 11.3437 167.858 11.2369 167.957 11.1484  c
168.056 11.0599 168.173 11.0156 168.308 11.0156  c
168.412 11.0156 168.522 11.0312 168.636 11.0625  c
168.709 11.0833 168.873 11.1588 169.128 11.2890  c
169.384 11.4192 169.558 11.5000 169.652 11.5312  c
169.808 11.5729 169.975 11.5937 170.152 11.5937  c
170.579 11.5937 170.954 11.4270 171.277 11.0937  c
171.600 10.7604 171.761 10.3645 171.761 9.90625  c
171.761 9.57291 171.688 9.25000 171.543 8.93750  c
171.428 8.69791 171.303 8.51562 171.168 8.39062  c
170.990 8.22395 170.743 8.07291 170.425 7.93750  c
170.108 7.80208 169.782 7.73437 169.449 7.73437  c
169.246 7.73437 l
169.246 7.53125 l
169.579 7.48958 169.915 7.36979 170.253 7.17187  c
170.592 6.97395 170.837 6.73697 170.988 6.46093  c
171.139 6.18489 171.214 5.87500 171.214 5.53125  c
171.214 5.10416 171.079 4.75520 170.808 4.48437  c
170.537 4.21354 170.199 4.07812 169.793 4.07812  c
169.136 4.07812 168.589 4.42708 168.152 5.12500  c
167.933 5.03125 l
h
177.558 8.60937 m
180.839 8.60937 l
180.839 9.56250 l
177.558 9.56250 l
177.558 8.60937 l
h
192.434 3.20312 m
192.637 6.12500 l
192.434 6.12500 l
192.174 5.25000 191.799 4.61979 191.309 4.23437  c
190.820 3.84895 190.236 3.65625 189.559 3.65625  c
188.986 3.65625 188.468 3.79947 188.004 4.08593  c
187.541 4.37239 187.179 4.83333 186.918 5.46875  c
186.658 6.10416 186.528 6.89583 186.528 7.84375  c
186.528 8.62500 186.653 9.29947 186.903 9.86718  c
187.153 10.4349 187.528 10.8724 188.028 11.1796  c
188.528 11.4869 189.101 11.6406 189.747 11.6406  c
190.299 11.6406 190.788 11.5208 191.215 11.2812  c
191.642 11.0416 192.116 10.5677 192.637 9.85937  c
192.825 9.98437 l
192.398 10.7447 191.895 11.3046 191.317 11.6640  c
190.739 12.0234 190.054 12.2031 189.262 12.2031  c
187.835 12.2031 186.731 11.6718 185.950 10.6093  c
185.366 9.81770 185.075 8.89062 185.075 7.82812  c
185.075 6.97395 185.267 6.18489 185.653 5.46093  c
186.038 4.73697 186.570 4.17968 187.247 3.78906  c
187.924 3.39843 188.658 3.20312 189.450 3.20312  c
190.075 3.20312 190.689 3.35416 191.293 3.65625  c
191.471 3.75000 191.601 3.79687 191.684 3.79687  c
191.799 3.79687 191.898 3.75520 191.981 3.67187  c
192.085 3.55729 192.163 3.40104 192.215 3.20312  c
192.434 3.20312 l
h
202.058 12.0000 m
199.761 12.0000 l
196.855 7.96875 l
196.636 7.97916 196.459 7.98437 196.324 7.98437  c
196.272 7.98437 196.214 7.98437 196.152 7.98437  c
196.089 7.98437 196.022 7.97916 195.949 7.96875  c
195.949 10.4687 l
195.949 11.0104 196.006 11.3489 196.121 11.4843  c
196.287 11.6718 196.532 11.7656 196.855 11.7656  c
197.183 11.7656 l
197.183 12.0000 l
193.496 12.0000 l
193.496 11.7656 l
193.824 11.7656 l
194.188 11.7656 194.449 11.6458 194.605 11.4062  c
194.688 11.2812 194.730 10.9687 194.730 10.4687  c
194.730 4.92187 l
194.730 4.38020 194.673 4.04166 194.558 3.90625  c
194.391 3.71875 194.147 3.62500 193.824 3.62500  c
193.496 3.62500 l
193.496 3.39062 l
196.636 3.39062 l
197.553 3.39062 198.227 3.45833 198.660 3.59375  c
199.092 3.72916 199.459 3.97395 199.761 4.32812  c
200.063 4.68229 200.214 5.10937 200.214 5.60937  c
200.214 6.14062 200.043 6.59895 199.699 6.98437  c
199.355 7.36979 198.819 7.64583 198.089 7.81250  c
199.871 10.2812 l
200.277 10.8437 200.626 11.2187 200.918 11.4062  c
201.209 11.5937 201.589 11.7135 202.058 11.7656  c
202.058 12.0000 l
h
195.949 7.57812 m
196.032 7.57812 196.102 7.57812 196.160 7.57812  c
196.217 7.57812 196.266 7.57812 196.308 7.57812  c
197.131 7.57812 197.751 7.40104 198.168 7.04687  c
198.584 6.69270 198.793 6.23958 198.793 5.68750  c
198.793 5.15625 198.623 4.72135 198.285 4.38281  c
197.946 4.04427 197.501 3.87500 196.949 3.87500  c
196.699 3.87500 196.365 3.91666 195.949 4.00000  c
195.949 7.57812 l
h
205.963 11.7656 m
205.963 12.0000 l
202.276 12.0000 l
202.276 11.7656 l
202.573 11.7656 l
202.927 11.7656 203.187 11.6614 203.354 11.4531  c
203.458 11.3177 203.510 10.9895 203.510 10.4687  c
203.510 4.92187 l
203.510 4.48437 203.479 4.19270 203.417 4.04687  c
203.375 3.94270 203.292 3.85416 203.167 3.78125  c
202.979 3.67708 202.781 3.62500 202.573 3.62500  c
202.276 3.62500 l
202.276 3.39062 l
205.963 3.39062 l
205.963 3.62500 l
205.651 3.62500 l
205.297 3.62500 205.042 3.72916 204.885 3.93750  c
204.781 4.07291 204.729 4.40104 204.729 4.92187  c
204.729 10.4687 l
204.729 10.9062 204.755 11.1979 204.807 11.3437  c
204.849 11.4479 204.937 11.5364 205.073 11.6093  c
205.250 11.7135 205.443 11.7656 205.651 11.7656  c
205.963 11.7656 l
h
213.793 3.39062 m
213.902 5.40625 l
213.652 5.40625 l
213.610 5.05208 213.548 4.80208 213.464 4.65625  c
213.329 4.40625 213.152 4.22395 212.933 4.10937  c
212.714 3.99479 212.428 3.93750 212.074 3.93750  c
210.871 3.93750 l
210.871 10.5156 l
210.871 11.0364 210.928 11.3645 211.043 11.5000  c
211.199 11.6770 211.444 11.7656 211.777 11.7656  c
212.074 11.7656 l
212.074 12.0000 l
208.433 12.0000 l
208.433 11.7656 l
208.730 11.7656 l
209.095 11.7656 209.355 11.6562 209.511 11.4375  c
209.605 11.3020 209.652 10.9947 209.652 10.5156  c
209.652 3.93750 l
208.621 3.93750 l
208.214 3.93750 207.928 3.96354 207.761 4.01562  c
207.543 4.09895 207.352 4.25520 207.191 4.48437  c
207.029 4.71354 206.938 5.02083 206.918 5.40625  c
206.668 5.40625 l
206.777 3.39062 l
213.793 3.39062 l
h
218.233 11.7656 m
218.233 12.0000 l
214.546 12.0000 l
214.546 11.7656 l
214.843 11.7656 l
215.197 11.7656 215.457 11.6614 215.624 11.4531  c
215.728 11.3177 215.780 10.9895 215.780 10.4687  c
215.780 4.92187 l
215.780 4.48437 215.749 4.19270 215.687 4.04687  c
215.645 3.94270 215.562 3.85416 215.437 3.78125  c
215.249 3.67708 215.051 3.62500 214.843 3.62500  c
214.546 3.62500 l
214.546 3.39062 l
218.233 3.39062 l
218.233 3.62500 l
217.921 3.62500 l
217.567 3.62500 217.312 3.72916 217.155 3.93750  c
217.051 4.07291 216.999 4.40104 216.999 4.92187  c
216.999 10.4687 l
216.999 10.9062 217.025 11.1979 217.077 11.3437  c
217.119 11.4479 217.207 11.5364 217.343 11.6093  c
217.520 11.7135 217.713 11.7656 217.921 11.7656  c
218.233 11.7656 l
h
226.375 3.20312 m
226.578 6.12500 l
226.375 6.12500 l
226.115 5.25000 225.740 4.61979 225.250 4.23437  c
224.760 3.84895 224.177 3.65625 223.500 3.65625  c
222.927 3.65625 222.409 3.79947 221.945 4.08593  c
221.482 4.37239 221.120 4.83333 220.859 5.46875  c
220.599 6.10416 220.469 6.89583 220.469 7.84375  c
220.469 8.62500 220.594 9.29947 220.844 9.86718  c
221.094 10.4349 221.469 10.8724 221.969 11.1796  c
222.469 11.4869 223.042 11.6406 223.688 11.6406  c
224.240 11.6406 224.729 11.5208 225.156 11.2812  c
225.583 11.0416 226.057 10.5677 226.578 9.85937  c
226.766 9.98437 l
226.339 10.7447 225.836 11.3046 225.258 11.6640  c
224.680 12.0234 223.995 12.2031 223.203 12.2031  c
221.776 12.2031 220.672 11.6718 219.891 10.6093  c
219.307 9.81770 219.016 8.89062 219.016 7.82812  c
219.016 6.97395 219.208 6.18489 219.594 5.46093  c
219.979 4.73697 220.510 4.17968 221.188 3.78906  c
221.865 3.39843 222.599 3.20312 223.391 3.20312  c
224.016 3.20312 224.630 3.35416 225.234 3.65625  c
225.411 3.75000 225.542 3.79687 225.625 3.79687  c
225.740 3.79687 225.839 3.75520 225.922 3.67187  c
226.026 3.55729 226.104 3.40104 226.156 3.20312  c
226.375 3.20312 l
h
233.171 9.12500 m
229.827 9.12500 l
229.249 10.4687 l
229.103 10.8125 229.030 11.0625 229.030 11.2187  c
229.030 11.3541 229.093 11.4713 229.218 11.5703  c
229.343 11.6692 229.614 11.7343 230.030 11.7656  c
230.030 12.0000 l
227.327 12.0000 l
227.327 11.7656 l
227.681 11.7031 227.911 11.6197 228.015 11.5156  c
228.233 11.3177 228.473 10.9062 228.733 10.2812  c
231.765 3.20312 l
231.983 3.20312 l
234.983 10.3593 l
235.223 10.9322 235.442 11.3046 235.640 11.4765  c
235.838 11.6484 236.114 11.7447 236.468 11.7656  c
236.468 12.0000 l
233.062 12.0000 l
233.062 11.7656 l
233.405 11.7447 233.637 11.6875 233.757 11.5937  c
233.877 11.5000 233.937 11.3802 233.937 11.2343  c
233.937 11.0468 233.853 10.7552 233.687 10.3593  c
233.171 9.12500 l
h
232.983 8.64062 m
231.530 5.17187 l
230.030 8.64062 l
232.983 8.64062 l
h
244.059 9.62500 m
244.262 9.65625 l
243.528 12.0000 l
236.872 12.0000 l
236.872 11.7656 l
237.184 11.7656 l
237.549 11.7656 237.809 11.6458 237.965 11.4062  c
238.059 11.2708 238.106 10.9583 238.106 10.4687  c
238.106 4.92187 l
238.106 4.38020 238.049 4.04166 237.934 3.90625  c
237.767 3.71875 237.517 3.62500 237.184 3.62500  c
236.872 3.62500 l
236.872 3.39062 l
240.762 3.39062 l
240.762 3.62500 l
240.304 3.62500 239.984 3.66927 239.801 3.75781  c
239.619 3.84635 239.494 3.95833 239.426 4.09375  c
239.359 4.22916 239.325 4.55208 239.325 5.06250  c
239.325 10.4687 l
239.325 10.8229 239.356 11.0625 239.418 11.1875  c
239.471 11.2812 239.551 11.3489 239.661 11.3906  c
239.770 11.4322 240.101 11.4531 240.653 11.4531  c
241.278 11.4531 l
241.934 11.4531 242.398 11.4036 242.668 11.3046  c
242.939 11.2057 243.184 11.0338 243.403 10.7890  c
243.622 10.5442 243.840 10.1562 244.059 9.62500  c
h
248.016 12.0000 m
248.016 11.7656 l
248.344 11.7656 l
248.708 11.7656 248.969 11.6510 249.125 11.4218  c
249.208 11.2760 249.250 10.9583 249.250 10.4687  c
249.250 4.92187 l
249.250 4.38020 249.193 4.04166 249.078 3.90625  c
248.911 3.71875 248.667 3.62500 248.344 3.62500  c
248.016 3.62500 l
248.016 3.39062 l
251.516 3.39062 l
252.807 3.39062 253.789 3.53645 254.461 3.82812  c
255.133 4.11979 255.672 4.60677 256.078 5.28906  c
256.484 5.97135 256.688 6.76041 256.688 7.65625  c
256.688 8.85416 256.323 9.85416 255.594 10.6562  c
254.781 11.5520 253.536 12.0000 251.859 12.0000  c
248.016 12.0000 l
h
250.469 11.3750 m
251.010 11.5000 251.464 11.5625 251.828 11.5625  c
252.807 11.5625 253.622 11.2161 254.273 10.5234  c
254.925 9.83072 255.250 8.89583 255.250 7.71875  c
255.250 6.53125 254.925 5.59375 254.273 4.90625  c
253.622 4.21875 252.792 3.87500 251.781 3.87500  c
251.396 3.87500 250.958 3.93750 250.469 4.06250  c
250.469 11.3750 l
h
263.138 9.12500 m
259.794 9.12500 l
259.216 10.4687 l
259.071 10.8125 258.998 11.0625 258.998 11.2187  c
258.998 11.3541 259.060 11.4713 259.185 11.5703  c
259.310 11.6692 259.581 11.7343 259.998 11.7656  c
259.998 12.0000 l
257.294 12.0000 l
257.294 11.7656 l
257.649 11.7031 257.878 11.6197 257.982 11.5156  c
258.201 11.3177 258.440 10.9062 258.701 10.2812  c
261.732 3.20312 l
261.951 3.20312 l
264.951 10.3593 l
265.190 10.9322 265.409 11.3046 265.607 11.4765  c
265.805 11.6484 266.081 11.7447 266.435 11.7656  c
266.435 12.0000 l
263.029 12.0000 l
263.029 11.7656 l
263.373 11.7447 263.604 11.6875 263.724 11.5937  c
263.844 11.5000 263.904 11.3802 263.904 11.2343  c
263.904 11.0468 263.821 10.7552 263.654 10.3593  c
263.138 9.12500 l
h
262.951 8.64062 m
261.498 5.17187 l
259.998 8.64062 l
262.951 8.64062 l
h
271.886 12.0000 m
268.573 4.75000 l
268.573 10.5156 l
268.573 11.0364 268.631 11.3645 268.745 11.5000  c
268.901 11.6770 269.146 11.7656 269.480 11.7656  c
269.792 11.7656 l
269.792 12.0000 l
266.792 12.0000 l
266.792 11.7656 l
267.089 11.7656 l
267.453 11.7656 267.714 11.6562 267.870 11.4375  c
267.964 11.3020 268.011 10.9947 268.011 10.5156  c
268.011 4.89062 l
268.011 4.50520 267.969 4.22916 267.886 4.06250  c
267.823 3.93750 267.714 3.83333 267.558 3.75000  c
267.401 3.66666 267.146 3.62500 266.792 3.62500  c
266.792 3.39062 l
269.230 3.39062 l
272.355 10.1250 l
275.417 3.39062 l
277.855 3.39062 l
277.855 3.62500 l
277.558 3.62500 l
277.193 3.62500 276.933 3.73437 276.776 3.95312  c
276.683 4.08854 276.636 4.40104 276.636 4.89062  c
276.636 10.5156 l
276.636 11.0364 276.698 11.3645 276.823 11.5000  c
276.980 11.6770 277.224 11.7656 277.558 11.7656  c
277.855 11.7656 l
277.855 12.0000 l
274.198 12.0000 l
274.198 11.7656 l
274.511 11.7656 l
274.875 11.7656 275.131 11.6562 275.276 11.4375  c
275.370 11.3020 275.417 10.9947 275.417 10.5156  c
275.417 4.75000 l
272.105 12.0000 l
271.886 12.0000 l
h
280.804 7.96875 m
280.804 10.4687 l
280.804 11.0104 280.862 11.3489 280.976 11.4843  c
281.132 11.6718 281.377 11.7656 281.710 11.7656  c
282.039 11.7656 l
282.039 12.0000 l
278.351 12.0000 l
278.351 11.7656 l
278.679 11.7656 l
279.033 11.7656 279.294 11.6458 279.460 11.4062  c
279.544 11.2812 279.585 10.9687 279.585 10.4687  c
279.585 4.92187 l
279.585 4.38020 279.528 4.04166 279.414 3.90625  c
279.247 3.71875 279.002 3.62500 278.679 3.62500  c
278.351 3.62500 l
278.351 3.39062 l
281.507 3.39062 l
282.278 3.39062 282.885 3.47135 283.328 3.63281  c
283.770 3.79427 284.143 4.06250 284.445 4.43750  c
284.747 4.81250 284.898 5.25520 284.898 5.76562  c
284.898 6.47395 284.669 7.04687 284.210 7.48437  c
283.752 7.92187 283.096 8.14062 282.242 8.14062  c
282.033 8.14062 281.809 8.12760 281.570 8.10156  c
281.330 8.07552 281.075 8.03125 280.804 7.96875  c
h
280.804 7.60937 m
281.023 7.65104 281.218 7.68229 281.390 7.70312  c
281.562 7.72395 281.710 7.73437 281.835 7.73437  c
282.283 7.73437 282.666 7.56510 282.984 7.22656  c
283.302 6.88802 283.460 6.44791 283.460 5.90625  c
283.460 5.53125 283.385 5.18229 283.234 4.85937  c
283.083 4.53645 282.867 4.29687 282.585 4.14062  c
282.304 3.98437 281.987 3.90625 281.632 3.90625  c
281.414 3.90625 281.138 3.94791 280.804 4.03125  c
280.804 7.60937 l
h
289.378 11.7656 m
289.378 12.0000 l
285.690 12.0000 l
285.690 11.7656 l
285.987 11.7656 l
286.342 11.7656 286.602 11.6614 286.769 11.4531  c
286.873 11.3177 286.925 10.9895 286.925 10.4687  c
286.925 4.92187 l
286.925 4.48437 286.894 4.19270 286.831 4.04687  c
286.789 3.94270 286.706 3.85416 286.581 3.78125  c
286.394 3.67708 286.196 3.62500 285.987 3.62500  c
285.690 3.62500 l
285.690 3.39062 l
289.378 3.39062 l
289.378 3.62500 l
289.065 3.62500 l
288.711 3.62500 288.456 3.72916 288.300 3.93750  c
288.196 4.07291 288.144 4.40104 288.144 4.92187  c
288.144 10.4687 l
288.144 10.9062 288.170 11.1979 288.222 11.3437  c
288.263 11.4479 288.352 11.5364 288.487 11.6093  c
288.664 11.7135 288.857 11.7656 289.065 11.7656  c
289.378 11.7656 l
h
289.520 3.39062 m
291.863 3.39062 l
297.113 9.84375 l
297.113 4.89062 l
297.113 4.35937 297.056 4.02604 296.941 3.89062  c
296.785 3.71354 296.535 3.62500 296.191 3.62500  c
295.895 3.62500 l
295.895 3.39062 l
298.895 3.39062 l
298.895 3.62500 l
298.598 3.62500 l
298.233 3.62500 297.973 3.73437 297.816 3.95312  c
297.723 4.08854 297.676 4.40104 297.676 4.89062  c
297.676 12.1406 l
297.441 12.1406 l
291.770 5.20312 l
291.770 10.5156 l
291.770 11.0364 291.827 11.3645 291.941 11.5000  c
292.108 11.6770 292.358 11.7656 292.691 11.7656  c
292.988 11.7656 l
292.988 12.0000 l
290.004 12.0000 l
290.004 11.7656 l
290.301 11.7656 l
290.665 11.7656 290.926 11.6562 291.082 11.4375  c
291.176 11.3020 291.223 10.9947 291.223 10.5156  c
291.223 4.51562 l
290.973 4.22395 290.783 4.03385 290.652 3.94531  c
290.522 3.85677 290.332 3.77083 290.082 3.68750  c
289.957 3.64583 289.770 3.62500 289.520 3.62500  c
289.520 3.39062 l
h
307.064 3.20312 m
307.283 5.90625 l
307.064 5.90625 l
306.835 5.22916 306.543 4.71875 306.189 4.37500  c
305.679 3.88541 305.022 3.64062 304.220 3.64062  c
303.116 3.64062 302.283 4.07291 301.720 4.93750  c
301.241 5.67708 301.002 6.55208 301.002 7.56250  c
301.002 8.37500 301.160 9.11979 301.478 9.79687  c
301.796 10.4739 302.210 10.9713 302.720 11.2890  c
303.231 11.6067 303.757 11.7656 304.298 11.7656  c
304.621 11.7656 304.931 11.7265 305.228 11.6484  c
305.525 11.5703 305.809 11.4479 306.080 11.2812  c
306.080 8.79687 l
306.080 8.36979 306.048 8.08854 305.986 7.95312  c
305.923 7.81770 305.822 7.71614 305.681 7.64843  c
305.541 7.58072 305.298 7.54687 304.955 7.54687  c
304.955 7.29687 l
308.283 7.29687 l
308.283 7.54687 l
308.127 7.54687 l
307.793 7.54687 307.564 7.65625 307.439 7.87500  c
307.356 8.03125 307.314 8.33854 307.314 8.79687  c
307.314 11.4375 l
306.835 11.6979 306.358 11.8906 305.884 12.0156  c
305.410 12.1406 304.882 12.2031 304.298 12.2031  c
302.632 12.2031 301.366 11.6666 300.502 10.5937  c
299.856 9.79166 299.533 8.86979 299.533 7.82812  c
299.533 7.06770 299.715 6.34375 300.080 5.65625  c
300.517 4.83333 301.111 4.19791 301.861 3.75000  c
302.486 3.38541 303.231 3.20312 304.095 3.20312  c
304.408 3.20312 304.692 3.22656 304.947 3.27343  c
305.202 3.32031 305.564 3.43229 306.033 3.60937  c
306.272 3.69270 306.434 3.73437 306.517 3.73437  c
306.590 3.73437 306.655 3.69791 306.712 3.62500  c
306.770 3.55208 306.809 3.41145 306.830 3.20312  c
307.064 3.20312 l
h
f
Q
cliprestore
newpath
0 0 m
0 16.0000 l
391.000 16.0000 l
391.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 0 380.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 -380.000 ] concat
cliprestore
Q
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 555 4518 a(The)42 b(captions)h(fo)m(r)f(these)i(graphs)e
(also)g(include)h(terminology)e(which)i(w)m(e)g(will)456
4634 y(explain)38 b(no)m(w.)63 b(The)39 b(term)g(in)g(the)h(\014rst)f
(graph,)i Fm(no)k(damping)p Fn(,)d(should)d(b)s(e)g(self)456
4751 y(explanato)m(ry)-8 b(.)48 b(Notice)35 b(that)g(the)g(mass)g
(oscillates)g(in\014nitely)f(many)g(times,)i(alw)m(a)m(ys)456
4867 y(returning)d(to)f(the)i(same)f(maximum)f(displacement)i(as)f(on)f
(the)h(p)m(revious)g(cycle.)555 4983 y(The)c(term)g(describing)g(the)g
(second)h(graph,)f Fm(underdamping)p Fn(,)j(indicates)d(that)456
5099 y(even)j(though)g(the)h(magnitude)f(of)g(the)g(oscillations)h
(decreases,)h(the)f(damping)f(co-)456 5216 y(e\016cient)d(is)f(to)s(o)f
(small)h(\(relative)g(to)g(the)g(other)h(pa)m(rameters\))g(to)f(stop)g
(the)g(solution)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 456 251 a Fh(4)456 450 y Fn(from)40
b(oscillating)g(fo)m(rever)h({)g(rega)m(rdless)h(of)e(the)h(initial)f
(conditions.)68 b(That)40 b(is)g(to)456 566 y(sa)m(y)-8
b(,)33 b(no)f(matter)i(ho)m(w)f(small)g(the)h(initial)f(displacement,)h
(o)m(r)f(whether)i(there)f(is)f(any)456 683 y(initial)e(velo)s(cit)m(y)
h(impa)m(rted,)h(the)g(solution)f(will)g(alw)m(a)m(ys)g(oscillate)h
(through)f(the)g(rest)456 799 y(p)s(osition)41 b(in\014nitely)h(many)e
(times.)72 b(This)41 b(is)h(b)s(ecause)g(the)g(general)g(solution)f
(has)456 915 y(the)30 b(fo)m(rm)g Fl(y)h Fk(=)c Fl(Ae)1130
879 y Fg(\000)p Fj(t)1232 915 y Fk(cot\(3)p Fl(t)p Fk(\))16
b(+)g Fl(B)5 b(e)1754 879 y Fg(\000)p Fj(t)1856 915 y
Fk(sin)q(\(3)p Fl(t)p Fk(\))p Fn(,)30 b(and)f(any)h(initial)f
(condition)h(\(other)456 1031 y(than)39 b(the)g(trivial)g(one)g
Fl(y)t Fk(\(0\))e(=)56 b(_)-45 b Fl(y)t Fk(\(0\))38 b(=)g(0)p
Fn(\))h(will)g(result)h(in)f(in\014nitely)g(many)g(such)456
1147 y(oscillations.)555 1264 y(This)e(stands)h(in)e(sta)m(rk)i
(contrast)g(to)f(the)g(third)g(situation,)h(which)g(is)f(describ)s(ed)
456 1380 y(as)29 b Fm(o)m(v)m(erdamping)p Fn(.)44 b(In)29
b(this)h(setting,)h(the)e(damping)g(co)s(e\016cient)i(is)e(so)h(la)m
(rge)f(that)456 1496 y Fa(no)34 b(initial)h(displac)-5
b(ement)32 b Fn(can)g(cause)i(mo)m(re)g(than)f(one)g(oscillation!)44
b(W)m(e)33 b(can)g(see)456 1612 y(this)i(b)m(y)f(analyzing)g(the)h(fo)m
(rm)g(of)f(the)i(general)f(solution:)48 b Fl(y)t Fk(\()p
Fl(t)p Fk(\))30 b(=)h Fl(Ae)2965 1576 y Fg(\000)p Fj(t)3074
1612 y Fk(+)23 b Fl(B)5 b(e)3297 1576 y Fg(\000)p Fd(2)p
Fj(t)3417 1612 y Fn(.)456 1729 y(If)37 b(w)m(e)i(facto)m(r)f(out)g
Fl(e)1184 1692 y Fg(\000)p Fd(2)p Fj(t)1304 1729 y Fn(,)h(w)m(e)g(can)f
(write)h(this)g(as)f Fl(y)t Fk(\()p Fl(t)p Fk(\))e(=)h
Fl(e)2595 1692 y Fg(\000)p Fd(2)p Fj(t)2715 1729 y Fk(\()p
Fl(Ae)2871 1692 y Fj(t)2927 1729 y Fk(+)25 b Fl(B)5 b
Fk(\))p Fn(,)40 b(which)456 1847 y(will)f(only)h(b)s(e)f(zero)i(when)f
Fl(t)g Fk(=)g(ln)1718 1766 y Fc(\000)1774 1807 y Fg(\000)p
Fj(B)p 1774 1824 112 4 v 1803 1881 a(A)1895 1766 y Fc(\001)1941
1847 y Fn(.)65 b(Dep)s(ending)40 b(on)f(the)i(choice)f(of)g(initial)456
1963 y(conditions,)34 b(this)f(value)g(of)g Fl(t)g Fn(ma)m(y)g(o)m(r)h
(ma)m(y)e(not)i(exist,)g(and)f(even)g(if)g(it)g(do)s(es)h(exist,)456
2079 y(it)28 b(ma)m(y)f(not)h(b)s(e)g(p)s(ositive,)h(in)f(which)h(case)
f(it)g(w)m(ould)h(not)e(b)s(e)h(relevant)h(to)f(our)f(mo)s(del)456
2195 y(of)32 b(the)h(situation.)555 2311 y(The)k(last)h(graph)f(lo)s
(oks)g(very)g(simila)m(r)g(to)g(the)h(nak)m(ed)g(ey)m(e,)h(but)f(w)m(e)
g(have)f(given)456 2428 y(it)d(a)g(di\013erent)h(name:)48
b Fm(critical)39 b(damping)p Fn(.)51 b(That)33 b(is)i(b)s(ecause)g
(this)g(is)g(the)g(b)s(o)m(r-)456 2544 y(derline)i(case)h({)e(if)h(the)
h(damping)e(co)s(e\016cient)i(is)f(reduced)i(b)m(y)d(any)h(small)f
(amount)456 2660 y(whatso)s(ever,)g(the)f(situation)g(will)g(switch)h
(to)f(underdamping.)50 b(Also,)36 b(the)g(fo)m(rm)f(of)456
2776 y(the)f(general)f(solution)h(is)g(slightly)f(di\013erent,)i(as)e
(the)h(double)g(ro)s(ot)f(of)g(the)h(cha)m(rac-)456 2893
y(teristic)d(equation)f(p)m(ro)s(duces)h Fl(y)t Fk(\()p
Fl(t)p Fk(\))c(=)g Fl(Ae)1933 2856 y Fg(\000)p Fj(t)2035
2893 y Fk(+)17 b Fl(B)5 b(te)2287 2856 y Fg(\000)p Fj(t)2372
2893 y Fn(.)42 b(F)m(o)m(r)31 b(this)f(kind)h(of)e(function,)456
3010 y(the)37 b(equation)f Fl(y)t Fk(\()p Fl(t)p Fk(\))d(=)h(0)i
Fn(de\014nitely)h(has)g(a)f(solution)g({)g(when)h Fl(t)e
Fk(=)2922 2971 y Fg(\000)p Fj(A)p 2922 2988 108 4 v 2948
3045 a(B)3076 3010 y Fn({)h(though)456 3127 y(this)d(ma)m(y)f(still)h
(b)s(e)g(a)f(negative)g(value)h(and)f(thus)h(irrelevant)g(to)g(the)g
(mo)s(del.)555 3243 y(These)44 b(di\013erences)h(in)e(b)s(ehaviour)f
(dep)s(end)i(on)f(the)h(general)f(solution)g(of)g(the)456
3359 y(equation)28 b Fl(m)7 b Fk(\177)-56 b Fl(y)16 b
Fk(+)d Fl(C)24 b Fk(_)-44 b Fl(y)16 b Fk(+)d Fl(k)s(y)31
b Fk(=)c(0)p Fn(,)i(which)g(in)f(turn)g(is)g(determined)i(b)m(y)e(the)h
(cha)m(racter-)456 3475 y(istic)i(equation.)42 b(W)m(e)31
b(can)f(therefo)m(re)h(use)g(the)g(cha)m(racteristic)h(equation)e(to)g
(classify)456 3592 y(the)36 b(t)m(yp)s(e)h(of)e(damping)h(in)g(any)g
(setup.)55 b(T)-8 b(o)35 b(obtain)h(in\014nitely)g(many)g
(oscillations,)456 3708 y(our)42 b(general)i(solution)f(must)g(contain)
g(sinusoidal)g(functions,)k(and)42 b(those)i(o)s(ccur)456
3824 y(when)36 b(the)h(cha)m(racteristic)h(equation)e(has)h(complex)f
(ro)s(ots)g(with)g(non-zero)g(imagi-)456 3940 y(na)m(ry)c(pa)m(rts;)h
(there)h(will)e(b)s(e)h(no)f(sinusoidal)h(b)s(ehaviour)e(if)i(the)g(ro)
s(ots)f(a)m(re)h(real.)43 b(The)456 4057 y(b)s(o)m(rderline)f
(situation)g(of)f(critical)h(damping)g(is)g(p)m(recisely)h(the)f(case)h
(of)e(a)g(double)456 4173 y(ro)s(ot.)i(If)32 b(w)m(e)h(solve)g(the)g
(cha)m(racteristics)i(equation)e(using)f(the)h(quadratic)g(fo)m(rmula,)
1445 4539 y Fl(r)d Fk(=)1633 4472 y Fi(\000)p Fl(C)f
Fi(\006)1909 4390 y(p)p 1992 4390 427 4 v 82 x Fl(C)2069
4443 y Fd(2)2130 4472 y Fi(\000)23 b Fk(4)p Fl(mk)p 1633
4516 786 4 v 1958 4608 a Fk(2)p Fl(m)2428 4539 y(;)456
4867 y Fn(then)39 b(w)m(e)h(can)f(detect)i(the)f(t)m(yp)s(es)g(of)e
(solutions)i(b)m(y)f(lo)s(oking)f(directly)i(at)f(the)g(dis-)456
4983 y(criminant)26 b(\(the)h(exp)m(ression)g(inside)g(the)f(squa)m(re)
h(ro)s(ot\),)g(as)f(there)h(will)f(b)s(e)g(real)g(ro)s(ots)456
5099 y(when)41 b(the)g(discriminant)h(is)e(p)s(ositive)h(\(o)m(r)g
(zero\))g(and)f(complex)h(ro)s(ots)f(when)i(the)456 5216
y(discriminant)33 b(is)g(negative.)43 b(A)33 b(zero)g(discriminant)h
(is)f(the)g(b)s(o)m(rderline)g(case.)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 3406 251 a Fh(5)p 989 370 1922
4 v 989 1288 4 918 v 1050 464 a Fn(A)33 b(sp)m(ring-mass)g(system)h(mo)
s(delled)f(b)m(y)f(the)h(ODE)1494 621 y Fl(m)7 b Fk(\177)-56
b Fl(y)26 b Fk(+)c Fl(C)i Fk(_)-44 b Fl(y)25 b Fk(+)d
Fl(k)s(y)31 b Fk(=)d Fl(f)11 b Fk(\()p Fl(t)p Fk(\))1050
778 y Fn(exhibits:)1050 895 y Fm(No)37 b(damping)d Fn(if)f
Fl(b)28 b Fk(=)f(0)p Fn(;)1050 1011 y Fm(Underdamping)35
b Fn(if)d Fl(C)1974 975 y Fd(2)2036 1011 y Fi(\000)22
b Fk(4)p Fl(mk)31 b(<)d Fk(0)p Fn(;)1050 1127 y Fm(Critical)37
b(Damping)d Fn(if)f Fl(C)2096 1091 y Fd(2)2157 1127 y
Fi(\000)23 b Fk(4)p Fl(mk)31 b Fk(=)c(0)p Fn(;)1050 1243
y Fm(Ov)m(erdamping)35 b Fn(if)d Fl(C)1904 1207 y Fd(2)1965
1243 y Fi(\000)23 b Fk(4)p Fl(mk)31 b(>)c Fk(0)p Fn(.)p
2907 1288 V 989 1291 1922 4 v 456 1557 a Fe(Exer)m(cise)53
b(2:)58 b Fn(Classify)40 b(the)h(t)m(yp)s(e)e(of)h(damping)f(fo)m(r)h
(each)g(of)f(the)i(follo)m(wing)456 1674 y(situations.)604
1825 y(\(1\))g Fl(m)28 b Fk(=)g(2)p Fl(;)49 b(C)34 b
Fk(=)28 b(12)p Fl(;)49 b(k)30 b Fk(=)e(16)604 1941 y
Fn(\(2\))41 b Fl(m)28 b Fk(=)g(2)p Fl(;)49 b(C)34 b Fk(=)28
b(12)p Fl(;)49 b(k)30 b Fk(=)e(18)604 2058 y Fn(\(3\))41
b Fl(m)28 b Fk(=)g(3)p Fl(;)49 b(C)34 b Fk(=)28 b(12)p
Fl(;)49 b(k)30 b Fk(=)e(18)604 2174 y Fn(\(4\))41 b Fl(m)28
b Fk(=)g(2)p Fl(;)49 b(C)34 b Fk(=)28 b(8)p Fl(;)49 b(k)31
b Fk(=)c(16)456 2466 y Fe(Exer)m(cise)50 b(3:)j Fn(Supp)s(ose)38
b(a)e(mass)i(of)f Fk(4)g Fl(k)s(g)j Fn(is)e(attached)g(to)f(the)g(free)
h(end)g(of)456 2583 y(a)e(sp)m(ring)i(whose)g(sp)m(ring)g(constant)g
(is)f Fl(k)i Fk(=)d(10)2167 2543 y Fj(N)p 2167 2560 64
4 v 2167 2617 a(m)2239 2583 y Fn(.)57 b(Find)38 b(the)g(exact)f(value)g
(of)g(the)456 2699 y(damping)32 b(co)s(e\016cient)i Fl(C)39
b Fn(that)33 b(will)f(result)i(in)f(criticial)g(damping.)555
2815 y(Next)48 b(w)m(e)g(turn)f(our)g(attention)h(to)f(what)g(happ)s
(ens)g(when)h(w)m(e)g(intro)s(duce)g(an)456 2931 y(external)33
b(driving)f(fo)m(rce.)456 3189 y Fe(Example)63 b(2:)73
b Fn(A)47 b(mass)g(of)g Fk(2)f Fl(k)s(g)51 b Fn(is)c(hung)f(from)h(a)g
(sp)m(ring)g(whose)h(sp)m(ring)456 3305 y(constant)37
b(is)g Fk(34)1044 3266 y Fj(N)p 1044 3282 V 1044 3339
a(m)1117 3305 y Fn(.)56 b(The)36 b(other)h(end)h(of)e(the)h(sp)m(ring)g
(is)g(ancho)m(red)h(to)f(the)g(ceiling.)456 3432 y(The)25
b(system)h(is)g(subject)g(to)f(damping)g(given)g(b)m(y)g(the)h
(constant)g Fl(C)34 b Fk(=)28 b(4)2962 3393 y Fj(N)7
b Fg(\001)p Fj(s)p 2962 3409 116 4 v 2988 3467 a(m)3087
3432 y Fn(.)41 b(Gravit)m(y)456 3549 y(acts)30 b(on)g(the)g(mass)g
(and,)h(if)e(not)h(fo)m(r)g(the)g(sp)m(ring)g(holding)g(it,)g(w)m(ould)
h(accelerate)g(the)456 3665 y(mass)39 b(at)g Fk(9)p Fl(:)p
Fk(8)951 3626 y Fj(m)p 949 3642 68 4 v 949 3699 a(s)982
3680 y Ff(2)1025 3665 y Fn(.)62 b(The)39 b(mass)g(is)g(pushed)h(up)f
(so)g(that)f(the)i(sp)m(ring)f(is)g(comp)m(ressed)456
3781 y(o.1)32 b(meters)j(from)d(its)i(natural)e(length.)45
b(Then)33 b(the)g(mass)h(is)f(released.)46 b(Determine)456
3897 y(the)33 b(long-term)f(b)s(ehaviour)g(of)g(the)h(mass)g(\(i.e.)44
b Fk(lim)2307 3912 y Fj(t)p Fg(!1)2494 3897 y Fl(y)t
Fk(\()p Fl(t)p Fk(\))p Fn(\).)555 4013 y(The)38 b(external)h(driving)f
(fo)m(rce)h(due)g(to)f(gravit)m(y)g(acts)h(do)m(wnw)m(a)m(rd)h(on)e
(the)h(mass,)456 4130 y(so)44 b(it's)h(e\013ect)g(is)g(to)f(lengthen)h
(the)g(sp)m(ring.)80 b(The)44 b(magnitude)g(of)g(this)h(fo)m(rce)g(is)
456 4246 y Fl(F)519 4261 y Fj(e)583 4246 y Fk(=)28 b
Fl(mg)j Fk(=)d(\(2)k Fl(k)s(g)t Fk(\))1233 4165 y Fc(\000)1277
4246 y Fk(9)p Fl(:)p Fk(8)1414 4207 y Fj(m)p 1412 4223
V 1412 4280 a(s)1445 4261 y Ff(2)1489 4165 y Fc(\001)1563
4246 y Fk(=)27 b(19)p Fl(:)p Fk(6)32 b Fl(N)10 b Fn(.)44
b(Our)33 b(initial)f(value)g(p)m(roblem)h(is)g(thus:)916
4434 y Fk(2)7 b(\177)-56 b Fl(y)25 b Fk(+)d(4)17 b(_)-44
b Fl(y)25 b Fk(+)d(17)p Fl(y)31 b Fk(=)c(19)p Fl(:)p
Fk(6)p Fl(;)114 b(y)t Fk(\(0\))26 b(=)i Fi(\000)p Fk(0)p
Fl(:)p Fk(3)p Fl(;)132 b Fk(_)-45 b Fl(y)s Fk(\(0\))28
b(=)f(0)p Fl(:)456 4621 y Fn(\(Note)39 b(that)g(since)h(w)m(e)g(a)m(re)
f(treating)h(the)f(do)m(wnw)m(a)m(rd)h(fo)m(rce)g(of)e(gravit)m(y)h(as)
g(b)s(eing)456 4737 y(in)31 b(the)i(p)s(ositive)f(direction,)h(the)f
(initial)g(displacement)i(of)d(the)i(comp)m(ressed)h(sp)m(ring)456
4854 y(must)f(therefo)m(re)h(b)s(e)f(negative.\))555
4970 y(The)g(solution)f(of)g(this)i(IVP)e(is)1024 5180
y Fl(y)t Fk(\()p Fl(t)p Fk(\))27 b(=)1327 5113 y(9)p
Fl(:)p Fk(8)p 1327 5158 125 4 v 1341 5249 a(17)1484 5180
y(+)1592 5113 y(81)p 1592 5158 98 4 v 1592 5249 a(17)1700
5180 y Fl(e)1745 5139 y Fg(\000)p Fj(t)1846 5180 y Fk(cos)q(\(4)p
Fl(t)p Fk(\))22 b(+)2291 5113 y(81)p 2267 5158 147 4
v 2267 5249 a(680)2423 5180 y Fl(e)2468 5139 y Fg(\000)p
Fj(t)2569 5180 y Fk(sin)q(\(4)p Fl(t)p Fk(\))p Fl(:)p
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 456 251 a Fh(6)456 450 y Fn(F)m(rom)33
b(this,)g(w)m(e)h(see)f(that)1641 611 y Fk(lim)1626 670
y Fj(t)p Fg(!1)1809 611 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27
b(=)2112 543 y(9)p Fl(:)p Fk(8)p 2112 588 125 4 v 2126
679 a(17)2247 611 y Fl(:)456 786 y Fn(That)32 b(is)h(to)g(sa)m(y)-8
b(,)33 b(in)g(the)g(long)g(term)g(the)h(mass)f(settles)i(to)m(w)m(a)m
(rd)f(a)e(p)s(osition)h(that)g(is)466 863 y Fd(9)p Fj(:)p
Fd(8)p 466 880 91 4 v 476 937 a(17)593 903 y Fi(\031)c
Fk(0)p Fl(:)p Fk(58)i Fl(m)i Fn(b)s(elo)m(w)g(the)g(sp)m(ring's)h
(natural)e(rest)i(p)s(osition.)738 b Fb(\003)555 1020
y Fn(The)38 b(p)s(osition)f(that)g(the)h(the)g(mass)g(\(i.e.)59
b(the)38 b(free)g(end)f(of)g(the)h(sp)m(ring\))g(tends)456
1136 y(to)m(w)m(a)m(rd)e(in)g(the)g(p)m(revious)h(example)e(is)h
(called)g(the)h Fm(equilibrium)42 b(p)s(osition)37 b
Fn(b)s(e-)456 1253 y(cause)h(that)g(is)f(the)i(p)s(osition)e(where)i
(the)f(fo)m(rces)g(due)g(to)g(gravit)m(y)f(and)g(sp)m(ring)h(a)m(re)456
1369 y(in)k(equilib)m(rium)i(with)f(one)g(another)g({)f(the)h(do)m(wnw)
m(a)m(rd)h(fo)m(rce)f(due)g(to)g(gravit)m(y)f(is)456
1485 y(equal)35 b(in)g(magnitude)h(to)f(the)h(up)m(w)m(a)m(rd)g(fo)m
(rce)g(of)f(the)h(sp)m(ring.)52 b(The)35 b(reader)h(should)456
1601 y(verify)h(that)h(the)h(constant)g(function)f Fl(y)t
Fk(\()p Fl(t)p Fk(\))e(=)2159 1562 y Fd(9)p Fj(:)p Fd(8)p
2159 1578 V 2169 1636 a(17)2298 1601 y Fn(is)i(an)g(equilib)m(rium)h
(solution)f(of)456 1717 y(the)33 b(di\013erential)g(equation)g(in)f
(that)h(example.)456 1932 y Fe(Example)49 b(3:)g Fn(The)36
b(sp)m(ring-mass)g(system)h(in)e(the)h(p)m(revious)g(example)g(b)s
(egins)456 2048 y(at)25 b(rest)i(in)f(the)h(equilib)m(rium)g(p)s
(osition,)g(where)g(sp)m(ring)g(and)e(gravitational)g(fo)m(rces)i(a)m
(re)456 2164 y(balanced.)46 b(An)34 b(ea)m(rthquak)m(e)h(then)f(b)s
(egins)g(to)f(shak)m(e)i(the)f(building)f(up)h(and)f(do)m(wn,)456
2280 y(impa)m(rting)41 b(a)f(fo)m(rce)h(on)g(the)g(system)h(that)f(is)g
(transferred)h(to)f(the)g(mass.)69 b(If)40 b(this)456
2396 y(fo)m(rce)29 b(is)h(mo)s(delled)f(b)m(y)g(the)h(function)f
Fl(f)11 b Fk(\()p Fl(t)p Fk(\))28 b(=)f(0)p Fl(:)p Fk(2)17
b(sin\(0)p Fl(:)p Fk(04)p Fl(t)p Fk(\))29 b Fl(N)10 b
Fn(,)30 b(\014nd)f(fo)m(rmula)g(fo)m(r)456 2513 y Fl(y)t
Fk(\()p Fl(t)p Fk(\))p Fn(,)i(and)i(graph)f(the)h(solution)g(over)f
(the)h(time)h(interval)e Fk(0)27 b Fi(\024)i Fl(t)f Fi(\024)g
Fk(300)p Fn(.)555 2629 y(W)m(e)33 b(need)g(to)g(solve)f(the)i(IVP:)588
2818 y Fk(2)7 b(\177)-56 b Fl(y)25 b Fk(+)d(4)17 b(_)-44
b Fl(y)25 b Fk(+)d(34)p Fl(y)30 b Fk(=)e(19)p Fl(:)p
Fk(6)21 b(+)h(0)p Fl(:)p Fk(02)17 b(sin\(0)p Fl(:)p Fk(04)p
Fl(t)p Fk(\))p Fl(;)114 b(y)t Fk(\(0\))26 b(=)2654 2750
y(9)p Fl(:)p Fk(8)p 2654 2795 125 4 v 2668 2886 a(17)2788
2818 y Fl(;)132 b Fk(_)-44 b Fl(y)s Fk(\(0\))27 b(=)h(0)p
Fl(:)555 3012 y Fn(The)33 b(solution)f(is)h(given)f(b)m(y)h(the)g(fo)m
(rmula)463 3221 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27 b(=)766
3153 y(9)p Fl(:)p Fk(8)p 766 3198 V 780 3289 a(17)923
3221 y(+)22 b Fl(A)17 b Fk(cos\(0)p Fl(:)p Fk(04)p Fl(t)p
Fk(\))22 b(+)g Fl(B)g Fk(sin)q(\(0)p Fl(:)p Fk(04)p Fl(t)p
Fk(\))f(+)h Fl(C)7 b(e)2388 3180 y Fg(\000)p Fj(t)2490
3221 y Fk(cos\(4)p Fl(t)p Fk(\))22 b(+)g Fl(D)s(e)3029
3180 y Fg(\000)p Fj(t)3130 3221 y Fk(sin)q(\(4)p Fl(t)p
Fk(\))p Fl(;)456 3425 y Fn(where)k Fl(A)h Fi(\031)i(\000)p
Fk(2)p Fl(:)p Fk(77)6 b Fi(\001)g Fk(10)1312 3389 y Fg(\000)p
Fd(6)1406 3425 y Fn(,)26 b Fl(B)33 b Fi(\031)28 b Fk(5)p
Fl(:)p Fk(88)6 b Fi(\001)g Fk(10)1983 3389 y Fg(\000)p
Fd(4)2077 3425 y Fn(,)27 b Fl(C)34 b Fi(\031)29 b Fk(2)p
Fl(:)p Fk(77)6 b Fi(\001)g Fk(10)2653 3389 y Fg(\000)p
Fd(6)2771 3425 y Fn(and)25 b Fl(D)30 b Fi(\031)e(\000)p
Fk(5)p Fl(:)p Fk(19)6 b Fi(\001)456 3541 y Fk(10)554
3505 y Fg(\000)p Fd(6)647 3541 y Fn(.)44 b(This)32 b(a)h(a)f(graph)g
(of)g(the)h(functions)g(with)g(these)h(rounded)f(co)s(e\016cients:)1350
4794 y @beginspecial 20 @llx 118 @lly 575 @urx 673 @ury
1440 @rwi @setspecial
%%BeginDocument: sinusoidaldriving.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 4:19:02 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
42.1000 -1.00000 339.886 354.000 rc
newpath
43.1000 176.498 m
46.7715 154.431 l
50.4431 131.914 l
53.6378 112.926 l
56.8324 94.7632 l
60.4251 75.6104 l
64.0178 58.1075 l
67.6343 42.4448 l
71.2508 29.0036 l
74.8501 18.0528 l
78.4494 9.70291 l
81.7865 4.40515 l
85.1235 1.53601 l
85.9873 1.19479 l
86.8512 1.01953 l
87.7150 1.01040 l
88.5788 1.16735 l
90.3065 1.97900 l
92.0341 3.45135 l
95.6076 8.56658 l
99.1811 16.3990 l
106.305 39.5769 l
109.969 55.0299 l
113.633 72.5489 l
116.860 89.4548 l
120.087 107.509 l
123.720 128.912 l
127.353 151.110 l
131.001 173.827 l
134.649 196.588 l
138.165 218.207 l
141.680 239.172 l
144.873 257.369 l
148.065 274.521 l
151.861 293.251 l
155.658 309.850 l
158.873 322.017 l
162.089 332.278 l
165.830 341.636 l
169.571 348.067 l
171.226 349.947 l
172.882 351.223 l
173.710 351.634 l
174.538 351.893 l
175.365 351.999 l
176.193 351.952 l
178.010 351.316 l
179.826 349.948 l
181.642 347.854 l
183.459 345.043 l
186.918 337.751 l
190.378 328.014 l
197.597 300.507 l
200.911 285.014 l
204.226 268.011 l
207.801 248.249 l
211.377 227.325 l
215.090 204.725 l
218.804 181.630 l
222.037 161.440 l
225.270 141.448 l
228.761 120.387 l
232.253 100.191 l
235.860 80.5697 l
239.467 62.5291 l
242.996 46.6962 l
246.525 32.9114 l
253.354 12.8321 l
257.145 5.79138 l
260.936 1.85876 l
261.787 1.41134 l
262.639 1.12496 l
263.490 1.00000 l
264.342 1.03649 l
266.045 1.59362 l
267.748 2.79434 l
271.386 7.48944 l
275.023 15.0172 l
281.614 35.4400 l
285.217 49.9656 l
288.820 66.5726 l
292.211 83.8549 l
295.601 102.486 l
299.145 123.109 l
302.688 144.582 l
306.153 166.069 l
309.618 187.715 l
313.245 210.188 l
316.872 232.099 l
320.366 252.330 l
323.859 271.388 l
327.432 289.358 l
331.004 305.503 l
338.090 331.132 l
341.346 339.698 l
344.601 346.071 l
346.467 348.701 l
348.333 350.571 l
349.265 351.218 l
350.198 351.672 l
351.131 351.932 l
352.064 352.000 l
353.733 351.636 l
355.401 350.655 l
357.070 349.058 l
358.739 346.852 l
362.297 340.150 l
365.855 330.823 l
369.261 319.574 l
372.667 306.223 l
376.327 289.755 l
379.986 271.365 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
323.839 355.000 m
323.839 357.600 l
S
newpath
211.543 355.000 m
211.543 357.600 l
S
newpath
99.2478 355.000 m
99.2478 357.600 l
S
newpath
43.1000 355.000 m
379.986 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
205 375 12 15 rc
newpath
212.375 379.687 m
211.875 381.406 l
212.875 381.406 l
212.765 381.812 l
211.781 381.812 l
210.687 385.546 l
210.572 385.953 210.515 386.213 210.515 386.328  c
210.515 386.401 210.531 386.458 210.562 386.500  c
210.593 386.541 210.635 386.562 210.687 386.562  c
210.791 386.562 210.927 386.484 211.093 386.328  c
211.197 386.244 211.427 385.984 211.781 385.546  c
211.984 385.718 l
211.599 386.281 211.234 386.677 210.890 386.906  c
210.651 387.072 210.411 387.156 210.171 387.156  c
209.984 387.156 209.830 387.096 209.710 386.976  c
209.591 386.856 209.531 386.708 209.531 386.531  c
209.531 386.302 209.599 385.953 209.734 385.484  c
210.796 381.812 l
209.843 381.812 l
209.906 381.562 l
210.364 381.437 210.750 381.247 211.062 380.992  c
211.375 380.737 211.718 380.302 212.093 379.687  c
212.375 379.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
43.1000 355.000 m
43.1000 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
45.4687 371.750 m
45.4687 370.770 45.6171 369.924 45.9140 369.210  c
46.2109 368.497 46.6041 367.968 47.0937 367.625  c
47.4791 367.354 47.8750 367.218 48.2812 367.218  c
48.9375 367.218 49.5260 367.552 50.0468 368.218  c
50.7031 369.052 51.0312 370.182 51.0312 371.609  c
51.0312 372.609 50.8880 373.458 50.6015 374.156  c
50.3151 374.854 49.9479 375.362 49.5000 375.679  c
49.0520 375.997 48.6250 376.156 48.2187 376.156  c
47.3958 376.156 46.7083 375.671 46.1562 374.703  c
45.6979 373.880 45.4687 372.895 45.4687 371.750  c
h
46.7187 371.906 m
46.7187 373.093 46.8645 374.062 47.1562 374.812  c
47.3958 375.437 47.7552 375.750 48.2343 375.750  c
48.4635 375.750 48.7005 375.648 48.9453 375.445  c
49.1901 375.242 49.3750 374.895 49.5000 374.406  c
49.6979 373.687 49.7968 372.661 49.7968 371.328  c
49.7968 370.349 49.6927 369.531 49.4843 368.875  c
49.3385 368.385 49.1406 368.041 48.8906 367.843  c
48.7239 367.708 48.5156 367.640 48.2656 367.640  c
47.9843 367.640 47.7291 367.765 47.5000 368.015  c
47.1979 368.369 46.9921 368.924 46.8828 369.679  c
46.7734 370.434 46.7187 371.177 46.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
155.395 355.000 m
155.395 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.531 368.234 m
154.625 367.218 l
154.828 367.218 l
154.828 374.484 l
154.828 374.963 154.849 375.263 154.890 375.382  c
154.932 375.502 155.015 375.593 155.140 375.656  c
155.265 375.718 155.520 375.755 155.906 375.765  c
155.906 376.000 l
152.671 376.000 l
152.671 375.765 l
153.078 375.755 153.341 375.718 153.460 375.656  c
153.580 375.593 153.664 375.510 153.710 375.406  c
153.757 375.302 153.781 374.994 153.781 374.484  c
153.781 369.843 l
153.781 369.208 153.760 368.802 153.718 368.625  c
153.687 368.489 153.632 368.390 153.554 368.328  c
153.476 368.265 153.380 368.234 153.265 368.234  c
153.109 368.234 152.895 368.302 152.625 368.437  c
152.531 368.234 l
h
157.968 371.750 m
157.968 370.770 158.117 369.924 158.414 369.210  c
158.710 368.497 159.104 367.968 159.593 367.625  c
159.979 367.354 160.375 367.218 160.781 367.218  c
161.437 367.218 162.026 367.552 162.546 368.218  c
163.203 369.052 163.531 370.182 163.531 371.609  c
163.531 372.609 163.388 373.458 163.101 374.156  c
162.815 374.854 162.447 375.362 162.000 375.679  c
161.552 375.997 161.125 376.156 160.718 376.156  c
159.895 376.156 159.208 375.671 158.656 374.703  c
158.197 373.880 157.968 372.895 157.968 371.750  c
h
159.218 371.906 m
159.218 373.093 159.364 374.062 159.656 374.812  c
159.895 375.437 160.255 375.750 160.734 375.750  c
160.963 375.750 161.200 375.648 161.445 375.445  c
161.690 375.242 161.875 374.895 162.000 374.406  c
162.197 373.687 162.296 372.661 162.296 371.328  c
162.296 370.349 162.192 369.531 161.984 368.875  c
161.838 368.385 161.640 368.041 161.390 367.843  c
161.224 367.708 161.015 367.640 160.765 367.640  c
160.484 367.640 160.229 367.765 160.000 368.015  c
159.697 368.369 159.492 368.924 159.382 369.679  c
159.273 370.434 159.218 371.177 159.218 371.906  c
h
164.468 371.750 m
164.468 370.770 164.617 369.924 164.914 369.210  c
165.210 368.497 165.604 367.968 166.093 367.625  c
166.479 367.354 166.875 367.218 167.281 367.218  c
167.937 367.218 168.526 367.552 169.046 368.218  c
169.703 369.052 170.031 370.182 170.031 371.609  c
170.031 372.609 169.888 373.458 169.601 374.156  c
169.315 374.854 168.947 375.362 168.500 375.679  c
168.052 375.997 167.625 376.156 167.218 376.156  c
166.395 376.156 165.708 375.671 165.156 374.703  c
164.697 373.880 164.468 372.895 164.468 371.750  c
h
165.718 371.906 m
165.718 373.093 165.864 374.062 166.156 374.812  c
166.395 375.437 166.755 375.750 167.234 375.750  c
167.463 375.750 167.700 375.648 167.945 375.445  c
168.190 375.242 168.375 374.895 168.500 374.406  c
168.697 373.687 168.796 372.661 168.796 371.328  c
168.796 370.349 168.692 369.531 168.484 368.875  c
168.338 368.385 168.140 368.041 167.890 367.843  c
167.724 367.708 167.515 367.640 167.265 367.640  c
166.984 367.640 166.729 367.765 166.500 368.015  c
166.197 368.369 165.992 368.924 165.882 369.679  c
165.773 370.434 165.718 371.177 165.718 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
267.691 355.000 m
267.691 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
268.953 374.343 m
268.359 376.000 l
263.281 376.000 l
263.281 375.765 l
264.770 374.401 265.820 373.286 266.429 372.421  c
267.039 371.557 267.343 370.770 267.343 370.062  c
267.343 369.510 267.177 369.059 266.843 368.710  c
266.510 368.362 266.109 368.187 265.640 368.187  c
265.224 368.187 264.846 368.309 264.507 368.554  c
264.169 368.799 263.921 369.161 263.765 369.640  c
263.531 369.640 l
263.635 368.859 263.906 368.260 264.343 367.843  c
264.781 367.427 265.328 367.218 265.984 367.218  c
266.682 367.218 267.265 367.442 267.734 367.890  c
268.203 368.338 268.437 368.864 268.437 369.468  c
268.437 369.906 268.333 370.343 268.125 370.781  c
267.812 371.468 267.307 372.192 266.609 372.953  c
265.557 374.109 264.895 374.807 264.625 375.046  c
266.875 375.046 l
267.333 375.046 267.653 375.028 267.835 374.992  c
268.018 374.955 268.184 374.885 268.335 374.781  c
268.487 374.677 268.614 374.531 268.718 374.343  c
268.953 374.343 l
h
269.968 371.750 m
269.968 370.770 270.117 369.924 270.414 369.210  c
270.710 368.497 271.104 367.968 271.593 367.625  c
271.979 367.354 272.375 367.218 272.781 367.218  c
273.437 367.218 274.026 367.552 274.546 368.218  c
275.203 369.052 275.531 370.182 275.531 371.609  c
275.531 372.609 275.388 373.458 275.101 374.156  c
274.815 374.854 274.447 375.362 274.000 375.679  c
273.552 375.997 273.125 376.156 272.718 376.156  c
271.895 376.156 271.208 375.671 270.656 374.703  c
270.197 373.880 269.968 372.895 269.968 371.750  c
h
271.218 371.906 m
271.218 373.093 271.364 374.062 271.656 374.812  c
271.895 375.437 272.255 375.750 272.734 375.750  c
272.963 375.750 273.200 375.648 273.445 375.445  c
273.690 375.242 273.875 374.895 274.000 374.406  c
274.197 373.687 274.296 372.661 274.296 371.328  c
274.296 370.349 274.192 369.531 273.984 368.875  c
273.838 368.385 273.640 368.041 273.390 367.843  c
273.224 367.708 273.015 367.640 272.765 367.640  c
272.484 367.640 272.229 367.765 272.000 368.015  c
271.697 368.369 271.492 368.924 271.382 369.679  c
271.273 370.434 271.218 371.177 271.218 371.906  c
h
276.468 371.750 m
276.468 370.770 276.617 369.924 276.914 369.210  c
277.210 368.497 277.604 367.968 278.093 367.625  c
278.479 367.354 278.875 367.218 279.281 367.218  c
279.937 367.218 280.526 367.552 281.046 368.218  c
281.703 369.052 282.031 370.182 282.031 371.609  c
282.031 372.609 281.888 373.458 281.601 374.156  c
281.315 374.854 280.947 375.362 280.500 375.679  c
280.052 375.997 279.625 376.156 279.218 376.156  c
278.395 376.156 277.708 375.671 277.156 374.703  c
276.697 373.880 276.468 372.895 276.468 371.750  c
h
277.718 371.906 m
277.718 373.093 277.864 374.062 278.156 374.812  c
278.395 375.437 278.755 375.750 279.234 375.750  c
279.463 375.750 279.700 375.648 279.945 375.445  c
280.190 375.242 280.375 374.895 280.500 374.406  c
280.697 373.687 280.796 372.661 280.796 371.328  c
280.796 370.349 280.692 369.531 280.484 368.875  c
280.338 368.385 280.140 368.041 279.890 367.843  c
279.724 367.708 279.515 367.640 279.265 367.640  c
278.984 367.640 278.729 367.765 278.500 368.015  c
278.197 368.369 277.992 368.924 277.882 369.679  c
277.773 370.434 277.718 371.177 277.718 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
379.986 355.000 m
379.986 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
375.656 369.031 m
375.906 368.447 376.218 368.000 376.593 367.687  c
376.968 367.375 377.432 367.218 377.984 367.218  c
378.682 367.218 379.213 367.442 379.578 367.890  c
379.859 368.224 380.000 368.578 380.000 368.953  c
380.000 369.588 379.604 370.239 378.812 370.906  c
379.343 371.114 379.744 371.411 380.015 371.796  c
380.286 372.182 380.421 372.635 380.421 373.156  c
380.421 373.895 380.182 374.536 379.703 375.078  c
379.088 375.796 378.197 376.156 377.031 376.156  c
376.447 376.156 376.052 376.083 375.843 375.937  c
375.635 375.791 375.531 375.635 375.531 375.468  c
375.531 375.343 375.580 375.237 375.679 375.148  c
375.778 375.059 375.895 375.015 376.031 375.015  c
376.135 375.015 376.244 375.031 376.359 375.062  c
376.432 375.083 376.596 375.158 376.851 375.289  c
377.106 375.419 377.281 375.500 377.375 375.531  c
377.531 375.572 377.697 375.593 377.875 375.593  c
378.302 375.593 378.677 375.427 379.000 375.093  c
379.322 374.760 379.484 374.364 379.484 373.906  c
379.484 373.572 379.411 373.250 379.265 372.937  c
379.151 372.697 379.026 372.515 378.890 372.390  c
378.713 372.224 378.466 372.072 378.148 371.937  c
377.830 371.802 377.505 371.734 377.171 371.734  c
376.968 371.734 l
376.968 371.531 l
377.302 371.489 377.638 371.369 377.976 371.171  c
378.315 370.974 378.559 370.737 378.710 370.460  c
378.862 370.184 378.937 369.875 378.937 369.531  c
378.937 369.104 378.802 368.755 378.531 368.484  c
378.260 368.213 377.921 368.078 377.515 368.078  c
376.859 368.078 376.312 368.427 375.875 369.125  c
375.656 369.031 l
h
381.968 371.750 m
381.968 370.770 382.117 369.924 382.414 369.210  c
382.710 368.497 383.104 367.968 383.593 367.625  c
383.979 367.354 384.375 367.218 384.781 367.218  c
385.437 367.218 386.026 367.552 386.546 368.218  c
387.203 369.052 387.531 370.182 387.531 371.609  c
387.531 372.609 387.388 373.458 387.101 374.156  c
386.815 374.854 386.447 375.362 386.000 375.679  c
385.552 375.997 385.125 376.156 384.718 376.156  c
383.895 376.156 383.208 375.671 382.656 374.703  c
382.197 373.880 381.968 372.895 381.968 371.750  c
h
383.218 371.906 m
383.218 373.093 383.364 374.062 383.656 374.812  c
383.895 375.437 384.255 375.750 384.734 375.750  c
384.963 375.750 385.200 375.648 385.445 375.445  c
385.690 375.242 385.875 374.895 386.000 374.406  c
386.197 373.687 386.296 372.661 386.296 371.328  c
386.296 370.349 386.192 369.531 385.984 368.875  c
385.838 368.385 385.640 368.041 385.390 367.843  c
385.224 367.708 385.015 367.640 384.765 367.640  c
384.484 367.640 384.229 367.765 384.000 368.015  c
383.697 368.369 383.492 368.924 383.382 369.679  c
383.273 370.434 383.218 371.177 383.218 371.906  c
h
388.468 371.750 m
388.468 370.770 388.617 369.924 388.914 369.210  c
389.210 368.497 389.604 367.968 390.093 367.625  c
390.479 367.354 390.875 367.218 391.281 367.218  c
391.937 367.218 392.526 367.552 393.046 368.218  c
393.703 369.052 394.031 370.182 394.031 371.609  c
394.031 372.609 393.888 373.458 393.601 374.156  c
393.315 374.854 392.947 375.362 392.500 375.679  c
392.052 375.997 391.625 376.156 391.218 376.156  c
390.395 376.156 389.708 375.671 389.156 374.703  c
388.697 373.880 388.468 372.895 388.468 371.750  c
h
389.718 371.906 m
389.718 373.093 389.864 374.062 390.156 374.812  c
390.395 375.437 390.755 375.750 391.234 375.750  c
391.463 375.750 391.700 375.648 391.945 375.445  c
392.190 375.242 392.375 374.895 392.500 374.406  c
392.697 373.687 392.796 372.661 392.796 371.328  c
392.796 370.349 392.692 369.531 392.484 368.875  c
392.338 368.385 392.140 368.041 391.890 367.843  c
391.724 367.708 391.515 367.640 391.265 367.640  c
390.984 367.640 390.729 367.765 390.500 368.015  c
390.197 368.369 389.992 368.924 389.882 369.679  c
389.773 370.434 389.718 371.177 389.718 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
43.1000 48.3302 m
40.5000 48.3302 l
S
newpath
43.1000 108.024 m
40.5000 108.024 l
S
newpath
43.1000 167.719 m
40.5000 167.719 l
S
newpath
43.1000 227.414 m
40.5000 227.414 l
S
newpath
43.1000 287.108 m
40.5000 287.108 l
S
newpath
43.1000 346.803 m
40.5000 346.803 l
S
newpath
43.1000 355.000 m
43.1000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-12 86112 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
43.1000 316.956 m
37.9000 316.956 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 321.750 m
6.46875 320.770 6.61718 319.924 6.91406 319.210  c
7.21093 318.497 7.60416 317.968 8.09375 317.625  c
8.47916 317.354 8.87500 317.218 9.28125 317.218  c
9.93750 317.218 10.5260 317.552 11.0468 318.218  c
11.7031 319.052 12.0312 320.182 12.0312 321.609  c
12.0312 322.609 11.8880 323.458 11.6015 324.156  c
11.3151 324.854 10.9479 325.362 10.5000 325.679  c
10.0520 325.997 9.62500 326.156 9.21875 326.156  c
8.39583 326.156 7.70833 325.671 7.15625 324.703  c
6.69791 323.880 6.46875 322.895 6.46875 321.750  c
h
7.71875 321.906 m
7.71875 323.093 7.86458 324.062 8.15625 324.812  c
8.39583 325.437 8.75520 325.750 9.23437 325.750  c
9.46354 325.750 9.70052 325.648 9.94531 325.445  c
10.1901 325.242 10.3750 324.895 10.5000 324.406  c
10.6979 323.687 10.7968 322.661 10.7968 321.328  c
10.7968 320.349 10.6927 319.531 10.4843 318.875  c
10.3385 318.385 10.1406 318.041 9.89062 317.843  c
9.72395 317.708 9.51562 317.640 9.26562 317.640  c
8.98437 317.640 8.72916 317.765 8.50000 318.015  c
8.19791 318.369 7.99218 318.924 7.88281 319.679  c
7.77343 320.434 7.71875 321.177 7.71875 321.906  c
h
14.1250 324.765 m
14.3229 324.765 14.4895 324.835 14.6250 324.976  c
14.7604 325.117 14.8281 325.281 14.8281 325.468  c
14.8281 325.666 14.7604 325.833 14.6250 325.968  c
14.4895 326.104 14.3229 326.171 14.1250 326.171  c
13.9270 326.171 13.7604 326.104 13.6250 325.968  c
13.4895 325.833 13.4218 325.666 13.4218 325.468  c
13.4218 325.270 13.4895 325.104 13.6250 324.968  c
13.7604 324.833 13.9270 324.765 14.1250 324.765  c
h
21.3906 317.390 m
20.8906 318.468 l
18.3125 318.468 l
17.7500 319.625 l
18.8645 319.791 19.7500 320.208 20.4062 320.875  c
20.9687 321.447 21.2500 322.125 21.2500 322.906  c
21.2500 323.364 21.1588 323.786 20.9765 324.171  c
20.7942 324.557 20.5625 324.885 20.2812 325.156  c
20.0000 325.427 19.6875 325.640 19.3437 325.796  c
18.8645 326.036 18.3645 326.156 17.8437 326.156  c
17.3333 326.156 16.9609 326.067 16.7265 325.890  c
16.4921 325.713 16.3750 325.520 16.3750 325.312  c
16.3750 325.187 16.4244 325.080 16.5234 324.992  c
16.6224 324.903 16.7447 324.859 16.8906 324.859  c
16.9947 324.859 17.0885 324.875 17.1718 324.906  c
17.2552 324.937 17.3958 325.026 17.5937 325.171  c
17.9166 325.390 18.2395 325.500 18.5625 325.500  c
19.0625 325.500 19.4974 325.312 19.8671 324.937  c
20.2369 324.562 20.4218 324.104 20.4218 323.562  c
20.4218 323.041 20.2552 322.557 19.9218 322.109  c
19.5885 321.661 19.1302 321.312 18.5468 321.062  c
18.0781 320.875 17.4479 320.765 16.6562 320.734  c
18.3125 317.390 l
21.3906 317.390 l
h
23.5625 317.390 m
28.1718 317.390 l
28.1718 317.640 l
25.2968 326.171 l
24.5937 326.171 l
27.1562 318.421 l
24.7968 318.421 l
24.3177 318.421 23.9791 318.479 23.7812 318.593  c
23.4166 318.791 23.1302 319.093 22.9218 319.500  c
22.7343 319.437 l
23.5625 317.390 l
h
34.5781 317.218 m
34.5781 317.453 l
34.0156 317.505 33.5572 317.614 33.2031 317.781  c
32.8489 317.947 32.5000 318.203 32.1562 318.546  c
31.8125 318.890 31.5286 319.273 31.3046 319.695  c
31.0807 320.117 30.8906 320.614 30.7343 321.187  c
31.3489 320.770 31.9635 320.562 32.5781 320.562  c
33.1614 320.562 33.6692 320.799 34.1015 321.273  c
34.5338 321.747 34.7500 322.359 34.7500 323.109  c
34.7500 323.828 34.5312 324.484 34.0937 325.078  c
33.5729 325.796 32.8802 326.156 32.0156 326.156  c
31.4218 326.156 30.9218 325.958 30.5156 325.562  c
29.7135 324.812 29.3125 323.833 29.3125 322.625  c
29.3125 321.854 29.4661 321.122 29.7734 320.429  c
30.0807 319.737 30.5208 319.119 31.0937 318.578  c
31.6666 318.036 32.2161 317.674 32.7421 317.492  c
33.2682 317.309 33.7552 317.218 34.2031 317.218  c
34.5781 317.218 l
h
30.6250 321.656 m
30.5520 322.229 30.5156 322.692 30.5156 323.046  c
30.5156 323.453 30.5911 323.893 30.7421 324.367  c
30.8932 324.841 31.1145 325.218 31.4062 325.500  c
31.6250 325.697 31.8906 325.796 32.2031 325.796  c
32.5677 325.796 32.8958 325.622 33.1875 325.273  c
33.4791 324.924 33.6250 324.432 33.6250 323.796  c
33.6250 323.067 33.4791 322.440 33.1875 321.914  c
32.8958 321.388 32.4895 321.125 31.9687 321.125  c
31.8020 321.125 31.6276 321.158 31.4453 321.226  c
31.2630 321.294 30.9895 321.437 30.6250 321.656  c
h
35.7187 321.750 m
35.7187 320.770 35.8671 319.924 36.1640 319.210  c
36.4609 318.497 36.8541 317.968 37.3437 317.625  c
37.7291 317.354 38.1250 317.218 38.5312 317.218  c
39.1875 317.218 39.7760 317.552 40.2968 318.218  c
40.9531 319.052 41.2812 320.182 41.2812 321.609  c
41.2812 322.609 41.1380 323.458 40.8515 324.156  c
40.5651 324.854 40.1979 325.362 39.7500 325.679  c
39.3020 325.997 38.8750 326.156 38.4687 326.156  c
37.6458 326.156 36.9583 325.671 36.4062 324.703  c
35.9479 323.880 35.7187 322.895 35.7187 321.750  c
h
36.9687 321.906 m
36.9687 323.093 37.1145 324.062 37.4062 324.812  c
37.6458 325.437 38.0052 325.750 38.4843 325.750  c
38.7135 325.750 38.9505 325.648 39.1953 325.445  c
39.4401 325.242 39.6250 324.895 39.7500 324.406  c
39.9479 323.687 40.0468 322.661 40.0468 321.328  c
40.0468 320.349 39.9427 319.531 39.7343 318.875  c
39.5885 318.385 39.3906 318.041 39.1406 317.843  c
38.9739 317.708 38.7656 317.640 38.5156 317.640  c
38.2343 317.640 37.9791 317.765 37.7500 318.015  c
37.4479 318.369 37.2421 318.924 37.1328 319.679  c
37.0234 320.434 36.9687 321.177 36.9687 321.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
43.1000 257.261 m
37.9000 257.261 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 262.750 m
6.46875 261.770 6.61718 260.924 6.91406 260.210  c
7.21093 259.497 7.60416 258.968 8.09375 258.625  c
8.47916 258.354 8.87500 258.218 9.28125 258.218  c
9.93750 258.218 10.5260 258.552 11.0468 259.218  c
11.7031 260.052 12.0312 261.182 12.0312 262.609  c
12.0312 263.609 11.8880 264.458 11.6015 265.156  c
11.3151 265.854 10.9479 266.362 10.5000 266.679  c
10.0520 266.997 9.62500 267.156 9.21875 267.156  c
8.39583 267.156 7.70833 266.671 7.15625 265.703  c
6.69791 264.880 6.46875 263.895 6.46875 262.750  c
h
7.71875 262.906 m
7.71875 264.093 7.86458 265.062 8.15625 265.812  c
8.39583 266.437 8.75520 266.750 9.23437 266.750  c
9.46354 266.750 9.70052 266.648 9.94531 266.445  c
10.1901 266.242 10.3750 265.895 10.5000 265.406  c
10.6979 264.687 10.7968 263.661 10.7968 262.328  c
10.7968 261.349 10.6927 260.531 10.4843 259.875  c
10.3385 259.385 10.1406 259.041 9.89062 258.843  c
9.72395 258.708 9.51562 258.640 9.26562 258.640  c
8.98437 258.640 8.72916 258.765 8.50000 259.015  c
8.19791 259.369 7.99218 259.924 7.88281 260.679  c
7.77343 261.434 7.71875 262.177 7.71875 262.906  c
h
14.1250 265.765 m
14.3229 265.765 14.4895 265.835 14.6250 265.976  c
14.7604 266.117 14.8281 266.281 14.8281 266.468  c
14.8281 266.666 14.7604 266.833 14.6250 266.968  c
14.4895 267.104 14.3229 267.171 14.1250 267.171  c
13.9270 267.171 13.7604 267.104 13.6250 266.968  c
13.4895 266.833 13.4218 266.666 13.4218 266.468  c
13.4218 266.270 13.4895 266.104 13.6250 265.968  c
13.7604 265.833 13.9270 265.765 14.1250 265.765  c
h
21.3906 258.390 m
20.8906 259.468 l
18.3125 259.468 l
17.7500 260.625 l
18.8645 260.791 19.7500 261.208 20.4062 261.875  c
20.9687 262.447 21.2500 263.125 21.2500 263.906  c
21.2500 264.364 21.1588 264.786 20.9765 265.171  c
20.7942 265.557 20.5625 265.885 20.2812 266.156  c
20.0000 266.427 19.6875 266.640 19.3437 266.796  c
18.8645 267.036 18.3645 267.156 17.8437 267.156  c
17.3333 267.156 16.9609 267.067 16.7265 266.890  c
16.4921 266.713 16.3750 266.520 16.3750 266.312  c
16.3750 266.187 16.4244 266.080 16.5234 265.992  c
16.6224 265.903 16.7447 265.859 16.8906 265.859  c
16.9947 265.859 17.0885 265.875 17.1718 265.906  c
17.2552 265.937 17.3958 266.026 17.5937 266.171  c
17.9166 266.390 18.2395 266.500 18.5625 266.500  c
19.0625 266.500 19.4974 266.312 19.8671 265.937  c
20.2369 265.562 20.4218 265.104 20.4218 264.562  c
20.4218 264.041 20.2552 263.557 19.9218 263.109  c
19.5885 262.661 19.1302 262.312 18.5468 262.062  c
18.0781 261.875 17.4479 261.765 16.6562 261.734  c
18.3125 258.390 l
21.3906 258.390 l
h
23.5625 258.390 m
28.1718 258.390 l
28.1718 258.640 l
25.2968 267.171 l
24.5937 267.171 l
27.1562 259.421 l
24.7968 259.421 l
24.3177 259.421 23.9791 259.479 23.7812 259.593  c
23.4166 259.791 23.1302 260.093 22.9218 260.500  c
22.7343 260.437 l
23.5625 258.390 l
h
34.5781 258.218 m
34.5781 258.453 l
34.0156 258.505 33.5572 258.614 33.2031 258.781  c
32.8489 258.947 32.5000 259.203 32.1562 259.546  c
31.8125 259.890 31.5286 260.273 31.3046 260.695  c
31.0807 261.117 30.8906 261.614 30.7343 262.187  c
31.3489 261.770 31.9635 261.562 32.5781 261.562  c
33.1614 261.562 33.6692 261.799 34.1015 262.273  c
34.5338 262.747 34.7500 263.359 34.7500 264.109  c
34.7500 264.828 34.5312 265.484 34.0937 266.078  c
33.5729 266.796 32.8802 267.156 32.0156 267.156  c
31.4218 267.156 30.9218 266.958 30.5156 266.562  c
29.7135 265.812 29.3125 264.833 29.3125 263.625  c
29.3125 262.854 29.4661 262.122 29.7734 261.429  c
30.0807 260.737 30.5208 260.119 31.0937 259.578  c
31.6666 259.036 32.2161 258.674 32.7421 258.492  c
33.2682 258.309 33.7552 258.218 34.2031 258.218  c
34.5781 258.218 l
h
30.6250 262.656 m
30.5520 263.229 30.5156 263.692 30.5156 264.046  c
30.5156 264.453 30.5911 264.893 30.7421 265.367  c
30.8932 265.841 31.1145 266.218 31.4062 266.500  c
31.6250 266.697 31.8906 266.796 32.2031 266.796  c
32.5677 266.796 32.8958 266.622 33.1875 266.273  c
33.4791 265.924 33.6250 265.432 33.6250 264.796  c
33.6250 264.067 33.4791 263.440 33.1875 262.914  c
32.8958 262.388 32.4895 262.125 31.9687 262.125  c
31.8020 262.125 31.6276 262.158 31.4453 262.226  c
31.2630 262.294 30.9895 262.437 30.6250 262.656  c
h
41.2031 265.343 m
40.6093 267.000 l
35.5312 267.000 l
35.5312 266.765 l
37.0208 265.401 38.0703 264.286 38.6796 263.421  c
39.2890 262.557 39.5937 261.770 39.5937 261.062  c
39.5937 260.510 39.4270 260.059 39.0937 259.710  c
38.7604 259.362 38.3593 259.187 37.8906 259.187  c
37.4739 259.187 37.0963 259.309 36.7578 259.554  c
36.4192 259.799 36.1718 260.161 36.0156 260.640  c
35.7812 260.640 l
35.8854 259.859 36.1562 259.260 36.5937 258.843  c
37.0312 258.427 37.5781 258.218 38.2343 258.218  c
38.9322 258.218 39.5156 258.442 39.9843 258.890  c
40.4531 259.338 40.6875 259.864 40.6875 260.468  c
40.6875 260.906 40.5833 261.343 40.3750 261.781  c
40.0625 262.468 39.5572 263.192 38.8593 263.953  c
37.8072 265.109 37.1458 265.807 36.8750 266.046  c
39.1250 266.046 l
39.5833 266.046 39.9036 266.028 40.0859 265.992  c
40.2682 265.955 40.4349 265.885 40.5859 265.781  c
40.7369 265.677 40.8645 265.531 40.9687 265.343  c
41.2031 265.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
43.1000 197.566 m
37.9000 197.566 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 202.750 m
6.46875 201.770 6.61718 200.924 6.91406 200.210  c
7.21093 199.497 7.60416 198.968 8.09375 198.625  c
8.47916 198.354 8.87500 198.218 9.28125 198.218  c
9.93750 198.218 10.5260 198.552 11.0468 199.218  c
11.7031 200.052 12.0312 201.182 12.0312 202.609  c
12.0312 203.609 11.8880 204.458 11.6015 205.156  c
11.3151 205.854 10.9479 206.362 10.5000 206.679  c
10.0520 206.997 9.62500 207.156 9.21875 207.156  c
8.39583 207.156 7.70833 206.671 7.15625 205.703  c
6.69791 204.880 6.46875 203.895 6.46875 202.750  c
h
7.71875 202.906 m
7.71875 204.093 7.86458 205.062 8.15625 205.812  c
8.39583 206.437 8.75520 206.750 9.23437 206.750  c
9.46354 206.750 9.70052 206.648 9.94531 206.445  c
10.1901 206.242 10.3750 205.895 10.5000 205.406  c
10.6979 204.687 10.7968 203.661 10.7968 202.328  c
10.7968 201.349 10.6927 200.531 10.4843 199.875  c
10.3385 199.385 10.1406 199.041 9.89062 198.843  c
9.72395 198.708 9.51562 198.640 9.26562 198.640  c
8.98437 198.640 8.72916 198.765 8.50000 199.015  c
8.19791 199.369 7.99218 199.924 7.88281 200.679  c
7.77343 201.434 7.71875 202.177 7.71875 202.906  c
h
14.1250 205.765 m
14.3229 205.765 14.4895 205.835 14.6250 205.976  c
14.7604 206.117 14.8281 206.281 14.8281 206.468  c
14.8281 206.666 14.7604 206.833 14.6250 206.968  c
14.4895 207.104 14.3229 207.171 14.1250 207.171  c
13.9270 207.171 13.7604 207.104 13.6250 206.968  c
13.4895 206.833 13.4218 206.666 13.4218 206.468  c
13.4218 206.270 13.4895 206.104 13.6250 205.968  c
13.7604 205.833 13.9270 205.765 14.1250 205.765  c
h
21.3906 198.390 m
20.8906 199.468 l
18.3125 199.468 l
17.7500 200.625 l
18.8645 200.791 19.7500 201.208 20.4062 201.875  c
20.9687 202.447 21.2500 203.125 21.2500 203.906  c
21.2500 204.364 21.1588 204.786 20.9765 205.171  c
20.7942 205.557 20.5625 205.885 20.2812 206.156  c
20.0000 206.427 19.6875 206.640 19.3437 206.796  c
18.8645 207.036 18.3645 207.156 17.8437 207.156  c
17.3333 207.156 16.9609 207.067 16.7265 206.890  c
16.4921 206.713 16.3750 206.520 16.3750 206.312  c
16.3750 206.187 16.4244 206.080 16.5234 205.992  c
16.6224 205.903 16.7447 205.859 16.8906 205.859  c
16.9947 205.859 17.0885 205.875 17.1718 205.906  c
17.2552 205.937 17.3958 206.026 17.5937 206.171  c
17.9166 206.390 18.2395 206.500 18.5625 206.500  c
19.0625 206.500 19.4974 206.312 19.8671 205.937  c
20.2369 205.562 20.4218 205.104 20.4218 204.562  c
20.4218 204.041 20.2552 203.557 19.9218 203.109  c
19.5885 202.661 19.1302 202.312 18.5468 202.062  c
18.0781 201.875 17.4479 201.765 16.6562 201.734  c
18.3125 198.390 l
21.3906 198.390 l
h
23.5625 198.390 m
28.1718 198.390 l
28.1718 198.640 l
25.2968 207.171 l
24.5937 207.171 l
27.1562 199.421 l
24.7968 199.421 l
24.3177 199.421 23.9791 199.479 23.7812 199.593  c
23.4166 199.791 23.1302 200.093 22.9218 200.500  c
22.7343 200.437 l
23.5625 198.390 l
h
34.5781 198.218 m
34.5781 198.453 l
34.0156 198.505 33.5572 198.614 33.2031 198.781  c
32.8489 198.947 32.5000 199.203 32.1562 199.546  c
31.8125 199.890 31.5286 200.273 31.3046 200.695  c
31.0807 201.117 30.8906 201.614 30.7343 202.187  c
31.3489 201.770 31.9635 201.562 32.5781 201.562  c
33.1614 201.562 33.6692 201.799 34.1015 202.273  c
34.5338 202.747 34.7500 203.359 34.7500 204.109  c
34.7500 204.828 34.5312 205.484 34.0937 206.078  c
33.5729 206.796 32.8802 207.156 32.0156 207.156  c
31.4218 207.156 30.9218 206.958 30.5156 206.562  c
29.7135 205.812 29.3125 204.833 29.3125 203.625  c
29.3125 202.854 29.4661 202.122 29.7734 201.429  c
30.0807 200.737 30.5208 200.119 31.0937 199.578  c
31.6666 199.036 32.2161 198.674 32.7421 198.492  c
33.2682 198.309 33.7552 198.218 34.2031 198.218  c
34.5781 198.218 l
h
30.6250 202.656 m
30.5520 203.229 30.5156 203.692 30.5156 204.046  c
30.5156 204.453 30.5911 204.893 30.7421 205.367  c
30.8932 205.841 31.1145 206.218 31.4062 206.500  c
31.6250 206.697 31.8906 206.796 32.2031 206.796  c
32.5677 206.796 32.8958 206.622 33.1875 206.273  c
33.4791 205.924 33.6250 205.432 33.6250 204.796  c
33.6250 204.067 33.4791 203.440 33.1875 202.914  c
32.8958 202.388 32.4895 202.125 31.9687 202.125  c
31.8020 202.125 31.6276 202.158 31.4453 202.226  c
31.2630 202.294 30.9895 202.437 30.6250 202.656  c
h
41.2968 203.828 m
41.2968 204.734 l
40.1406 204.734 l
40.1406 207.000 l
39.0937 207.000 l
39.0937 204.734 l
35.4531 204.734 l
35.4531 203.921 l
39.4531 198.218 l
40.1406 198.218 l
40.1406 203.828 l
41.2968 203.828 l
h
39.0937 203.828 m
39.0937 199.546 l
36.0781 203.828 l
39.0937 203.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
43.1000 137.872 m
37.9000 137.872 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 142.750 m
6.46875 141.770 6.61718 140.924 6.91406 140.210  c
7.21093 139.497 7.60416 138.968 8.09375 138.625  c
8.47916 138.354 8.87500 138.218 9.28125 138.218  c
9.93750 138.218 10.5260 138.552 11.0468 139.218  c
11.7031 140.052 12.0312 141.182 12.0312 142.609  c
12.0312 143.609 11.8880 144.458 11.6015 145.156  c
11.3151 145.854 10.9479 146.362 10.5000 146.679  c
10.0520 146.997 9.62500 147.156 9.21875 147.156  c
8.39583 147.156 7.70833 146.671 7.15625 145.703  c
6.69791 144.880 6.46875 143.895 6.46875 142.750  c
h
7.71875 142.906 m
7.71875 144.093 7.86458 145.062 8.15625 145.812  c
8.39583 146.437 8.75520 146.750 9.23437 146.750  c
9.46354 146.750 9.70052 146.648 9.94531 146.445  c
10.1901 146.242 10.3750 145.895 10.5000 145.406  c
10.6979 144.687 10.7968 143.661 10.7968 142.328  c
10.7968 141.349 10.6927 140.531 10.4843 139.875  c
10.3385 139.385 10.1406 139.041 9.89062 138.843  c
9.72395 138.708 9.51562 138.640 9.26562 138.640  c
8.98437 138.640 8.72916 138.765 8.50000 139.015  c
8.19791 139.369 7.99218 139.924 7.88281 140.679  c
7.77343 141.434 7.71875 142.177 7.71875 142.906  c
h
14.1250 145.765 m
14.3229 145.765 14.4895 145.835 14.6250 145.976  c
14.7604 146.117 14.8281 146.281 14.8281 146.468  c
14.8281 146.666 14.7604 146.833 14.6250 146.968  c
14.4895 147.104 14.3229 147.171 14.1250 147.171  c
13.9270 147.171 13.7604 147.104 13.6250 146.968  c
13.4895 146.833 13.4218 146.666 13.4218 146.468  c
13.4218 146.270 13.4895 146.104 13.6250 145.968  c
13.7604 145.833 13.9270 145.765 14.1250 145.765  c
h
21.3906 138.390 m
20.8906 139.468 l
18.3125 139.468 l
17.7500 140.625 l
18.8645 140.791 19.7500 141.208 20.4062 141.875  c
20.9687 142.447 21.2500 143.125 21.2500 143.906  c
21.2500 144.364 21.1588 144.786 20.9765 145.171  c
20.7942 145.557 20.5625 145.885 20.2812 146.156  c
20.0000 146.427 19.6875 146.640 19.3437 146.796  c
18.8645 147.036 18.3645 147.156 17.8437 147.156  c
17.3333 147.156 16.9609 147.067 16.7265 146.890  c
16.4921 146.713 16.3750 146.520 16.3750 146.312  c
16.3750 146.187 16.4244 146.080 16.5234 145.992  c
16.6224 145.903 16.7447 145.859 16.8906 145.859  c
16.9947 145.859 17.0885 145.875 17.1718 145.906  c
17.2552 145.937 17.3958 146.026 17.5937 146.171  c
17.9166 146.390 18.2395 146.500 18.5625 146.500  c
19.0625 146.500 19.4974 146.312 19.8671 145.937  c
20.2369 145.562 20.4218 145.104 20.4218 144.562  c
20.4218 144.041 20.2552 143.557 19.9218 143.109  c
19.5885 142.661 19.1302 142.312 18.5468 142.062  c
18.0781 141.875 17.4479 141.765 16.6562 141.734  c
18.3125 138.390 l
21.3906 138.390 l
h
23.5625 138.390 m
28.1718 138.390 l
28.1718 138.640 l
25.2968 147.171 l
24.5937 147.171 l
27.1562 139.421 l
24.7968 139.421 l
24.3177 139.421 23.9791 139.479 23.7812 139.593  c
23.4166 139.791 23.1302 140.093 22.9218 140.500  c
22.7343 140.437 l
23.5625 138.390 l
h
34.5781 138.218 m
34.5781 138.453 l
34.0156 138.505 33.5572 138.614 33.2031 138.781  c
32.8489 138.947 32.5000 139.203 32.1562 139.546  c
31.8125 139.890 31.5286 140.273 31.3046 140.695  c
31.0807 141.117 30.8906 141.614 30.7343 142.187  c
31.3489 141.770 31.9635 141.562 32.5781 141.562  c
33.1614 141.562 33.6692 141.799 34.1015 142.273  c
34.5338 142.747 34.7500 143.359 34.7500 144.109  c
34.7500 144.828 34.5312 145.484 34.0937 146.078  c
33.5729 146.796 32.8802 147.156 32.0156 147.156  c
31.4218 147.156 30.9218 146.958 30.5156 146.562  c
29.7135 145.812 29.3125 144.833 29.3125 143.625  c
29.3125 142.854 29.4661 142.122 29.7734 141.429  c
30.0807 140.737 30.5208 140.119 31.0937 139.578  c
31.6666 139.036 32.2161 138.674 32.7421 138.492  c
33.2682 138.309 33.7552 138.218 34.2031 138.218  c
34.5781 138.218 l
h
30.6250 142.656 m
30.5520 143.229 30.5156 143.692 30.5156 144.046  c
30.5156 144.453 30.5911 144.893 30.7421 145.367  c
30.8932 145.841 31.1145 146.218 31.4062 146.500  c
31.6250 146.697 31.8906 146.796 32.2031 146.796  c
32.5677 146.796 32.8958 146.622 33.1875 146.273  c
33.4791 145.924 33.6250 145.432 33.6250 144.796  c
33.6250 144.067 33.4791 143.440 33.1875 142.914  c
32.8958 142.388 32.4895 142.125 31.9687 142.125  c
31.8020 142.125 31.6276 142.158 31.4453 142.226  c
31.2630 142.294 30.9895 142.437 30.6250 142.656  c
h
41.0781 138.218 m
41.0781 138.453 l
40.5156 138.505 40.0572 138.614 39.7031 138.781  c
39.3489 138.947 39.0000 139.203 38.6562 139.546  c
38.3125 139.890 38.0286 140.273 37.8046 140.695  c
37.5807 141.117 37.3906 141.614 37.2343 142.187  c
37.8489 141.770 38.4635 141.562 39.0781 141.562  c
39.6614 141.562 40.1692 141.799 40.6015 142.273  c
41.0338 142.747 41.2500 143.359 41.2500 144.109  c
41.2500 144.828 41.0312 145.484 40.5937 146.078  c
40.0729 146.796 39.3802 147.156 38.5156 147.156  c
37.9218 147.156 37.4218 146.958 37.0156 146.562  c
36.2135 145.812 35.8125 144.833 35.8125 143.625  c
35.8125 142.854 35.9661 142.122 36.2734 141.429  c
36.5807 140.737 37.0208 140.119 37.5937 139.578  c
38.1666 139.036 38.7161 138.674 39.2421 138.492  c
39.7682 138.309 40.2552 138.218 40.7031 138.218  c
41.0781 138.218 l
h
37.1250 142.656 m
37.0520 143.229 37.0156 143.692 37.0156 144.046  c
37.0156 144.453 37.0911 144.893 37.2421 145.367  c
37.3932 145.841 37.6145 146.218 37.9062 146.500  c
38.1250 146.697 38.3906 146.796 38.7031 146.796  c
39.0677 146.796 39.3958 146.622 39.6875 146.273  c
39.9791 145.924 40.1250 145.432 40.1250 144.796  c
40.1250 144.067 39.9791 143.440 39.6875 142.914  c
39.3958 142.388 38.9895 142.125 38.4687 142.125  c
38.3020 142.125 38.1276 142.158 37.9453 142.226  c
37.7630 142.294 37.4895 142.437 37.1250 142.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
43.1000 78.1775 m
37.9000 78.1775 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 83.7500 m
6.46875 82.7708 6.61718 81.9244 6.91406 81.2109  c
7.21093 80.4974 7.60416 79.9687 8.09375 79.6250  c
8.47916 79.3541 8.87500 79.2187 9.28125 79.2187  c
9.93750 79.2187 10.5260 79.5520 11.0468 80.2187  c
11.7031 81.0520 12.0312 82.1822 12.0312 83.6093  c
12.0312 84.6093 11.8880 85.4583 11.6015 86.1562  c
11.3151 86.8541 10.9479 87.3619 10.5000 87.6796  c
10.0520 87.9974 9.62500 88.1562 9.21875 88.1562  c
8.39583 88.1562 7.70833 87.6718 7.15625 86.7031  c
6.69791 85.8802 6.46875 84.8958 6.46875 83.7500  c
h
7.71875 83.9062 m
7.71875 85.0937 7.86458 86.0625 8.15625 86.8125  c
8.39583 87.4375 8.75520 87.7500 9.23437 87.7500  c
9.46354 87.7500 9.70052 87.6484 9.94531 87.4453  c
10.1901 87.2421 10.3750 86.8958 10.5000 86.4062  c
10.6979 85.6875 10.7968 84.6614 10.7968 83.3281  c
10.7968 82.3489 10.6927 81.5312 10.4843 80.8750  c
10.3385 80.3854 10.1406 80.0416 9.89062 79.8437  c
9.72395 79.7083 9.51562 79.6406 9.26562 79.6406  c
8.98437 79.6406 8.72916 79.7656 8.50000 80.0156  c
8.19791 80.3697 7.99218 80.9244 7.88281 81.6796  c
7.77343 82.4349 7.71875 83.1770 7.71875 83.9062  c
h
14.1250 86.7656 m
14.3229 86.7656 14.4895 86.8359 14.6250 86.9765  c
14.7604 87.1171 14.8281 87.2812 14.8281 87.4687  c
14.8281 87.6666 14.7604 87.8333 14.6250 87.9687  c
14.4895 88.1041 14.3229 88.1718 14.1250 88.1718  c
13.9270 88.1718 13.7604 88.1041 13.6250 87.9687  c
13.4895 87.8333 13.4218 87.6666 13.4218 87.4687  c
13.4218 87.2708 13.4895 87.1041 13.6250 86.9687  c
13.7604 86.8333 13.9270 86.7656 14.1250 86.7656  c
h
21.3906 79.3906 m
20.8906 80.4687 l
18.3125 80.4687 l
17.7500 81.6250 l
18.8645 81.7916 19.7500 82.2083 20.4062 82.8750  c
20.9687 83.4479 21.2500 84.1250 21.2500 84.9062  c
21.2500 85.3645 21.1588 85.7864 20.9765 86.1718  c
20.7942 86.5572 20.5625 86.8854 20.2812 87.1562  c
20.0000 87.4270 19.6875 87.6406 19.3437 87.7968  c
18.8645 88.0364 18.3645 88.1562 17.8437 88.1562  c
17.3333 88.1562 16.9609 88.0677 16.7265 87.8906  c
16.4921 87.7135 16.3750 87.5208 16.3750 87.3125  c
16.3750 87.1875 16.4244 87.0807 16.5234 86.9921  c
16.6224 86.9036 16.7447 86.8593 16.8906 86.8593  c
16.9947 86.8593 17.0885 86.8750 17.1718 86.9062  c
17.2552 86.9375 17.3958 87.0260 17.5937 87.1718  c
17.9166 87.3906 18.2395 87.5000 18.5625 87.5000  c
19.0625 87.5000 19.4974 87.3125 19.8671 86.9375  c
20.2369 86.5625 20.4218 86.1041 20.4218 85.5625  c
20.4218 85.0416 20.2552 84.5572 19.9218 84.1093  c
19.5885 83.6614 19.1302 83.3125 18.5468 83.0625  c
18.0781 82.8750 17.4479 82.7656 16.6562 82.7343  c
18.3125 79.3906 l
21.3906 79.3906 l
h
23.5625 79.3906 m
28.1718 79.3906 l
28.1718 79.6406 l
25.2968 88.1718 l
24.5937 88.1718 l
27.1562 80.4218 l
24.7968 80.4218 l
24.3177 80.4218 23.9791 80.4791 23.7812 80.5937  c
23.4166 80.7916 23.1302 81.0937 22.9218 81.5000  c
22.7343 81.4375 l
23.5625 79.3906 l
h
34.5781 79.2187 m
34.5781 79.4531 l
34.0156 79.5052 33.5572 79.6145 33.2031 79.7812  c
32.8489 79.9479 32.5000 80.2031 32.1562 80.5468  c
31.8125 80.8906 31.5286 81.2734 31.3046 81.6953  c
31.0807 82.1171 30.8906 82.6145 30.7343 83.1875  c
31.3489 82.7708 31.9635 82.5625 32.5781 82.5625  c
33.1614 82.5625 33.6692 82.7994 34.1015 83.2734  c
34.5338 83.7474 34.7500 84.3593 34.7500 85.1093  c
34.7500 85.8281 34.5312 86.4843 34.0937 87.0781  c
33.5729 87.7968 32.8802 88.1562 32.0156 88.1562  c
31.4218 88.1562 30.9218 87.9583 30.5156 87.5625  c
29.7135 86.8125 29.3125 85.8333 29.3125 84.6250  c
29.3125 83.8541 29.4661 83.1224 29.7734 82.4296  c
30.0807 81.7369 30.5208 81.1197 31.0937 80.5781  c
31.6666 80.0364 32.2161 79.6744 32.7421 79.4921  c
33.2682 79.3099 33.7552 79.2187 34.2031 79.2187  c
34.5781 79.2187 l
h
30.6250 83.6562 m
30.5520 84.2291 30.5156 84.6927 30.5156 85.0468  c
30.5156 85.4531 30.5911 85.8932 30.7421 86.3671  c
30.8932 86.8411 31.1145 87.2187 31.4062 87.5000  c
31.6250 87.6979 31.8906 87.7968 32.2031 87.7968  c
32.5677 87.7968 32.8958 87.6224 33.1875 87.2734  c
33.4791 86.9244 33.6250 86.4322 33.6250 85.7968  c
33.6250 85.0677 33.4791 84.4401 33.1875 83.9140  c
32.8958 83.3880 32.4895 83.1250 31.9687 83.1250  c
31.8020 83.1250 31.6276 83.1588 31.4453 83.2265  c
31.2630 83.2942 30.9895 83.4375 30.6250 83.6562  c
h
37.7500 83.6718 m
37.0625 83.1093 36.6197 82.6588 36.4218 82.3203  c
36.2239 81.9817 36.1250 81.6302 36.1250 81.2656  c
36.1250 80.7031 36.3411 80.2213 36.7734 79.8203  c
37.2057 79.4192 37.7812 79.2187 38.5000 79.2187  c
39.1979 79.2187 39.7578 79.4062 40.1796 79.7812  c
40.6015 80.1562 40.8125 80.5833 40.8125 81.0625  c
40.8125 81.3854 40.6979 81.7135 40.4687 82.0468  c
40.2395 82.3802 39.7656 82.7760 39.0468 83.2343  c
39.7864 83.8072 40.2760 84.2604 40.5156 84.5937  c
40.8385 85.0208 41.0000 85.4739 41.0000 85.9531  c
41.0000 86.5572 40.7708 87.0755 40.3125 87.5078  c
39.8541 87.9401 39.2500 88.1562 38.5000 88.1562  c
37.6770 88.1562 37.0364 87.9010 36.5781 87.3906  c
36.2135 86.9739 36.0312 86.5208 36.0312 86.0312  c
36.0312 85.6562 36.1614 85.2812 36.4218 84.9062  c
36.6822 84.5312 37.1250 84.1197 37.7500 83.6718  c
h
38.7343 82.9843 m
39.2447 82.5260 39.5677 82.1640 39.7031 81.8984  c
39.8385 81.6328 39.9062 81.3333 39.9062 81.0000  c
39.9062 80.5625 39.7812 80.2161 39.5312 79.9609  c
39.2812 79.7057 38.9427 79.5781 38.5156 79.5781  c
38.0781 79.5781 37.7239 79.7031 37.4531 79.9531  c
37.1822 80.2031 37.0468 80.4947 37.0468 80.8281  c
37.0468 81.0468 37.1041 81.2682 37.2187 81.4921  c
37.3333 81.7161 37.4947 81.9270 37.7031 82.1250  c
38.7343 82.9843 l
h
38.0468 83.9062 m
37.6927 84.1979 37.4322 84.5182 37.2656 84.8671  c
37.0989 85.2161 37.0156 85.5937 37.0156 86.0000  c
37.0156 86.5520 37.1640 86.9921 37.4609 87.3203  c
37.7578 87.6484 38.1354 87.8125 38.5937 87.8125  c
39.0520 87.8125 39.4192 87.6822 39.6953 87.4218  c
39.9713 87.1614 40.1093 86.8489 40.1093 86.4843  c
40.1093 86.1822 40.0260 85.9062 39.8593 85.6562  c
39.5677 85.2083 38.9635 84.6250 38.0468 83.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
43.1000 18.4828 m
37.9000 18.4828 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 23.7500 m
6.46875 22.7708 6.61718 21.9244 6.91406 21.2109  c
7.21093 20.4974 7.60416 19.9687 8.09375 19.6250  c
8.47916 19.3541 8.87500 19.2187 9.28125 19.2187  c
9.93750 19.2187 10.5260 19.5520 11.0468 20.2187  c
11.7031 21.0520 12.0312 22.1822 12.0312 23.6093  c
12.0312 24.6093 11.8880 25.4583 11.6015 26.1562  c
11.3151 26.8541 10.9479 27.3619 10.5000 27.6796  c
10.0520 27.9974 9.62500 28.1562 9.21875 28.1562  c
8.39583 28.1562 7.70833 27.6718 7.15625 26.7031  c
6.69791 25.8802 6.46875 24.8958 6.46875 23.7500  c
h
7.71875 23.9062 m
7.71875 25.0937 7.86458 26.0625 8.15625 26.8125  c
8.39583 27.4375 8.75520 27.7500 9.23437 27.7500  c
9.46354 27.7500 9.70052 27.6484 9.94531 27.4453  c
10.1901 27.2421 10.3750 26.8958 10.5000 26.4062  c
10.6979 25.6875 10.7968 24.6614 10.7968 23.3281  c
10.7968 22.3489 10.6927 21.5312 10.4843 20.8750  c
10.3385 20.3854 10.1406 20.0416 9.89062 19.8437  c
9.72395 19.7083 9.51562 19.6406 9.26562 19.6406  c
8.98437 19.6406 8.72916 19.7656 8.50000 20.0156  c
8.19791 20.3697 7.99218 20.9244 7.88281 21.6796  c
7.77343 22.4349 7.71875 23.1770 7.71875 23.9062  c
h
14.1250 26.7656 m
14.3229 26.7656 14.4895 26.8359 14.6250 26.9765  c
14.7604 27.1171 14.8281 27.2812 14.8281 27.4687  c
14.8281 27.6666 14.7604 27.8333 14.6250 27.9687  c
14.4895 28.1041 14.3229 28.1718 14.1250 28.1718  c
13.9270 28.1718 13.7604 28.1041 13.6250 27.9687  c
13.4895 27.8333 13.4218 27.6666 13.4218 27.4687  c
13.4218 27.2708 13.4895 27.1041 13.6250 26.9687  c
13.7604 26.8333 13.9270 26.7656 14.1250 26.7656  c
h
21.3906 19.3906 m
20.8906 20.4687 l
18.3125 20.4687 l
17.7500 21.6250 l
18.8645 21.7916 19.7500 22.2083 20.4062 22.8750  c
20.9687 23.4479 21.2500 24.1250 21.2500 24.9062  c
21.2500 25.3645 21.1588 25.7864 20.9765 26.1718  c
20.7942 26.5572 20.5625 26.8854 20.2812 27.1562  c
20.0000 27.4270 19.6875 27.6406 19.3437 27.7968  c
18.8645 28.0364 18.3645 28.1562 17.8437 28.1562  c
17.3333 28.1562 16.9609 28.0677 16.7265 27.8906  c
16.4921 27.7135 16.3750 27.5208 16.3750 27.3125  c
16.3750 27.1875 16.4244 27.0807 16.5234 26.9921  c
16.6224 26.9036 16.7447 26.8593 16.8906 26.8593  c
16.9947 26.8593 17.0885 26.8750 17.1718 26.9062  c
17.2552 26.9375 17.3958 27.0260 17.5937 27.1718  c
17.9166 27.3906 18.2395 27.5000 18.5625 27.5000  c
19.0625 27.5000 19.4974 27.3125 19.8671 26.9375  c
20.2369 26.5625 20.4218 26.1041 20.4218 25.5625  c
20.4218 25.0416 20.2552 24.5572 19.9218 24.1093  c
19.5885 23.6614 19.1302 23.3125 18.5468 23.0625  c
18.0781 22.8750 17.4479 22.7656 16.6562 22.7343  c
18.3125 19.3906 l
21.3906 19.3906 l
h
23.5625 19.3906 m
28.1718 19.3906 l
28.1718 19.6406 l
25.2968 28.1718 l
24.5937 28.1718 l
27.1562 20.4218 l
24.7968 20.4218 l
24.3177 20.4218 23.9791 20.4791 23.7812 20.5937  c
23.4166 20.7916 23.1302 21.0937 22.9218 21.5000  c
22.7343 21.4375 l
23.5625 19.3906 l
h
30.0625 19.3906 m
34.6718 19.3906 l
34.6718 19.6406 l
31.7968 28.1718 l
31.0937 28.1718 l
33.6562 20.4218 l
31.2968 20.4218 l
30.8177 20.4218 30.4791 20.4791 30.2812 20.5937  c
29.9166 20.7916 29.6302 21.0937 29.4218 21.5000  c
29.2343 21.4375 l
30.0625 19.3906 l
h
35.7187 23.7500 m
35.7187 22.7708 35.8671 21.9244 36.1640 21.2109  c
36.4609 20.4974 36.8541 19.9687 37.3437 19.6250  c
37.7291 19.3541 38.1250 19.2187 38.5312 19.2187  c
39.1875 19.2187 39.7760 19.5520 40.2968 20.2187  c
40.9531 21.0520 41.2812 22.1822 41.2812 23.6093  c
41.2812 24.6093 41.1380 25.4583 40.8515 26.1562  c
40.5651 26.8541 40.1979 27.3619 39.7500 27.6796  c
39.3020 27.9974 38.8750 28.1562 38.4687 28.1562  c
37.6458 28.1562 36.9583 27.6718 36.4062 26.7031  c
35.9479 25.8802 35.7187 24.8958 35.7187 23.7500  c
h
36.9687 23.9062 m
36.9687 25.0937 37.1145 26.0625 37.4062 26.8125  c
37.6458 27.4375 38.0052 27.7500 38.4843 27.7500  c
38.7135 27.7500 38.9505 27.6484 39.1953 27.4453  c
39.4401 27.2421 39.6250 26.8958 39.7500 26.4062  c
39.9479 25.6875 40.0468 24.6614 40.0468 23.3281  c
40.0468 22.3489 39.9427 21.5312 39.7343 20.8750  c
39.5885 20.3854 39.3906 20.0416 39.1406 19.8437  c
38.9739 19.7083 38.7656 19.6406 38.5156 19.6406  c
38.2343 19.6406 37.9791 19.7656 37.7500 20.0156  c
37.4479 20.3697 37.2421 20.9244 37.1328 21.6796  c
37.0234 22.4349 36.9687 23.1770 36.9687 23.9062  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 555 4934 a(Notice)27 b(that)f(in)g(each)g(of)f(the)h
(examples)h(w)m(e've)f(explo)m(red)h(so)f(fa)m(r)f(in)h(this)g
(chapter,)456 5050 y(w)m(e)33 b(have)f(encountered)j(solutions)e(of)f
(the)h(fo)m(rm)1518 5216 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27
b(=)h Fl(y)1860 5231 y Fj(S)1910 5216 y Fk(\()p Fl(t)p
Fk(\))22 b(+)g Fl(y)2189 5231 y Fj(T)2244 5216 y Fk(\()p
Fl(t)p Fk(\))p Fl(;)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 3406 251 a Fh(7)456 450 y Fn(where)47
b Fl(y)786 465 y Fj(S)882 450 y Fn(is)f(p)s(erio)s(dic)f(and)h
Fl(y)1594 465 y Fj(T)1648 450 y Fk(\()p Fl(t)p Fk(\))51
b Fi(!)e Fk(0)d Fn(as)g Fl(t)k Fi(!)g(1)p Fn(.)82 b(Thus)46
b(the)g(long-term)456 566 y(b)s(ehaviour)34 b(of)h Fl(y)j
Fn(matches)f(whatever)f(the)f(long-term)h(b)s(ehaviour)e(is)i(of)e
Fl(y)3125 581 y Fj(S)3176 566 y Fn(,)i(while)456 683
y Fl(y)504 698 y Fj(T)589 683 y Fn(b)s(ecomes)c(negligible.)43
b(F)m(o)m(r)31 b(this)h(reason,)f(the)h(term)f Fl(y)2495
698 y Fj(T)2581 683 y Fn(is)g(called)g(a)f Fm(transien)m(t)456
799 y(solution)i Fn(of)f(the)i(IVP)-8 b(,)32 b(while)g
Fl(y)1634 814 y Fj(S)1716 799 y Fn(is)g(called)g(the)h
Fm(steady-state)38 b(solution)p Fn(.)43 b(F)m(o)m(r)456
915 y(example,)32 b(the)i(solution)e(of)g(the)h(IVP)1040
1100 y Fk(\177)-55 b Fl(y)25 b Fk(+)d(2)17 b(_)-44 b
Fl(y)25 b Fk(+)d Fl(y)31 b Fk(=)c(cos)q(\()p Fl(t)p Fk(\))p
Fl(;)114 b(y)t Fk(\(0\))27 b(=)g(0)p Fl(;)114 b(y)2539
1059 y Fg(0)2562 1100 y Fk(\(0\))27 b(=)h(0)456 1286
y Fn(is)43 b(the)g(function)g Fl(y)t Fk(\()p Fl(t)p Fk(\))h(=)1441
1247 y Fd(1)p 1441 1263 36 4 v 1441 1320 a(2)1503 1286
y Fk(sin)q(\()p Fl(t)p Fk(\))29 b Fi(\000)1879 1247 y
Fd(1)p 1879 1263 V 1879 1320 a(2)1925 1286 y Fl(te)2005
1250 y Fg(\000)p Fj(t)2090 1286 y Fl(:)42 b Fn(The)h(transient)h
(solution)f(is)g Fl(y)3269 1301 y Fj(T)3369 1286 y Fk(=)456
1411 y Fi(\000)543 1371 y Fd(1)p 543 1388 V 543 1445
a(2)588 1411 y Fl(te)668 1374 y Fg(\000)p Fj(t)753 1411
y Fn(,)49 b(and)c(the)h(steady-state)g(solution)g(is)f
Fl(y)2243 1426 y Fj(S)2343 1411 y Fk(=)2479 1371 y Fd(1)p
2479 1388 V 2479 1445 a(2)2541 1411 y Fk(sin\()p Fl(t)p
Fk(\))p Fn(.)82 b(The)46 b(follo)m(wing)456 1527 y(graph)24
b(of)h Fl(y)k Fn(and)24 b Fl(y)1109 1542 y Fj(S)1185
1527 y Fn(indicates)i(the)g(increasing)g(simila)m(rit)m(y)g(b)s(et)m(w)
m(een)h(these)f(function)456 1643 y(as)32 b Fl(t)h Fn(increases.)1350
2886 y @beginspecial 20 @llx 118 @lly 575 @urx 673 @ury
1440 @rwi @setspecial
%%BeginDocument: steadystatecomparison.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, May 1, 2010 4:37:20 PM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
46.0000 -1.00000 338.987 390.000 rc
newpath
47.0000 190.436 m
47.9154 190.298 l
48.8308 189.894 l
49.7463 189.238 l
50.6617 188.345 l
52.4926 185.903 l
54.3235 182.675 l
57.5096 175.481 l
60.6957 166.705 l
67.8619 143.442 l
75.0756 118.566 l
82.2550 95.7872 l
88.9112 78.6958 l
92.3573 71.8963 l
95.8034 66.7025 l
97.5854 64.6859 l
99.3673 63.1424 l
101.149 62.0820 l
102.931 61.5126 l
104.707 61.4391 l
106.483 61.8624 l
108.260 62.7838 l
110.036 64.2026 l
113.690 68.6722 l
117.344 75.1860 l
123.781 91.3740 l
131.028 116.059 l
138.305 146.483 l
145.317 179.664 l
148.501 195.546 l
151.685 211.717 l
155.471 231.098 l
159.257 250.389 l
162.464 266.457 l
165.671 282.104 l
173.133 316.007 l
179.738 341.927 l
186.984 364.571 l
190.434 372.880 l
193.884 379.449 l
197.484 384.361 l
201.084 387.221 l
202.737 387.833 l
204.390 388.000 l
206.043 387.719 l
207.696 386.992 l
211.261 383.904 l
214.827 378.765 l
218.531 371.305 l
222.235 361.765 l
228.683 340.519 l
235.648 311.719 l
239.245 294.832 l
242.843 276.816 l
246.362 258.292 l
249.881 239.078 l
253.287 220.025 l
256.692 200.712 l
260.473 179.199 l
264.254 157.874 l
267.651 139.090 l
271.048 120.861 l
278.303 84.6316 l
284.877 56.0963 l
292.064 30.8836 l
298.826 13.8528 l
302.361 7.77890 l
305.895 3.73809 l
307.623 2.51669 l
309.350 1.79492 l
311.078 1.57467 l
312.806 1.85635 l
314.615 2.68808 l
316.423 4.06646 l
318.232 5.98739 l
320.041 8.44519 l
323.525 14.6644 l
327.009 22.7800 l
334.135 44.8939 l
341.202 73.2944 l
344.449 88.1659 l
347.696 103.995 l
351.417 123.126 l
355.139 143.085 l
358.467 161.439 l
361.795 180.081 l
365.344 200.067 l
368.893 219.948 l
372.290 238.675 l
375.686 256.910 l
382.987 293.581 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
0 0 1.00000 RG
46.0000 -1.00000 338.987 390.000 rc
newpath
47.0000 190.436 m
50.6617 169.831 l
54.3235 149.470 l
57.5096 132.141 l
60.6957 115.336 l
67.8619 80.2242 l
75.0756 49.9270 l
82.2550 26.1782 l
88.9112 10.8165 l
92.3573 5.59686 l
95.8034 2.31988 l
97.5854 1.39956 l
99.3673 1.01086 l
101.149 1.15487 l
102.931 1.83120 l
106.483 4.75885 l
110.036 9.76034 l
113.690 17.0097 l
117.344 26.3085 l
123.781 47.3257 l
131.028 77.2063 l
134.666 94.2835 l
138.305 112.487 l
141.811 130.896 l
145.317 149.952 l
148.501 167.645 l
151.685 185.542 l
155.471 206.867 l
159.257 227.984 l
162.464 245.511 l
165.671 262.536 l
173.133 299.351 l
179.738 327.527 l
186.984 352.330 l
193.884 368.990 l
197.484 374.734 l
201.084 378.365 l
202.737 379.312 l
204.390 379.802 l
206.043 379.833 l
207.696 379.406 l
211.261 376.931 l
214.827 372.357 l
218.531 365.440 l
222.235 356.398 l
228.683 335.927 l
235.648 307.844 l
239.245 291.283 l
242.843 273.568 l
246.362 255.314 l
249.881 236.349 l
253.287 217.518 l
256.692 198.409 l
260.473 177.105 l
264.254 155.969 l
267.651 137.341 l
271.048 119.256 l
278.303 83.2965 l
284.877 54.9673 l
292.064 29.9444 l
298.826 13.0637 l
302.361 7.05859 l
305.895 3.08075 l
307.623 1.88809 l
309.350 1.19390 l
311.078 1.00000 l
312.806 1.30691 l
314.615 2.16391 l
316.423 3.56640 l
318.232 5.51037 l
320.041 7.99014 l
323.525 14.2490 l
327.009 22.4007 l
334.135 44.5794 l
341.202 73.0332 l
344.449 87.9262 l
347.696 103.775 l
351.417 122.926 l
355.139 142.904 l
358.467 161.274 l
361.795 179.929 l
365.344 199.929 l
368.893 219.823 l
372.290 238.560 l
375.686 256.806 l
382.987 293.495 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
349.388 190.436 m
349.388 193.036 l
S
newpath
282.190 190.436 m
282.190 193.036 l
S
newpath
214.993 190.436 m
214.993 193.036 l
S
newpath
147.796 190.436 m
147.796 193.036 l
S
newpath
80.5987 190.436 m
80.5987 193.036 l
S
newpath
47.0000 190.436 m
382.987 190.436 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
208 213 12 15 rc
newpath
215.375 217.687 m
214.875 219.406 l
215.875 219.406 l
215.765 219.812 l
214.781 219.812 l
213.687 223.546 l
213.572 223.953 213.515 224.213 213.515 224.328  c
213.515 224.401 213.531 224.458 213.562 224.500  c
213.593 224.541 213.635 224.562 213.687 224.562  c
213.791 224.562 213.927 224.484 214.093 224.328  c
214.197 224.244 214.427 223.984 214.781 223.546  c
214.984 223.718 l
214.599 224.281 214.234 224.677 213.890 224.906  c
213.651 225.072 213.411 225.156 213.171 225.156  c
212.984 225.156 212.830 225.096 212.710 224.976  c
212.591 224.856 212.531 224.708 212.531 224.531  c
212.531 224.302 212.599 223.953 212.734 223.484  c
213.796 219.812 l
212.843 219.812 l
212.906 219.562 l
213.364 219.437 213.750 219.247 214.062 218.992  c
214.375 218.737 214.718 218.302 215.093 217.687  c
215.375 217.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 190.436 m
47.0000 195.636 l
S
Q
q
newpath
114.197 190.436 m
114.197 195.636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
121.953 212.343 m
121.359 214.000 l
116.281 214.000 l
116.281 213.765 l
117.770 212.401 118.820 211.286 119.429 210.421  c
120.039 209.557 120.343 208.770 120.343 208.062  c
120.343 207.510 120.177 207.059 119.843 206.710  c
119.510 206.362 119.109 206.187 118.640 206.187  c
118.224 206.187 117.846 206.309 117.507 206.554  c
117.169 206.799 116.921 207.161 116.765 207.640  c
116.531 207.640 l
116.635 206.859 116.906 206.260 117.343 205.843  c
117.781 205.427 118.328 205.218 118.984 205.218  c
119.682 205.218 120.265 205.442 120.734 205.890  c
121.203 206.338 121.437 206.864 121.437 207.468  c
121.437 207.906 121.333 208.343 121.125 208.781  c
120.812 209.468 120.307 210.192 119.609 210.953  c
118.557 212.109 117.895 212.807 117.625 213.046  c
119.875 213.046 l
120.333 213.046 120.653 213.028 120.835 212.992  c
121.018 212.955 121.184 212.885 121.335 212.781  c
121.487 212.677 121.614 212.531 121.718 212.343  c
121.953 212.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
181.394 190.436 m
181.394 195.636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
189.046 210.828 m
189.046 211.734 l
187.890 211.734 l
187.890 214.000 l
186.843 214.000 l
186.843 211.734 l
183.203 211.734 l
183.203 210.921 l
187.203 205.218 l
187.890 205.218 l
187.890 210.828 l
189.046 210.828 l
h
186.843 210.828 m
186.843 206.546 l
183.828 210.828 l
186.843 210.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
248.592 190.436 m
248.592 195.636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
255.828 205.218 m
255.828 205.453 l
255.265 205.505 254.807 205.614 254.453 205.781  c
254.099 205.947 253.750 206.203 253.406 206.546  c
253.062 206.890 252.778 207.273 252.554 207.695  c
252.330 208.117 252.140 208.614 251.984 209.187  c
252.599 208.770 253.213 208.562 253.828 208.562  c
254.411 208.562 254.919 208.799 255.351 209.273  c
255.783 209.747 256.000 210.359 256.000 211.109  c
256.000 211.828 255.781 212.484 255.343 213.078  c
254.822 213.796 254.130 214.156 253.265 214.156  c
252.671 214.156 252.171 213.958 251.765 213.562  c
250.963 212.812 250.562 211.833 250.562 210.625  c
250.562 209.854 250.716 209.122 251.023 208.429  c
251.330 207.737 251.770 207.119 252.343 206.578  c
252.916 206.036 253.466 205.674 253.992 205.492  c
254.518 205.309 255.005 205.218 255.453 205.218  c
255.828 205.218 l
h
251.875 209.656 m
251.802 210.229 251.765 210.692 251.765 211.046  c
251.765 211.453 251.841 211.893 251.992 212.367  c
252.143 212.841 252.364 213.218 252.656 213.500  c
252.875 213.697 253.140 213.796 253.453 213.796  c
253.817 213.796 254.145 213.622 254.437 213.273  c
254.729 212.924 254.875 212.432 254.875 211.796  c
254.875 211.067 254.729 210.440 254.437 209.914  c
254.145 209.388 253.739 209.125 253.218 209.125  c
253.052 209.125 252.877 209.158 252.695 209.226  c
252.513 209.294 252.239 209.437 251.875 209.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
315.789 190.436 m
315.789 195.636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
319.500 209.671 m
318.812 209.109 318.369 208.658 318.171 208.320  c
317.974 207.981 317.875 207.630 317.875 207.265  c
317.875 206.703 318.091 206.221 318.523 205.820  c
318.955 205.419 319.531 205.218 320.250 205.218  c
320.947 205.218 321.507 205.406 321.929 205.781  c
322.351 206.156 322.562 206.583 322.562 207.062  c
322.562 207.385 322.447 207.713 322.218 208.046  c
321.989 208.380 321.515 208.776 320.796 209.234  c
321.536 209.807 322.026 210.260 322.265 210.593  c
322.588 211.020 322.750 211.474 322.750 211.953  c
322.750 212.557 322.520 213.075 322.062 213.507  c
321.604 213.940 321.000 214.156 320.250 214.156  c
319.427 214.156 318.786 213.901 318.328 213.390  c
317.963 212.974 317.781 212.520 317.781 212.031  c
317.781 211.656 317.911 211.281 318.171 210.906  c
318.432 210.531 318.875 210.119 319.500 209.671  c
h
320.484 208.984 m
320.994 208.526 321.317 208.164 321.453 207.898  c
321.588 207.632 321.656 207.333 321.656 207.000  c
321.656 206.562 321.531 206.216 321.281 205.960  c
321.031 205.705 320.692 205.578 320.265 205.578  c
319.828 205.578 319.474 205.703 319.203 205.953  c
318.932 206.203 318.796 206.494 318.796 206.828  c
318.796 207.046 318.854 207.268 318.968 207.492  c
319.083 207.716 319.244 207.927 319.453 208.125  c
320.484 208.984 l
h
319.796 209.906 m
319.442 210.197 319.182 210.518 319.015 210.867  c
318.849 211.216 318.765 211.593 318.765 212.000  c
318.765 212.552 318.914 212.992 319.210 213.320  c
319.507 213.648 319.885 213.812 320.343 213.812  c
320.802 213.812 321.169 213.682 321.445 213.421  c
321.721 213.161 321.859 212.849 321.859 212.484  c
321.859 212.182 321.776 211.906 321.609 211.656  c
321.317 211.208 320.713 210.625 319.796 209.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.987 190.436 m
382.987 195.636 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
382.531 206.234 m
384.625 205.218 l
384.828 205.218 l
384.828 212.484 l
384.828 212.963 384.849 213.263 384.890 213.382  c
384.932 213.502 385.015 213.593 385.140 213.656  c
385.265 213.718 385.520 213.755 385.906 213.765  c
385.906 214.000 l
382.671 214.000 l
382.671 213.765 l
383.078 213.755 383.341 213.718 383.460 213.656  c
383.580 213.593 383.664 213.510 383.710 213.406  c
383.757 213.302 383.781 212.994 383.781 212.484  c
383.781 207.843 l
383.781 207.208 383.760 206.802 383.718 206.625  c
383.687 206.489 383.632 206.390 383.554 206.328  c
383.476 206.265 383.380 206.234 383.265 206.234  c
383.109 206.234 382.895 206.302 382.625 206.437  c
382.531 206.234 l
h
387.968 209.750 m
387.968 208.770 388.117 207.924 388.414 207.210  c
388.710 206.497 389.104 205.968 389.593 205.625  c
389.979 205.354 390.375 205.218 390.781 205.218  c
391.437 205.218 392.026 205.552 392.546 206.218  c
393.203 207.052 393.531 208.182 393.531 209.609  c
393.531 210.609 393.388 211.458 393.101 212.156  c
392.815 212.854 392.447 213.362 392.000 213.679  c
391.552 213.997 391.125 214.156 390.718 214.156  c
389.895 214.156 389.208 213.671 388.656 212.703  c
388.197 211.880 387.968 210.895 387.968 209.750  c
h
389.218 209.906 m
389.218 211.093 389.364 212.062 389.656 212.812  c
389.895 213.437 390.255 213.750 390.734 213.750  c
390.963 213.750 391.200 213.648 391.445 213.445  c
391.690 213.242 391.875 212.895 392.000 212.406  c
392.197 211.687 392.296 210.661 392.296 209.328  c
392.296 208.349 392.192 207.531 391.984 206.875  c
391.838 206.385 391.640 206.041 391.390 205.843  c
391.224 205.708 391.015 205.640 390.765 205.640  c
390.484 205.640 390.229 205.765 390.000 206.015  c
389.697 206.369 389.492 206.924 389.382 207.679  c
389.273 208.434 389.218 209.177 389.218 209.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
47.0000 76.7726 m
44.4000 76.7726 l
S
newpath
47.0000 152.548 m
44.4000 152.548 l
S
newpath
47.0000 228.324 m
44.4000 228.324 l
S
newpath
47.0000 304.100 m
44.4000 304.100 l
S
newpath
47.0000 379.876 m
44.4000 379.876 l
S
newpath
47.0000 388.000 m
47.0000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
0 88 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
47.0000 341.988 m
41.8000 341.988 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 340 7 13 rc
newpath
29.7968 347.437 m
21.2031 347.437 l
21.2031 346.765 l
29.7968 346.765 l
29.7968 347.437 l
h
f
Q
newpath
28.4687 346.750 m
28.4687 345.770 28.6171 344.924 28.9140 344.210  c
29.2109 343.497 29.6041 342.968 30.0937 342.625  c
30.4791 342.354 30.8750 342.218 31.2812 342.218  c
31.9375 342.218 32.5260 342.552 33.0468 343.218  c
33.7031 344.052 34.0312 345.182 34.0312 346.609  c
34.0312 347.609 33.8880 348.458 33.6015 349.156  c
33.3151 349.854 32.9479 350.362 32.5000 350.679  c
32.0520 350.997 31.6250 351.156 31.2187 351.156  c
30.3958 351.156 29.7083 350.671 29.1562 349.703  c
28.6979 348.880 28.4687 347.895 28.4687 346.750  c
h
29.7187 346.906 m
29.7187 348.093 29.8645 349.062 30.1562 349.812  c
30.3958 350.437 30.7552 350.750 31.2343 350.750  c
31.4635 350.750 31.7005 350.648 31.9453 350.445  c
32.1901 350.242 32.3750 349.895 32.5000 349.406  c
32.6979 348.687 32.7968 347.661 32.7968 346.328  c
32.7968 345.349 32.6927 344.531 32.4843 343.875  c
32.3385 343.385 32.1406 343.041 31.8906 342.843  c
31.7239 342.708 31.5156 342.640 31.2656 342.640  c
30.9843 342.640 30.7291 342.765 30.5000 343.015  c
30.1979 343.369 29.9921 343.924 29.8828 344.679  c
29.7734 345.434 29.7187 346.177 29.7187 346.906  c
h
36.1250 349.765 m
36.3229 349.765 36.4895 349.835 36.6250 349.976  c
36.7604 350.117 36.8281 350.281 36.8281 350.468  c
36.8281 350.666 36.7604 350.833 36.6250 350.968  c
36.4895 351.104 36.3229 351.171 36.1250 351.171  c
35.9270 351.171 35.7604 351.104 35.6250 350.968  c
35.4895 350.833 35.4218 350.666 35.4218 350.468  c
35.4218 350.270 35.4895 350.104 35.6250 349.968  c
35.7604 349.833 35.9270 349.765 36.1250 349.765  c
h
43.7968 347.828 m
43.7968 348.734 l
42.6406 348.734 l
42.6406 351.000 l
41.5937 351.000 l
41.5937 348.734 l
37.9531 348.734 l
37.9531 347.921 l
41.9531 342.218 l
42.6406 342.218 l
42.6406 347.828 l
43.7968 347.828 l
h
41.5937 347.828 m
41.5937 343.546 l
38.5781 347.828 l
41.5937 347.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 266.212 m
41.8000 266.212 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
19 265 7 13 rc
newpath
29.7968 272.437 m
21.2031 272.437 l
21.2031 271.765 l
29.7968 271.765 l
29.7968 272.437 l
h
f
Q
newpath
28.4687 271.750 m
28.4687 270.770 28.6171 269.924 28.9140 269.210  c
29.2109 268.497 29.6041 267.968 30.0937 267.625  c
30.4791 267.354 30.8750 267.218 31.2812 267.218  c
31.9375 267.218 32.5260 267.552 33.0468 268.218  c
33.7031 269.052 34.0312 270.182 34.0312 271.609  c
34.0312 272.609 33.8880 273.458 33.6015 274.156  c
33.3151 274.854 32.9479 275.362 32.5000 275.679  c
32.0520 275.997 31.6250 276.156 31.2187 276.156  c
30.3958 276.156 29.7083 275.671 29.1562 274.703  c
28.6979 273.880 28.4687 272.895 28.4687 271.750  c
h
29.7187 271.906 m
29.7187 273.093 29.8645 274.062 30.1562 274.812  c
30.3958 275.437 30.7552 275.750 31.2343 275.750  c
31.4635 275.750 31.7005 275.648 31.9453 275.445  c
32.1901 275.242 32.3750 274.895 32.5000 274.406  c
32.6979 273.687 32.7968 272.661 32.7968 271.328  c
32.7968 270.349 32.6927 269.531 32.4843 268.875  c
32.3385 268.385 32.1406 268.041 31.8906 267.843  c
31.7239 267.708 31.5156 267.640 31.2656 267.640  c
30.9843 267.640 30.7291 267.765 30.5000 268.015  c
30.1979 268.369 29.9921 268.924 29.8828 269.679  c
29.7734 270.434 29.7187 271.177 29.7187 271.906  c
h
36.1250 274.765 m
36.3229 274.765 36.4895 274.835 36.6250 274.976  c
36.7604 275.117 36.8281 275.281 36.8281 275.468  c
36.8281 275.666 36.7604 275.833 36.6250 275.968  c
36.4895 276.104 36.3229 276.171 36.1250 276.171  c
35.9270 276.171 35.7604 276.104 35.6250 275.968  c
35.4895 275.833 35.4218 275.666 35.4218 275.468  c
35.4218 275.270 35.4895 275.104 35.6250 274.968  c
35.7604 274.833 35.9270 274.765 36.1250 274.765  c
h
43.7031 274.343 m
43.1093 276.000 l
38.0312 276.000 l
38.0312 275.765 l
39.5208 274.401 40.5703 273.286 41.1796 272.421  c
41.7890 271.557 42.0937 270.770 42.0937 270.062  c
42.0937 269.510 41.9270 269.059 41.5937 268.710  c
41.2604 268.362 40.8593 268.187 40.3906 268.187  c
39.9739 268.187 39.5963 268.309 39.2578 268.554  c
38.9192 268.799 38.6718 269.161 38.5156 269.640  c
38.2812 269.640 l
38.3854 268.859 38.6562 268.260 39.0937 267.843  c
39.5312 267.427 40.0781 267.218 40.7343 267.218  c
41.4322 267.218 42.0156 267.442 42.4843 267.890  c
42.9531 268.338 43.1875 268.864 43.1875 269.468  c
43.1875 269.906 43.0833 270.343 42.8750 270.781  c
42.5625 271.468 42.0572 272.192 41.3593 272.953  c
40.3072 274.109 39.6458 274.807 39.3750 275.046  c
41.6250 275.046 l
42.0833 275.046 42.4036 275.028 42.5859 274.992  c
42.7682 274.955 42.9349 274.885 43.0859 274.781  c
43.2369 274.677 43.3645 274.531 43.4687 274.343  c
43.7031 274.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 190.436 m
41.8000 190.436 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
37.4687 195.750 m
37.4687 194.770 37.6171 193.924 37.9140 193.210  c
38.2109 192.497 38.6041 191.968 39.0937 191.625  c
39.4791 191.354 39.8750 191.218 40.2812 191.218  c
40.9375 191.218 41.5260 191.552 42.0468 192.218  c
42.7031 193.052 43.0312 194.182 43.0312 195.609  c
43.0312 196.609 42.8880 197.458 42.6015 198.156  c
42.3151 198.854 41.9479 199.362 41.5000 199.679  c
41.0520 199.997 40.6250 200.156 40.2187 200.156  c
39.3958 200.156 38.7083 199.671 38.1562 198.703  c
37.6979 197.880 37.4687 196.895 37.4687 195.750  c
h
38.7187 195.906 m
38.7187 197.093 38.8645 198.062 39.1562 198.812  c
39.3958 199.437 39.7552 199.750 40.2343 199.750  c
40.4635 199.750 40.7005 199.648 40.9453 199.445  c
41.1901 199.242 41.3750 198.895 41.5000 198.406  c
41.6979 197.687 41.7968 196.661 41.7968 195.328  c
41.7968 194.349 41.6927 193.531 41.4843 192.875  c
41.3385 192.385 41.1406 192.041 40.8906 191.843  c
40.7239 191.708 40.5156 191.640 40.2656 191.640  c
39.9843 191.640 39.7291 191.765 39.5000 192.015  c
39.1979 192.369 38.9921 192.924 38.8828 193.679  c
38.7734 194.434 38.7187 195.177 38.7187 195.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 114.660 m
41.8000 114.660 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 119.750 m
28.4687 118.770 28.6171 117.924 28.9140 117.210  c
29.2109 116.497 29.6041 115.968 30.0937 115.625  c
30.4791 115.354 30.8750 115.218 31.2812 115.218  c
31.9375 115.218 32.5260 115.552 33.0468 116.218  c
33.7031 117.052 34.0312 118.182 34.0312 119.609  c
34.0312 120.609 33.8880 121.458 33.6015 122.156  c
33.3151 122.854 32.9479 123.362 32.5000 123.679  c
32.0520 123.997 31.6250 124.156 31.2187 124.156  c
30.3958 124.156 29.7083 123.671 29.1562 122.703  c
28.6979 121.880 28.4687 120.895 28.4687 119.750  c
h
29.7187 119.906 m
29.7187 121.093 29.8645 122.062 30.1562 122.812  c
30.3958 123.437 30.7552 123.750 31.2343 123.750  c
31.4635 123.750 31.7005 123.648 31.9453 123.445  c
32.1901 123.242 32.3750 122.895 32.5000 122.406  c
32.6979 121.687 32.7968 120.661 32.7968 119.328  c
32.7968 118.349 32.6927 117.531 32.4843 116.875  c
32.3385 116.385 32.1406 116.041 31.8906 115.843  c
31.7239 115.708 31.5156 115.640 31.2656 115.640  c
30.9843 115.640 30.7291 115.765 30.5000 116.015  c
30.1979 116.369 29.9921 116.924 29.8828 117.679  c
29.7734 118.434 29.7187 119.177 29.7187 119.906  c
h
36.1250 122.765 m
36.3229 122.765 36.4895 122.835 36.6250 122.976  c
36.7604 123.117 36.8281 123.281 36.8281 123.468  c
36.8281 123.666 36.7604 123.833 36.6250 123.968  c
36.4895 124.104 36.3229 124.171 36.1250 124.171  c
35.9270 124.171 35.7604 124.104 35.6250 123.968  c
35.4895 123.833 35.4218 123.666 35.4218 123.468  c
35.4218 123.270 35.4895 123.104 35.6250 122.968  c
35.7604 122.833 35.9270 122.765 36.1250 122.765  c
h
43.7031 122.343 m
43.1093 124.000 l
38.0312 124.000 l
38.0312 123.765 l
39.5208 122.401 40.5703 121.286 41.1796 120.421  c
41.7890 119.557 42.0937 118.770 42.0937 118.062  c
42.0937 117.510 41.9270 117.059 41.5937 116.710  c
41.2604 116.362 40.8593 116.187 40.3906 116.187  c
39.9739 116.187 39.5963 116.309 39.2578 116.554  c
38.9192 116.799 38.6718 117.161 38.5156 117.640  c
38.2812 117.640 l
38.3854 116.859 38.6562 116.260 39.0937 115.843  c
39.5312 115.427 40.0781 115.218 40.7343 115.218  c
41.4322 115.218 42.0156 115.442 42.4843 115.890  c
42.9531 116.338 43.1875 116.864 43.1875 117.468  c
43.1875 117.906 43.0833 118.343 42.8750 118.781  c
42.5625 119.468 42.0572 120.192 41.3593 120.953  c
40.3072 122.109 39.6458 122.807 39.3750 123.046  c
41.6250 123.046 l
42.0833 123.046 42.4036 123.028 42.5859 122.992  c
42.7682 122.955 42.9349 122.885 43.0859 122.781  c
43.2369 122.677 43.3645 122.531 43.4687 122.343  c
43.7031 122.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
47.0000 38.8847 m
41.8000 38.8847 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
28.4687 43.7500 m
28.4687 42.7708 28.6171 41.9244 28.9140 41.2109  c
29.2109 40.4974 29.6041 39.9687 30.0937 39.6250  c
30.4791 39.3541 30.8750 39.2187 31.2812 39.2187  c
31.9375 39.2187 32.5260 39.5520 33.0468 40.2187  c
33.7031 41.0520 34.0312 42.1822 34.0312 43.6093  c
34.0312 44.6093 33.8880 45.4583 33.6015 46.1562  c
33.3151 46.8541 32.9479 47.3619 32.5000 47.6796  c
32.0520 47.9974 31.6250 48.1562 31.2187 48.1562  c
30.3958 48.1562 29.7083 47.6718 29.1562 46.7031  c
28.6979 45.8802 28.4687 44.8958 28.4687 43.7500  c
h
29.7187 43.9062 m
29.7187 45.0937 29.8645 46.0625 30.1562 46.8125  c
30.3958 47.4375 30.7552 47.7500 31.2343 47.7500  c
31.4635 47.7500 31.7005 47.6484 31.9453 47.4453  c
32.1901 47.2421 32.3750 46.8958 32.5000 46.4062  c
32.6979 45.6875 32.7968 44.6614 32.7968 43.3281  c
32.7968 42.3489 32.6927 41.5312 32.4843 40.8750  c
32.3385 40.3854 32.1406 40.0416 31.8906 39.8437  c
31.7239 39.7083 31.5156 39.6406 31.2656 39.6406  c
30.9843 39.6406 30.7291 39.7656 30.5000 40.0156  c
30.1979 40.3697 29.9921 40.9244 29.8828 41.6796  c
29.7734 42.4349 29.7187 43.1770 29.7187 43.9062  c
h
36.1250 46.7656 m
36.3229 46.7656 36.4895 46.8359 36.6250 46.9765  c
36.7604 47.1171 36.8281 47.2812 36.8281 47.4687  c
36.8281 47.6666 36.7604 47.8333 36.6250 47.9687  c
36.4895 48.1041 36.3229 48.1718 36.1250 48.1718  c
35.9270 48.1718 35.7604 48.1041 35.6250 47.9687  c
35.4895 47.8333 35.4218 47.6666 35.4218 47.4687  c
35.4218 47.2708 35.4895 47.1041 35.6250 46.9687  c
35.7604 46.8333 35.9270 46.7656 36.1250 46.7656  c
h
43.7968 44.8281 m
43.7968 45.7343 l
42.6406 45.7343 l
42.6406 48.0000 l
41.5937 48.0000 l
41.5937 45.7343 l
37.9531 45.7343 l
37.9531 44.9218 l
41.9531 39.2187 l
42.6406 39.2187 l
42.6406 44.8281 l
43.7968 44.8281 l
h
41.5937 44.8281 m
41.5937 40.5468 l
38.5781 44.8281 l
41.5937 44.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF

%%EndDocument
 @endspecial 555 3037 a(W)m(e)g(have)e(one)i(last)f(topic)g(to)g(explo)
m(re)h(in)f(this)h(chapter)g(which)g(will)f(a)m(rise)h(in)f(the)456
3153 y(follo)m(wing)g(example.)456 3408 y Fe(Example)45
b(4:)f Fn(Supp)s(ose)33 b(a)f(sp)m(ring-mass)h(system)h(is)f(mo)s
(delled)g(b)m(y)f(the)h(IVP)1191 3593 y Fk(\177)-55 b
Fl(y)25 b Fk(+)d Fl(y)31 b Fk(=)c(sin)q(\()p Fl(!)t(t)p
Fk(\))p Fl(;)49 b(y)t Fk(\(0\))26 b(=)i(0)p Fl(;)17 b(y)2362
3552 y Fg(0)2384 3593 y Fk(\(0\))27 b(=)g(0)p Fl(:)456
3779 y Fn(Explo)m(re)j(the)i(consequences)h(of)d(va)m(rious)g(values)h
(of)f(the)h(driving)f(frequency)h Fl(!)g(>)d Fk(0)456
3895 y Fn(on)k(the)h(solutions)g(of)f(this)h(IVP)-8 b(.)555
4011 y(The)43 b(cha)m(racteristic)j(equation)d(is)h Fl(r)1877
3975 y Fd(2)1946 4011 y Fk(+)29 b(1)46 b(=)f(0)p Fn(,)h(which)e(has)g
(ro)s(ots)f Fl(r)49 b Fk(=)d Fi(\006)p Fl(i)p Fn(.)456
4127 y(Therefo)m(re)33 b(the)g(solution)g(of)f(the)h(related)g
(homogeneous)g(equation)g(is)1380 4313 y Fl(y)1428 4328
y Fj(h)1472 4313 y Fk(\()p Fl(t)p Fk(\))28 b(=)g Fl(A)17
b Fk(cos\()p Fl(t)p Fk(\))22 b(+)g Fl(B)g Fk(sin)q(\()p
Fl(t)p Fk(\))p Fl(:)456 4498 y Fn(W)m(e)30 b(will)g(need)h(to)f(b)s(e)g
(ca)m(reful)g(when)h(w)m(e)g(guess)g(the)f(fo)m(rm)g(of)g(a)f(pa)m
(rticula)m(r)i(solution)456 4614 y(to)46 b(non-homogeneous)f(equation,)
50 b(b)s(ecause)d(the)f(fo)m(rm)g(of)g(our)g(guess)g(dep)s(ends)456
4731 y(up)s(on)32 b(the)h(value)f(of)g Fl(!)t Fn(.)555
4847 y(First,)37 b(if)e Fl(!)g Fi(6)p Fk(=)d(1)p Fn(,)k(then)g(w)m(e)g
(guess)g Fl(y)1862 4862 y Fj(p)1901 4847 y Fk(\()p Fl(t)p
Fk(\))c(=)g Fl(C)24 b Fk(sin)q(\()p Fl(!)t(t)p Fk(\))f(+)h
Fl(D)19 b Fk(cos)q(\()p Fl(!)t(t)p Fk(\))p Fn(,)35 b(and)g(the)456
4963 y(metho)s(d)d(of)h(undetermined)h(co)s(e\016cients)g(leads)f(us)g
(to)f(the)i(solution)1452 5172 y Fl(y)1500 5187 y Fj(p)1539
5172 y Fk(\()p Fl(t)p Fk(\))28 b(=)1904 5105 y(1)p 1792
5149 275 4 v 1792 5240 a(1)21 b Fi(\000)i Fl(!)2027 5212
y Fd(2)2092 5172 y Fk(sin)18 b(\()p Fl(!)t(t)p Fk(\))e
Fl(:)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 456 251 a Fh(8)456 450 y Fn(Therefo)m(re)33
b(the)g(general)g(solution)g(of)f(the)h(non-homogeneous)f(p)m(roblem)h
(is)1029 650 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27 b(=)1445
583 y(1)p 1333 627 275 4 v 1333 718 a(1)22 b Fi(\000)g
Fl(!)1568 690 y Fd(2)1634 650 y Fk(sin)17 b(\()p Fl(!)t(t)p
Fk(\))k(+)h Fl(A)17 b Fk(sin)q(\()p Fl(t)p Fk(\))22 b(+)g
Fl(B)g Fk(cos)q(\()p Fl(t)p Fk(\))p Fl(;)456 858 y Fn(and)28
b(the)h(initial)g(conditions)g Fl(y)t Fk(\(0\))d(=)45
b(_)-44 b Fl(y)s Fk(\(0\))27 b(=)h(0)g Fn(imply)h Fl(A)e
Fk(=)2693 818 y Fj(!)p 2631 835 172 4 v 2631 892 a Fd(1)p
Fg(\000)p Fj(!)2767 873 y Ff(2)2841 858 y Fn(and)h Fl(B)33
b Fk(=)3304 818 y Fd(1)p 3236 835 V 3236 892 a Fj(!)3282
873 y Ff(2)3317 892 y Fg(\000)p Fd(1)3417 858 y Fn(.)456
976 y(Consequently)g(w)m(e)h(have)811 1176 y Fl(y)t Fk(\()p
Fl(t)p Fk(\))27 b(=)1227 1109 y(1)p 1115 1154 275 4 v
1115 1245 a(1)21 b Fi(\000)i Fl(!)1350 1216 y Fd(2)1415
1176 y Fk(sin)18 b(\()p Fl(!)t(t)p Fk(\))j(+)1962 1109
y Fl(!)p 1857 1154 V 1857 1245 a Fk(1)h Fi(\000)h Fl(!)2093
1216 y Fd(2)2158 1176 y Fk(sin)q(\()p Fl(t)p Fk(\))f(+)2632
1109 y(1)p 2519 1154 V 2519 1245 a(1)g Fi(\000)h Fl(!)2755
1216 y Fd(2)2820 1176 y Fk(cos)q(\()p Fl(t)p Fk(\))p
Fl(:)555 1371 y Fn(Notice)35 b(that)f(the)h(amplitude)f(co)s
(e\016cients)i(here)f(all)e(b)s(ecome)i(la)m(rger)f(as)g
Fl(!)k Fn(gets)456 1487 y(closer)33 b(to)g Fk(1)p Fn(.)555
1604 y(On)39 b(the)h(other)f(hand,)i(if)d(w)m(e)i(sta)m(rt)g(out)f
(with)h Fl(!)i Fk(=)c(1)p Fn(,)j(then)e(the)h(initial)e(guess)456
1720 y(fo)m(r)i(a)h(pa)m(rticula)m(r)g(solution)g(of)g(the)g
(non-homogeneous)g(equation)f(will)h(have)g(the)456 1836
y(fo)m(rm)33 b Fl(y)723 1851 y Fj(p)763 1836 y Fk(\()p
Fl(t)p Fk(\))c(=)g Fl(C)7 b(t)17 b Fk(cos)q(\()p Fl(t)p
Fk(\))23 b(+)f Fl(D)s(t)17 b Fk(sin)q(\()p Fl(t)p Fk(\))p
Fn(,)34 b(and)f(the)h(reader)g(shoudl)g(verify)f(that)h(this)456
1952 y(eventually)e(leads)h(to)f(the)i(complete)f(solution)1352
2152 y Fl(y)t Fk(\()p Fl(t)p Fk(\))27 b(=)g Fi(\000)1732
2085 y Fk(1)p 1732 2129 49 4 v 1732 2221 a(2)1791 2152
y Fl(t)17 b Fk(cos)q(\()p Fl(t)p Fk(\))22 b(+)2215 2085
y(1)p 2215 2129 V 2215 2221 a(2)2290 2152 y(sin)q(\()p
Fl(t)p Fk(\))p Fl(:)456 2339 y Fn(In)27 b(this)i(case,)h(as)e(time)h(p)
m(rogresses,)i(the)e(magnitude)g(of)e(the)i(oscillations)g(increases)
456 2455 y(without)k(b)s(ound.)2291 b Fb(\003)555 2571
y Fn(The)47 b(phenomenon)g(explo)m(red)g(in)f(the)h(last)g(example)g
(is)f(called)h Fm(resonance)p Fn(.)456 2688 y(The)33
b(idea)g(is)g(that)g(the)h(sp)m(ring-mass)f(system)h(has)g(a)e(natural)
h(frequency)h(at)f(which)456 2804 y(it)24 b(w)m(ants)i(to)e(oscillate.)
42 b(If)23 b(the)j(driving)e(fo)m(rce)h(oscillates)g(at)g(close)g(to)g
(this)g(frequency)-8 b(,)456 2920 y(the)27 b(resulting)g(oscillations)g
(in)f(the)h(system)h(will)e(b)s(e)h(la)m(rger)g(in)f(amplitude)h(than)f
(they)456 3036 y(w)m(ould)39 b(b)s(e)g(if)g(the)h(frequencies)h(w)m
(ere)g(not)e(close)h(\(even)g(if)f(the)g(amplitude)h(of)f(the)456
3152 y(driving)32 b(fo)m(rce)h(is)h(not)e(changed\).)45
b(If)32 b(the)i(driving)e(fo)m(rce)h(is)h(applied)e(at)h(exactly)g(the)
456 3269 y(resonant)d(frequency)-8 b(,)31 b(then)g(the)f(oscillations)h
(will)f(gro)m(w)g(in)g(magnitude)g(instead)h(of)456 3385
y(tending)i(to)f(a)g(steady-state)i(\(i.e.)43 b(p)s(erio)s(dic\))33
b(b)s(ehaviour.)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 3406 251 a Fh(9)1638 487 y Fo(Problems)456
705 y Fe(Pr)m(oblem)48 b(1:)h Fn(Prove)34 b(that,)i(if)f(there)h(is)f
(no)f(external)i(driving)e(fo)m(rce)h(and)g(any)456 821
y(damping)30 b(at)h(all)f(\(i.e.)43 b Fl(C)35 b(>)27
b Fk(0)p Fn(\))k(fo)m(r)f(a)h(sp)m(ring-mass)g(system,)h(then)g
Fk(lim)2991 836 y Fj(t)p Fg(!1)3179 821 y Fl(y)t Fk(\()p
Fl(t)p Fk(\))27 b(=)456 937 y(0)p Fn(.)456 1135 y Fe(Pr)m(oblem)45
b(2:)e Fn(Consider)33 b(a)f(critically)g(damp)s(ed)g(sp)m(ring-mass)h
(system)g(subject)456 1251 y(to)48 b(the)h(follo)m(wing)f(pa)m
(rameters:)77 b Fl(m)55 b Fk(=)f(2)p Fl(;)65 b(C)d Fk(=)55
b(8)p Fl(;)65 b(k)57 b Fk(=)e(8)p Fn(.)91 b(If)48 b(the)h(initial)456
1367 y(displacement)30 b(is)f Fl(y)t Fk(\(0\))e(=)g(1)i
Fn(and)f(the)i(initial)e(velo)s(cit)m(y)h(is)47 b Fk(_)-45
b Fl(y)31 b Fk(=)c Fl(v)2719 1382 y Fd(0)2759 1367 y
Fn(,)j(\014nd)f(a)f(condition)456 1483 y(on)j Fl(v)633
1498 y Fd(0)705 1483 y Fn(that)h(determines)i(whether)f(o)m(r)f(not)g
(the)h(sp)m(ring)f(will)g(ever)g(pass)h(through)f(its)456
1600 y(natural)g(length)h(during)f(the)h(time)h(interval)e
Fl(t)c(>)g Fk(0)p Fn(.)456 1797 y Fe(Pr)m(oblem)43 b(3:)g
Fn(Rep)s(eat)31 b(the)g(p)m(revious)h(p)m(roblem)f(fo)m(r)g(the)h
(overdamp)s(ed)e(sp)m(ring-)456 1913 y(mass)j(system:)44
b Fl(m)28 b Fk(=)g(2)p Fl(;)49 b(C)34 b Fk(=)28 b(10)p
Fl(;)49 b(k)31 b Fk(=)c(8)p Fn(.)456 2111 y Fe(Pr)m(oblem)44
b(4:)f Fn(Consider)32 b(a)g(damp)s(ed)f(sp)m(ring-mass)h(system)h
(describ)s(ed)f(b)m(y)g(the)456 2227 y(IVP)j Fk(\177)-56
b Fl(y)18 b Fk(+)c(2)j(_)-44 b Fl(y)17 b Fk(+)d(2)p Fl(y)31
b Fk(=)d(sin\()p Fl(!)t(t)p Fk(\))p Fn(,)h Fl(y)t Fk(\(0\))e(=)45
b(_)-45 b Fl(y)s Fk(\(0\))28 b(=)f(0)p Fn(.)42 b(Explo)m(re)29
b(the)h(consequences)h(of)456 2343 y(va)m(rious)k(frequencies)j
Fl(!)e(>)d Fk(0)i Fn(fo)m(r)h(the)g(external)g(driving)f(fo)m(rce.)53
b(What)35 b(e\013ect)i(will)456 2460 y(there)c(b)s(e)g(on)f(the)h
(amplitudes)h(of)e(the)h(steady-state)g(solutions?)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

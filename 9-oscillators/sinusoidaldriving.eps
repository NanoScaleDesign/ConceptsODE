%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, December 10, 2011 3:06:49 PM PST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
1.00000 0 0 RG
36.1000 -1.00000 348.894 354.000 rc
newpath
37.1000 1.00000 m
38.0424 13.3732 l
38.9848 46.4169 l
39.4561 68.5457 l
39.9273 93.1886 l
40.3985 119.426 l
40.8697 146.368 l
41.3409 173.175 l
41.8122 199.076 l
42.2834 223.388 l
42.7546 245.521 l
43.2258 264.996 l
43.6970 281.438 l
44.1683 294.589 l
44.6395 304.299 l
45.0495 309.910 l
45.4595 312.913 l
45.6645 313.461 l
45.8695 313.392 l
46.0745 312.724 l
46.2795 311.477 l
47.0995 301.183 l
47.9195 283.777 l
48.7395 261.339 l
49.5595 236.079 l
50.3796 210.138 l
51.1996 185.434 l
52.1218 161.063 l
53.0440 141.805 l
53.9661 128.503 l
54.8883 121.289 l
55.3494 119.832 l
55.8105 119.674 l
56.2716 120.678 l
56.7327 122.692 l
57.6549 129.065 l
58.5771 137.378 l
60.4337 154.514 l
62.2903 165.211 l
62.7544 166.301 l
63.2186 166.710 l
63.6828 166.448 l
64.1469 165.543 l
65.0752 161.997 l
66.0035 156.564 l
69.6991 128.736 l
73.3946 113.901 l
74.2512 113.389 l
75.1078 113.717 l
75.9643 114.662 l
76.8209 115.986 l
78.5340 118.886 l
80.2471 120.990 l
81.1341 121.511 l
82.0210 121.614 l
82.9079 121.340 l
83.7948 120.770 l
85.5687 119.178 l
87.3425 117.765 l
88.2598 117.371 l
89.1770 117.306 l
90.0943 117.608 l
91.0116 118.285 l
92.8461 120.665 l
94.6806 124.080 l
98.3378 132.167 l
101.995 140.339 l
109.519 160.240 l
116.146 183.658 l
123.606 212.386 l
131.097 242.784 l
138.316 271.677 l
144.872 295.826 l
152.667 320.416 l
159.271 336.385 l
163.112 343.262 l
166.952 348.215 l
168.652 349.767 l
170.352 350.918 l
172.052 351.663 l
173.752 352.000 l
175.617 351.898 l
177.482 351.303 l
179.347 350.220 l
181.212 348.652 l
184.764 344.351 l
188.316 338.383 l
195.728 320.980 l
202.534 299.947 l
209.876 273.219 l
217.502 242.827 l
224.141 215.815 l
231.311 187.783 l
238.718 161.852 l
245.964 141.082 l
252.975 126.557 l
256.868 121.194 l
260.760 117.890 l
262.509 117.094 l
264.258 116.730 l
266.007 116.799 l
267.755 117.300 l
271.490 119.807 l
275.224 124.235 l
278.608 129.844 l
281.992 136.891 l
289.391 156.815 l
296.352 180.230 l
303.629 208.040 l
310.744 236.856 l
318.192 266.833 l
325.366 293.687 l
332.702 317.358 l
339.978 335.555 l
343.320 341.820 l
346.663 346.643 l
348.579 348.730 l
350.494 350.312 l
352.410 351.382 l
354.325 351.936 l
356.038 351.991 l
357.752 351.631 l
359.465 350.857 l
361.178 349.671 l
364.832 345.790 l
368.485 340.121 l
375.479 324.637 l
382.994 302.134 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
325.345 355.000 m
325.345 357.600 l
S
newpath
210.047 355.000 m
210.047 357.600 l
S
newpath
94.7491 355.000 m
94.7491 357.600 l
S
newpath
37.1000 355.000 m
382.994 355.000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
203 375 14 15 rc
newpath
209.250 381.250 m
209.458 381.468 209.614 381.692 209.718 381.921  c
209.802 382.067 209.927 382.463 210.093 383.109  c
210.656 382.281 l
210.802 382.072 210.981 381.877 211.195 381.695  c
211.408 381.513 211.593 381.385 211.750 381.312  c
211.854 381.270 211.968 381.250 212.093 381.250  c
212.270 381.250 212.414 381.299 212.523 381.398  c
212.632 381.497 212.687 381.614 212.687 381.750  c
212.687 381.916 212.656 382.031 212.593 382.093  c
212.479 382.197 212.343 382.250 212.187 382.250  c
212.093 382.250 212.000 382.229 211.906 382.187  c
211.708 382.125 211.572 382.093 211.500 382.093  c
211.395 382.093 211.276 382.151 211.140 382.265  c
210.880 382.484 210.567 382.911 210.203 383.546  c
210.718 385.718 l
210.802 386.052 210.869 386.252 210.921 386.320  c
210.974 386.388 211.031 386.421 211.093 386.421  c
211.177 386.421 211.281 386.375 211.406 386.281  c
211.635 386.083 211.833 385.828 212.000 385.515  c
212.218 385.625 l
211.947 386.125 211.609 386.541 211.203 386.875  c
210.974 387.062 210.776 387.156 210.609 387.156  c
210.369 387.156 210.182 387.020 210.046 386.750  c
209.953 386.583 209.770 385.875 209.500 384.625  c
208.833 385.770 208.302 386.505 207.906 386.828  c
207.645 387.046 207.395 387.156 207.156 387.156  c
206.989 387.156 206.833 387.093 206.687 386.968  c
206.593 386.875 206.546 386.750 206.546 386.593  c
206.546 386.458 206.593 386.343 206.687 386.250  c
206.781 386.156 206.895 386.109 207.031 386.109  c
207.166 386.109 207.307 386.177 207.453 386.312  c
207.567 386.406 207.656 386.453 207.718 386.453  c
207.760 386.453 207.822 386.421 207.906 386.359  c
208.104 386.192 208.375 385.843 208.718 385.312  c
209.062 384.781 209.286 384.395 209.390 384.156  c
209.130 383.125 208.989 382.583 208.968 382.531  c
208.875 382.250 208.750 382.052 208.593 381.937  c
208.437 381.822 208.203 381.765 207.890 381.765  c
207.796 381.765 207.687 381.770 207.562 381.781  c
207.562 381.546 l
209.250 381.250 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
37.1000 355.000 m
37.1000 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
39.4687 371.750 m
39.4687 370.770 39.6171 369.924 39.9140 369.210  c
40.2109 368.497 40.6041 367.968 41.0937 367.625  c
41.4791 367.354 41.8750 367.218 42.2812 367.218  c
42.9375 367.218 43.5260 367.552 44.0468 368.218  c
44.7031 369.052 45.0312 370.182 45.0312 371.609  c
45.0312 372.609 44.8880 373.458 44.6015 374.156  c
44.3151 374.854 43.9479 375.362 43.5000 375.679  c
43.0520 375.997 42.6250 376.156 42.2187 376.156  c
41.3958 376.156 40.7083 375.671 40.1562 374.703  c
39.6979 373.880 39.4687 372.895 39.4687 371.750  c
h
40.7187 371.906 m
40.7187 373.093 40.8645 374.062 41.1562 374.812  c
41.3958 375.437 41.7552 375.750 42.2343 375.750  c
42.4635 375.750 42.7005 375.648 42.9453 375.445  c
43.1901 375.242 43.3750 374.895 43.5000 374.406  c
43.6979 373.687 43.7968 372.661 43.7968 371.328  c
43.7968 370.349 43.6927 369.531 43.4843 368.875  c
43.3385 368.385 43.1406 368.041 42.8906 367.843  c
42.7239 367.708 42.5156 367.640 42.2656 367.640  c
41.9843 367.640 41.7291 367.765 41.5000 368.015  c
41.1979 368.369 40.9921 368.924 40.8828 369.679  c
40.7734 370.434 40.7187 371.177 40.7187 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
152.398 355.000 m
152.398 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.531 368.234 m
154.625 367.218 l
154.828 367.218 l
154.828 374.484 l
154.828 374.963 154.849 375.263 154.890 375.382  c
154.932 375.502 155.015 375.593 155.140 375.656  c
155.265 375.718 155.520 375.755 155.906 375.765  c
155.906 376.000 l
152.671 376.000 l
152.671 375.765 l
153.078 375.755 153.341 375.718 153.460 375.656  c
153.580 375.593 153.664 375.510 153.710 375.406  c
153.757 375.302 153.781 374.994 153.781 374.484  c
153.781 369.843 l
153.781 369.208 153.760 368.802 153.718 368.625  c
153.687 368.489 153.632 368.390 153.554 368.328  c
153.476 368.265 153.380 368.234 153.265 368.234  c
153.109 368.234 152.895 368.302 152.625 368.437  c
152.531 368.234 l
h
157.968 371.750 m
157.968 370.770 158.117 369.924 158.414 369.210  c
158.710 368.497 159.104 367.968 159.593 367.625  c
159.979 367.354 160.375 367.218 160.781 367.218  c
161.437 367.218 162.026 367.552 162.546 368.218  c
163.203 369.052 163.531 370.182 163.531 371.609  c
163.531 372.609 163.388 373.458 163.101 374.156  c
162.815 374.854 162.447 375.362 162.000 375.679  c
161.552 375.997 161.125 376.156 160.718 376.156  c
159.895 376.156 159.208 375.671 158.656 374.703  c
158.197 373.880 157.968 372.895 157.968 371.750  c
h
159.218 371.906 m
159.218 373.093 159.364 374.062 159.656 374.812  c
159.895 375.437 160.255 375.750 160.734 375.750  c
160.963 375.750 161.200 375.648 161.445 375.445  c
161.690 375.242 161.875 374.895 162.000 374.406  c
162.197 373.687 162.296 372.661 162.296 371.328  c
162.296 370.349 162.192 369.531 161.984 368.875  c
161.838 368.385 161.640 368.041 161.390 367.843  c
161.224 367.708 161.015 367.640 160.765 367.640  c
160.484 367.640 160.229 367.765 160.000 368.015  c
159.697 368.369 159.492 368.924 159.382 369.679  c
159.273 370.434 159.218 371.177 159.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
267.696 355.000 m
267.696 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
271.953 374.343 m
271.359 376.000 l
266.281 376.000 l
266.281 375.765 l
267.770 374.401 268.820 373.286 269.429 372.421  c
270.039 371.557 270.343 370.770 270.343 370.062  c
270.343 369.510 270.177 369.059 269.843 368.710  c
269.510 368.362 269.109 368.187 268.640 368.187  c
268.224 368.187 267.846 368.309 267.507 368.554  c
267.169 368.799 266.921 369.161 266.765 369.640  c
266.531 369.640 l
266.635 368.859 266.906 368.260 267.343 367.843  c
267.781 367.427 268.328 367.218 268.984 367.218  c
269.682 367.218 270.265 367.442 270.734 367.890  c
271.203 368.338 271.437 368.864 271.437 369.468  c
271.437 369.906 271.333 370.343 271.125 370.781  c
270.812 371.468 270.307 372.192 269.609 372.953  c
268.557 374.109 267.895 374.807 267.625 375.046  c
269.875 375.046 l
270.333 375.046 270.653 375.028 270.835 374.992  c
271.018 374.955 271.184 374.885 271.335 374.781  c
271.487 374.677 271.614 374.531 271.718 374.343  c
271.953 374.343 l
h
272.968 371.750 m
272.968 370.770 273.117 369.924 273.414 369.210  c
273.710 368.497 274.104 367.968 274.593 367.625  c
274.979 367.354 275.375 367.218 275.781 367.218  c
276.437 367.218 277.026 367.552 277.546 368.218  c
278.203 369.052 278.531 370.182 278.531 371.609  c
278.531 372.609 278.388 373.458 278.101 374.156  c
277.815 374.854 277.447 375.362 277.000 375.679  c
276.552 375.997 276.125 376.156 275.718 376.156  c
274.895 376.156 274.208 375.671 273.656 374.703  c
273.197 373.880 272.968 372.895 272.968 371.750  c
h
274.218 371.906 m
274.218 373.093 274.364 374.062 274.656 374.812  c
274.895 375.437 275.255 375.750 275.734 375.750  c
275.963 375.750 276.200 375.648 276.445 375.445  c
276.690 375.242 276.875 374.895 277.000 374.406  c
277.197 373.687 277.296 372.661 277.296 371.328  c
277.296 370.349 277.192 369.531 276.984 368.875  c
276.838 368.385 276.640 368.041 276.390 367.843  c
276.224 367.708 276.015 367.640 275.765 367.640  c
275.484 367.640 275.229 367.765 275.000 368.015  c
274.697 368.369 274.492 368.924 274.382 369.679  c
274.273 370.434 274.218 371.177 274.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
382.994 355.000 m
382.994 360.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
381.656 369.031 m
381.906 368.447 382.218 368.000 382.593 367.687  c
382.968 367.375 383.432 367.218 383.984 367.218  c
384.682 367.218 385.213 367.442 385.578 367.890  c
385.859 368.224 386.000 368.578 386.000 368.953  c
386.000 369.588 385.604 370.239 384.812 370.906  c
385.343 371.114 385.744 371.411 386.015 371.796  c
386.286 372.182 386.421 372.635 386.421 373.156  c
386.421 373.895 386.182 374.536 385.703 375.078  c
385.088 375.796 384.197 376.156 383.031 376.156  c
382.447 376.156 382.052 376.083 381.843 375.937  c
381.635 375.791 381.531 375.635 381.531 375.468  c
381.531 375.343 381.580 375.237 381.679 375.148  c
381.778 375.059 381.895 375.015 382.031 375.015  c
382.135 375.015 382.244 375.031 382.359 375.062  c
382.432 375.083 382.596 375.158 382.851 375.289  c
383.106 375.419 383.281 375.500 383.375 375.531  c
383.531 375.572 383.697 375.593 383.875 375.593  c
384.302 375.593 384.677 375.427 385.000 375.093  c
385.322 374.760 385.484 374.364 385.484 373.906  c
385.484 373.572 385.411 373.250 385.265 372.937  c
385.151 372.697 385.026 372.515 384.890 372.390  c
384.713 372.224 384.466 372.072 384.148 371.937  c
383.830 371.802 383.505 371.734 383.171 371.734  c
382.968 371.734 l
382.968 371.531 l
383.302 371.489 383.638 371.369 383.976 371.171  c
384.315 370.974 384.559 370.737 384.710 370.460  c
384.862 370.184 384.937 369.875 384.937 369.531  c
384.937 369.104 384.802 368.755 384.531 368.484  c
384.260 368.213 383.921 368.078 383.515 368.078  c
382.859 368.078 382.312 368.427 381.875 369.125  c
381.656 369.031 l
h
387.968 371.750 m
387.968 370.770 388.117 369.924 388.414 369.210  c
388.710 368.497 389.104 367.968 389.593 367.625  c
389.979 367.354 390.375 367.218 390.781 367.218  c
391.437 367.218 392.026 367.552 392.546 368.218  c
393.203 369.052 393.531 370.182 393.531 371.609  c
393.531 372.609 393.388 373.458 393.101 374.156  c
392.815 374.854 392.447 375.362 392.000 375.679  c
391.552 375.997 391.125 376.156 390.718 376.156  c
389.895 376.156 389.208 375.671 388.656 374.703  c
388.197 373.880 387.968 372.895 387.968 371.750  c
h
389.218 371.906 m
389.218 373.093 389.364 374.062 389.656 374.812  c
389.895 375.437 390.255 375.750 390.734 375.750  c
390.963 375.750 391.200 375.648 391.445 375.445  c
391.690 375.242 391.875 374.895 392.000 374.406  c
392.197 373.687 392.296 372.661 392.296 371.328  c
392.296 370.349 392.192 369.531 391.984 368.875  c
391.838 368.385 391.640 368.041 391.390 367.843  c
391.224 367.708 391.015 367.640 390.765 367.640  c
390.484 367.640 390.229 367.765 390.000 368.015  c
389.697 368.369 389.492 368.924 389.382 369.679  c
389.273 370.434 389.218 371.177 389.218 371.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
37.1000 30.1703 m
34.5000 30.1703 l
S
newpath
37.1000 69.8419 m
34.5000 69.8419 l
S
newpath
37.1000 109.513 m
34.5000 109.513 l
S
newpath
37.1000 149.185 m
34.5000 149.185 l
S
newpath
37.1000 188.856 m
34.5000 188.856 l
S
newpath
37.1000 228.528 m
34.5000 228.528 l
S
newpath
37.1000 268.200 m
34.5000 268.200 l
S
newpath
37.1000 307.871 m
34.5000 307.871 l
S
newpath
37.1000 347.543 m
34.5000 347.543 l
S
newpath
37.1000 355.000 m
37.1000 1.00000 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-12 5711 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
37.1000 327.707 m
31.9000 327.707 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 332.750 m
6.46875 331.770 6.61718 330.924 6.91406 330.210  c
7.21093 329.497 7.60416 328.968 8.09375 328.625  c
8.47916 328.354 8.87500 328.218 9.28125 328.218  c
9.93750 328.218 10.5260 328.552 11.0468 329.218  c
11.7031 330.052 12.0312 331.182 12.0312 332.609  c
12.0312 333.609 11.8880 334.458 11.6015 335.156  c
11.3151 335.854 10.9479 336.362 10.5000 336.679  c
10.0520 336.997 9.62500 337.156 9.21875 337.156  c
8.39583 337.156 7.70833 336.671 7.15625 335.703  c
6.69791 334.880 6.46875 333.895 6.46875 332.750  c
h
7.71875 332.906 m
7.71875 334.093 7.86458 335.062 8.15625 335.812  c
8.39583 336.437 8.75520 336.750 9.23437 336.750  c
9.46354 336.750 9.70052 336.648 9.94531 336.445  c
10.1901 336.242 10.3750 335.895 10.5000 335.406  c
10.6979 334.687 10.7968 333.661 10.7968 332.328  c
10.7968 331.349 10.6927 330.531 10.4843 329.875  c
10.3385 329.385 10.1406 329.041 9.89062 328.843  c
9.72395 328.708 9.51562 328.640 9.26562 328.640  c
8.98437 328.640 8.72916 328.765 8.50000 329.015  c
8.19791 329.369 7.99218 329.924 7.88281 330.679  c
7.77343 331.434 7.71875 332.177 7.71875 332.906  c
h
14.1250 335.765 m
14.3229 335.765 14.4895 335.835 14.6250 335.976  c
14.7604 336.117 14.8281 336.281 14.8281 336.468  c
14.8281 336.666 14.7604 336.833 14.6250 336.968  c
14.4895 337.104 14.3229 337.171 14.1250 337.171  c
13.9270 337.171 13.7604 337.104 13.6250 336.968  c
13.4895 336.833 13.4218 336.666 13.4218 336.468  c
13.4218 336.270 13.4895 336.104 13.6250 335.968  c
13.7604 335.833 13.9270 335.765 14.1250 335.765  c
h
21.3906 328.390 m
20.8906 329.468 l
18.3125 329.468 l
17.7500 330.625 l
18.8645 330.791 19.7500 331.208 20.4062 331.875  c
20.9687 332.447 21.2500 333.125 21.2500 333.906  c
21.2500 334.364 21.1588 334.786 20.9765 335.171  c
20.7942 335.557 20.5625 335.885 20.2812 336.156  c
20.0000 336.427 19.6875 336.640 19.3437 336.796  c
18.8645 337.036 18.3645 337.156 17.8437 337.156  c
17.3333 337.156 16.9609 337.067 16.7265 336.890  c
16.4921 336.713 16.3750 336.520 16.3750 336.312  c
16.3750 336.187 16.4244 336.080 16.5234 335.992  c
16.6224 335.903 16.7447 335.859 16.8906 335.859  c
16.9947 335.859 17.0885 335.875 17.1718 335.906  c
17.2552 335.937 17.3958 336.026 17.5937 336.171  c
17.9166 336.390 18.2395 336.500 18.5625 336.500  c
19.0625 336.500 19.4974 336.312 19.8671 335.937  c
20.2369 335.562 20.4218 335.104 20.4218 334.562  c
20.4218 334.041 20.2552 333.557 19.9218 333.109  c
19.5885 332.661 19.1302 332.312 18.5468 332.062  c
18.0781 331.875 17.4479 331.765 16.6562 331.734  c
18.3125 328.390 l
21.3906 328.390 l
h
28.0781 328.218 m
28.0781 328.453 l
27.5156 328.505 27.0572 328.614 26.7031 328.781  c
26.3489 328.947 26.0000 329.203 25.6562 329.546  c
25.3125 329.890 25.0286 330.273 24.8046 330.695  c
24.5807 331.117 24.3906 331.614 24.2343 332.187  c
24.8489 331.770 25.4635 331.562 26.0781 331.562  c
26.6614 331.562 27.1692 331.799 27.6015 332.273  c
28.0338 332.747 28.2500 333.359 28.2500 334.109  c
28.2500 334.828 28.0312 335.484 27.5937 336.078  c
27.0729 336.796 26.3802 337.156 25.5156 337.156  c
24.9218 337.156 24.4218 336.958 24.0156 336.562  c
23.2135 335.812 22.8125 334.833 22.8125 333.625  c
22.8125 332.854 22.9661 332.122 23.2734 331.429  c
23.5807 330.737 24.0208 330.119 24.5937 329.578  c
25.1666 329.036 25.7161 328.674 26.2421 328.492  c
26.7682 328.309 27.2552 328.218 27.7031 328.218  c
28.0781 328.218 l
h
24.1250 332.656 m
24.0520 333.229 24.0156 333.692 24.0156 334.046  c
24.0156 334.453 24.0911 334.893 24.2421 335.367  c
24.3932 335.841 24.6145 336.218 24.9062 336.500  c
25.1250 336.697 25.3906 336.796 25.7031 336.796  c
26.0677 336.796 26.3958 336.622 26.6875 336.273  c
26.9791 335.924 27.1250 335.432 27.1250 334.796  c
27.1250 334.067 26.9791 333.440 26.6875 332.914  c
26.3958 332.388 25.9895 332.125 25.4687 332.125  c
25.3020 332.125 25.1276 332.158 24.9453 332.226  c
24.7630 332.294 24.4895 332.437 24.1250 332.656  c
h
29.2187 332.750 m
29.2187 331.770 29.3671 330.924 29.6640 330.210  c
29.9609 329.497 30.3541 328.968 30.8437 328.625  c
31.2291 328.354 31.6250 328.218 32.0312 328.218  c
32.6875 328.218 33.2760 328.552 33.7968 329.218  c
34.4531 330.052 34.7812 331.182 34.7812 332.609  c
34.7812 333.609 34.6380 334.458 34.3515 335.156  c
34.0651 335.854 33.6979 336.362 33.2500 336.679  c
32.8020 336.997 32.3750 337.156 31.9687 337.156  c
31.1458 337.156 30.4583 336.671 29.9062 335.703  c
29.4479 334.880 29.2187 333.895 29.2187 332.750  c
h
30.4687 332.906 m
30.4687 334.093 30.6145 335.062 30.9062 335.812  c
31.1458 336.437 31.5052 336.750 31.9843 336.750  c
32.2135 336.750 32.4505 336.648 32.6953 336.445  c
32.9401 336.242 33.1250 335.895 33.2500 335.406  c
33.4479 334.687 33.5468 333.661 33.5468 332.328  c
33.5468 331.349 33.4427 330.531 33.2343 329.875  c
33.0885 329.385 32.8906 329.041 32.6406 328.843  c
32.4739 328.708 32.2656 328.640 32.0156 328.640  c
31.7343 328.640 31.4791 328.765 31.2500 329.015  c
30.9479 329.369 30.7421 329.924 30.6328 330.679  c
30.5234 331.434 30.4687 332.177 30.4687 332.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 288.035 m
31.9000 288.035 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 293.750 m
6.46875 292.770 6.61718 291.924 6.91406 291.210  c
7.21093 290.497 7.60416 289.968 8.09375 289.625  c
8.47916 289.354 8.87500 289.218 9.28125 289.218  c
9.93750 289.218 10.5260 289.552 11.0468 290.218  c
11.7031 291.052 12.0312 292.182 12.0312 293.609  c
12.0312 294.609 11.8880 295.458 11.6015 296.156  c
11.3151 296.854 10.9479 297.362 10.5000 297.679  c
10.0520 297.997 9.62500 298.156 9.21875 298.156  c
8.39583 298.156 7.70833 297.671 7.15625 296.703  c
6.69791 295.880 6.46875 294.895 6.46875 293.750  c
h
7.71875 293.906 m
7.71875 295.093 7.86458 296.062 8.15625 296.812  c
8.39583 297.437 8.75520 297.750 9.23437 297.750  c
9.46354 297.750 9.70052 297.648 9.94531 297.445  c
10.1901 297.242 10.3750 296.895 10.5000 296.406  c
10.6979 295.687 10.7968 294.661 10.7968 293.328  c
10.7968 292.349 10.6927 291.531 10.4843 290.875  c
10.3385 290.385 10.1406 290.041 9.89062 289.843  c
9.72395 289.708 9.51562 289.640 9.26562 289.640  c
8.98437 289.640 8.72916 289.765 8.50000 290.015  c
8.19791 290.369 7.99218 290.924 7.88281 291.679  c
7.77343 292.434 7.71875 293.177 7.71875 293.906  c
h
14.1250 296.765 m
14.3229 296.765 14.4895 296.835 14.6250 296.976  c
14.7604 297.117 14.8281 297.281 14.8281 297.468  c
14.8281 297.666 14.7604 297.833 14.6250 297.968  c
14.4895 298.104 14.3229 298.171 14.1250 298.171  c
13.9270 298.171 13.7604 298.104 13.6250 297.968  c
13.4895 297.833 13.4218 297.666 13.4218 297.468  c
13.4218 297.270 13.4895 297.104 13.6250 296.968  c
13.7604 296.833 13.9270 296.765 14.1250 296.765  c
h
21.3906 289.390 m
20.8906 290.468 l
18.3125 290.468 l
17.7500 291.625 l
18.8645 291.791 19.7500 292.208 20.4062 292.875  c
20.9687 293.447 21.2500 294.125 21.2500 294.906  c
21.2500 295.364 21.1588 295.786 20.9765 296.171  c
20.7942 296.557 20.5625 296.885 20.2812 297.156  c
20.0000 297.427 19.6875 297.640 19.3437 297.796  c
18.8645 298.036 18.3645 298.156 17.8437 298.156  c
17.3333 298.156 16.9609 298.067 16.7265 297.890  c
16.4921 297.713 16.3750 297.520 16.3750 297.312  c
16.3750 297.187 16.4244 297.080 16.5234 296.992  c
16.6224 296.903 16.7447 296.859 16.8906 296.859  c
16.9947 296.859 17.0885 296.875 17.1718 296.906  c
17.2552 296.937 17.3958 297.026 17.5937 297.171  c
17.9166 297.390 18.2395 297.500 18.5625 297.500  c
19.0625 297.500 19.4974 297.312 19.8671 296.937  c
20.2369 296.562 20.4218 296.104 20.4218 295.562  c
20.4218 295.041 20.2552 294.557 19.9218 294.109  c
19.5885 293.661 19.1302 293.312 18.5468 293.062  c
18.0781 292.875 17.4479 292.765 16.6562 292.734  c
18.3125 289.390 l
21.3906 289.390 l
h
28.0781 289.218 m
28.0781 289.453 l
27.5156 289.505 27.0572 289.614 26.7031 289.781  c
26.3489 289.947 26.0000 290.203 25.6562 290.546  c
25.3125 290.890 25.0286 291.273 24.8046 291.695  c
24.5807 292.117 24.3906 292.614 24.2343 293.187  c
24.8489 292.770 25.4635 292.562 26.0781 292.562  c
26.6614 292.562 27.1692 292.799 27.6015 293.273  c
28.0338 293.747 28.2500 294.359 28.2500 295.109  c
28.2500 295.828 28.0312 296.484 27.5937 297.078  c
27.0729 297.796 26.3802 298.156 25.5156 298.156  c
24.9218 298.156 24.4218 297.958 24.0156 297.562  c
23.2135 296.812 22.8125 295.833 22.8125 294.625  c
22.8125 293.854 22.9661 293.122 23.2734 292.429  c
23.5807 291.737 24.0208 291.119 24.5937 290.578  c
25.1666 290.036 25.7161 289.674 26.2421 289.492  c
26.7682 289.309 27.2552 289.218 27.7031 289.218  c
28.0781 289.218 l
h
24.1250 293.656 m
24.0520 294.229 24.0156 294.692 24.0156 295.046  c
24.0156 295.453 24.0911 295.893 24.2421 296.367  c
24.3932 296.841 24.6145 297.218 24.9062 297.500  c
25.1250 297.697 25.3906 297.796 25.7031 297.796  c
26.0677 297.796 26.3958 297.622 26.6875 297.273  c
26.9791 296.924 27.1250 296.432 27.1250 295.796  c
27.1250 295.067 26.9791 294.440 26.6875 293.914  c
26.3958 293.388 25.9895 293.125 25.4687 293.125  c
25.3020 293.125 25.1276 293.158 24.9453 293.226  c
24.7630 293.294 24.4895 293.437 24.1250 293.656  c
h
34.7031 296.343 m
34.1093 298.000 l
29.0312 298.000 l
29.0312 297.765 l
30.5208 296.401 31.5703 295.286 32.1796 294.421  c
32.7890 293.557 33.0937 292.770 33.0937 292.062  c
33.0937 291.510 32.9270 291.059 32.5937 290.710  c
32.2604 290.362 31.8593 290.187 31.3906 290.187  c
30.9739 290.187 30.5963 290.309 30.2578 290.554  c
29.9192 290.799 29.6718 291.161 29.5156 291.640  c
29.2812 291.640 l
29.3854 290.859 29.6562 290.260 30.0937 289.843  c
30.5312 289.427 31.0781 289.218 31.7343 289.218  c
32.4322 289.218 33.0156 289.442 33.4843 289.890  c
33.9531 290.338 34.1875 290.864 34.1875 291.468  c
34.1875 291.906 34.0833 292.343 33.8750 292.781  c
33.5625 293.468 33.0572 294.192 32.3593 294.953  c
31.3072 296.109 30.6458 296.807 30.3750 297.046  c
32.6250 297.046 l
33.0833 297.046 33.4036 297.028 33.5859 296.992  c
33.7682 296.955 33.9349 296.885 34.0859 296.781  c
34.2369 296.677 34.3645 296.531 34.4687 296.343  c
34.7031 296.343 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 248.364 m
31.9000 248.364 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 253.750 m
6.46875 252.770 6.61718 251.924 6.91406 251.210  c
7.21093 250.497 7.60416 249.968 8.09375 249.625  c
8.47916 249.354 8.87500 249.218 9.28125 249.218  c
9.93750 249.218 10.5260 249.552 11.0468 250.218  c
11.7031 251.052 12.0312 252.182 12.0312 253.609  c
12.0312 254.609 11.8880 255.458 11.6015 256.156  c
11.3151 256.854 10.9479 257.362 10.5000 257.679  c
10.0520 257.997 9.62500 258.156 9.21875 258.156  c
8.39583 258.156 7.70833 257.671 7.15625 256.703  c
6.69791 255.880 6.46875 254.895 6.46875 253.750  c
h
7.71875 253.906 m
7.71875 255.093 7.86458 256.062 8.15625 256.812  c
8.39583 257.437 8.75520 257.750 9.23437 257.750  c
9.46354 257.750 9.70052 257.648 9.94531 257.445  c
10.1901 257.242 10.3750 256.895 10.5000 256.406  c
10.6979 255.687 10.7968 254.661 10.7968 253.328  c
10.7968 252.349 10.6927 251.531 10.4843 250.875  c
10.3385 250.385 10.1406 250.041 9.89062 249.843  c
9.72395 249.708 9.51562 249.640 9.26562 249.640  c
8.98437 249.640 8.72916 249.765 8.50000 250.015  c
8.19791 250.369 7.99218 250.924 7.88281 251.679  c
7.77343 252.434 7.71875 253.177 7.71875 253.906  c
h
14.1250 256.765 m
14.3229 256.765 14.4895 256.835 14.6250 256.976  c
14.7604 257.117 14.8281 257.281 14.8281 257.468  c
14.8281 257.666 14.7604 257.833 14.6250 257.968  c
14.4895 258.104 14.3229 258.171 14.1250 258.171  c
13.9270 258.171 13.7604 258.104 13.6250 257.968  c
13.4895 257.833 13.4218 257.666 13.4218 257.468  c
13.4218 257.270 13.4895 257.104 13.6250 256.968  c
13.7604 256.833 13.9270 256.765 14.1250 256.765  c
h
21.3906 249.390 m
20.8906 250.468 l
18.3125 250.468 l
17.7500 251.625 l
18.8645 251.791 19.7500 252.208 20.4062 252.875  c
20.9687 253.447 21.2500 254.125 21.2500 254.906  c
21.2500 255.364 21.1588 255.786 20.9765 256.171  c
20.7942 256.557 20.5625 256.885 20.2812 257.156  c
20.0000 257.427 19.6875 257.640 19.3437 257.796  c
18.8645 258.036 18.3645 258.156 17.8437 258.156  c
17.3333 258.156 16.9609 258.067 16.7265 257.890  c
16.4921 257.713 16.3750 257.520 16.3750 257.312  c
16.3750 257.187 16.4244 257.080 16.5234 256.992  c
16.6224 256.903 16.7447 256.859 16.8906 256.859  c
16.9947 256.859 17.0885 256.875 17.1718 256.906  c
17.2552 256.937 17.3958 257.026 17.5937 257.171  c
17.9166 257.390 18.2395 257.500 18.5625 257.500  c
19.0625 257.500 19.4974 257.312 19.8671 256.937  c
20.2369 256.562 20.4218 256.104 20.4218 255.562  c
20.4218 255.041 20.2552 254.557 19.9218 254.109  c
19.5885 253.661 19.1302 253.312 18.5468 253.062  c
18.0781 252.875 17.4479 252.765 16.6562 252.734  c
18.3125 249.390 l
21.3906 249.390 l
h
28.0781 249.218 m
28.0781 249.453 l
27.5156 249.505 27.0572 249.614 26.7031 249.781  c
26.3489 249.947 26.0000 250.203 25.6562 250.546  c
25.3125 250.890 25.0286 251.273 24.8046 251.695  c
24.5807 252.117 24.3906 252.614 24.2343 253.187  c
24.8489 252.770 25.4635 252.562 26.0781 252.562  c
26.6614 252.562 27.1692 252.799 27.6015 253.273  c
28.0338 253.747 28.2500 254.359 28.2500 255.109  c
28.2500 255.828 28.0312 256.484 27.5937 257.078  c
27.0729 257.796 26.3802 258.156 25.5156 258.156  c
24.9218 258.156 24.4218 257.958 24.0156 257.562  c
23.2135 256.812 22.8125 255.833 22.8125 254.625  c
22.8125 253.854 22.9661 253.122 23.2734 252.429  c
23.5807 251.737 24.0208 251.119 24.5937 250.578  c
25.1666 250.036 25.7161 249.674 26.2421 249.492  c
26.7682 249.309 27.2552 249.218 27.7031 249.218  c
28.0781 249.218 l
h
24.1250 253.656 m
24.0520 254.229 24.0156 254.692 24.0156 255.046  c
24.0156 255.453 24.0911 255.893 24.2421 256.367  c
24.3932 256.841 24.6145 257.218 24.9062 257.500  c
25.1250 257.697 25.3906 257.796 25.7031 257.796  c
26.0677 257.796 26.3958 257.622 26.6875 257.273  c
26.9791 256.924 27.1250 256.432 27.1250 255.796  c
27.1250 255.067 26.9791 254.440 26.6875 253.914  c
26.3958 253.388 25.9895 253.125 25.4687 253.125  c
25.3020 253.125 25.1276 253.158 24.9453 253.226  c
24.7630 253.294 24.4895 253.437 24.1250 253.656  c
h
34.7968 254.828 m
34.7968 255.734 l
33.6406 255.734 l
33.6406 258.000 l
32.5937 258.000 l
32.5937 255.734 l
28.9531 255.734 l
28.9531 254.921 l
32.9531 249.218 l
33.6406 249.218 l
33.6406 254.828 l
34.7968 254.828 l
h
32.5937 254.828 m
32.5937 250.546 l
29.5781 254.828 l
32.5937 254.828 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 208.692 m
31.9000 208.692 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 213.750 m
6.46875 212.770 6.61718 211.924 6.91406 211.210  c
7.21093 210.497 7.60416 209.968 8.09375 209.625  c
8.47916 209.354 8.87500 209.218 9.28125 209.218  c
9.93750 209.218 10.5260 209.552 11.0468 210.218  c
11.7031 211.052 12.0312 212.182 12.0312 213.609  c
12.0312 214.609 11.8880 215.458 11.6015 216.156  c
11.3151 216.854 10.9479 217.362 10.5000 217.679  c
10.0520 217.997 9.62500 218.156 9.21875 218.156  c
8.39583 218.156 7.70833 217.671 7.15625 216.703  c
6.69791 215.880 6.46875 214.895 6.46875 213.750  c
h
7.71875 213.906 m
7.71875 215.093 7.86458 216.062 8.15625 216.812  c
8.39583 217.437 8.75520 217.750 9.23437 217.750  c
9.46354 217.750 9.70052 217.648 9.94531 217.445  c
10.1901 217.242 10.3750 216.895 10.5000 216.406  c
10.6979 215.687 10.7968 214.661 10.7968 213.328  c
10.7968 212.349 10.6927 211.531 10.4843 210.875  c
10.3385 210.385 10.1406 210.041 9.89062 209.843  c
9.72395 209.708 9.51562 209.640 9.26562 209.640  c
8.98437 209.640 8.72916 209.765 8.50000 210.015  c
8.19791 210.369 7.99218 210.924 7.88281 211.679  c
7.77343 212.434 7.71875 213.177 7.71875 213.906  c
h
14.1250 216.765 m
14.3229 216.765 14.4895 216.835 14.6250 216.976  c
14.7604 217.117 14.8281 217.281 14.8281 217.468  c
14.8281 217.666 14.7604 217.833 14.6250 217.968  c
14.4895 218.104 14.3229 218.171 14.1250 218.171  c
13.9270 218.171 13.7604 218.104 13.6250 217.968  c
13.4895 217.833 13.4218 217.666 13.4218 217.468  c
13.4218 217.270 13.4895 217.104 13.6250 216.968  c
13.7604 216.833 13.9270 216.765 14.1250 216.765  c
h
21.3906 209.390 m
20.8906 210.468 l
18.3125 210.468 l
17.7500 211.625 l
18.8645 211.791 19.7500 212.208 20.4062 212.875  c
20.9687 213.447 21.2500 214.125 21.2500 214.906  c
21.2500 215.364 21.1588 215.786 20.9765 216.171  c
20.7942 216.557 20.5625 216.885 20.2812 217.156  c
20.0000 217.427 19.6875 217.640 19.3437 217.796  c
18.8645 218.036 18.3645 218.156 17.8437 218.156  c
17.3333 218.156 16.9609 218.067 16.7265 217.890  c
16.4921 217.713 16.3750 217.520 16.3750 217.312  c
16.3750 217.187 16.4244 217.080 16.5234 216.992  c
16.6224 216.903 16.7447 216.859 16.8906 216.859  c
16.9947 216.859 17.0885 216.875 17.1718 216.906  c
17.2552 216.937 17.3958 217.026 17.5937 217.171  c
17.9166 217.390 18.2395 217.500 18.5625 217.500  c
19.0625 217.500 19.4974 217.312 19.8671 216.937  c
20.2369 216.562 20.4218 216.104 20.4218 215.562  c
20.4218 215.041 20.2552 214.557 19.9218 214.109  c
19.5885 213.661 19.1302 213.312 18.5468 213.062  c
18.0781 212.875 17.4479 212.765 16.6562 212.734  c
18.3125 209.390 l
21.3906 209.390 l
h
28.0781 209.218 m
28.0781 209.453 l
27.5156 209.505 27.0572 209.614 26.7031 209.781  c
26.3489 209.947 26.0000 210.203 25.6562 210.546  c
25.3125 210.890 25.0286 211.273 24.8046 211.695  c
24.5807 212.117 24.3906 212.614 24.2343 213.187  c
24.8489 212.770 25.4635 212.562 26.0781 212.562  c
26.6614 212.562 27.1692 212.799 27.6015 213.273  c
28.0338 213.747 28.2500 214.359 28.2500 215.109  c
28.2500 215.828 28.0312 216.484 27.5937 217.078  c
27.0729 217.796 26.3802 218.156 25.5156 218.156  c
24.9218 218.156 24.4218 217.958 24.0156 217.562  c
23.2135 216.812 22.8125 215.833 22.8125 214.625  c
22.8125 213.854 22.9661 213.122 23.2734 212.429  c
23.5807 211.737 24.0208 211.119 24.5937 210.578  c
25.1666 210.036 25.7161 209.674 26.2421 209.492  c
26.7682 209.309 27.2552 209.218 27.7031 209.218  c
28.0781 209.218 l
h
24.1250 213.656 m
24.0520 214.229 24.0156 214.692 24.0156 215.046  c
24.0156 215.453 24.0911 215.893 24.2421 216.367  c
24.3932 216.841 24.6145 217.218 24.9062 217.500  c
25.1250 217.697 25.3906 217.796 25.7031 217.796  c
26.0677 217.796 26.3958 217.622 26.6875 217.273  c
26.9791 216.924 27.1250 216.432 27.1250 215.796  c
27.1250 215.067 26.9791 214.440 26.6875 213.914  c
26.3958 213.388 25.9895 213.125 25.4687 213.125  c
25.3020 213.125 25.1276 213.158 24.9453 213.226  c
24.7630 213.294 24.4895 213.437 24.1250 213.656  c
h
34.5781 209.218 m
34.5781 209.453 l
34.0156 209.505 33.5572 209.614 33.2031 209.781  c
32.8489 209.947 32.5000 210.203 32.1562 210.546  c
31.8125 210.890 31.5286 211.273 31.3046 211.695  c
31.0807 212.117 30.8906 212.614 30.7343 213.187  c
31.3489 212.770 31.9635 212.562 32.5781 212.562  c
33.1614 212.562 33.6692 212.799 34.1015 213.273  c
34.5338 213.747 34.7500 214.359 34.7500 215.109  c
34.7500 215.828 34.5312 216.484 34.0937 217.078  c
33.5729 217.796 32.8802 218.156 32.0156 218.156  c
31.4218 218.156 30.9218 217.958 30.5156 217.562  c
29.7135 216.812 29.3125 215.833 29.3125 214.625  c
29.3125 213.854 29.4661 213.122 29.7734 212.429  c
30.0807 211.737 30.5208 211.119 31.0937 210.578  c
31.6666 210.036 32.2161 209.674 32.7421 209.492  c
33.2682 209.309 33.7552 209.218 34.2031 209.218  c
34.5781 209.218 l
h
30.6250 213.656 m
30.5520 214.229 30.5156 214.692 30.5156 215.046  c
30.5156 215.453 30.5911 215.893 30.7421 216.367  c
30.8932 216.841 31.1145 217.218 31.4062 217.500  c
31.6250 217.697 31.8906 217.796 32.2031 217.796  c
32.5677 217.796 32.8958 217.622 33.1875 217.273  c
33.4791 216.924 33.6250 216.432 33.6250 215.796  c
33.6250 215.067 33.4791 214.440 33.1875 213.914  c
32.8958 213.388 32.4895 213.125 31.9687 213.125  c
31.8020 213.125 31.6276 213.158 31.4453 213.226  c
31.2630 213.294 30.9895 213.437 30.6250 213.656  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 169.021 m
31.9000 169.021 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 174.750 m
6.46875 173.770 6.61718 172.924 6.91406 172.210  c
7.21093 171.497 7.60416 170.968 8.09375 170.625  c
8.47916 170.354 8.87500 170.218 9.28125 170.218  c
9.93750 170.218 10.5260 170.552 11.0468 171.218  c
11.7031 172.052 12.0312 173.182 12.0312 174.609  c
12.0312 175.609 11.8880 176.458 11.6015 177.156  c
11.3151 177.854 10.9479 178.362 10.5000 178.679  c
10.0520 178.997 9.62500 179.156 9.21875 179.156  c
8.39583 179.156 7.70833 178.671 7.15625 177.703  c
6.69791 176.880 6.46875 175.895 6.46875 174.750  c
h
7.71875 174.906 m
7.71875 176.093 7.86458 177.062 8.15625 177.812  c
8.39583 178.437 8.75520 178.750 9.23437 178.750  c
9.46354 178.750 9.70052 178.648 9.94531 178.445  c
10.1901 178.242 10.3750 177.895 10.5000 177.406  c
10.6979 176.687 10.7968 175.661 10.7968 174.328  c
10.7968 173.349 10.6927 172.531 10.4843 171.875  c
10.3385 171.385 10.1406 171.041 9.89062 170.843  c
9.72395 170.708 9.51562 170.640 9.26562 170.640  c
8.98437 170.640 8.72916 170.765 8.50000 171.015  c
8.19791 171.369 7.99218 171.924 7.88281 172.679  c
7.77343 173.434 7.71875 174.177 7.71875 174.906  c
h
14.1250 177.765 m
14.3229 177.765 14.4895 177.835 14.6250 177.976  c
14.7604 178.117 14.8281 178.281 14.8281 178.468  c
14.8281 178.666 14.7604 178.833 14.6250 178.968  c
14.4895 179.104 14.3229 179.171 14.1250 179.171  c
13.9270 179.171 13.7604 179.104 13.6250 178.968  c
13.4895 178.833 13.4218 178.666 13.4218 178.468  c
13.4218 178.270 13.4895 178.104 13.6250 177.968  c
13.7604 177.833 13.9270 177.765 14.1250 177.765  c
h
21.3906 170.390 m
20.8906 171.468 l
18.3125 171.468 l
17.7500 172.625 l
18.8645 172.791 19.7500 173.208 20.4062 173.875  c
20.9687 174.447 21.2500 175.125 21.2500 175.906  c
21.2500 176.364 21.1588 176.786 20.9765 177.171  c
20.7942 177.557 20.5625 177.885 20.2812 178.156  c
20.0000 178.427 19.6875 178.640 19.3437 178.796  c
18.8645 179.036 18.3645 179.156 17.8437 179.156  c
17.3333 179.156 16.9609 179.067 16.7265 178.890  c
16.4921 178.713 16.3750 178.520 16.3750 178.312  c
16.3750 178.187 16.4244 178.080 16.5234 177.992  c
16.6224 177.903 16.7447 177.859 16.8906 177.859  c
16.9947 177.859 17.0885 177.875 17.1718 177.906  c
17.2552 177.937 17.3958 178.026 17.5937 178.171  c
17.9166 178.390 18.2395 178.500 18.5625 178.500  c
19.0625 178.500 19.4974 178.312 19.8671 177.937  c
20.2369 177.562 20.4218 177.104 20.4218 176.562  c
20.4218 176.041 20.2552 175.557 19.9218 175.109  c
19.5885 174.661 19.1302 174.312 18.5468 174.062  c
18.0781 173.875 17.4479 173.765 16.6562 173.734  c
18.3125 170.390 l
21.3906 170.390 l
h
28.0781 170.218 m
28.0781 170.453 l
27.5156 170.505 27.0572 170.614 26.7031 170.781  c
26.3489 170.947 26.0000 171.203 25.6562 171.546  c
25.3125 171.890 25.0286 172.273 24.8046 172.695  c
24.5807 173.117 24.3906 173.614 24.2343 174.187  c
24.8489 173.770 25.4635 173.562 26.0781 173.562  c
26.6614 173.562 27.1692 173.799 27.6015 174.273  c
28.0338 174.747 28.2500 175.359 28.2500 176.109  c
28.2500 176.828 28.0312 177.484 27.5937 178.078  c
27.0729 178.796 26.3802 179.156 25.5156 179.156  c
24.9218 179.156 24.4218 178.958 24.0156 178.562  c
23.2135 177.812 22.8125 176.833 22.8125 175.625  c
22.8125 174.854 22.9661 174.122 23.2734 173.429  c
23.5807 172.737 24.0208 172.119 24.5937 171.578  c
25.1666 171.036 25.7161 170.674 26.2421 170.492  c
26.7682 170.309 27.2552 170.218 27.7031 170.218  c
28.0781 170.218 l
h
24.1250 174.656 m
24.0520 175.229 24.0156 175.692 24.0156 176.046  c
24.0156 176.453 24.0911 176.893 24.2421 177.367  c
24.3932 177.841 24.6145 178.218 24.9062 178.500  c
25.1250 178.697 25.3906 178.796 25.7031 178.796  c
26.0677 178.796 26.3958 178.622 26.6875 178.273  c
26.9791 177.924 27.1250 177.432 27.1250 176.796  c
27.1250 176.067 26.9791 175.440 26.6875 174.914  c
26.3958 174.388 25.9895 174.125 25.4687 174.125  c
25.3020 174.125 25.1276 174.158 24.9453 174.226  c
24.7630 174.294 24.4895 174.437 24.1250 174.656  c
h
31.2500 174.671 m
30.5625 174.109 30.1197 173.658 29.9218 173.320  c
29.7239 172.981 29.6250 172.630 29.6250 172.265  c
29.6250 171.703 29.8411 171.221 30.2734 170.820  c
30.7057 170.419 31.2812 170.218 32.0000 170.218  c
32.6979 170.218 33.2578 170.406 33.6796 170.781  c
34.1015 171.156 34.3125 171.583 34.3125 172.062  c
34.3125 172.385 34.1979 172.713 33.9687 173.046  c
33.7395 173.380 33.2656 173.776 32.5468 174.234  c
33.2864 174.807 33.7760 175.260 34.0156 175.593  c
34.3385 176.020 34.5000 176.474 34.5000 176.953  c
34.5000 177.557 34.2708 178.075 33.8125 178.507  c
33.3541 178.940 32.7500 179.156 32.0000 179.156  c
31.1770 179.156 30.5364 178.901 30.0781 178.390  c
29.7135 177.974 29.5312 177.520 29.5312 177.031  c
29.5312 176.656 29.6614 176.281 29.9218 175.906  c
30.1822 175.531 30.6250 175.119 31.2500 174.671  c
h
32.2343 173.984 m
32.7447 173.526 33.0677 173.164 33.2031 172.898  c
33.3385 172.632 33.4062 172.333 33.4062 172.000  c
33.4062 171.562 33.2812 171.216 33.0312 170.960  c
32.7812 170.705 32.4427 170.578 32.0156 170.578  c
31.5781 170.578 31.2239 170.703 30.9531 170.953  c
30.6822 171.203 30.5468 171.494 30.5468 171.828  c
30.5468 172.046 30.6041 172.268 30.7187 172.492  c
30.8333 172.716 30.9947 172.927 31.2031 173.125  c
32.2343 173.984 l
h
31.5468 174.906 m
31.1927 175.197 30.9322 175.518 30.7656 175.867  c
30.5989 176.216 30.5156 176.593 30.5156 177.000  c
30.5156 177.552 30.6640 177.992 30.9609 178.320  c
31.2578 178.648 31.6354 178.812 32.0937 178.812  c
32.5520 178.812 32.9192 178.682 33.1953 178.421  c
33.4713 178.161 33.6093 177.849 33.6093 177.484  c
33.6093 177.182 33.5260 176.906 33.3593 176.656  c
33.0677 176.208 32.4635 175.625 31.5468 174.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 129.349 m
31.9000 129.349 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 134.750 m
6.46875 133.770 6.61718 132.924 6.91406 132.210  c
7.21093 131.497 7.60416 130.968 8.09375 130.625  c
8.47916 130.354 8.87500 130.218 9.28125 130.218  c
9.93750 130.218 10.5260 130.552 11.0468 131.218  c
11.7031 132.052 12.0312 133.182 12.0312 134.609  c
12.0312 135.609 11.8880 136.458 11.6015 137.156  c
11.3151 137.854 10.9479 138.362 10.5000 138.679  c
10.0520 138.997 9.62500 139.156 9.21875 139.156  c
8.39583 139.156 7.70833 138.671 7.15625 137.703  c
6.69791 136.880 6.46875 135.895 6.46875 134.750  c
h
7.71875 134.906 m
7.71875 136.093 7.86458 137.062 8.15625 137.812  c
8.39583 138.437 8.75520 138.750 9.23437 138.750  c
9.46354 138.750 9.70052 138.648 9.94531 138.445  c
10.1901 138.242 10.3750 137.895 10.5000 137.406  c
10.6979 136.687 10.7968 135.661 10.7968 134.328  c
10.7968 133.349 10.6927 132.531 10.4843 131.875  c
10.3385 131.385 10.1406 131.041 9.89062 130.843  c
9.72395 130.708 9.51562 130.640 9.26562 130.640  c
8.98437 130.640 8.72916 130.765 8.50000 131.015  c
8.19791 131.369 7.99218 131.924 7.88281 132.679  c
7.77343 133.434 7.71875 134.177 7.71875 134.906  c
h
14.1250 137.765 m
14.3229 137.765 14.4895 137.835 14.6250 137.976  c
14.7604 138.117 14.8281 138.281 14.8281 138.468  c
14.8281 138.666 14.7604 138.833 14.6250 138.968  c
14.4895 139.104 14.3229 139.171 14.1250 139.171  c
13.9270 139.171 13.7604 139.104 13.6250 138.968  c
13.4895 138.833 13.4218 138.666 13.4218 138.468  c
13.4218 138.270 13.4895 138.104 13.6250 137.968  c
13.7604 137.833 13.9270 137.765 14.1250 137.765  c
h
21.3906 130.390 m
20.8906 131.468 l
18.3125 131.468 l
17.7500 132.625 l
18.8645 132.791 19.7500 133.208 20.4062 133.875  c
20.9687 134.447 21.2500 135.125 21.2500 135.906  c
21.2500 136.364 21.1588 136.786 20.9765 137.171  c
20.7942 137.557 20.5625 137.885 20.2812 138.156  c
20.0000 138.427 19.6875 138.640 19.3437 138.796  c
18.8645 139.036 18.3645 139.156 17.8437 139.156  c
17.3333 139.156 16.9609 139.067 16.7265 138.890  c
16.4921 138.713 16.3750 138.520 16.3750 138.312  c
16.3750 138.187 16.4244 138.080 16.5234 137.992  c
16.6224 137.903 16.7447 137.859 16.8906 137.859  c
16.9947 137.859 17.0885 137.875 17.1718 137.906  c
17.2552 137.937 17.3958 138.026 17.5937 138.171  c
17.9166 138.390 18.2395 138.500 18.5625 138.500  c
19.0625 138.500 19.4974 138.312 19.8671 137.937  c
20.2369 137.562 20.4218 137.104 20.4218 136.562  c
20.4218 136.041 20.2552 135.557 19.9218 135.109  c
19.5885 134.661 19.1302 134.312 18.5468 134.062  c
18.0781 133.875 17.4479 133.765 16.6562 133.734  c
18.3125 130.390 l
21.3906 130.390 l
h
23.5625 130.390 m
28.1718 130.390 l
28.1718 130.640 l
25.2968 139.171 l
24.5937 139.171 l
27.1562 131.421 l
24.7968 131.421 l
24.3177 131.421 23.9791 131.479 23.7812 131.593  c
23.4166 131.791 23.1302 132.093 22.9218 132.500  c
22.7343 132.437 l
23.5625 130.390 l
h
29.2187 134.750 m
29.2187 133.770 29.3671 132.924 29.6640 132.210  c
29.9609 131.497 30.3541 130.968 30.8437 130.625  c
31.2291 130.354 31.6250 130.218 32.0312 130.218  c
32.6875 130.218 33.2760 130.552 33.7968 131.218  c
34.4531 132.052 34.7812 133.182 34.7812 134.609  c
34.7812 135.609 34.6380 136.458 34.3515 137.156  c
34.0651 137.854 33.6979 138.362 33.2500 138.679  c
32.8020 138.997 32.3750 139.156 31.9687 139.156  c
31.1458 139.156 30.4583 138.671 29.9062 137.703  c
29.4479 136.880 29.2187 135.895 29.2187 134.750  c
h
30.4687 134.906 m
30.4687 136.093 30.6145 137.062 30.9062 137.812  c
31.1458 138.437 31.5052 138.750 31.9843 138.750  c
32.2135 138.750 32.4505 138.648 32.6953 138.445  c
32.9401 138.242 33.1250 137.895 33.2500 137.406  c
33.4479 136.687 33.5468 135.661 33.5468 134.328  c
33.5468 133.349 33.4427 132.531 33.2343 131.875  c
33.0885 131.385 32.8906 131.041 32.6406 130.843  c
32.4739 130.708 32.2656 130.640 32.0156 130.640  c
31.7343 130.640 31.4791 130.765 31.2500 131.015  c
30.9479 131.369 30.7421 131.924 30.6328 132.679  c
30.5234 133.434 30.4687 134.177 30.4687 134.906  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 89.6777 m
31.9000 89.6777 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 94.7500 m
6.46875 93.7708 6.61718 92.9244 6.91406 92.2109  c
7.21093 91.4974 7.60416 90.9687 8.09375 90.6250  c
8.47916 90.3541 8.87500 90.2187 9.28125 90.2187  c
9.93750 90.2187 10.5260 90.5520 11.0468 91.2187  c
11.7031 92.0520 12.0312 93.1822 12.0312 94.6093  c
12.0312 95.6093 11.8880 96.4583 11.6015 97.1562  c
11.3151 97.8541 10.9479 98.3619 10.5000 98.6796  c
10.0520 98.9974 9.62500 99.1562 9.21875 99.1562  c
8.39583 99.1562 7.70833 98.6718 7.15625 97.7031  c
6.69791 96.8802 6.46875 95.8958 6.46875 94.7500  c
h
7.71875 94.9062 m
7.71875 96.0937 7.86458 97.0625 8.15625 97.8125  c
8.39583 98.4375 8.75520 98.7500 9.23437 98.7500  c
9.46354 98.7500 9.70052 98.6484 9.94531 98.4453  c
10.1901 98.2421 10.3750 97.8958 10.5000 97.4062  c
10.6979 96.6875 10.7968 95.6614 10.7968 94.3281  c
10.7968 93.3489 10.6927 92.5312 10.4843 91.8750  c
10.3385 91.3854 10.1406 91.0416 9.89062 90.8437  c
9.72395 90.7083 9.51562 90.6406 9.26562 90.6406  c
8.98437 90.6406 8.72916 90.7656 8.50000 91.0156  c
8.19791 91.3697 7.99218 91.9244 7.88281 92.6796  c
7.77343 93.4349 7.71875 94.1770 7.71875 94.9062  c
h
14.1250 97.7656 m
14.3229 97.7656 14.4895 97.8359 14.6250 97.9765  c
14.7604 98.1171 14.8281 98.2812 14.8281 98.4687  c
14.8281 98.6666 14.7604 98.8333 14.6250 98.9687  c
14.4895 99.1041 14.3229 99.1718 14.1250 99.1718  c
13.9270 99.1718 13.7604 99.1041 13.6250 98.9687  c
13.4895 98.8333 13.4218 98.6666 13.4218 98.4687  c
13.4218 98.2708 13.4895 98.1041 13.6250 97.9687  c
13.7604 97.8333 13.9270 97.7656 14.1250 97.7656  c
h
21.3906 90.3906 m
20.8906 91.4687 l
18.3125 91.4687 l
17.7500 92.6250 l
18.8645 92.7916 19.7500 93.2083 20.4062 93.8750  c
20.9687 94.4479 21.2500 95.1250 21.2500 95.9062  c
21.2500 96.3645 21.1588 96.7864 20.9765 97.1718  c
20.7942 97.5572 20.5625 97.8854 20.2812 98.1562  c
20.0000 98.4270 19.6875 98.6406 19.3437 98.7968  c
18.8645 99.0364 18.3645 99.1562 17.8437 99.1562  c
17.3333 99.1562 16.9609 99.0677 16.7265 98.8906  c
16.4921 98.7135 16.3750 98.5208 16.3750 98.3125  c
16.3750 98.1875 16.4244 98.0807 16.5234 97.9921  c
16.6224 97.9036 16.7447 97.8593 16.8906 97.8593  c
16.9947 97.8593 17.0885 97.8750 17.1718 97.9062  c
17.2552 97.9375 17.3958 98.0260 17.5937 98.1718  c
17.9166 98.3906 18.2395 98.5000 18.5625 98.5000  c
19.0625 98.5000 19.4974 98.3125 19.8671 97.9375  c
20.2369 97.5625 20.4218 97.1041 20.4218 96.5625  c
20.4218 96.0416 20.2552 95.5572 19.9218 95.1093  c
19.5885 94.6614 19.1302 94.3125 18.5468 94.0625  c
18.0781 93.8750 17.4479 93.7656 16.6562 93.7343  c
18.3125 90.3906 l
21.3906 90.3906 l
h
23.5625 90.3906 m
28.1718 90.3906 l
28.1718 90.6406 l
25.2968 99.1718 l
24.5937 99.1718 l
27.1562 91.4218 l
24.7968 91.4218 l
24.3177 91.4218 23.9791 91.4791 23.7812 91.5937  c
23.4166 91.7916 23.1302 92.0937 22.9218 92.5000  c
22.7343 92.4375 l
23.5625 90.3906 l
h
34.7031 97.3437 m
34.1093 99.0000 l
29.0312 99.0000 l
29.0312 98.7656 l
30.5208 97.4010 31.5703 96.2864 32.1796 95.4218  c
32.7890 94.5572 33.0937 93.7708 33.0937 93.0625  c
33.0937 92.5104 32.9270 92.0599 32.5937 91.7109  c
32.2604 91.3619 31.8593 91.1875 31.3906 91.1875  c
30.9739 91.1875 30.5963 91.3099 30.2578 91.5546  c
29.9192 91.7994 29.6718 92.1614 29.5156 92.6406  c
29.2812 92.6406 l
29.3854 91.8593 29.6562 91.2604 30.0937 90.8437  c
30.5312 90.4270 31.0781 90.2187 31.7343 90.2187  c
32.4322 90.2187 33.0156 90.4427 33.4843 90.8906  c
33.9531 91.3385 34.1875 91.8645 34.1875 92.4687  c
34.1875 92.9062 34.0833 93.3437 33.8750 93.7812  c
33.5625 94.4687 33.0572 95.1927 32.3593 95.9531  c
31.3072 97.1093 30.6458 97.8072 30.3750 98.0468  c
32.6250 98.0468 l
33.0833 98.0468 33.4036 98.0286 33.5859 97.9921  c
33.7682 97.9557 33.9349 97.8854 34.0859 97.7812  c
34.2369 97.6770 34.3645 97.5312 34.4687 97.3437  c
34.7031 97.3437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 50.0061 m
31.9000 50.0061 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 55.7500 m
6.46875 54.7708 6.61718 53.9244 6.91406 53.2109  c
7.21093 52.4974 7.60416 51.9687 8.09375 51.6250  c
8.47916 51.3541 8.87500 51.2187 9.28125 51.2187  c
9.93750 51.2187 10.5260 51.5520 11.0468 52.2187  c
11.7031 53.0520 12.0312 54.1822 12.0312 55.6093  c
12.0312 56.6093 11.8880 57.4583 11.6015 58.1562  c
11.3151 58.8541 10.9479 59.3619 10.5000 59.6796  c
10.0520 59.9974 9.62500 60.1562 9.21875 60.1562  c
8.39583 60.1562 7.70833 59.6718 7.15625 58.7031  c
6.69791 57.8802 6.46875 56.8958 6.46875 55.7500  c
h
7.71875 55.9062 m
7.71875 57.0937 7.86458 58.0625 8.15625 58.8125  c
8.39583 59.4375 8.75520 59.7500 9.23437 59.7500  c
9.46354 59.7500 9.70052 59.6484 9.94531 59.4453  c
10.1901 59.2421 10.3750 58.8958 10.5000 58.4062  c
10.6979 57.6875 10.7968 56.6614 10.7968 55.3281  c
10.7968 54.3489 10.6927 53.5312 10.4843 52.8750  c
10.3385 52.3854 10.1406 52.0416 9.89062 51.8437  c
9.72395 51.7083 9.51562 51.6406 9.26562 51.6406  c
8.98437 51.6406 8.72916 51.7656 8.50000 52.0156  c
8.19791 52.3697 7.99218 52.9244 7.88281 53.6796  c
7.77343 54.4349 7.71875 55.1770 7.71875 55.9062  c
h
14.1250 58.7656 m
14.3229 58.7656 14.4895 58.8359 14.6250 58.9765  c
14.7604 59.1171 14.8281 59.2812 14.8281 59.4687  c
14.8281 59.6666 14.7604 59.8333 14.6250 59.9687  c
14.4895 60.1041 14.3229 60.1718 14.1250 60.1718  c
13.9270 60.1718 13.7604 60.1041 13.6250 59.9687  c
13.4895 59.8333 13.4218 59.6666 13.4218 59.4687  c
13.4218 59.2708 13.4895 59.1041 13.6250 58.9687  c
13.7604 58.8333 13.9270 58.7656 14.1250 58.7656  c
h
21.3906 51.3906 m
20.8906 52.4687 l
18.3125 52.4687 l
17.7500 53.6250 l
18.8645 53.7916 19.7500 54.2083 20.4062 54.8750  c
20.9687 55.4479 21.2500 56.1250 21.2500 56.9062  c
21.2500 57.3645 21.1588 57.7864 20.9765 58.1718  c
20.7942 58.5572 20.5625 58.8854 20.2812 59.1562  c
20.0000 59.4270 19.6875 59.6406 19.3437 59.7968  c
18.8645 60.0364 18.3645 60.1562 17.8437 60.1562  c
17.3333 60.1562 16.9609 60.0677 16.7265 59.8906  c
16.4921 59.7135 16.3750 59.5208 16.3750 59.3125  c
16.3750 59.1875 16.4244 59.0807 16.5234 58.9921  c
16.6224 58.9036 16.7447 58.8593 16.8906 58.8593  c
16.9947 58.8593 17.0885 58.8750 17.1718 58.9062  c
17.2552 58.9375 17.3958 59.0260 17.5937 59.1718  c
17.9166 59.3906 18.2395 59.5000 18.5625 59.5000  c
19.0625 59.5000 19.4974 59.3125 19.8671 58.9375  c
20.2369 58.5625 20.4218 58.1041 20.4218 57.5625  c
20.4218 57.0416 20.2552 56.5572 19.9218 56.1093  c
19.5885 55.6614 19.1302 55.3125 18.5468 55.0625  c
18.0781 54.8750 17.4479 54.7656 16.6562 54.7343  c
18.3125 51.3906 l
21.3906 51.3906 l
h
23.5625 51.3906 m
28.1718 51.3906 l
28.1718 51.6406 l
25.2968 60.1718 l
24.5937 60.1718 l
27.1562 52.4218 l
24.7968 52.4218 l
24.3177 52.4218 23.9791 52.4791 23.7812 52.5937  c
23.4166 52.7916 23.1302 53.0937 22.9218 53.5000  c
22.7343 53.4375 l
23.5625 51.3906 l
h
34.7968 56.8281 m
34.7968 57.7343 l
33.6406 57.7343 l
33.6406 60.0000 l
32.5937 60.0000 l
32.5937 57.7343 l
28.9531 57.7343 l
28.9531 56.9218 l
32.9531 51.2187 l
33.6406 51.2187 l
33.6406 56.8281 l
34.7968 56.8281 l
h
32.5937 56.8281 m
32.5937 52.5468 l
29.5781 56.8281 l
32.5937 56.8281 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
37.1000 10.3345 m
31.9000 10.3345 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
6.46875 15.7500 m
6.46875 14.7708 6.61718 13.9244 6.91406 13.2109  c
7.21093 12.4974 7.60416 11.9687 8.09375 11.6250  c
8.47916 11.3541 8.87500 11.2187 9.28125 11.2187  c
9.93750 11.2187 10.5260 11.5520 11.0468 12.2187  c
11.7031 13.0520 12.0312 14.1822 12.0312 15.6093  c
12.0312 16.6093 11.8880 17.4583 11.6015 18.1562  c
11.3151 18.8541 10.9479 19.3619 10.5000 19.6796  c
10.0520 19.9974 9.62500 20.1562 9.21875 20.1562  c
8.39583 20.1562 7.70833 19.6718 7.15625 18.7031  c
6.69791 17.8802 6.46875 16.8958 6.46875 15.7500  c
h
7.71875 15.9062 m
7.71875 17.0937 7.86458 18.0625 8.15625 18.8125  c
8.39583 19.4375 8.75520 19.7500 9.23437 19.7500  c
9.46354 19.7500 9.70052 19.6484 9.94531 19.4453  c
10.1901 19.2421 10.3750 18.8958 10.5000 18.4062  c
10.6979 17.6875 10.7968 16.6614 10.7968 15.3281  c
10.7968 14.3489 10.6927 13.5312 10.4843 12.8750  c
10.3385 12.3854 10.1406 12.0416 9.89062 11.8437  c
9.72395 11.7083 9.51562 11.6406 9.26562 11.6406  c
8.98437 11.6406 8.72916 11.7656 8.50000 12.0156  c
8.19791 12.3697 7.99218 12.9244 7.88281 13.6796  c
7.77343 14.4349 7.71875 15.1770 7.71875 15.9062  c
h
14.1250 18.7656 m
14.3229 18.7656 14.4895 18.8359 14.6250 18.9765  c
14.7604 19.1171 14.8281 19.2812 14.8281 19.4687  c
14.8281 19.6666 14.7604 19.8333 14.6250 19.9687  c
14.4895 20.1041 14.3229 20.1718 14.1250 20.1718  c
13.9270 20.1718 13.7604 20.1041 13.6250 19.9687  c
13.4895 19.8333 13.4218 19.6666 13.4218 19.4687  c
13.4218 19.2708 13.4895 19.1041 13.6250 18.9687  c
13.7604 18.8333 13.9270 18.7656 14.1250 18.7656  c
h
21.3906 11.3906 m
20.8906 12.4687 l
18.3125 12.4687 l
17.7500 13.6250 l
18.8645 13.7916 19.7500 14.2083 20.4062 14.8750  c
20.9687 15.4479 21.2500 16.1250 21.2500 16.9062  c
21.2500 17.3645 21.1588 17.7864 20.9765 18.1718  c
20.7942 18.5572 20.5625 18.8854 20.2812 19.1562  c
20.0000 19.4270 19.6875 19.6406 19.3437 19.7968  c
18.8645 20.0364 18.3645 20.1562 17.8437 20.1562  c
17.3333 20.1562 16.9609 20.0677 16.7265 19.8906  c
16.4921 19.7135 16.3750 19.5208 16.3750 19.3125  c
16.3750 19.1875 16.4244 19.0807 16.5234 18.9921  c
16.6224 18.9036 16.7447 18.8593 16.8906 18.8593  c
16.9947 18.8593 17.0885 18.8750 17.1718 18.9062  c
17.2552 18.9375 17.3958 19.0260 17.5937 19.1718  c
17.9166 19.3906 18.2395 19.5000 18.5625 19.5000  c
19.0625 19.5000 19.4974 19.3125 19.8671 18.9375  c
20.2369 18.5625 20.4218 18.1041 20.4218 17.5625  c
20.4218 17.0416 20.2552 16.5572 19.9218 16.1093  c
19.5885 15.6614 19.1302 15.3125 18.5468 15.0625  c
18.0781 14.8750 17.4479 14.7656 16.6562 14.7343  c
18.3125 11.3906 l
21.3906 11.3906 l
h
23.5625 11.3906 m
28.1718 11.3906 l
28.1718 11.6406 l
25.2968 20.1718 l
24.5937 20.1718 l
27.1562 12.4218 l
24.7968 12.4218 l
24.3177 12.4218 23.9791 12.4791 23.7812 12.5937  c
23.4166 12.7916 23.1302 13.0937 22.9218 13.5000  c
22.7343 13.4375 l
23.5625 11.3906 l
h
34.5781 11.2187 m
34.5781 11.4531 l
34.0156 11.5052 33.5572 11.6145 33.2031 11.7812  c
32.8489 11.9479 32.5000 12.2031 32.1562 12.5468  c
31.8125 12.8906 31.5286 13.2734 31.3046 13.6953  c
31.0807 14.1171 30.8906 14.6145 30.7343 15.1875  c
31.3489 14.7708 31.9635 14.5625 32.5781 14.5625  c
33.1614 14.5625 33.6692 14.7994 34.1015 15.2734  c
34.5338 15.7474 34.7500 16.3593 34.7500 17.1093  c
34.7500 17.8281 34.5312 18.4843 34.0937 19.0781  c
33.5729 19.7968 32.8802 20.1562 32.0156 20.1562  c
31.4218 20.1562 30.9218 19.9583 30.5156 19.5625  c
29.7135 18.8125 29.3125 17.8333 29.3125 16.6250  c
29.3125 15.8541 29.4661 15.1224 29.7734 14.4296  c
30.0807 13.7369 30.5208 13.1197 31.0937 12.5781  c
31.6666 12.0364 32.2161 11.6744 32.7421 11.4921  c
33.2682 11.3099 33.7552 11.2187 34.2031 11.2187  c
34.5781 11.2187 l
h
30.6250 15.6562 m
30.5520 16.2291 30.5156 16.6927 30.5156 17.0468  c
30.5156 17.4531 30.5911 17.8932 30.7421 18.3671  c
30.8932 18.8411 31.1145 19.2187 31.4062 19.5000  c
31.6250 19.6979 31.8906 19.7968 32.2031 19.7968  c
32.5677 19.7968 32.8958 19.6224 33.1875 19.2734  c
33.4791 18.9244 33.6250 18.4322 33.6250 17.7968  c
33.6250 17.0677 33.4791 16.4401 33.1875 15.9140  c
32.8958 15.3880 32.4895 15.1250 31.9687 15.1250  c
31.8020 15.1250 31.6276 15.1588 31.4453 15.2265  c
31.2630 15.2942 30.9895 15.4375 30.6250 15.6562  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
